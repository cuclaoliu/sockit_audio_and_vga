
sockit_audio.elf:     file format elf32-littlenios2
sockit_audio.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x11040244

Program Header:
    LOAD off    0x00001000 vaddr 0x11040000 paddr 0x11040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x11040020 paddr 0x11040020 align 2**12
         filesz 0x0001728c memsz 0x0001728c flags r-x
    LOAD off    0x000182ac vaddr 0x110572ac paddr 0x11058d98 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x0001a884 vaddr 0x1105a884 paddr 0x1105a884 align 2**12
         filesz 0x00000000 memsz 0x0000018c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  11040000  11040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  11040020  11040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00016928  11040244  11040244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000740  11056b6c  11056b6c  00017b6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  110572ac  11058d98  000182ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000018c  1105a884  1105a884  0001a884  2**2
                  ALLOC, SMALL_DATA
  6 .ddr3         00000000  00000000  00000000  00019d98  2**0
                  CONTENTS
  7 .onchip_memory 00000000  1105aa10  1105aa10  00019d98  2**0
                  CONTENTS
  8 .data_buffer  00000000  11080000  11080000  00019d98  2**0
                  CONTENTS
  9 .comment      00000023  00000000  00000000  00019d98  2**0
                  CONTENTS, READONLY
 10 .debug_aranges 00001130  00000000  00000000  00019dc0  2**3
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_info   00029221  00000000  00000000  0001aef0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev 0000a88c  00000000  00000000  00044111  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000e6f2  00000000  00000000  0004e99d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00002b48  00000000  00000000  0005d090  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    000041fd  00000000  00000000  0005fbd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_loc    0001e6eb  00000000  00000000  00063dd5  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_alt_sim_info 00000060  00000000  00000000  000824c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_ranges 00001b50  00000000  00000000  00082520  2**3
                  CONTENTS, READONLY, DEBUGGING
 19 .thread_model 00000003  00000000  00000000  00087bfa  2**0
                  CONTENTS, READONLY
 20 .cpu          00000003  00000000  00000000  00087bfd  2**0
                  CONTENTS, READONLY
 21 .qsys         00000001  00000000  00000000  00087c00  2**0
                  CONTENTS, READONLY
 22 .simulation_enabled 00000001  00000000  00000000  00087c01  2**0
                  CONTENTS, READONLY
 23 .sysid_hash   00000004  00000000  00000000  00087c02  2**0
                  CONTENTS, READONLY
 24 .sysid_base   00000004  00000000  00000000  00087c06  2**0
                  CONTENTS, READONLY
 25 .sysid_time   00000004  00000000  00000000  00087c0a  2**0
                  CONTENTS, READONLY
 26 .stderr_dev   00000009  00000000  00000000  00087c0e  2**0
                  CONTENTS, READONLY
 27 .stdin_dev    00000009  00000000  00000000  00087c17  2**0
                  CONTENTS, READONLY
 28 .stdout_dev   00000009  00000000  00000000  00087c20  2**0
                  CONTENTS, READONLY
 29 .sopc_system_name 00000009  00000000  00000000  00087c29  2**0
                  CONTENTS, READONLY
 30 .quartus_project_dir 00000029  00000000  00000000  00087c32  2**0
                  CONTENTS, READONLY
 31 .jdi          00003811  00000000  00000000  00087c5b  2**0
                  CONTENTS, READONLY
 32 .sopcinfo     00126b99  00000000  00000000  0008b46c  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
11040000 l    d  .entry	00000000 .entry
11040020 l    d  .exceptions	00000000 .exceptions
11040244 l    d  .text	00000000 .text
11056b6c l    d  .rodata	00000000 .rodata
110572ac l    d  .rwdata	00000000 .rwdata
1105a884 l    d  .bss	00000000 .bss
00000000 l    d  .ddr3	00000000 .ddr3
1105aa10 l    d  .onchip_memory	00000000 .onchip_memory
11080000 l    d  .data_buffer	00000000 .data_buffer
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../sockit_audio_bsp//obj/HAL/src/crt0.o
1104028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 audio.c
1105a8c0 l     O .bss	00000028 reg_file
00000000 l    df *ABS*	00000000 debug.c
00000000 l    df *ABS*	00000000 i2c.c
00000000 l    df *ABS*	00000000 led.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 s_sin.c
00000000 l    df *ABS*	00000000 e_rem_pio2.c
11056e1c l     O .rodata	00000108 two_over_pi
11056d9c l     O .rodata	00000080 npio2_hw
00000000 l    df *ABS*	00000000 k_cos.c
00000000 l    df *ABS*	00000000 k_rem_pio2.c
11056f64 l     O .rodata	00000010 init_jk
11056f24 l     O .rodata	00000040 PIo2
00000000 l    df *ABS*	00000000 k_sin.c
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 s_floor.c
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 s_copysign.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
110570ba l     O .rodata	00000010 zeroes.4389
110570ca l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 vfprintf.c
110570da l     O .rodata	00000010 zeroes.4404
1104a598 l     F .text	000000bc __sbprintf
110570ea l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 vsnprintf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
1104a8cc l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
1104c3fc l     F .text	00000008 __fp_unlock
1104c410 l     F .text	0000019c __sinit.part.1
1104c5ac l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
110572ac l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
110576f0 l     O .rwdata	00000020 lc_ctype_charset
110576d0 l     O .rwdata	00000020 lc_message_charset
11057710 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
1105711c l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
11057250 l     O .rodata	00000010 blanks.4332
11057240 l     O .rodata	00000010 zeroes.4333
00000000 l    df *ABS*	00000000 vfprintf.c
11050db4 l     F .text	000000fc __sprint_r.part.0
11057270 l     O .rodata	00000010 blanks.4348
11057260 l     O .rodata	00000010 zeroes.4349
11052340 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
11054264 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
11054370 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
1105439c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
11054488 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
11054568 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
11054654 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
11054828 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
11058d88 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
11054aa4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
11054bd8 l     F .text	00000034 alt_dev_reg
11057cf8 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
11054ecc l     F .text	0000020c altera_avalon_jtag_uart_irq
110550d8 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
11055710 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
11055aa0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
11055f14 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
11056054 l     F .text	0000003c alt_get_errno
11056090 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
1105a8bc g     O .bss	00000004 alt_instruction_exception_handler
11041d14 g     F .text	00000038 display_time_elapsed
1104efec g     F .text	00000074 _mprec_log10
1104140c g     F .text	00000184 I2C_Read
1104f0d8 g     F .text	0000008c __any_on
110528dc g     F .text	00000054 _isatty_r
11057128 g     O .rodata	00000028 __mprec_tinytens
11054764 g     F .text	0000007c alt_main
11045f7c g     F .text	000000c0 _puts_r
1105a910 g     O .bss	00000100 alt_irq
11043dc0 g     F .text	00000014 fabs
11052930 g     F .text	00000060 _lseek_r
11058d98 g       *ABS*	00000000 __flash_rwdata_start
11044bd8 g     F .text	00000088 .hidden __eqdf2
1105aa10 g       *ABS*	00000000 __alt_heap_start
11040290 g     F .text	000001d0 AUDIO_Init
11045f40 g     F .text	0000003c printf
11052b48 g     F .text	0000009c _wcrtomb_r
110406a0 g     F .text	00000078 AUDIO_AdcEnableHighPassFilter
1104f868 g     F .text	0000005c __sseek
1104c74c g     F .text	00000010 __sinit
110529f0 g     F .text	00000140 __swbuf_r
1104d214 g     F .text	0000007c _setlocale_r
1104c5b4 g     F .text	00000068 __sfmoreglue
11054804 g     F .text	00000024 __malloc_unlock
1104dee4 g     F .text	0000015c memmove
1104c734 g     F .text	00000018 _cleanup
11040e74 g     F .text	000000f0 aduio_RegWrite
11041128 g     F .text	00000030 AUDIO_FifoClear
1104e168 g     F .text	000000a8 _Balloc
11041b08 g     F .text	00000030 LED_AllOff
11044c60 g     F .text	000000dc .hidden __gtdf2
1105644c g     F .text	00000024 altera_nios2_gen2_irq_init
110410d0 g     F .text	00000058 AUDIO_AdcFifoGetData
11041810 g     F .text	00000130 i2c_write
11040000 g     F .entry	0000001c __reset
11040020 g       *ABS*	00000000 __flash_exceptions_start
11052880 g     F .text	0000005c _fstat_r
1105a8a0 g     O .bss	00000004 errno
11043dd4 g     F .text	000001ec floor
1104f7e4 g     F .text	00000008 __seofread
1104fb78 g     F .text	0000123c ___svfiprintf_internal_r
1105a8a8 g     O .bss	00000004 alt_argv
11060d58 g       *ABS*	00000000 _gp
11054a74 g     F .text	00000030 usleep
11057b78 g     O .rwdata	00000180 alt_fd_list
11042154 g     F .text	0000076c __ieee754_rem_pio2
11056470 g     F .text	00000090 alt_find_dev
1104dd9c g     F .text	00000148 memcpy
11041a98 g     F .text	00000040 LED_Display
1104c404 g     F .text	0000000c _cleanup_r
11045dd0 g     F .text	000000dc .hidden __floatsidf
11055fd8 g     F .text	0000007c alt_io_redirect
110540c8 g     F .text	000000f4 .hidden __ltdf2
11056b6c g       *ABS*	00000000 __DTOR_END__
1104603c g     F .text	00000014 puts
1105673c g     F .text	0000009c alt_exception_cause_generated_bad_addr
1104f6c8 g     F .text	00000074 __fpclassifyd
1104ef48 g     F .text	000000a4 __ratio
11052324 g     F .text	0000001c __vfiprintf_internal
11041bb0 g     F .text	00000164 init_audio
110552d0 g     F .text	0000021c altera_avalon_jtag_uart_read
11045f10 g     F .text	00000030 _printf_r
11044270 g     F .text	00000064 .hidden __udivsi3
110544c4 g     F .text	000000a4 isatty
11040d5c g     F .text	0000008c AUDIO_EnableByPass
11057178 g     O .rodata	000000c8 __mprec_tens
1104d290 g     F .text	0000000c __locale_charset
110428c0 g     F .text	000004a4 __kernel_cos
1104a744 g     F .text	00000034 vsnprintf
110566ac g     F .text	00000090 alt_icache_flush
11041590 g     F .text	0000017c I2C_MultipleRead
1105a89c g     O .bss	00000004 __malloc_top_pad
11040b34 g     F .text	00000114 AUDIO_SetLineInVol
11058d60 g     O .rwdata	00000004 __mb_cur_max
1104d2c0 g     F .text	0000000c _localeconv_r
1104e574 g     F .text	0000003c __i2b
1104cbd0 g     F .text	000004bc __sfvwrite_r
1104f73c g     F .text	00000054 _sbrk_r
11041280 g     F .text	00000090 myprintf_dword_array
11052990 g     F .text	00000060 _read_r
11058d80 g     O .rwdata	00000004 alt_max_fd
11052574 g     F .text	000000f0 _fclose_r
1104c3cc g     F .text	00000030 fflush
1105a898 g     O .bss	00000004 __malloc_max_sbrked_mem
11043af4 g     F .text	000002cc __kernel_sin
1104432c g     F .text	000008ac .hidden __adddf3
1104ecf0 g     F .text	0000010c __b2d
110532a8 g     F .text	00000538 .hidden __umoddi3
11054690 g     F .text	000000d4 lseek
11058d58 g     O .rwdata	00000004 _global_impure_ptr
1104f164 g     F .text	00000564 _realloc_r
1105aa10 g       *ABS*	00000000 __bss_end
11055e24 g     F .text	000000f0 alt_iic_isr_register
11056344 g     F .text	00000108 alt_tick
11052d30 g     F .text	00000578 .hidden __udivdi3
110527dc g     F .text	00000024 _fputwc_r
11057150 g     O .rodata	00000028 __mprec_bigtens
1104e358 g     F .text	00000104 __s2b
110541bc g     F .text	000000a8 .hidden __floatunsidf
11040628 g     F .text	00000078 AUDIO_MicBoost
1104ea30 g     F .text	00000060 __mcmp
11040460 g     F .text	00000180 AUDIO_REG_READ
1104c76c g     F .text	00000018 __fp_lock_all
11055dd8 g     F .text	0000004c alt_ic_irq_enabled
11041310 g     F .text	000000fc I2C_Write
110562a8 g     F .text	0000009c alt_alarm_stop
1105a8b0 g     O .bss	00000004 alt_irq_active
110400fc g     F .exceptions	000000d4 alt_irq_handler
11057b50 g     O .rwdata	00000028 alt_dev_null
11042d64 g     F .text	00000d90 __kernel_rem_pio2
1104170c g     F .text	0000008c i2c_start
11055a58 g     F .text	00000048 alt_dcache_flush_all
1104e45c g     F .text	00000068 __hi0bits
11045d50 g     F .text	00000080 .hidden __fixdfsi
11058d98 g       *ABS*	00000000 __ram_rwdata_end
11040000 g       *ABS*	00000000 __alt_mem_onchip_memory
11058d78 g     O .rwdata	00000008 alt_dev_list
11054ae0 g     F .text	000000f8 write
110572ac g       *ABS*	00000000 __ram_rodata_end
110543d8 g     F .text	000000b0 fstat
110540c8 g     F .text	000000f4 .hidden __ledf2
1104118c g     F .text	0000006c myprintf
1104e7a8 g     F .text	00000140 __pow5mult
11050ec8 g     F .text	0000145c ___vfiprintf_internal_r
1105a890 g     O .bss	00000004 __nlocale_changed
110442d4 g     F .text	00000058 .hidden __umodsi3
11040de8 g     F .text	0000008c AUDIO_EnableSiteTone
1105aa10 g       *ABS*	00000000 end
00000000 g       *ABS*	00000000 __alt_mem_ddr3
11041ad8 g     F .text	00000030 LED_AllOn
11054e0c g     F .text	000000c0 altera_avalon_jtag_uart_init
110401d0 g     F .exceptions	00000074 alt_instruction_exception_entry
11056b6c g       *ABS*	00000000 __CTOR_LIST__
11080000 g       *ABS*	00000000 __alt_stack_pointer
11055788 g     F .text	0000007c alt_avalon_timer_sc_init
11045eac g     F .text	00000064 .hidden __clzsi2
110554ec g     F .text	00000224 altera_avalon_jtag_uart_write
1104c75c g     F .text	00000004 __sfp_lock_acquire
1104dcb8 g     F .text	000000e4 memchr
11048384 g     F .text	000021f8 ___vfprintf_internal_r
11046050 g     F .text	00000058 _sprintf_r
1104c8c0 g     F .text	00000310 _free_r
1104d29c g     F .text	00000010 __locale_mb_cur_max
110569b8 g     F .text	00000180 __call_exitprocs
1105a88c g     O .bss	00000004 __mlocale_changed
11058d64 g     O .rwdata	00000004 __malloc_sbrk_base
11040244 g     F .text	0000004c _start
1105a8b4 g     O .bss	00000004 _alt_tick_rate
11042064 g     F .text	000000f0 sin
1104e8e8 g     F .text	00000148 __lshift
1105a8b8 g     O .bss	00000004 _alt_nticks
11054864 g     F .text	000000fc read
11054c44 g     F .text	00000064 alt_sys_init
1104f9a8 g     F .text	000001d0 __ssprint_r
110568a0 g     F .text	00000118 __register_exitproc
110407c8 g     F .text	0000008c AUDIO_DacEnableSoftMute
1104e5b0 g     F .text	000001f8 __multiply
11055178 g     F .text	00000068 altera_avalon_jtag_uart_close
110572ac g       *ABS*	00000000 __ram_rwdata_start
11056b6c g       *ABS*	00000000 __ram_rodata_start
1105a8e8 g     O .bss	00000028 __malloc_current_mallinfo
1104edfc g     F .text	0000014c __d2b
11054ca8 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
11056608 g     F .text	000000a4 alt_get_fd
11055930 g     F .text	00000128 alt_busy_sleep
11040f64 g     F .text	000000a4 aduio_RegRead
1105245c g     F .text	00000054 _close_r
11056824 g     F .text	0000007c memcmp
11054d68 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
1105aa10 g       *ABS*	00000000 __alt_stack_base
11054db8 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
1104a778 g     F .text	00000154 __swsetup_r
110537e0 g     F .text	000008e8 .hidden __divdf3
1104c61c g     F .text	00000118 __sfp
1104f060 g     F .text	00000078 __copybits
11040718 g     F .text	000000b0 AUDIO_DacDeemphasisControl
11057748 g     O .rwdata	00000408 __malloc_av_
1104c768 g     F .text	00000004 __sinit_lock_release
1104a654 g     F .text	000000f0 _vsnprintf_r
11041798 g     F .text	00000078 i2c_stop
11044d3c g     F .text	00000718 .hidden __muldf3
1104f790 g     F .text	00000054 __sread
11056500 g     F .text	00000108 alt_find_file
11055adc g     F .text	000000a4 alt_dev_llist_insert
110547e0 g     F .text	00000024 __malloc_lock
110549c4 g     F .text	000000b0 sbrk
110461ac g     F .text	000021d8 ___svfprintf_internal_r
110409c0 g     F .text	00000090 AUDIO_SetInputSource
1104c370 g     F .text	0000005c _fflush_r
110524b0 g     F .text	000000c4 _calloc_r
110405e0 g     F .text	00000048 AUDIO_InterfaceActive
1105a884 g       *ABS*	00000000 __bss_start
1104e040 g     F .text	00000128 memset
11041e5c g     F .text	00000208 main
1105a8ac g     O .bss	00000004 alt_envp
1105a894 g     O .bss	00000004 __malloc_max_total_mem
11054d08 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
11041940 g     F .text	00000158 i2c_read
11052b30 g     F .text	00000018 __swbuf
1105a884 g     O .bss	00000004 record_sample_rate
1104f8c4 g     F .text	00000008 __sclose
11080000 g       *ABS*	00000000 __alt_heap_limit
11052664 g     F .text	00000014 fclose
1104aacc g     F .text	00001688 _dtoa_r
1104d4ac g     F .text	0000080c _malloc_r
11052ca4 g     F .text	00000030 __ascii_wctomb
11058d84 g     O .rwdata	00000004 alt_errno
1104d08c g     F .text	000000c4 _fwalk
11044178 g     F .text	00000084 .hidden __divsi3
1104c79c g     F .text	00000124 _malloc_trim_r
11056b6c g       *ABS*	00000000 __CTOR_END__
110408e0 g     F .text	000000e0 AUDIO_LineInMute
1104f8cc g     F .text	000000dc strcmp
11040854 g     F .text	0000008c AUDIO_MicMute
11056b6c g       *ABS*	00000000 __flash_rodata_start
11056b6c g       *ABS*	00000000 __DTOR_LIST__
1104415c g     F .text	0000001c copysign
11044bd8 g     F .text	00000088 .hidden __nedf2
11054c0c g     F .text	00000038 alt_irq_init
11054960 g     F .text	00000064 alt_release_fd
110460a8 g     F .text	0000006c sprintf
11056f74 g     O .rodata	00000100 .hidden __clz_tab
11041158 g     F .text	00000034 debug_output
1105a888 g     O .bss	00000004 _PathLocale
110567d8 g     F .text	00000014 atexit
11041d4c g     F .text	00000110 dump_record_data
110523fc g     F .text	00000060 _write_r
1104d2cc g     F .text	00000018 setlocale
11058d5c g     O .rwdata	00000004 _impure_ptr
1105a8a4 g     O .bss	00000004 alt_argc
1104c154 g     F .text	0000021c __sflush_r
11043fc0 g     F .text	0000019c scalbn
11055be0 g     F .text	00000060 _do_dtors
1104d2b8 g     F .text	00000008 __locale_cjk_lang
11041094 g     F .text	0000003c AUDIO_AdcFifoNotEmpty
11040020 g       .exceptions	00000000 alt_irq_entry
11080000 g       *ABS*	00000000 __alt_mem_data_buffer
1104ec8c g     F .text	00000064 __ulp
1104c784 g     F .text	00000018 __fp_unlock_all
11041044 g     F .text	00000050 AUDIO_DacFifoSetData
11058d70 g     O .rwdata	00000008 alt_fs_list
110411f8 g     F .text	00000088 myprintf_hex_array
11040020 g       *ABS*	00000000 __ram_exceptions_start
11040a50 g     F .text	000000e4 AUDIO_SetSampleRate
1104d2e4 g     F .text	0000000c localeconv
11055c74 g     F .text	00000050 alt_ic_isr_register
11058d98 g       *ABS*	00000000 _edata
1105aa10 g       *ABS*	00000000 _end
11040c48 g     F .text	00000114 AUDIO_SetLineOutVol
11052678 g     F .text	00000164 __fputwc
11040244 g       *ABS*	00000000 __ram_exceptions_end
110551e0 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
11055d4c g     F .text	0000008c alt_ic_irq_disable
1104f7ec g     F .text	0000007c __swrite
11058d68 g     O .rwdata	00000004 __malloc_trim_threshold
1104d2ac g     F .text	0000000c __locale_msgcharset
110567ec g     F .text	00000038 exit
11041b38 g     F .text	00000078 LED_LightCount
1104d150 g     F .text	000000c4 _fwalk_reent
1104ea90 g     F .text	000001fc __mdiff
110441fc g     F .text	00000074 .hidden __modsi3
11080000 g       *ABS*	00000000 __alt_data_end
11040020 g     F .exceptions	00000000 alt_exception
1104c760 g     F .text	00000004 __sfp_lock_release
11056b38 g     F .text	00000034 _exit
11055804 g     F .text	0000012c alt_alarm_start
1104d2f0 g     F .text	000001bc __smakebuf_r
11046114 g     F .text	00000098 strlen
11056154 g     F .text	00000154 open
11041008 g     F .text	0000003c AUDIO_DacFifoNotFull
11044c60 g     F .text	000000dc .hidden __gedf2
11058d6c g     O .rwdata	00000004 __wctomb
11050eb0 g     F .text	00000018 __sprint_r
11055c40 g     F .text	00000034 alt_icache_flush_all
11058d8c g     O .rwdata	00000004 alt_priority_mask
11055cc4 g     F .text	00000088 alt_ic_irq_enable
1104a57c g     F .text	0000001c __vfprintf_internal
11052cd4 g     F .text	0000005c _wctomb_r
11045454 g     F .text	000008fc .hidden __subdf3
1104e4c4 g     F .text	000000b0 __lo0bits
11058d90 g     O .rwdata	00000008 alt_alarm_list
11055b80 g     F .text	00000060 _do_ctors
11052be4 g     F .text	000000c0 wcrtomb
110542a0 g     F .text	000000d0 close
110545d0 g     F .text	00000084 alt_load
11052800 g     F .text	00000080 fputwc
1104c764 g     F .text	00000004 __sinit_lock_acquire
1104e238 g     F .text	00000120 __multadd
1104e210 g     F .text	00000028 _Bfree



Disassembly of section .entry:

11040000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
11040000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
11040004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
11040008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
1104000c:	00bffd16 	blt	zero,r2,11040004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
11040010:	00444134 	movhi	at,4356
    ori r1, r1, %lo(_start)
11040014:	08409114 	ori	at,at,580
    jmp r1
11040018:	0800683a 	jmp	at
1104001c:	00000000 	call	10000000 <__alt_mem_ddr3+0x10000000>

Disassembly of section .exceptions:

11040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
11040020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
11040024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
11040028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
1104002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
11040030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
11040034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
11040038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
1104003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
11040040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
11040044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
11040048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
1104004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
11040050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
11040054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
11040058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
1104005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
11040060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
11040064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
11040068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
1104006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
11040070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
11040074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
11040078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
1104007c:	10000326 	beq	r2,zero,1104008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
11040080:	20000226 	beq	r4,zero,1104008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
11040084:	10400fc0 	call	110400fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
11040088:	00000706 	br	110400a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
1104008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
11040090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
11040094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
11040098:	10401d00 	call	110401d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
1104009c:	1000021e 	bne	r2,zero,110400a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
110400a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
110400a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
110400a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
110400ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
110400b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
110400b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
110400b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
110400bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
110400c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
110400c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
110400c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
110400cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
110400d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
110400d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
110400d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
110400dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
110400e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
110400e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
110400e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
110400ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
110400f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
110400f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
110400f8:	ef80083a 	eret

110400fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
110400fc:	defff904 	addi	sp,sp,-28
11040100:	dfc00615 	stw	ra,24(sp)
11040104:	df000515 	stw	fp,20(sp)
11040108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
1104010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
11040110:	0005313a 	rdctl	r2,ipending
11040114:	e0bffe15 	stw	r2,-8(fp)

  return active;
11040118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
1104011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
11040120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
11040124:	00800044 	movi	r2,1
11040128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
1104012c:	e0fffb17 	ldw	r3,-20(fp)
11040130:	e0bffc17 	ldw	r2,-16(fp)
11040134:	1884703a 	and	r2,r3,r2
11040138:	10001426 	beq	r2,zero,1104018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
1104013c:	008441b4 	movhi	r2,4358
11040140:	10aa4404 	addi	r2,r2,-22256
11040144:	e0fffd17 	ldw	r3,-12(fp)
11040148:	180690fa 	slli	r3,r3,3
1104014c:	10c5883a 	add	r2,r2,r3
11040150:	10c00017 	ldw	r3,0(r2)
11040154:	008441b4 	movhi	r2,4358
11040158:	10aa4404 	addi	r2,r2,-22256
1104015c:	e13ffd17 	ldw	r4,-12(fp)
11040160:	200890fa 	slli	r4,r4,3
11040164:	1105883a 	add	r2,r2,r4
11040168:	10800104 	addi	r2,r2,4
1104016c:	10800017 	ldw	r2,0(r2)
11040170:	1009883a 	mov	r4,r2
11040174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
11040178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
1104017c:	0005313a 	rdctl	r2,ipending
11040180:	e0bfff15 	stw	r2,-4(fp)

  return active;
11040184:	e0bfff17 	ldw	r2,-4(fp)
11040188:	00000706 	br	110401a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
1104018c:	e0bffc17 	ldw	r2,-16(fp)
11040190:	1085883a 	add	r2,r2,r2
11040194:	e0bffc15 	stw	r2,-16(fp)
      i++;
11040198:	e0bffd17 	ldw	r2,-12(fp)
1104019c:	10800044 	addi	r2,r2,1
110401a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
110401a4:	003fe106 	br	1104012c <alt_irq_handler+0x30>

    active = alt_irq_pending ();
110401a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
110401ac:	e0bffb17 	ldw	r2,-20(fp)
110401b0:	103fdb1e 	bne	r2,zero,11040120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
110401b4:	0001883a 	nop
}
110401b8:	0001883a 	nop
110401bc:	e037883a 	mov	sp,fp
110401c0:	dfc00117 	ldw	ra,4(sp)
110401c4:	df000017 	ldw	fp,0(sp)
110401c8:	dec00204 	addi	sp,sp,8
110401cc:	f800283a 	ret

110401d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
110401d0:	defffb04 	addi	sp,sp,-20
110401d4:	dfc00415 	stw	ra,16(sp)
110401d8:	df000315 	stw	fp,12(sp)
110401dc:	df000304 	addi	fp,sp,12
110401e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
110401e4:	000531fa 	rdctl	r2,exception
110401e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
110401ec:	e0bffd17 	ldw	r2,-12(fp)
110401f0:	10801f0c 	andi	r2,r2,124
110401f4:	1004d0ba 	srli	r2,r2,2
110401f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
110401fc:	0005333a 	rdctl	r2,badaddr
11040200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
11040204:	d0a6d917 	ldw	r2,-25756(gp)
11040208:	10000726 	beq	r2,zero,11040228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
1104020c:	d0a6d917 	ldw	r2,-25756(gp)
11040210:	e0fffd17 	ldw	r3,-12(fp)
11040214:	e1bffe17 	ldw	r6,-8(fp)
11040218:	e17fff17 	ldw	r5,-4(fp)
1104021c:	1809883a 	mov	r4,r3
11040220:	103ee83a 	callr	r2
11040224:	00000206 	br	11040230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
11040228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
1104022c:	0005883a 	mov	r2,zero
}
11040230:	e037883a 	mov	sp,fp
11040234:	dfc00117 	ldw	ra,4(sp)
11040238:	df000017 	ldw	fp,0(sp)
1104023c:	dec00204 	addi	sp,sp,8
11040240:	f800283a 	ret

Disassembly of section .text:

11040244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
11040244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
11040248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
1104024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
11040250:	00bffd16 	blt	zero,r2,11040248 <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
11040254:	06c44234 	movhi	sp,4360
    ori sp, sp, %lo(__alt_stack_pointer)
11040258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
1104025c:	068441b4 	movhi	gp,4358
    ori gp, gp, %lo(_gp)
11040260:	d6835614 	ori	gp,gp,3416
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
11040264:	00844174 	movhi	r2,4357
    ori r2, r2, %lo(__bss_start)
11040268:	10aa2114 	ori	r2,r2,43140

    movhi r3, %hi(__bss_end)
1104026c:	00c44174 	movhi	r3,4357
    ori r3, r3, %lo(__bss_end)
11040270:	18ea8414 	ori	r3,r3,43536

    beq r2, r3, 1f
11040274:	10c00326 	beq	r2,r3,11040284 <_start+0x40>

0:
    stw zero, (r2)
11040278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
1104027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
11040280:	10fffd36 	bltu	r2,r3,11040278 <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
11040284:	10545d00 	call	110545d0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
11040288:	10547640 	call	11054764 <alt_main>

1104028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
1104028c:	003fff06 	br	1104028c <alt_after_alt_main>

11040290 <AUDIO_Init>:

/////////////////////////////////////////////////////////////////////////
///////////// External function body ////////////////////////////////////
/////////////////////////////////////////////////////////////////////////

bool AUDIO_Init(void){
11040290:	defffd04 	addi	sp,sp,-12
11040294:	dfc00215 	stw	ra,8(sp)
11040298:	df000115 	stw	fp,4(sp)
1104029c:	df000104 	addi	fp,sp,4
   bool bSuccess = TRUE;
110402a0:	00800044 	movi	r2,1
110402a4:	e0bfff15 	stw	r2,-4(fp)
    AUDIO_DEBUG(("[AUDIO] AUDIO_Init...\r\n"));
110402a8:	01044174 	movhi	r4,4357
110402ac:	211adb04 	addi	r4,r4,27500
110402b0:	104118c0 	call	1104118c <myprintf>

    if (bSuccess)
110402b4:	e0bfff17 	ldw	r2,-4(fp)
110402b8:	10000426 	beq	r2,zero,110402cc <AUDIO_Init+0x3c>
        bSuccess = aduio_RegWrite(15, 0x0000);  // reset
110402bc:	000b883a 	mov	r5,zero
110402c0:	010003c4 	movi	r4,15
110402c4:	1040e740 	call	11040e74 <aduio_RegWrite>
110402c8:	e0bfff15 	stw	r2,-4(fp)
        
    if (bSuccess)
110402cc:	e0bfff17 	ldw	r2,-4(fp)
110402d0:	10000426 	beq	r2,zero,110402e4 <AUDIO_Init+0x54>
        bSuccess = aduio_RegWrite(9, 0x0000);  // inactive interface         
110402d4:	000b883a 	mov	r5,zero
110402d8:	01000244 	movi	r4,9
110402dc:	1040e740 	call	11040e74 <aduio_RegWrite>
110402e0:	e0bfff15 	stw	r2,-4(fp)
       
    //usleep(20*1000);    
    if (bSuccess)
110402e4:	e0bfff17 	ldw	r2,-4(fp)
110402e8:	10000426 	beq	r2,zero,110402fc <AUDIO_Init+0x6c>
        bSuccess = aduio_RegWrite(0, 0x0017);  // Left Line In: set left line in volume
110402ec:	014005c4 	movi	r5,23
110402f0:	0009883a 	mov	r4,zero
110402f4:	1040e740 	call	11040e74 <aduio_RegWrite>
110402f8:	e0bfff15 	stw	r2,-4(fp)
        
    if (bSuccess)
110402fc:	e0bfff17 	ldw	r2,-4(fp)
11040300:	10000426 	beq	r2,zero,11040314 <AUDIO_Init+0x84>
        bSuccess = aduio_RegWrite(1, 0x0017);  // Right Line In: set right line in volume
11040304:	014005c4 	movi	r5,23
11040308:	01000044 	movi	r4,1
1104030c:	1040e740 	call	11040e74 <aduio_RegWrite>
11040310:	e0bfff15 	stw	r2,-4(fp)
        
    if (bSuccess)
11040314:	e0bfff17 	ldw	r2,-4(fp)
11040318:	10000426 	beq	r2,zero,1104032c <AUDIO_Init+0x9c>
        bSuccess = aduio_RegWrite(2, 0x005B);  // Left Headphone Out: set left line out volume
1104031c:	014016c4 	movi	r5,91
11040320:	01000084 	movi	r4,2
11040324:	1040e740 	call	11040e74 <aduio_RegWrite>
11040328:	e0bfff15 	stw	r2,-4(fp)
        
    if (bSuccess)
1104032c:	e0bfff17 	ldw	r2,-4(fp)
11040330:	10000426 	beq	r2,zero,11040344 <AUDIO_Init+0xb4>
        bSuccess = aduio_RegWrite(3, 0x005B);  // Right Headphone Out: set right line out volume
11040334:	014016c4 	movi	r5,91
11040338:	010000c4 	movi	r4,3
1104033c:	1040e740 	call	11040e74 <aduio_RegWrite>
11040340:	e0bfff15 	stw	r2,-4(fp)
        
    if (bSuccess)      
11040344:	e0bfff17 	ldw	r2,-4(fp)
11040348:	10000426 	beq	r2,zero,1104035c <AUDIO_Init+0xcc>
        bSuccess = aduio_RegWrite(4, 0x0014);  // Analogue Audio Path Control: set mic as input and enable dac
1104034c:	01400504 	movi	r5,20
11040350:	01000104 	movi	r4,4
11040354:	1040e740 	call	11040e74 <aduio_RegWrite>
11040358:	e0bfff15 	stw	r2,-4(fp)
                
    if (bSuccess)
1104035c:	e0bfff17 	ldw	r2,-4(fp)
11040360:	10000426 	beq	r2,zero,11040374 <AUDIO_Init+0xe4>
        bSuccess = aduio_RegWrite(5, 0x0000);  // Digital Audio Path Control: disable soft mute         
11040364:	000b883a 	mov	r5,zero
11040368:	01000144 	movi	r4,5
1104036c:	1040e740 	call	11040e74 <aduio_RegWrite>
11040370:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
11040374:	e0bfff17 	ldw	r2,-4(fp)
11040378:	10000426 	beq	r2,zero,1104038c <AUDIO_Init+0xfc>
        bSuccess = aduio_RegWrite(6, 0);  // power down control: power on all         
1104037c:	000b883a 	mov	r5,zero
11040380:	01000184 	movi	r4,6
11040384:	1040e740 	call	11040e74 <aduio_RegWrite>
11040388:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
1104038c:	e0bfff17 	ldw	r2,-4(fp)
11040390:	10000426 	beq	r2,zero,110403a4 <AUDIO_Init+0x114>
        bSuccess = aduio_RegWrite(7, 0x0042);  // I2S, iwl=16-bits, Enable Master Mode         
11040394:	01401084 	movi	r5,66
11040398:	010001c4 	movi	r4,7
1104039c:	1040e740 	call	11040e74 <aduio_RegWrite>
110403a0:	e0bfff15 	stw	r2,-4(fp)
//        bSuccess = aduio_RegWrite(7, 0x0041);  // MSB-First, left justified, iwl=16-bits, Enable Master Mode         

    if (bSuccess)
110403a4:	e0bfff17 	ldw	r2,-4(fp)
110403a8:	10000426 	beq	r2,zero,110403bc <AUDIO_Init+0x12c>
        bSuccess = aduio_RegWrite(8, 0x0002);  // Normal, Base OVer-Sampleing Rate 384 fs (BOSR=1)         
110403ac:	01400084 	movi	r5,2
110403b0:	01000204 	movi	r4,8
110403b4:	1040e740 	call	11040e74 <aduio_RegWrite>
110403b8:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
110403bc:	e0bfff17 	ldw	r2,-4(fp)
110403c0:	10000426 	beq	r2,zero,110403d4 <AUDIO_Init+0x144>
        bSuccess = aduio_RegWrite(16, 0x007B);//ALC CONTROL 1
110403c4:	01401ec4 	movi	r5,123
110403c8:	01000404 	movi	r4,16
110403cc:	1040e740 	call	11040e74 <aduio_RegWrite>
110403d0:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
110403d4:	e0bfff17 	ldw	r2,-4(fp)
110403d8:	10000426 	beq	r2,zero,110403ec <AUDIO_Init+0x15c>
        bSuccess = aduio_RegWrite(17, 0x0032);//ALC CONTROL 2
110403dc:	01400c84 	movi	r5,50
110403e0:	01000444 	movi	r4,17
110403e4:	1040e740 	call	11040e74 <aduio_RegWrite>
110403e8:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
110403ec:	e0bfff17 	ldw	r2,-4(fp)
110403f0:	10000426 	beq	r2,zero,11040404 <AUDIO_Init+0x174>
        bSuccess = aduio_RegWrite(18, 0x0000);//NOISE GATE
110403f4:	000b883a 	mov	r5,zero
110403f8:	01000484 	movi	r4,18
110403fc:	1040e740 	call	11040e74 <aduio_RegWrite>
11040400:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
11040404:	e0bfff17 	ldw	r2,-4(fp)
11040408:	10000426 	beq	r2,zero,1104041c <AUDIO_Init+0x18c>
        bSuccess = aduio_RegWrite(9, 0x0001);  // active interface
1104040c:	01400044 	movi	r5,1
11040410:	01000244 	movi	r4,9
11040414:	1040e740 	call	11040e74 <aduio_RegWrite>
11040418:	e0bfff15 	stw	r2,-4(fp)
        
        
         
    AUDIO_DEBUG(("[AUDIO] AUDIO_Init %s\r\n", bSuccess?"success":"fail"));        
1104041c:	e0bfff17 	ldw	r2,-4(fp)
11040420:	10000326 	beq	r2,zero,11040430 <AUDIO_Init+0x1a0>
11040424:	00844174 	movhi	r2,4357
11040428:	109ae104 	addi	r2,r2,27524
1104042c:	00000206 	br	11040438 <AUDIO_Init+0x1a8>
11040430:	00844174 	movhi	r2,4357
11040434:	109ae304 	addi	r2,r2,27532
11040438:	100b883a 	mov	r5,r2
1104043c:	01044174 	movhi	r4,4357
11040440:	211ae504 	addi	r4,r4,27540
11040444:	104118c0 	call	1104118c <myprintf>
    
    return bSuccess;
11040448:	e0bfff17 	ldw	r2,-4(fp)

}
1104044c:	e037883a 	mov	sp,fp
11040450:	dfc00117 	ldw	ra,4(sp)
11040454:	df000017 	ldw	fp,0(sp)
11040458:	dec00204 	addi	sp,sp,8
1104045c:	f800283a 	ret

11040460 <AUDIO_REG_READ>:

bool AUDIO_REG_READ(void){
11040460:	defffd04 	addi	sp,sp,-12
11040464:	dfc00215 	stw	ra,8(sp)
11040468:	df000115 	stw	fp,4(sp)
1104046c:	df000104 	addi	fp,sp,4
   bool bSuccess = TRUE;
11040470:	00800044 	movi	r2,1
11040474:	e0bfff15 	stw	r2,-4(fp)
    AUDIO_DEBUG(("[AUDIO] AUDIO_REG_READ...\r\n"));
11040478:	01044174 	movhi	r4,4357
1104047c:	211aeb04 	addi	r4,r4,27564
11040480:	104118c0 	call	1104118c <myprintf>

    if (bSuccess)
11040484:	e0bfff17 	ldw	r2,-4(fp)
11040488:	10000326 	beq	r2,zero,11040498 <AUDIO_REG_READ+0x38>
        bSuccess = aduio_RegRead(0);
1104048c:	0009883a 	mov	r4,zero
11040490:	1040f640 	call	11040f64 <aduio_RegRead>
11040494:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
11040498:	e0bfff17 	ldw	r2,-4(fp)
1104049c:	10000326 	beq	r2,zero,110404ac <AUDIO_REG_READ+0x4c>
        bSuccess = aduio_RegRead(1);
110404a0:	01000044 	movi	r4,1
110404a4:	1040f640 	call	11040f64 <aduio_RegRead>
110404a8:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
110404ac:	e0bfff17 	ldw	r2,-4(fp)
110404b0:	10000326 	beq	r2,zero,110404c0 <AUDIO_REG_READ+0x60>
        bSuccess = aduio_RegRead(2);
110404b4:	01000084 	movi	r4,2
110404b8:	1040f640 	call	11040f64 <aduio_RegRead>
110404bc:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
110404c0:	e0bfff17 	ldw	r2,-4(fp)
110404c4:	10000326 	beq	r2,zero,110404d4 <AUDIO_REG_READ+0x74>
        bSuccess = aduio_RegRead(3);
110404c8:	010000c4 	movi	r4,3
110404cc:	1040f640 	call	11040f64 <aduio_RegRead>
110404d0:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
110404d4:	e0bfff17 	ldw	r2,-4(fp)
110404d8:	10000326 	beq	r2,zero,110404e8 <AUDIO_REG_READ+0x88>
        bSuccess = aduio_RegRead(4);
110404dc:	01000104 	movi	r4,4
110404e0:	1040f640 	call	11040f64 <aduio_RegRead>
110404e4:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
110404e8:	e0bfff17 	ldw	r2,-4(fp)
110404ec:	10000326 	beq	r2,zero,110404fc <AUDIO_REG_READ+0x9c>
        bSuccess = aduio_RegRead(5);
110404f0:	01000144 	movi	r4,5
110404f4:	1040f640 	call	11040f64 <aduio_RegRead>
110404f8:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
110404fc:	e0bfff17 	ldw	r2,-4(fp)
11040500:	10000326 	beq	r2,zero,11040510 <AUDIO_REG_READ+0xb0>
        bSuccess = aduio_RegRead(6);
11040504:	01000184 	movi	r4,6
11040508:	1040f640 	call	11040f64 <aduio_RegRead>
1104050c:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
11040510:	e0bfff17 	ldw	r2,-4(fp)
11040514:	10000326 	beq	r2,zero,11040524 <AUDIO_REG_READ+0xc4>
        bSuccess = aduio_RegRead(7);
11040518:	010001c4 	movi	r4,7
1104051c:	1040f640 	call	11040f64 <aduio_RegRead>
11040520:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
11040524:	e0bfff17 	ldw	r2,-4(fp)
11040528:	10000326 	beq	r2,zero,11040538 <AUDIO_REG_READ+0xd8>
        bSuccess = aduio_RegRead(8);
1104052c:	01000204 	movi	r4,8
11040530:	1040f640 	call	11040f64 <aduio_RegRead>
11040534:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
11040538:	e0bfff17 	ldw	r2,-4(fp)
1104053c:	10000326 	beq	r2,zero,1104054c <AUDIO_REG_READ+0xec>
        bSuccess = aduio_RegRead(9);
11040540:	01000244 	movi	r4,9
11040544:	1040f640 	call	11040f64 <aduio_RegRead>
11040548:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
1104054c:	e0bfff17 	ldw	r2,-4(fp)
11040550:	10000326 	beq	r2,zero,11040560 <AUDIO_REG_READ+0x100>
        bSuccess = aduio_RegRead(15);
11040554:	010003c4 	movi	r4,15
11040558:	1040f640 	call	11040f64 <aduio_RegRead>
1104055c:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
11040560:	e0bfff17 	ldw	r2,-4(fp)
11040564:	10000326 	beq	r2,zero,11040574 <AUDIO_REG_READ+0x114>
        bSuccess = aduio_RegRead(16);
11040568:	01000404 	movi	r4,16
1104056c:	1040f640 	call	11040f64 <aduio_RegRead>
11040570:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
11040574:	e0bfff17 	ldw	r2,-4(fp)
11040578:	10000326 	beq	r2,zero,11040588 <AUDIO_REG_READ+0x128>
        bSuccess = aduio_RegRead(17);
1104057c:	01000444 	movi	r4,17
11040580:	1040f640 	call	11040f64 <aduio_RegRead>
11040584:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
11040588:	e0bfff17 	ldw	r2,-4(fp)
1104058c:	10000326 	beq	r2,zero,1104059c <AUDIO_REG_READ+0x13c>
        bSuccess =aduio_RegRead(18);
11040590:	01000484 	movi	r4,18
11040594:	1040f640 	call	11040f64 <aduio_RegRead>
11040598:	e0bfff15 	stw	r2,-4(fp)


    AUDIO_DEBUG(("[AUDIO] AUDIO_REG_READ %s\r\n", bSuccess?"success":"fail"));
1104059c:	e0bfff17 	ldw	r2,-4(fp)
110405a0:	10000326 	beq	r2,zero,110405b0 <AUDIO_REG_READ+0x150>
110405a4:	00844174 	movhi	r2,4357
110405a8:	109ae104 	addi	r2,r2,27524
110405ac:	00000206 	br	110405b8 <AUDIO_REG_READ+0x158>
110405b0:	00844174 	movhi	r2,4357
110405b4:	109ae304 	addi	r2,r2,27532
110405b8:	100b883a 	mov	r5,r2
110405bc:	01044174 	movhi	r4,4357
110405c0:	211af204 	addi	r4,r4,27592
110405c4:	104118c0 	call	1104118c <myprintf>

    return bSuccess;
110405c8:	e0bfff17 	ldw	r2,-4(fp)

    }
110405cc:	e037883a 	mov	sp,fp
110405d0:	dfc00117 	ldw	ra,4(sp)
110405d4:	df000017 	ldw	fp,0(sp)
110405d8:	dec00204 	addi	sp,sp,8
110405dc:	f800283a 	ret

110405e0 <AUDIO_InterfaceActive>:

bool AUDIO_InterfaceActive(bool bActive){
110405e0:	defffc04 	addi	sp,sp,-16
110405e4:	dfc00315 	stw	ra,12(sp)
110405e8:	df000215 	stw	fp,8(sp)
110405ec:	df000204 	addi	fp,sp,8
110405f0:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    bSuccess = aduio_RegWrite(9, bActive?0x0001:0x0000); 
110405f4:	e0bfff17 	ldw	r2,-4(fp)
110405f8:	1004c03a 	cmpne	r2,r2,zero
110405fc:	10803fcc 	andi	r2,r2,255
11040600:	100b883a 	mov	r5,r2
11040604:	01000244 	movi	r4,9
11040608:	1040e740 	call	11040e74 <aduio_RegWrite>
1104060c:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;
11040610:	e0bffe17 	ldw	r2,-8(fp)
}
11040614:	e037883a 	mov	sp,fp
11040618:	dfc00117 	ldw	ra,4(sp)
1104061c:	df000017 	ldw	fp,0(sp)
11040620:	dec00204 	addi	sp,sp,8
11040624:	f800283a 	ret

11040628 <AUDIO_MicBoost>:

bool AUDIO_MicBoost(bool bBoost){
11040628:	defffb04 	addi	sp,sp,-20
1104062c:	dfc00415 	stw	ra,16(sp)
11040630:	df000315 	stw	fp,12(sp)
11040634:	df000304 	addi	fp,sp,12
11040638:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control;
    control = reg_file[4];
1104063c:	008441b4 	movhi	r2,4358
11040640:	10aa3004 	addi	r2,r2,-22336
11040644:	1080020b 	ldhu	r2,8(r2)
11040648:	e0bffd0d 	sth	r2,-12(fp)
    if (bBoost)
1104064c:	e0bfff17 	ldw	r2,-4(fp)
11040650:	10000426 	beq	r2,zero,11040664 <AUDIO_MicBoost+0x3c>
        control |= 0x0001;
11040654:	e0bffd0b 	ldhu	r2,-12(fp)
11040658:	10800054 	ori	r2,r2,1
1104065c:	e0bffd0d 	sth	r2,-12(fp)
11040660:	00000406 	br	11040674 <AUDIO_MicBoost+0x4c>
    else        
        control &= 0xFFFE;
11040664:	e0fffd0b 	ldhu	r3,-12(fp)
11040668:	00bfff84 	movi	r2,-2
1104066c:	1884703a 	and	r2,r3,r2
11040670:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(4, control);  // Left Line In: set left line in volume
11040674:	e0bffd0b 	ldhu	r2,-12(fp)
11040678:	100b883a 	mov	r5,r2
1104067c:	01000104 	movi	r4,4
11040680:	1040e740 	call	11040e74 <aduio_RegWrite>
11040684:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;
11040688:	e0bffe17 	ldw	r2,-8(fp)
}
1104068c:	e037883a 	mov	sp,fp
11040690:	dfc00117 	ldw	ra,4(sp)
11040694:	df000017 	ldw	fp,0(sp)
11040698:	dec00204 	addi	sp,sp,8
1104069c:	f800283a 	ret

110406a0 <AUDIO_AdcEnableHighPassFilter>:

bool AUDIO_AdcEnableHighPassFilter(bool bEnable){
110406a0:	defffb04 	addi	sp,sp,-20
110406a4:	dfc00415 	stw	ra,16(sp)
110406a8:	df000315 	stw	fp,12(sp)
110406ac:	df000304 	addi	fp,sp,12
110406b0:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control;
    control = reg_file[5];
110406b4:	008441b4 	movhi	r2,4358
110406b8:	10aa3004 	addi	r2,r2,-22336
110406bc:	1080028b 	ldhu	r2,10(r2)
110406c0:	e0bffd0d 	sth	r2,-12(fp)
    if (bEnable)
110406c4:	e0bfff17 	ldw	r2,-4(fp)
110406c8:	10000526 	beq	r2,zero,110406e0 <AUDIO_AdcEnableHighPassFilter+0x40>
        control &= 0xFFFE;
110406cc:	e0fffd0b 	ldhu	r3,-12(fp)
110406d0:	00bfff84 	movi	r2,-2
110406d4:	1884703a 	and	r2,r3,r2
110406d8:	e0bffd0d 	sth	r2,-12(fp)
110406dc:	00000306 	br	110406ec <AUDIO_AdcEnableHighPassFilter+0x4c>
    else        
        control |= 0x0001;
110406e0:	e0bffd0b 	ldhu	r2,-12(fp)
110406e4:	10800054 	ori	r2,r2,1
110406e8:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(5, control);  // Left Line In: set left line in volume
110406ec:	e0bffd0b 	ldhu	r2,-12(fp)
110406f0:	100b883a 	mov	r5,r2
110406f4:	01000144 	movi	r4,5
110406f8:	1040e740 	call	11040e74 <aduio_RegWrite>
110406fc:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;    
11040700:	e0bffe17 	ldw	r2,-8(fp)
}
11040704:	e037883a 	mov	sp,fp
11040708:	dfc00117 	ldw	ra,4(sp)
1104070c:	df000017 	ldw	fp,0(sp)
11040710:	dec00204 	addi	sp,sp,8
11040714:	f800283a 	ret

11040718 <AUDIO_DacDeemphasisControl>:



bool AUDIO_DacDeemphasisControl(alt_u8 deemphasis_type){
11040718:	defffb04 	addi	sp,sp,-20
1104071c:	dfc00415 	stw	ra,16(sp)
11040720:	df000315 	stw	fp,12(sp)
11040724:	df000304 	addi	fp,sp,12
11040728:	2005883a 	mov	r2,r4
1104072c:	e0bfff05 	stb	r2,-4(fp)
    bool bSuccess;
    alt_u16 control;
    control = reg_file[5];
11040730:	008441b4 	movhi	r2,4358
11040734:	10aa3004 	addi	r2,r2,-22336
11040738:	1080028b 	ldhu	r2,10(r2)
1104073c:	e0bffd0d 	sth	r2,-12(fp)
    control &= 0xFFF9;
11040740:	e0fffd0b 	ldhu	r3,-12(fp)
11040744:	00bffe44 	movi	r2,-7
11040748:	1884703a 	and	r2,r3,r2
1104074c:	e0bffd0d 	sth	r2,-12(fp)
    switch(deemphasis_type){
11040750:	e0bfff03 	ldbu	r2,-4(fp)
11040754:	10c000a0 	cmpeqi	r3,r2,2
11040758:	1800081e 	bne	r3,zero,1104077c <AUDIO_DacDeemphasisControl+0x64>
1104075c:	10c000e0 	cmpeqi	r3,r2,3
11040760:	18000a1e 	bne	r3,zero,1104078c <AUDIO_DacDeemphasisControl+0x74>
11040764:	10800060 	cmpeqi	r2,r2,1
11040768:	10000c26 	beq	r2,zero,1104079c <AUDIO_DacDeemphasisControl+0x84>
        case DEEMPHASIS_48K: control |= ((0x03) << 1); break;
1104076c:	e0bffd0b 	ldhu	r2,-12(fp)
11040770:	10800194 	ori	r2,r2,6
11040774:	e0bffd0d 	sth	r2,-12(fp)
11040778:	00000806 	br	1104079c <AUDIO_DacDeemphasisControl+0x84>
        case DEEMPHASIS_44K1: control |= ((0x02) << 1); break;
1104077c:	e0bffd0b 	ldhu	r2,-12(fp)
11040780:	10800114 	ori	r2,r2,4
11040784:	e0bffd0d 	sth	r2,-12(fp)
11040788:	00000406 	br	1104079c <AUDIO_DacDeemphasisControl+0x84>
        case DEEMPHASIS_32K: control |= ((0x01) << 1); break;
1104078c:	e0bffd0b 	ldhu	r2,-12(fp)
11040790:	10800094 	ori	r2,r2,2
11040794:	e0bffd0d 	sth	r2,-12(fp)
11040798:	0001883a 	nop
    }
    bSuccess = aduio_RegWrite(5, control);  // Left Line In: set left line in volume
1104079c:	e0bffd0b 	ldhu	r2,-12(fp)
110407a0:	100b883a 	mov	r5,r2
110407a4:	01000144 	movi	r4,5
110407a8:	1040e740 	call	11040e74 <aduio_RegWrite>
110407ac:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;       
110407b0:	e0bffe17 	ldw	r2,-8(fp)
}
110407b4:	e037883a 	mov	sp,fp
110407b8:	dfc00117 	ldw	ra,4(sp)
110407bc:	df000017 	ldw	fp,0(sp)
110407c0:	dec00204 	addi	sp,sp,8
110407c4:	f800283a 	ret

110407c8 <AUDIO_DacEnableSoftMute>:

bool AUDIO_DacEnableSoftMute(bool bEnable){
110407c8:	defffb04 	addi	sp,sp,-20
110407cc:	dfc00415 	stw	ra,16(sp)
110407d0:	df000315 	stw	fp,12(sp)
110407d4:	df000304 	addi	fp,sp,12
110407d8:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control;
    alt_u16 mask;
    control = reg_file[5];
110407dc:	008441b4 	movhi	r2,4358
110407e0:	10aa3004 	addi	r2,r2,-22336
110407e4:	1080028b 	ldhu	r2,10(r2)
110407e8:	e0bffd0d 	sth	r2,-12(fp)
    mask = 0x01 << 3;
110407ec:	00800204 	movi	r2,8
110407f0:	e0bffd8d 	sth	r2,-10(fp)
    if (bEnable)
110407f4:	e0bfff17 	ldw	r2,-4(fp)
110407f8:	10000526 	beq	r2,zero,11040810 <AUDIO_DacEnableSoftMute+0x48>
        control |= mask;
110407fc:	e0fffd0b 	ldhu	r3,-12(fp)
11040800:	e0bffd8b 	ldhu	r2,-10(fp)
11040804:	1884b03a 	or	r2,r3,r2
11040808:	e0bffd0d 	sth	r2,-12(fp)
1104080c:	00000606 	br	11040828 <AUDIO_DacEnableSoftMute+0x60>
    else        
        control &= ~mask;
11040810:	e0bffd8b 	ldhu	r2,-10(fp)
11040814:	0084303a 	nor	r2,zero,r2
11040818:	1007883a 	mov	r3,r2
1104081c:	e0bffd0b 	ldhu	r2,-12(fp)
11040820:	1884703a 	and	r2,r3,r2
11040824:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(5, control);  // Left Line In: set left line in volume
11040828:	e0bffd0b 	ldhu	r2,-12(fp)
1104082c:	100b883a 	mov	r5,r2
11040830:	01000144 	movi	r4,5
11040834:	1040e740 	call	11040e74 <aduio_RegWrite>
11040838:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;      
1104083c:	e0bffe17 	ldw	r2,-8(fp)
}
11040840:	e037883a 	mov	sp,fp
11040844:	dfc00117 	ldw	ra,4(sp)
11040848:	df000017 	ldw	fp,0(sp)
1104084c:	dec00204 	addi	sp,sp,8
11040850:	f800283a 	ret

11040854 <AUDIO_MicMute>:

bool AUDIO_MicMute(bool bMute){
11040854:	defffb04 	addi	sp,sp,-20
11040858:	dfc00415 	stw	ra,16(sp)
1104085c:	df000315 	stw	fp,12(sp)
11040860:	df000304 	addi	fp,sp,12
11040864:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control;
    alt_u16 mask;
    control = reg_file[4];
11040868:	008441b4 	movhi	r2,4358
1104086c:	10aa3004 	addi	r2,r2,-22336
11040870:	1080020b 	ldhu	r2,8(r2)
11040874:	e0bffd0d 	sth	r2,-12(fp)
    mask = 0x01 << 1;
11040878:	00800084 	movi	r2,2
1104087c:	e0bffd8d 	sth	r2,-10(fp)
    if (bMute)
11040880:	e0bfff17 	ldw	r2,-4(fp)
11040884:	10000526 	beq	r2,zero,1104089c <AUDIO_MicMute+0x48>
        control |= mask;
11040888:	e0fffd0b 	ldhu	r3,-12(fp)
1104088c:	e0bffd8b 	ldhu	r2,-10(fp)
11040890:	1884b03a 	or	r2,r3,r2
11040894:	e0bffd0d 	sth	r2,-12(fp)
11040898:	00000606 	br	110408b4 <AUDIO_MicMute+0x60>
    else        
        control &= ~mask;
1104089c:	e0bffd8b 	ldhu	r2,-10(fp)
110408a0:	0084303a 	nor	r2,zero,r2
110408a4:	1007883a 	mov	r3,r2
110408a8:	e0bffd0b 	ldhu	r2,-12(fp)
110408ac:	1884703a 	and	r2,r3,r2
110408b0:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(4, control);  // Left Line In: set left line in volume
110408b4:	e0bffd0b 	ldhu	r2,-12(fp)
110408b8:	100b883a 	mov	r5,r2
110408bc:	01000104 	movi	r4,4
110408c0:	1040e740 	call	11040e74 <aduio_RegWrite>
110408c4:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;        
110408c8:	e0bffe17 	ldw	r2,-8(fp)
}
110408cc:	e037883a 	mov	sp,fp
110408d0:	dfc00117 	ldw	ra,4(sp)
110408d4:	df000017 	ldw	fp,0(sp)
110408d8:	dec00204 	addi	sp,sp,8
110408dc:	f800283a 	ret

110408e0 <AUDIO_LineInMute>:

bool AUDIO_LineInMute(bool bMute){
110408e0:	defffa04 	addi	sp,sp,-24
110408e4:	dfc00515 	stw	ra,20(sp)
110408e8:	df000415 	stw	fp,16(sp)
110408ec:	df000404 	addi	fp,sp,16
110408f0:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control_l, control_r;
    alt_u16 mask;
    control_l = reg_file[0];
110408f4:	008441b4 	movhi	r2,4358
110408f8:	10aa3004 	addi	r2,r2,-22336
110408fc:	1080000b 	ldhu	r2,0(r2)
11040900:	e0bffd0d 	sth	r2,-12(fp)
    control_r = reg_file[1];
11040904:	008441b4 	movhi	r2,4358
11040908:	10aa3004 	addi	r2,r2,-22336
1104090c:	1080008b 	ldhu	r2,2(r2)
11040910:	e0bffd8d 	sth	r2,-10(fp)
    mask = 0x01 << 7;
11040914:	00802004 	movi	r2,128
11040918:	e0bffe0d 	sth	r2,-8(fp)
    if (bMute){
1104091c:	e0bfff17 	ldw	r2,-4(fp)
11040920:	10000926 	beq	r2,zero,11040948 <AUDIO_LineInMute+0x68>
        control_l |= mask;
11040924:	e0fffd0b 	ldhu	r3,-12(fp)
11040928:	e0bffe0b 	ldhu	r2,-8(fp)
1104092c:	1884b03a 	or	r2,r3,r2
11040930:	e0bffd0d 	sth	r2,-12(fp)
        control_r |= mask;
11040934:	e0fffd8b 	ldhu	r3,-10(fp)
11040938:	e0bffe0b 	ldhu	r2,-8(fp)
1104093c:	1884b03a 	or	r2,r3,r2
11040940:	e0bffd8d 	sth	r2,-10(fp)
11040944:	00000c06 	br	11040978 <AUDIO_LineInMute+0x98>
    }else{        
        control_l &= ~mask;
11040948:	e0bffe0b 	ldhu	r2,-8(fp)
1104094c:	0084303a 	nor	r2,zero,r2
11040950:	1007883a 	mov	r3,r2
11040954:	e0bffd0b 	ldhu	r2,-12(fp)
11040958:	1884703a 	and	r2,r3,r2
1104095c:	e0bffd0d 	sth	r2,-12(fp)
        control_r &= ~mask;
11040960:	e0bffe0b 	ldhu	r2,-8(fp)
11040964:	0084303a 	nor	r2,zero,r2
11040968:	1007883a 	mov	r3,r2
1104096c:	e0bffd8b 	ldhu	r2,-10(fp)
11040970:	1884703a 	and	r2,r3,r2
11040974:	e0bffd8d 	sth	r2,-10(fp)
    }        
    bSuccess = aduio_RegWrite(0, control_l);  // Left Line In: set left line in volume
11040978:	e0bffd0b 	ldhu	r2,-12(fp)
1104097c:	100b883a 	mov	r5,r2
11040980:	0009883a 	mov	r4,zero
11040984:	1040e740 	call	11040e74 <aduio_RegWrite>
11040988:	e0bffc15 	stw	r2,-16(fp)
    if (bSuccess)
1104098c:	e0bffc17 	ldw	r2,-16(fp)
11040990:	10000526 	beq	r2,zero,110409a8 <AUDIO_LineInMute+0xc8>
        bSuccess = aduio_RegWrite(1, control_r);  // Left Line In: set left line in volume
11040994:	e0bffd8b 	ldhu	r2,-10(fp)
11040998:	100b883a 	mov	r5,r2
1104099c:	01000044 	movi	r4,1
110409a0:	1040e740 	call	11040e74 <aduio_RegWrite>
110409a4:	e0bffc15 	stw	r2,-16(fp)
    return bSuccess;        
110409a8:	e0bffc17 	ldw	r2,-16(fp)
}
110409ac:	e037883a 	mov	sp,fp
110409b0:	dfc00117 	ldw	ra,4(sp)
110409b4:	df000017 	ldw	fp,0(sp)
110409b8:	dec00204 	addi	sp,sp,8
110409bc:	f800283a 	ret

110409c0 <AUDIO_SetInputSource>:


bool AUDIO_SetInputSource(alt_u8 InputSource){
110409c0:	defffb04 	addi	sp,sp,-20
110409c4:	dfc00415 	stw	ra,16(sp)
110409c8:	df000315 	stw	fp,12(sp)
110409cc:	df000304 	addi	fp,sp,12
110409d0:	2005883a 	mov	r2,r4
110409d4:	e0bfff05 	stb	r2,-4(fp)
    bool bSuccess;
    alt_u16 control;
    alt_u16 mask;
    control = reg_file[4];
110409d8:	008441b4 	movhi	r2,4358
110409dc:	10aa3004 	addi	r2,r2,-22336
110409e0:	1080020b 	ldhu	r2,8(r2)
110409e4:	e0bffd0d 	sth	r2,-12(fp)
    mask = 0x01 << 2;
110409e8:	00800104 	movi	r2,4
110409ec:	e0bffd8d 	sth	r2,-10(fp)
    if (InputSource == SOURCE_MIC)
110409f0:	e0bfff03 	ldbu	r2,-4(fp)
110409f4:	1000051e 	bne	r2,zero,11040a0c <AUDIO_SetInputSource+0x4c>
        control |= mask;
110409f8:	e0fffd0b 	ldhu	r3,-12(fp)
110409fc:	e0bffd8b 	ldhu	r2,-10(fp)
11040a00:	1884b03a 	or	r2,r3,r2
11040a04:	e0bffd0d 	sth	r2,-12(fp)
11040a08:	00000606 	br	11040a24 <AUDIO_SetInputSource+0x64>
    else        
        control &= ~mask;
11040a0c:	e0bffd8b 	ldhu	r2,-10(fp)
11040a10:	0084303a 	nor	r2,zero,r2
11040a14:	1007883a 	mov	r3,r2
11040a18:	e0bffd0b 	ldhu	r2,-12(fp)
11040a1c:	1884703a 	and	r2,r3,r2
11040a20:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(4, control);  // Left Line In: set left line in volume
11040a24:	e0bffd0b 	ldhu	r2,-12(fp)
11040a28:	100b883a 	mov	r5,r2
11040a2c:	01000104 	movi	r4,4
11040a30:	1040e740 	call	11040e74 <aduio_RegWrite>
11040a34:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;       
11040a38:	e0bffe17 	ldw	r2,-8(fp)
}
11040a3c:	e037883a 	mov	sp,fp
11040a40:	dfc00117 	ldw	ra,4(sp)
11040a44:	df000017 	ldw	fp,0(sp)
11040a48:	dec00204 	addi	sp,sp,8
11040a4c:	f800283a 	ret

11040a50 <AUDIO_SetSampleRate>:

// See datasheet page 39
bool AUDIO_SetSampleRate(alt_u8 SampleRate){
11040a50:	defffb04 	addi	sp,sp,-20
11040a54:	dfc00415 	stw	ra,16(sp)
11040a58:	df000315 	stw	fp,12(sp)
11040a5c:	df000304 	addi	fp,sp,12
11040a60:	2005883a 	mov	r2,r4
11040a64:	e0bfff05 	stb	r2,-4(fp)
    bool bSuccess;
    alt_u16 control;
    control = 0;
11040a68:	e03ffd0d 	sth	zero,-12(fp)

    switch(SampleRate){
11040a6c:	e0bfff03 	ldbu	r2,-4(fp)
11040a70:	10c001e8 	cmpgeui	r3,r2,7
11040a74:	1800211e 	bne	r3,zero,11040afc <AUDIO_SetSampleRate+0xac>
11040a78:	100690ba 	slli	r3,r2,2
11040a7c:	00844134 	movhi	r2,4356
11040a80:	1082a404 	addi	r2,r2,2704
11040a84:	1885883a 	add	r2,r3,r2
11040a88:	10800017 	ldw	r2,0(r2)
11040a8c:	1000683a 	jmp	r2
11040a90:	11040aac 	andhi	r4,r2,4138
11040a94:	11040ab4 	orhi	r4,r2,4138
11040a98:	11040ac0 	call	111040ac <__alt_data_end+0x840ac>
11040a9c:	11040acc 	andi	r4,r2,4139
11040aa0:	11040ad8 	cmpnei	r4,r2,4139
11040aa4:	11040ae4 	muli	r4,r2,4139
11040aa8:	11040af0 	cmpltui	r4,r2,4139
         // MCLK = 18.432
        case RATE_ADC48K_DAC48K: control = (0x0) << 2; break;
11040aac:	e03ffd0d 	sth	zero,-12(fp)
11040ab0:	00001206 	br	11040afc <AUDIO_SetSampleRate+0xac>
        case RATE_ADC48K_DAC8K: control = (0x1) << 2; break;
11040ab4:	00800104 	movi	r2,4
11040ab8:	e0bffd0d 	sth	r2,-12(fp)
11040abc:	00000f06 	br	11040afc <AUDIO_SetSampleRate+0xac>
        case RATE_ADC8K_DAC48K: control = (0x2) << 2; break;
11040ac0:	00800204 	movi	r2,8
11040ac4:	e0bffd0d 	sth	r2,-12(fp)
11040ac8:	00000c06 	br	11040afc <AUDIO_SetSampleRate+0xac>
        case RATE_ADC8K_DAC8K: control = (0x3) << 2; break;
11040acc:	00800304 	movi	r2,12
11040ad0:	e0bffd0d 	sth	r2,-12(fp)
11040ad4:	00000906 	br	11040afc <AUDIO_SetSampleRate+0xac>
        case RATE_ADC32K_DAC32K: control = (0x6) << 2; break;
11040ad8:	00800604 	movi	r2,24
11040adc:	e0bffd0d 	sth	r2,-12(fp)
11040ae0:	00000606 	br	11040afc <AUDIO_SetSampleRate+0xac>
        case RATE_ADC96K_DAC96K: control = (0x7) << 2; break;
11040ae4:	00800704 	movi	r2,28
11040ae8:	e0bffd0d 	sth	r2,-12(fp)
11040aec:	00000306 	br	11040afc <AUDIO_SetSampleRate+0xac>
        case RATE_ADC44K1_DAC44K1: control = (0x8) << 2; break;
11040af0:	00800804 	movi	r2,32
11040af4:	e0bffd0d 	sth	r2,-12(fp)
11040af8:	0001883a 	nop
        // MCLK = 11.2896
      //  case RATE_ADC44K1_DAC8K: control = (0x9) << 2; break;
      //  case RATE_ADC8K_DAC44K1: control = (0xA) << 2; break;
    }
    control |= 0x02; // BOSR=1 (384fs = 384*48k = 18.432M)
11040afc:	e0bffd0b 	ldhu	r2,-12(fp)
11040b00:	10800094 	ori	r2,r2,2
11040b04:	e0bffd0d 	sth	r2,-12(fp)
        
    bSuccess = aduio_RegWrite(8, control);  // Left Line In: set left line in volume
11040b08:	e0bffd0b 	ldhu	r2,-12(fp)
11040b0c:	100b883a 	mov	r5,r2
11040b10:	01000204 	movi	r4,8
11040b14:	1040e740 	call	11040e74 <aduio_RegWrite>
11040b18:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;      
11040b1c:	e0bffe17 	ldw	r2,-8(fp)
}
11040b20:	e037883a 	mov	sp,fp
11040b24:	dfc00117 	ldw	ra,4(sp)
11040b28:	df000017 	ldw	fp,0(sp)
11040b2c:	dec00204 	addi	sp,sp,8
11040b30:	f800283a 	ret

11040b34 <AUDIO_SetLineInVol>:





bool AUDIO_SetLineInVol(alt_u16 l_vol, alt_u16 r_vol){
11040b34:	defffa04 	addi	sp,sp,-24
11040b38:	dfc00515 	stw	ra,20(sp)
11040b3c:	df000415 	stw	fp,16(sp)
11040b40:	df000404 	addi	fp,sp,16
11040b44:	2007883a 	mov	r3,r4
11040b48:	2805883a 	mov	r2,r5
11040b4c:	e0fffe0d 	sth	r3,-8(fp)
11040b50:	e0bfff0d 	sth	r2,-4(fp)
    bool bSuccess;
    alt_u16 control;
    
    // left
    control = reg_file[0];
11040b54:	008441b4 	movhi	r2,4358
11040b58:	10aa3004 	addi	r2,r2,-22336
11040b5c:	1080000b 	ldhu	r2,0(r2)
11040b60:	e0bffd0d 	sth	r2,-12(fp)
    control &= 0xFFC0;
11040b64:	e0fffd0b 	ldhu	r3,-12(fp)
11040b68:	00bff004 	movi	r2,-64
11040b6c:	1884703a 	and	r2,r3,r2
11040b70:	e0bffd0d 	sth	r2,-12(fp)
    control += l_vol & 0x3F;
11040b74:	e0bffe0b 	ldhu	r2,-8(fp)
11040b78:	10800fcc 	andi	r2,r2,63
11040b7c:	1007883a 	mov	r3,r2
11040b80:	e0bffd0b 	ldhu	r2,-12(fp)
11040b84:	1885883a 	add	r2,r3,r2
11040b88:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(0, control);
11040b8c:	e0bffd0b 	ldhu	r2,-12(fp)
11040b90:	100b883a 	mov	r5,r2
11040b94:	0009883a 	mov	r4,zero
11040b98:	1040e740 	call	11040e74 <aduio_RegWrite>
11040b9c:	e0bffc15 	stw	r2,-16(fp)
    
    if (bSuccess){
11040ba0:	e0bffc17 	ldw	r2,-16(fp)
11040ba4:	10001326 	beq	r2,zero,11040bf4 <AUDIO_SetLineInVol+0xc0>
        // right
        control = reg_file[1];
11040ba8:	008441b4 	movhi	r2,4358
11040bac:	10aa3004 	addi	r2,r2,-22336
11040bb0:	1080008b 	ldhu	r2,2(r2)
11040bb4:	e0bffd0d 	sth	r2,-12(fp)
        control &= 0xFFC0;
11040bb8:	e0fffd0b 	ldhu	r3,-12(fp)
11040bbc:	00bff004 	movi	r2,-64
11040bc0:	1884703a 	and	r2,r3,r2
11040bc4:	e0bffd0d 	sth	r2,-12(fp)
        control += r_vol & 0x3F;
11040bc8:	e0bfff0b 	ldhu	r2,-4(fp)
11040bcc:	10800fcc 	andi	r2,r2,63
11040bd0:	1007883a 	mov	r3,r2
11040bd4:	e0bffd0b 	ldhu	r2,-12(fp)
11040bd8:	1885883a 	add	r2,r3,r2
11040bdc:	e0bffd0d 	sth	r2,-12(fp)
        bSuccess = aduio_RegWrite(1, control);        
11040be0:	e0bffd0b 	ldhu	r2,-12(fp)
11040be4:	100b883a 	mov	r5,r2
11040be8:	01000044 	movi	r4,1
11040bec:	1040e740 	call	11040e74 <aduio_RegWrite>
11040bf0:	e0bffc15 	stw	r2,-16(fp)
    }
    
    AUDIO_DEBUG(("[AUDIO] set Line-In vol(%d,%d) %s\r\n", l_vol, r_vol, bSuccess?"success":"fail"));        
11040bf4:	e0fffe0b 	ldhu	r3,-8(fp)
11040bf8:	e13fff0b 	ldhu	r4,-4(fp)
11040bfc:	e0bffc17 	ldw	r2,-16(fp)
11040c00:	10000326 	beq	r2,zero,11040c10 <AUDIO_SetLineInVol+0xdc>
11040c04:	00844174 	movhi	r2,4357
11040c08:	109ae104 	addi	r2,r2,27524
11040c0c:	00000206 	br	11040c18 <AUDIO_SetLineInVol+0xe4>
11040c10:	00844174 	movhi	r2,4357
11040c14:	109ae304 	addi	r2,r2,27532
11040c18:	100f883a 	mov	r7,r2
11040c1c:	200d883a 	mov	r6,r4
11040c20:	180b883a 	mov	r5,r3
11040c24:	01044174 	movhi	r4,4357
11040c28:	211af904 	addi	r4,r4,27620
11040c2c:	104118c0 	call	1104118c <myprintf>
    return bSuccess;
11040c30:	e0bffc17 	ldw	r2,-16(fp)
}
11040c34:	e037883a 	mov	sp,fp
11040c38:	dfc00117 	ldw	ra,4(sp)
11040c3c:	df000017 	ldw	fp,0(sp)
11040c40:	dec00204 	addi	sp,sp,8
11040c44:	f800283a 	ret

11040c48 <AUDIO_SetLineOutVol>:

bool AUDIO_SetLineOutVol(alt_u16 l_vol, alt_u16 r_vol){
11040c48:	defffa04 	addi	sp,sp,-24
11040c4c:	dfc00515 	stw	ra,20(sp)
11040c50:	df000415 	stw	fp,16(sp)
11040c54:	df000404 	addi	fp,sp,16
11040c58:	2007883a 	mov	r3,r4
11040c5c:	2805883a 	mov	r2,r5
11040c60:	e0fffe0d 	sth	r3,-8(fp)
11040c64:	e0bfff0d 	sth	r2,-4(fp)
    bool bSuccess;
    alt_u16 control;

 
    // left
    control = reg_file[2];
11040c68:	008441b4 	movhi	r2,4358
11040c6c:	10aa3004 	addi	r2,r2,-22336
11040c70:	1080010b 	ldhu	r2,4(r2)
11040c74:	e0bffd0d 	sth	r2,-12(fp)
    control &= 0xFF80;
11040c78:	e0fffd0b 	ldhu	r3,-12(fp)
11040c7c:	00bfe004 	movi	r2,-128
11040c80:	1884703a 	and	r2,r3,r2
11040c84:	e0bffd0d 	sth	r2,-12(fp)
    control += l_vol & 0x7F;
11040c88:	e0bffe0b 	ldhu	r2,-8(fp)
11040c8c:	10801fcc 	andi	r2,r2,127
11040c90:	1007883a 	mov	r3,r2
11040c94:	e0bffd0b 	ldhu	r2,-12(fp)
11040c98:	1885883a 	add	r2,r3,r2
11040c9c:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(2, control);
11040ca0:	e0bffd0b 	ldhu	r2,-12(fp)
11040ca4:	100b883a 	mov	r5,r2
11040ca8:	01000084 	movi	r4,2
11040cac:	1040e740 	call	11040e74 <aduio_RegWrite>
11040cb0:	e0bffc15 	stw	r2,-16(fp)
    
    if (bSuccess){
11040cb4:	e0bffc17 	ldw	r2,-16(fp)
11040cb8:	10001326 	beq	r2,zero,11040d08 <AUDIO_SetLineOutVol+0xc0>
        // right
        control = reg_file[3];
11040cbc:	008441b4 	movhi	r2,4358
11040cc0:	10aa3004 	addi	r2,r2,-22336
11040cc4:	1080018b 	ldhu	r2,6(r2)
11040cc8:	e0bffd0d 	sth	r2,-12(fp)
        control &= 0xFF80;
11040ccc:	e0fffd0b 	ldhu	r3,-12(fp)
11040cd0:	00bfe004 	movi	r2,-128
11040cd4:	1884703a 	and	r2,r3,r2
11040cd8:	e0bffd0d 	sth	r2,-12(fp)
        control += r_vol & 0x7F;
11040cdc:	e0bfff0b 	ldhu	r2,-4(fp)
11040ce0:	10801fcc 	andi	r2,r2,127
11040ce4:	1007883a 	mov	r3,r2
11040ce8:	e0bffd0b 	ldhu	r2,-12(fp)
11040cec:	1885883a 	add	r2,r3,r2
11040cf0:	e0bffd0d 	sth	r2,-12(fp)
        bSuccess = aduio_RegWrite(3, control);        
11040cf4:	e0bffd0b 	ldhu	r2,-12(fp)
11040cf8:	100b883a 	mov	r5,r2
11040cfc:	010000c4 	movi	r4,3
11040d00:	1040e740 	call	11040e74 <aduio_RegWrite>
11040d04:	e0bffc15 	stw	r2,-16(fp)
    }    
    
    AUDIO_DEBUG(("[AUDIO] set Line-Out vol(%d,%d) %s\r\n", l_vol, r_vol, bSuccess?"success":"fail"));
11040d08:	e0fffe0b 	ldhu	r3,-8(fp)
11040d0c:	e13fff0b 	ldhu	r4,-4(fp)
11040d10:	e0bffc17 	ldw	r2,-16(fp)
11040d14:	10000326 	beq	r2,zero,11040d24 <AUDIO_SetLineOutVol+0xdc>
11040d18:	00844174 	movhi	r2,4357
11040d1c:	109ae104 	addi	r2,r2,27524
11040d20:	00000206 	br	11040d2c <AUDIO_SetLineOutVol+0xe4>
11040d24:	00844174 	movhi	r2,4357
11040d28:	109ae304 	addi	r2,r2,27532
11040d2c:	100f883a 	mov	r7,r2
11040d30:	200d883a 	mov	r6,r4
11040d34:	180b883a 	mov	r5,r3
11040d38:	01044174 	movhi	r4,4357
11040d3c:	211b0204 	addi	r4,r4,27656
11040d40:	104118c0 	call	1104118c <myprintf>
    
    return bSuccess;
11040d44:	e0bffc17 	ldw	r2,-16(fp)
}
11040d48:	e037883a 	mov	sp,fp
11040d4c:	dfc00117 	ldw	ra,4(sp)
11040d50:	df000017 	ldw	fp,0(sp)
11040d54:	dec00204 	addi	sp,sp,8
11040d58:	f800283a 	ret

11040d5c <AUDIO_EnableByPass>:


bool AUDIO_EnableByPass(bool bEnable){
11040d5c:	defffb04 	addi	sp,sp,-20
11040d60:	dfc00415 	stw	ra,16(sp)
11040d64:	df000315 	stw	fp,12(sp)
11040d68:	df000304 	addi	fp,sp,12
11040d6c:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control;
    alt_u16 mask;
    control = reg_file[4];
11040d70:	008441b4 	movhi	r2,4358
11040d74:	10aa3004 	addi	r2,r2,-22336
11040d78:	1080020b 	ldhu	r2,8(r2)
11040d7c:	e0bffd0d 	sth	r2,-12(fp)
    mask = 0x01 << 3;
11040d80:	00800204 	movi	r2,8
11040d84:	e0bffd8d 	sth	r2,-10(fp)
    if (bEnable)
11040d88:	e0bfff17 	ldw	r2,-4(fp)
11040d8c:	10000526 	beq	r2,zero,11040da4 <AUDIO_EnableByPass+0x48>
        control |= mask;
11040d90:	e0fffd0b 	ldhu	r3,-12(fp)
11040d94:	e0bffd8b 	ldhu	r2,-10(fp)
11040d98:	1884b03a 	or	r2,r3,r2
11040d9c:	e0bffd0d 	sth	r2,-12(fp)
11040da0:	00000606 	br	11040dbc <AUDIO_EnableByPass+0x60>
    else        
        control &= ~mask;
11040da4:	e0bffd8b 	ldhu	r2,-10(fp)
11040da8:	0084303a 	nor	r2,zero,r2
11040dac:	1007883a 	mov	r3,r2
11040db0:	e0bffd0b 	ldhu	r2,-12(fp)
11040db4:	1884703a 	and	r2,r3,r2
11040db8:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(4, control); 
11040dbc:	e0bffd0b 	ldhu	r2,-12(fp)
11040dc0:	100b883a 	mov	r5,r2
11040dc4:	01000104 	movi	r4,4
11040dc8:	1040e740 	call	11040e74 <aduio_RegWrite>
11040dcc:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;  	
11040dd0:	e0bffe17 	ldw	r2,-8(fp)
}
11040dd4:	e037883a 	mov	sp,fp
11040dd8:	dfc00117 	ldw	ra,4(sp)
11040ddc:	df000017 	ldw	fp,0(sp)
11040de0:	dec00204 	addi	sp,sp,8
11040de4:	f800283a 	ret

11040de8 <AUDIO_EnableSiteTone>:

bool AUDIO_EnableSiteTone(bool bEnable){
11040de8:	defffb04 	addi	sp,sp,-20
11040dec:	dfc00415 	stw	ra,16(sp)
11040df0:	df000315 	stw	fp,12(sp)
11040df4:	df000304 	addi	fp,sp,12
11040df8:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control;
    alt_u16 mask;
    control = reg_file[4];
11040dfc:	008441b4 	movhi	r2,4358
11040e00:	10aa3004 	addi	r2,r2,-22336
11040e04:	1080020b 	ldhu	r2,8(r2)
11040e08:	e0bffd0d 	sth	r2,-12(fp)
    mask = 0x01 << 5;
11040e0c:	00800804 	movi	r2,32
11040e10:	e0bffd8d 	sth	r2,-10(fp)
    if (bEnable)
11040e14:	e0bfff17 	ldw	r2,-4(fp)
11040e18:	10000526 	beq	r2,zero,11040e30 <AUDIO_EnableSiteTone+0x48>
        control |= mask;
11040e1c:	e0fffd0b 	ldhu	r3,-12(fp)
11040e20:	e0bffd8b 	ldhu	r2,-10(fp)
11040e24:	1884b03a 	or	r2,r3,r2
11040e28:	e0bffd0d 	sth	r2,-12(fp)
11040e2c:	00000606 	br	11040e48 <AUDIO_EnableSiteTone+0x60>
    else        
        control &= ~mask;
11040e30:	e0bffd8b 	ldhu	r2,-10(fp)
11040e34:	0084303a 	nor	r2,zero,r2
11040e38:	1007883a 	mov	r3,r2
11040e3c:	e0bffd0b 	ldhu	r2,-12(fp)
11040e40:	1884703a 	and	r2,r3,r2
11040e44:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(4, control); 
11040e48:	e0bffd0b 	ldhu	r2,-12(fp)
11040e4c:	100b883a 	mov	r5,r2
11040e50:	01000104 	movi	r4,4
11040e54:	1040e740 	call	11040e74 <aduio_RegWrite>
11040e58:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;        
11040e5c:	e0bffe17 	ldw	r2,-8(fp)
}
11040e60:	e037883a 	mov	sp,fp
11040e64:	dfc00117 	ldw	ra,4(sp)
11040e68:	df000017 	ldw	fp,0(sp)
11040e6c:	dec00204 	addi	sp,sp,8
11040e70:	f800283a 	ret

11040e74 <aduio_RegWrite>:

/////////////////////////////////////////////////////////////////////////
///////////// Interla function body ////////////////////////////////////
/////////////////////////////////////////////////////////////////////////

bool aduio_RegWrite(alt_u8 reg_index, alt_u16 data16){
11040e74:	defff904 	addi	sp,sp,-28
11040e78:	dfc00615 	stw	ra,24(sp)
11040e7c:	df000515 	stw	fp,20(sp)
11040e80:	df000504 	addi	fp,sp,20
11040e84:	2007883a 	mov	r3,r4
11040e88:	2805883a 	mov	r2,r5
11040e8c:	e0fffe05 	stb	r3,-8(fp)
11040e90:	e0bfff0d 	sth	r2,-4(fp)
    bool bSuccess;
    alt_u8 data, control;
    if (reg_index <= 10)
11040e94:	e0bffe03 	ldbu	r2,-8(fp)
11040e98:	108002e8 	cmpgeui	r2,r2,11
11040e9c:	1000071e 	bne	r2,zero,11040ebc <aduio_RegWrite+0x48>
        reg_file[reg_index] = data16;
11040ea0:	e0fffe03 	ldbu	r3,-8(fp)
11040ea4:	008441b4 	movhi	r2,4358
11040ea8:	10aa3004 	addi	r2,r2,-22336
11040eac:	18c7883a 	add	r3,r3,r3
11040eb0:	10c5883a 	add	r2,r2,r3
11040eb4:	e0ffff0b 	ldhu	r3,-4(fp)
11040eb8:	10c0000d 	sth	r3,0(r2)
    data = data16 & 0xFF;
11040ebc:	e0bfff0b 	ldhu	r2,-4(fp)
11040ec0:	e0bffc05 	stb	r2,-16(fp)
    control = (reg_index << 1) & 0xFE;
11040ec4:	e0bffe03 	ldbu	r2,-8(fp)
11040ec8:	1085883a 	add	r2,r2,r2
11040ecc:	e0bffc45 	stb	r2,-15(fp)
    control |= ((data16 >> 8) & 0x01);
11040ed0:	e0bfff0b 	ldhu	r2,-4(fp)
11040ed4:	1004d23a 	srli	r2,r2,8
11040ed8:	1080004c 	andi	r2,r2,1
11040edc:	1007883a 	mov	r3,r2
11040ee0:	e0bffc43 	ldbu	r2,-15(fp)
11040ee4:	1884b03a 	or	r2,r3,r2
11040ee8:	e0bffc45 	stb	r2,-15(fp)
    AUDIO_DEBUG(("[AUDIO] set audio reg[%02d] = %04Xh\r\n", reg_index, data16));
11040eec:	e0bffe03 	ldbu	r2,-8(fp)
11040ef0:	e0ffff0b 	ldhu	r3,-4(fp)
11040ef4:	180d883a 	mov	r6,r3
11040ef8:	100b883a 	mov	r5,r2
11040efc:	01044174 	movhi	r4,4357
11040f00:	211b0c04 	addi	r4,r4,27696
11040f04:	104118c0 	call	1104118c <myprintf>
    bSuccess = I2C_Write(I2C_SCL_BASE, I2C_SDA_BASE, I2C_AUDIO_ADDR, control, data);
11040f08:	e0fffc43 	ldbu	r3,-15(fp)
11040f0c:	e0bffc03 	ldbu	r2,-16(fp)
11040f10:	d8800015 	stw	r2,0(sp)
11040f14:	180f883a 	mov	r7,r3
11040f18:	01800d04 	movi	r6,52
11040f1c:	01440034 	movhi	r5,4096
11040f20:	01040034 	movhi	r4,4096
11040f24:	21000404 	addi	r4,r4,16
11040f28:	10413100 	call	11041310 <I2C_Write>
11040f2c:	e0bffd15 	stw	r2,-12(fp)
    if (!bSuccess) 
11040f30:	e0bffd17 	ldw	r2,-12(fp)
11040f34:	1000031e 	bne	r2,zero,11040f44 <aduio_RegWrite+0xd0>
        AUDIO_DEBUG(("[AUDIO] write reg fail!!!!\r\n"));
11040f38:	01044174 	movhi	r4,4357
11040f3c:	211b1604 	addi	r4,r4,27736
11040f40:	104118c0 	call	1104118c <myprintf>
    usleep(50*1000);  // wait audio chip read        
11040f44:	0130d414 	movui	r4,50000
11040f48:	1054a740 	call	11054a74 <usleep>
    return bSuccess;        
11040f4c:	e0bffd17 	ldw	r2,-12(fp)
}
11040f50:	e037883a 	mov	sp,fp
11040f54:	dfc00117 	ldw	ra,4(sp)
11040f58:	df000017 	ldw	fp,0(sp)
11040f5c:	dec00204 	addi	sp,sp,8
11040f60:	f800283a 	ret

11040f64 <aduio_RegRead>:

bool  aduio_RegRead(alt_u8 reg_index){
11040f64:	defff904 	addi	sp,sp,-28
11040f68:	dfc00615 	stw	ra,24(sp)
11040f6c:	df000515 	stw	fp,20(sp)
11040f70:	df000504 	addi	fp,sp,20
11040f74:	2005883a 	mov	r2,r4
11040f78:	e0bfff05 	stb	r2,-4(fp)
	bool bSuccess;
    alt_u8 control;
    alt_u16 *data;
    control = (reg_index << 1) & 0xFE;
11040f7c:	e0bfff03 	ldbu	r2,-4(fp)
11040f80:	1085883a 	add	r2,r2,r2
11040f84:	e0bffc05 	stb	r2,-16(fp)
    bSuccess = I2C_Read(I2C_SCL_BASE, I2C_SDA_BASE, I2C_AUDIO_ADDR, control, data);
11040f88:	e0fffc03 	ldbu	r3,-16(fp)
11040f8c:	e0bffd17 	ldw	r2,-12(fp)
11040f90:	d8800015 	stw	r2,0(sp)
11040f94:	180f883a 	mov	r7,r3
11040f98:	01800d04 	movi	r6,52
11040f9c:	01440034 	movhi	r5,4096
11040fa0:	01040034 	movhi	r4,4096
11040fa4:	21000404 	addi	r4,r4,16
11040fa8:	104140c0 	call	1104140c <I2C_Read>
11040fac:	e0bffe15 	stw	r2,-8(fp)
    if (!bSuccess)
11040fb0:	e0bffe17 	ldw	r2,-8(fp)
11040fb4:	1000031e 	bne	r2,zero,11040fc4 <aduio_RegRead+0x60>
            AUDIO_DEBUG(("[AUDIO] read reg fail!!!!\r\n"));
11040fb8:	01044174 	movhi	r4,4357
11040fbc:	211b1e04 	addi	r4,r4,27768
11040fc0:	104118c0 	call	1104118c <myprintf>
    AUDIO_DEBUG(("[AUDIO] read audio reg[%02d] = %04Xh\r\n", reg_index, *data));
11040fc4:	e0ffff03 	ldbu	r3,-4(fp)
11040fc8:	e0bffd17 	ldw	r2,-12(fp)
11040fcc:	1080000b 	ldhu	r2,0(r2)
11040fd0:	10bfffcc 	andi	r2,r2,65535
11040fd4:	100d883a 	mov	r6,r2
11040fd8:	180b883a 	mov	r5,r3
11040fdc:	01044174 	movhi	r4,4357
11040fe0:	211b2504 	addi	r4,r4,27796
11040fe4:	104118c0 	call	1104118c <myprintf>
    usleep(50*1000);
11040fe8:	0130d414 	movui	r4,50000
11040fec:	1054a740 	call	11054a74 <usleep>
    return bSuccess;
11040ff0:	e0bffe17 	ldw	r2,-8(fp)
}
11040ff4:	e037883a 	mov	sp,fp
11040ff8:	dfc00117 	ldw	ra,4(sp)
11040ffc:	df000017 	ldw	fp,0(sp)
11041000:	dec00204 	addi	sp,sp,8
11041004:	f800283a 	ret

11041008 <AUDIO_DacFifoNotFull>:

/////////////////////////////////////////////////////////////////////////
///////////// Audio Play & Recor ////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
// check whether the dac-fifo is full.
bool AUDIO_DacFifoNotFull(void){
11041008:	defffe04 	addi	sp,sp,-8
1104100c:	df000115 	stw	fp,4(sp)
11041010:	df000104 	addi	fp,sp,4
    bool bReady;
    bReady = AUDIO_DAC_FULL()?FALSE:TRUE;
11041014:	00844234 	movhi	r2,4360
11041018:	10880d04 	addi	r2,r2,8244
1104101c:	10800037 	ldwio	r2,0(r2)
11041020:	1080004c 	andi	r2,r2,1
11041024:	1005003a 	cmpeq	r2,r2,zero
11041028:	10803fcc 	andi	r2,r2,255
1104102c:	e0bfff15 	stw	r2,-4(fp)
    return bReady;
11041030:	e0bfff17 	ldw	r2,-4(fp)
}
11041034:	e037883a 	mov	sp,fp
11041038:	df000017 	ldw	fp,0(sp)
1104103c:	dec00104 	addi	sp,sp,4
11041040:	f800283a 	ret

11041044 <AUDIO_DacFifoSetData>:

// call AUDIO_PlayIsReady to make sure the fifo is not full before call this function 
void AUDIO_DacFifoSetData(short ch_left, short ch_right){
11041044:	defffd04 	addi	sp,sp,-12
11041048:	df000215 	stw	fp,8(sp)
1104104c:	df000204 	addi	fp,sp,8
11041050:	2007883a 	mov	r3,r4
11041054:	2805883a 	mov	r2,r5
11041058:	e0fffe0d 	sth	r3,-8(fp)
1104105c:	e0bfff0d 	sth	r2,-4(fp)
    AUDIO_DAC_WRITE_L(ch_left);
11041060:	e0fffe0f 	ldh	r3,-8(fp)
11041064:	00844234 	movhi	r2,4360
11041068:	10880804 	addi	r2,r2,8224
1104106c:	10c00035 	stwio	r3,0(r2)
    AUDIO_DAC_WRITE_R(ch_right);
11041070:	e0ffff0f 	ldh	r3,-4(fp)
11041074:	00844234 	movhi	r2,4360
11041078:	10880904 	addi	r2,r2,8228
1104107c:	10c00035 	stwio	r3,0(r2)
}
11041080:	0001883a 	nop
11041084:	e037883a 	mov	sp,fp
11041088:	df000017 	ldw	fp,0(sp)
1104108c:	dec00104 	addi	sp,sp,4
11041090:	f800283a 	ret

11041094 <AUDIO_AdcFifoNotEmpty>:

// wheck whether there is data available in adc-fifo
bool AUDIO_AdcFifoNotEmpty(void){
11041094:	defffe04 	addi	sp,sp,-8
11041098:	df000115 	stw	fp,4(sp)
1104109c:	df000104 	addi	fp,sp,4
    bool bReady;
    bReady = AUDIO_ADC_EMPTY()?FALSE:TRUE;
110410a0:	00844234 	movhi	r2,4360
110410a4:	10880d04 	addi	r2,r2,8244
110410a8:	10800037 	ldwio	r2,0(r2)
110410ac:	1080008c 	andi	r2,r2,2
110410b0:	1005003a 	cmpeq	r2,r2,zero
110410b4:	10803fcc 	andi	r2,r2,255
110410b8:	e0bfff15 	stw	r2,-4(fp)
    return bReady;
110410bc:	e0bfff17 	ldw	r2,-4(fp)
}
110410c0:	e037883a 	mov	sp,fp
110410c4:	df000017 	ldw	fp,0(sp)
110410c8:	dec00104 	addi	sp,sp,4
110410cc:	f800283a 	ret

110410d0 <AUDIO_AdcFifoGetData>:


// make sure the data is available before call this fucntion
void AUDIO_AdcFifoGetData(short *pch_left, short *pch_right){
110410d0:	defffd04 	addi	sp,sp,-12
110410d4:	df000215 	stw	fp,8(sp)
110410d8:	df000204 	addi	fp,sp,8
110410dc:	e13ffe15 	stw	r4,-8(fp)
110410e0:	e17fff15 	stw	r5,-4(fp)
    *pch_left = AUDIO_ADC_READ_L();
110410e4:	00844234 	movhi	r2,4360
110410e8:	10880a04 	addi	r2,r2,8232
110410ec:	10800037 	ldwio	r2,0(r2)
110410f0:	1007883a 	mov	r3,r2
110410f4:	e0bffe17 	ldw	r2,-8(fp)
110410f8:	10c0000d 	sth	r3,0(r2)
    *pch_right = AUDIO_ADC_READ_R();
110410fc:	00844234 	movhi	r2,4360
11041100:	10880b04 	addi	r2,r2,8236
11041104:	10800037 	ldwio	r2,0(r2)
11041108:	1007883a 	mov	r3,r2
1104110c:	e0bfff17 	ldw	r2,-4(fp)
11041110:	10c0000d 	sth	r3,0(r2)
    
}
11041114:	0001883a 	nop
11041118:	e037883a 	mov	sp,fp
1104111c:	df000017 	ldw	fp,0(sp)
11041120:	dec00104 	addi	sp,sp,4
11041124:	f800283a 	ret

11041128 <AUDIO_FifoClear>:

void AUDIO_FifoClear(void){
11041128:	deffff04 	addi	sp,sp,-4
1104112c:	df000015 	stw	fp,0(sp)
11041130:	d839883a 	mov	fp,sp
    AUDIO_FIFO_CLEAR();
11041134:	00c00044 	movi	r3,1
11041138:	00844234 	movhi	r2,4360
1104113c:	10880c04 	addi	r2,r2,8240
11041140:	10c00035 	stwio	r3,0(r2)
}
11041144:	0001883a 	nop
11041148:	e037883a 	mov	sp,fp
1104114c:	df000017 	ldw	fp,0(sp)
11041150:	dec00104 	addi	sp,sp,4
11041154:	f800283a 	ret

11041158 <debug_output>:
    if (!UART_IsOpened())
        UART_Open();
    UART_WriteString(pMessage);  // UART debug
}
#else
void debug_output(char *pMessage){
11041158:	defffd04 	addi	sp,sp,-12
1104115c:	dfc00215 	stw	ra,8(sp)
11041160:	df000115 	stw	fp,4(sp)
11041164:	df000104 	addi	fp,sp,4
11041168:	e13fff15 	stw	r4,-4(fp)
    printf(pMessage);
1104116c:	e13fff17 	ldw	r4,-4(fp)
11041170:	1045f400 	call	11045f40 <printf>
}
11041174:	0001883a 	nop
11041178:	e037883a 	mov	sp,fp
1104117c:	dfc00117 	ldw	ra,4(sp)
11041180:	df000017 	ldw	fp,0(sp)
11041184:	dec00204 	addi	sp,sp,8
11041188:	f800283a 	ret

1104118c <myprintf>:

#endif


int myprintf(char *format, ...){
1104118c:	deff7804 	addi	sp,sp,-544
11041190:	dfc08415 	stw	ra,528(sp)
11041194:	df008315 	stw	fp,524(sp)
11041198:	df008304 	addi	fp,sp,524
1104119c:	e13fff15 	stw	r4,-4(fp)
110411a0:	e1400215 	stw	r5,8(fp)
110411a4:	e1800315 	stw	r6,12(fp)
110411a8:	e1c00415 	stw	r7,16(fp)
    int rc;
    char szText[512];
    
    va_list paramList;
    va_start(paramList, format);
110411ac:	e0800204 	addi	r2,fp,8
110411b0:	e0bffe15 	stw	r2,-8(fp)
    rc = vsnprintf(szText, 512, format, paramList);
110411b4:	e0fffe17 	ldw	r3,-8(fp)
110411b8:	e0bf7e04 	addi	r2,fp,-520
110411bc:	180f883a 	mov	r7,r3
110411c0:	e1bfff17 	ldw	r6,-4(fp)
110411c4:	01408004 	movi	r5,512
110411c8:	1009883a 	mov	r4,r2
110411cc:	104a7440 	call	1104a744 <vsnprintf>
110411d0:	e0bf7d15 	stw	r2,-524(fp)
    va_end(paramList);
    
    debug_output(szText);
110411d4:	e0bf7e04 	addi	r2,fp,-520
110411d8:	1009883a 	mov	r4,r2
110411dc:	10411580 	call	11041158 <debug_output>

    return rc;    
110411e0:	e0bf7d17 	ldw	r2,-524(fp)
}
110411e4:	e037883a 	mov	sp,fp
110411e8:	dfc00117 	ldw	ra,4(sp)
110411ec:	df000017 	ldw	fp,0(sp)
110411f0:	dec00504 	addi	sp,sp,20
110411f4:	f800283a 	ret

110411f8 <myprintf_hex_array>:


int myprintf_hex_array(unsigned char *pHex, int len){
110411f8:	defff704 	addi	sp,sp,-36
110411fc:	dfc00815 	stw	ra,32(sp)
11041200:	df000715 	stw	fp,28(sp)
11041204:	df000704 	addi	fp,sp,28
11041208:	e13ffe15 	stw	r4,-8(fp)
1104120c:	e17fff15 	stw	r5,-4(fp)
    int i;
    unsigned char szText[16];
    for(i=0;i<len;i++){
11041210:	e03ff915 	stw	zero,-28(fp)
11041214:	00001106 	br	1104125c <myprintf_hex_array+0x64>
        sprintf(szText, "[%02X]", *(pHex+i));
11041218:	e0bff917 	ldw	r2,-28(fp)
1104121c:	e0fffe17 	ldw	r3,-8(fp)
11041220:	1885883a 	add	r2,r3,r2
11041224:	10800003 	ldbu	r2,0(r2)
11041228:	10c03fcc 	andi	r3,r2,255
1104122c:	e0bffa04 	addi	r2,fp,-24
11041230:	180d883a 	mov	r6,r3
11041234:	01444174 	movhi	r5,4357
11041238:	295b2f04 	addi	r5,r5,27836
1104123c:	1009883a 	mov	r4,r2
11041240:	10460a80 	call	110460a8 <sprintf>
        DEBUG((szText));
11041244:	e0bffa04 	addi	r2,fp,-24
11041248:	1009883a 	mov	r4,r2
1104124c:	104118c0 	call	1104118c <myprintf>


int myprintf_hex_array(unsigned char *pHex, int len){
    int i;
    unsigned char szText[16];
    for(i=0;i<len;i++){
11041250:	e0bff917 	ldw	r2,-28(fp)
11041254:	10800044 	addi	r2,r2,1
11041258:	e0bff915 	stw	r2,-28(fp)
1104125c:	e0fff917 	ldw	r3,-28(fp)
11041260:	e0bfff17 	ldw	r2,-4(fp)
11041264:	18bfec16 	blt	r3,r2,11041218 <myprintf_hex_array+0x20>
        sprintf(szText, "[%02X]", *(pHex+i));
        DEBUG((szText));
    }
    return len;
11041268:	e0bfff17 	ldw	r2,-4(fp)
}
1104126c:	e037883a 	mov	sp,fp
11041270:	dfc00117 	ldw	ra,4(sp)
11041274:	df000017 	ldw	fp,0(sp)
11041278:	dec00204 	addi	sp,sp,8
1104127c:	f800283a 	ret

11041280 <myprintf_dword_array>:

int  myprintf_dword_array(unsigned int *pArray, int nElementCount){
11041280:	defff704 	addi	sp,sp,-36
11041284:	dfc00815 	stw	ra,32(sp)
11041288:	df000715 	stw	fp,28(sp)
1104128c:	df000704 	addi	fp,sp,28
11041290:	e13ffe15 	stw	r4,-8(fp)
11041294:	e17fff15 	stw	r5,-4(fp)
    int i;
    char szText[16];
    for(i=0;i<nElementCount;i++){
11041298:	e03ff915 	stw	zero,-28(fp)
1104129c:	00001306 	br	110412ec <myprintf_dword_array+0x6c>
        sprintf(szText, "[%08X]", *(pArray+i));
110412a0:	e0bff917 	ldw	r2,-28(fp)
110412a4:	1085883a 	add	r2,r2,r2
110412a8:	1085883a 	add	r2,r2,r2
110412ac:	1007883a 	mov	r3,r2
110412b0:	e0bffe17 	ldw	r2,-8(fp)
110412b4:	10c5883a 	add	r2,r2,r3
110412b8:	10c00017 	ldw	r3,0(r2)
110412bc:	e0bffa04 	addi	r2,fp,-24
110412c0:	180d883a 	mov	r6,r3
110412c4:	01444174 	movhi	r5,4357
110412c8:	295b3104 	addi	r5,r5,27844
110412cc:	1009883a 	mov	r4,r2
110412d0:	10460a80 	call	110460a8 <sprintf>
        DEBUG((szText));
110412d4:	e0bffa04 	addi	r2,fp,-24
110412d8:	1009883a 	mov	r4,r2
110412dc:	104118c0 	call	1104118c <myprintf>
}

int  myprintf_dword_array(unsigned int *pArray, int nElementCount){
    int i;
    char szText[16];
    for(i=0;i<nElementCount;i++){
110412e0:	e0bff917 	ldw	r2,-28(fp)
110412e4:	10800044 	addi	r2,r2,1
110412e8:	e0bff915 	stw	r2,-28(fp)
110412ec:	e0fff917 	ldw	r3,-28(fp)
110412f0:	e0bfff17 	ldw	r2,-4(fp)
110412f4:	18bfea16 	blt	r3,r2,110412a0 <myprintf_dword_array+0x20>
        sprintf(szText, "[%08X]", *(pArray+i));
        DEBUG((szText));
    }
    return nElementCount;
110412f8:	e0bfff17 	ldw	r2,-4(fp)
}
110412fc:	e037883a 	mov	sp,fp
11041300:	dfc00117 	ldw	ra,4(sp)
11041304:	df000017 	ldw	fp,0(sp)
11041308:	dec00204 	addi	sp,sp,8
1104130c:	f800283a 	ret

11041310 <I2C_Write>:
bool i2c_write(alt_u32 clk_base, alt_u32 data_base, alt_u8 Data);
void i2c_read(alt_u32 clk_base, alt_u32 data_base, alt_u8 *pData, bool bAck);



bool I2C_Write(alt_u32 clk_base, alt_u32 data_base, alt_8 DeviceAddr, alt_u8 ControlAddr, alt_u8 ControlData){
11041310:	defff804 	addi	sp,sp,-32
11041314:	dfc00715 	stw	ra,28(sp)
11041318:	df000615 	stw	fp,24(sp)
1104131c:	df000604 	addi	fp,sp,24
11041320:	e13ffb15 	stw	r4,-20(fp)
11041324:	e17ffc15 	stw	r5,-16(fp)
11041328:	3009883a 	mov	r4,r6
1104132c:	3807883a 	mov	r3,r7
11041330:	e0800217 	ldw	r2,8(fp)
11041334:	e13ffd05 	stb	r4,-12(fp)
11041338:	e0fffe05 	stb	r3,-8(fp)
1104133c:	e0bfff05 	stb	r2,-4(fp)
    bool bSuccess = TRUE;
11041340:	00800044 	movi	r2,1
11041344:	e0bffa15 	stw	r2,-24(fp)
    //alt_u8 DeviceAddr;
    
    // device id
    //DeviceAddr = HMB_E2_I2C_ID;

    i2c_start(clk_base, data_base);
11041348:	e17ffc17 	ldw	r5,-16(fp)
1104134c:	e13ffb17 	ldw	r4,-20(fp)
11041350:	104170c0 	call	1104170c <i2c_start>
    if (!i2c_write(clk_base, data_base, DeviceAddr)){  // send ID
11041354:	e0bffd03 	ldbu	r2,-12(fp)
11041358:	10803fcc 	andi	r2,r2,255
1104135c:	100d883a 	mov	r6,r2
11041360:	e17ffc17 	ldw	r5,-16(fp)
11041364:	e13ffb17 	ldw	r4,-20(fp)
11041368:	10418100 	call	11041810 <i2c_write>
1104136c:	1000041e 	bne	r2,zero,11041380 <I2C_Write+0x70>
        bSuccess = FALSE;
11041370:	e03ffa15 	stw	zero,-24(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address NACK!\n"));
11041374:	01044174 	movhi	r4,4357
11041378:	211b3304 	addi	r4,r4,27852
1104137c:	104118c0 	call	1104118c <myprintf>
    }
    if (bSuccess && !i2c_write(clk_base, data_base, ControlAddr)){ // send sub-address
11041380:	e0bffa17 	ldw	r2,-24(fp)
11041384:	10000a26 	beq	r2,zero,110413b0 <I2C_Write+0xa0>
11041388:	e0bffe03 	ldbu	r2,-8(fp)
1104138c:	100d883a 	mov	r6,r2
11041390:	e17ffc17 	ldw	r5,-16(fp)
11041394:	e13ffb17 	ldw	r4,-20(fp)
11041398:	10418100 	call	11041810 <i2c_write>
1104139c:	1000041e 	bne	r2,zero,110413b0 <I2C_Write+0xa0>
        bSuccess = FALSE;
110413a0:	e03ffa15 	stw	zero,-24(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: SubAddress NACK!\n"));
110413a4:	01044174 	movhi	r4,4357
110413a8:	211b3b04 	addi	r4,r4,27884
110413ac:	104118c0 	call	1104118c <myprintf>
    }            
    if (bSuccess && !i2c_write(clk_base, data_base, ControlData)){  
110413b0:	e0bffa17 	ldw	r2,-24(fp)
110413b4:	10000a26 	beq	r2,zero,110413e0 <I2C_Write+0xd0>
110413b8:	e0bfff03 	ldbu	r2,-4(fp)
110413bc:	100d883a 	mov	r6,r2
110413c0:	e17ffc17 	ldw	r5,-16(fp)
110413c4:	e13ffb17 	ldw	r4,-20(fp)
110413c8:	10418100 	call	11041810 <i2c_write>
110413cc:	1000041e 	bne	r2,zero,110413e0 <I2C_Write+0xd0>
        bSuccess = FALSE;
110413d0:	e03ffa15 	stw	zero,-24(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: write NACK!\n"));
110413d4:	01044174 	movhi	r4,4357
110413d8:	211b4404 	addi	r4,r4,27920
110413dc:	104118c0 	call	1104118c <myprintf>
    }
    i2c_stop(clk_base, data_base);
110413e0:	e17ffc17 	ldw	r5,-16(fp)
110413e4:	e13ffb17 	ldw	r4,-20(fp)
110413e8:	10417980 	call	11041798 <i2c_stop>
    
    usleep(7*1000); // delay to wait EE2 ready (at least 5 ms delay is required)
110413ec:	0106d604 	movi	r4,7000
110413f0:	1054a740 	call	11054a74 <usleep>
    
    return bSuccess;
110413f4:	e0bffa17 	ldw	r2,-24(fp)

    
}
110413f8:	e037883a 	mov	sp,fp
110413fc:	dfc00117 	ldw	ra,4(sp)
11041400:	df000017 	ldw	fp,0(sp)
11041404:	dec00204 	addi	sp,sp,8
11041408:	f800283a 	ret

1104140c <I2C_Read>:

bool I2C_Read(alt_u32 clk_base, alt_u32 data_base, alt_8 DeviceAddr, alt_u8 ControlAddr, alt_u16 *pControlData){
1104140c:	defff704 	addi	sp,sp,-36
11041410:	dfc00815 	stw	ra,32(sp)
11041414:	df000715 	stw	fp,28(sp)
11041418:	df000704 	addi	fp,sp,28
1104141c:	e13ffc15 	stw	r4,-16(fp)
11041420:	e17ffd15 	stw	r5,-12(fp)
11041424:	3007883a 	mov	r3,r6
11041428:	3805883a 	mov	r2,r7
1104142c:	e0fffe05 	stb	r3,-8(fp)
11041430:	e0bfff05 	stb	r2,-4(fp)
    bool bSuccess = TRUE;
11041434:	00800044 	movi	r2,1
11041438:	e0bff915 	stw	r2,-28(fp)


    // device id
    //DeviceAddr = HMB_E2_I2C_ID;

    i2c_start(clk_base, data_base);
1104143c:	e17ffd17 	ldw	r5,-12(fp)
11041440:	e13ffc17 	ldw	r4,-16(fp)
11041444:	104170c0 	call	1104170c <i2c_start>
    if (!i2c_write(clk_base, data_base, DeviceAddr)){  // send ID
11041448:	e0bffe03 	ldbu	r2,-8(fp)
1104144c:	10803fcc 	andi	r2,r2,255
11041450:	100d883a 	mov	r6,r2
11041454:	e17ffd17 	ldw	r5,-12(fp)
11041458:	e13ffc17 	ldw	r4,-16(fp)
1104145c:	10418100 	call	11041810 <i2c_write>
11041460:	1000041e 	bne	r2,zero,11041474 <I2C_Read+0x68>
        bSuccess = FALSE;
11041464:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address NACK!\n"));
11041468:	01044174 	movhi	r4,4357
1104146c:	211b3304 	addi	r4,r4,27852
11041470:	104118c0 	call	1104118c <myprintf>
    }
    if (bSuccess && !i2c_write(clk_base, data_base, ControlAddr)){ // send sub-address
11041474:	e0bff917 	ldw	r2,-28(fp)
11041478:	10000a26 	beq	r2,zero,110414a4 <I2C_Read+0x98>
1104147c:	e0bfff03 	ldbu	r2,-4(fp)
11041480:	100d883a 	mov	r6,r2
11041484:	e17ffd17 	ldw	r5,-12(fp)
11041488:	e13ffc17 	ldw	r4,-16(fp)
1104148c:	10418100 	call	11041810 <i2c_write>
11041490:	1000041e 	bne	r2,zero,110414a4 <I2C_Read+0x98>
        bSuccess = FALSE;
11041494:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: SubAddress NACK!\n"));
11041498:	01044174 	movhi	r4,4357
1104149c:	211b3b04 	addi	r4,r4,27884
110414a0:	104118c0 	call	1104118c <myprintf>
    }            
    i2c_start(clk_base, data_base);  // restart
110414a4:	e17ffd17 	ldw	r5,-12(fp)
110414a8:	e13ffc17 	ldw	r4,-16(fp)
110414ac:	104170c0 	call	1104170c <i2c_start>
    DeviceAddr |= 1; // Read
110414b0:	e0bffe03 	ldbu	r2,-8(fp)
110414b4:	10800054 	ori	r2,r2,1
110414b8:	e0bffe05 	stb	r2,-8(fp)
    if (bSuccess && !i2c_write(clk_base, data_base, DeviceAddr)){  // send id
110414bc:	e0bff917 	ldw	r2,-28(fp)
110414c0:	10000b26 	beq	r2,zero,110414f0 <I2C_Read+0xe4>
110414c4:	e0bffe03 	ldbu	r2,-8(fp)
110414c8:	10803fcc 	andi	r2,r2,255
110414cc:	100d883a 	mov	r6,r2
110414d0:	e17ffd17 	ldw	r5,-12(fp)
110414d4:	e13ffc17 	ldw	r4,-16(fp)
110414d8:	10418100 	call	11041810 <i2c_write>
110414dc:	1000041e 	bne	r2,zero,110414f0 <I2C_Read+0xe4>
        bSuccess = FALSE;
110414e0:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address+1 NACK!\n"));
110414e4:	01044174 	movhi	r4,4357
110414e8:	211b4c04 	addi	r4,r4,27952
110414ec:	104118c0 	call	1104118c <myprintf>
    }
    
    if (bSuccess){
110414f0:	e0bff917 	ldw	r2,-28(fp)
110414f4:	10000526 	beq	r2,zero,1104150c <I2C_Read+0x100>
        i2c_read(clk_base, data_base, pControlDataL, TRUE);  // read
110414f8:	01c00044 	movi	r7,1
110414fc:	e1bffa17 	ldw	r6,-24(fp)
11041500:	e17ffd17 	ldw	r5,-12(fp)
11041504:	e13ffc17 	ldw	r4,-16(fp)
11041508:	10419400 	call	11041940 <i2c_read>
    }
    if (bSuccess){
1104150c:	e0bff917 	ldw	r2,-28(fp)
11041510:	10000526 	beq	r2,zero,11041528 <I2C_Read+0x11c>
            i2c_read(clk_base, data_base, pControlDataH, FALSE);  // read
11041514:	000f883a 	mov	r7,zero
11041518:	e1bffb17 	ldw	r6,-20(fp)
1104151c:	e17ffd17 	ldw	r5,-12(fp)
11041520:	e13ffc17 	ldw	r4,-16(fp)
11041524:	10419400 	call	11041940 <i2c_read>
        }
    i2c_stop(clk_base, data_base);
11041528:	e17ffd17 	ldw	r5,-12(fp)
1104152c:	e13ffc17 	ldw	r4,-16(fp)
11041530:	10417980 	call	11041798 <i2c_stop>
    
    *pControlData=*pControlDataH;
11041534:	e0bffb17 	ldw	r2,-20(fp)
11041538:	10800003 	ldbu	r2,0(r2)
1104153c:	10c03fcc 	andi	r3,r2,255
11041540:	e0800217 	ldw	r2,8(fp)
11041544:	10c0000d 	sth	r3,0(r2)
    *pControlData=(*pControlData<<8)|*pControlDataL;
11041548:	e0800217 	ldw	r2,8(fp)
1104154c:	1080000b 	ldhu	r2,0(r2)
11041550:	10bfffcc 	andi	r2,r2,65535
11041554:	1004923a 	slli	r2,r2,8
11041558:	1007883a 	mov	r3,r2
1104155c:	e0bffa17 	ldw	r2,-24(fp)
11041560:	10800003 	ldbu	r2,0(r2)
11041564:	10803fcc 	andi	r2,r2,255
11041568:	1884b03a 	or	r2,r3,r2
1104156c:	1007883a 	mov	r3,r2
11041570:	e0800217 	ldw	r2,8(fp)
11041574:	10c0000d 	sth	r3,0(r2)

    return bSuccess;
11041578:	e0bff917 	ldw	r2,-28(fp)
}
1104157c:	e037883a 	mov	sp,fp
11041580:	dfc00117 	ldw	ra,4(sp)
11041584:	df000017 	ldw	fp,0(sp)
11041588:	dec00204 	addi	sp,sp,8
1104158c:	f800283a 	ret

11041590 <I2C_MultipleRead>:

bool I2C_MultipleRead(alt_u32 clk_base, alt_u32 data_base, alt_8 DeviceAddr, alt_u8 szData[], alt_u16 len){
11041590:	defff604 	addi	sp,sp,-40
11041594:	dfc00915 	stw	ra,36(sp)
11041598:	df000815 	stw	fp,32(sp)
1104159c:	df000804 	addi	fp,sp,32
110415a0:	e13ffb15 	stw	r4,-20(fp)
110415a4:	e17ffc15 	stw	r5,-16(fp)
110415a8:	3007883a 	mov	r3,r6
110415ac:	e1fffe15 	stw	r7,-8(fp)
110415b0:	e0800217 	ldw	r2,8(fp)
110415b4:	e0fffd05 	stb	r3,-12(fp)
110415b8:	e0bfff0d 	sth	r2,-4(fp)
    int i;
    bool bSuccess = TRUE;
110415bc:	00800044 	movi	r2,1
110415c0:	e0bff915 	stw	r2,-28(fp)
    //alt_u8 DeviceAddr, 
    alt_u8 ControlAddr = 0;
110415c4:	e03ffa05 	stb	zero,-24(fp)
    
   
    // device id
    //DeviceAddr = HMB_E2_I2C_ID;

    i2c_start(clk_base, data_base);
110415c8:	e17ffc17 	ldw	r5,-16(fp)
110415cc:	e13ffb17 	ldw	r4,-20(fp)
110415d0:	104170c0 	call	1104170c <i2c_start>
    if (!i2c_write(clk_base, data_base, DeviceAddr)){  // send ID
110415d4:	e0bffd03 	ldbu	r2,-12(fp)
110415d8:	10803fcc 	andi	r2,r2,255
110415dc:	100d883a 	mov	r6,r2
110415e0:	e17ffc17 	ldw	r5,-16(fp)
110415e4:	e13ffb17 	ldw	r4,-20(fp)
110415e8:	10418100 	call	11041810 <i2c_write>
110415ec:	1000041e 	bne	r2,zero,11041600 <I2C_MultipleRead+0x70>
        bSuccess = FALSE;
110415f0:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address NACK!\n"));
110415f4:	01044174 	movhi	r4,4357
110415f8:	211b3304 	addi	r4,r4,27852
110415fc:	104118c0 	call	1104118c <myprintf>
    }
    if (bSuccess && !i2c_write(clk_base, data_base, ControlAddr)){ // send sub-address
11041600:	e0bff917 	ldw	r2,-28(fp)
11041604:	10000a26 	beq	r2,zero,11041630 <I2C_MultipleRead+0xa0>
11041608:	e0bffa03 	ldbu	r2,-24(fp)
1104160c:	100d883a 	mov	r6,r2
11041610:	e17ffc17 	ldw	r5,-16(fp)
11041614:	e13ffb17 	ldw	r4,-20(fp)
11041618:	10418100 	call	11041810 <i2c_write>
1104161c:	1000041e 	bne	r2,zero,11041630 <I2C_MultipleRead+0xa0>
        bSuccess = FALSE;
11041620:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: SubAddress NACK!\n"));
11041624:	01044174 	movhi	r4,4357
11041628:	211b3b04 	addi	r4,r4,27884
1104162c:	104118c0 	call	1104118c <myprintf>
    }    
    if (bSuccess)        
11041630:	e0bff917 	ldw	r2,-28(fp)
11041634:	10000326 	beq	r2,zero,11041644 <I2C_MultipleRead+0xb4>
        i2c_start(clk_base, data_base);  // restart
11041638:	e17ffc17 	ldw	r5,-16(fp)
1104163c:	e13ffb17 	ldw	r4,-20(fp)
11041640:	104170c0 	call	1104170c <i2c_start>
    DeviceAddr |= 1; // Read
11041644:	e0bffd03 	ldbu	r2,-12(fp)
11041648:	10800054 	ori	r2,r2,1
1104164c:	e0bffd05 	stb	r2,-12(fp)
    if (bSuccess && !i2c_write(clk_base, data_base, DeviceAddr)){  // send id
11041650:	e0bff917 	ldw	r2,-28(fp)
11041654:	10000b26 	beq	r2,zero,11041684 <I2C_MultipleRead+0xf4>
11041658:	e0bffd03 	ldbu	r2,-12(fp)
1104165c:	10803fcc 	andi	r2,r2,255
11041660:	100d883a 	mov	r6,r2
11041664:	e17ffc17 	ldw	r5,-16(fp)
11041668:	e13ffb17 	ldw	r4,-20(fp)
1104166c:	10418100 	call	11041810 <i2c_write>
11041670:	1000041e 	bne	r2,zero,11041684 <I2C_MultipleRead+0xf4>
        bSuccess = FALSE;
11041674:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address+1 NACK!\n"));
11041678:	01044174 	movhi	r4,4357
1104167c:	211b4c04 	addi	r4,r4,27952
11041680:	104118c0 	call	1104118c <myprintf>
    }
    
    if (bSuccess){
11041684:	e0bff917 	ldw	r2,-28(fp)
11041688:	10001726 	beq	r2,zero,110416e8 <I2C_MultipleRead+0x158>
        for(i=0;i<len && bSuccess;i++){
1104168c:	e03ff815 	stw	zero,-32(fp)
11041690:	00001006 	br	110416d4 <I2C_MultipleRead+0x144>
            i2c_read(clk_base, data_base, &szData[i], (i==(len-1))?FALSE:TRUE);  // read
11041694:	e0bff817 	ldw	r2,-32(fp)
11041698:	e0fffe17 	ldw	r3,-8(fp)
1104169c:	1889883a 	add	r4,r3,r2
110416a0:	e0bfff0b 	ldhu	r2,-4(fp)
110416a4:	10ffffc4 	addi	r3,r2,-1
110416a8:	e0bff817 	ldw	r2,-32(fp)
110416ac:	1884c03a 	cmpne	r2,r3,r2
110416b0:	10803fcc 	andi	r2,r2,255
110416b4:	100f883a 	mov	r7,r2
110416b8:	200d883a 	mov	r6,r4
110416bc:	e17ffc17 	ldw	r5,-16(fp)
110416c0:	e13ffb17 	ldw	r4,-20(fp)
110416c4:	10419400 	call	11041940 <i2c_read>
        bSuccess = FALSE;
        I2C_DEBUG(("I2C HMB_E2 Fail: Address+1 NACK!\n"));
    }
    
    if (bSuccess){
        for(i=0;i<len && bSuccess;i++){
110416c8:	e0bff817 	ldw	r2,-32(fp)
110416cc:	10800044 	addi	r2,r2,1
110416d0:	e0bff815 	stw	r2,-32(fp)
110416d4:	e0bfff0b 	ldhu	r2,-4(fp)
110416d8:	e0fff817 	ldw	r3,-32(fp)
110416dc:	1880020e 	bge	r3,r2,110416e8 <I2C_MultipleRead+0x158>
110416e0:	e0bff917 	ldw	r2,-28(fp)
110416e4:	103feb1e 	bne	r2,zero,11041694 <I2C_MultipleRead+0x104>
            i2c_read(clk_base, data_base, &szData[i], (i==(len-1))?FALSE:TRUE);  // read
        }            
    }        
    i2c_stop(clk_base, data_base);
110416e8:	e17ffc17 	ldw	r5,-16(fp)
110416ec:	e13ffb17 	ldw	r4,-20(fp)
110416f0:	10417980 	call	11041798 <i2c_stop>
    
    return bSuccess;    
110416f4:	e0bff917 	ldw	r2,-28(fp)
    
}
110416f8:	e037883a 	mov	sp,fp
110416fc:	dfc00117 	ldw	ra,4(sp)
11041700:	df000017 	ldw	fp,0(sp)
11041704:	dec00204 	addi	sp,sp,8
11041708:	f800283a 	ret

1104170c <i2c_start>:
///////////// Interncal function (i2cXXX) body //////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////


//SDA 1->0 while SCL=1
void i2c_start(alt_u32 clk_base, alt_u32 data_base){
1104170c:	defffc04 	addi	sp,sp,-16
11041710:	dfc00315 	stw	ra,12(sp)
11041714:	df000215 	stw	fp,8(sp)
11041718:	df000204 	addi	fp,sp,8
1104171c:	e13ffe15 	stw	r4,-8(fp)
11041720:	e17fff15 	stw	r5,-4(fp)
    
    // make sure it is in normal state
    SDA_DIR_OUT(data_base);  // data output enabled
11041724:	e0bfff17 	ldw	r2,-4(fp)
11041728:	10800104 	addi	r2,r2,4
1104172c:	1007883a 	mov	r3,r2
11041730:	00800044 	movi	r2,1
11041734:	18800035 	stwio	r2,0(r3)
    
    
    
    // start condition 
    SDA_HIGH(data_base); // data high
11041738:	e0bfff17 	ldw	r2,-4(fp)
1104173c:	00c00044 	movi	r3,1
11041740:	10c00035 	stwio	r3,0(r2)
    SCL_HIGH(clk_base);
11041744:	e0bffe17 	ldw	r2,-8(fp)
11041748:	00c00044 	movi	r3,1
1104174c:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY;
11041750:	01000044 	movi	r4,1
11041754:	1054a740 	call	11054a74 <usleep>
     
    SDA_LOW(data_base); // data low
11041758:	e0bfff17 	ldw	r2,-4(fp)
1104175c:	0007883a 	mov	r3,zero
11041760:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; 
11041764:	01000044 	movi	r4,1
11041768:	1054a740 	call	11054a74 <usleep>
    SCL_LOW(clk_base); // clock low
1104176c:	e0bffe17 	ldw	r2,-8(fp)
11041770:	0007883a 	mov	r3,zero
11041774:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY;
11041778:	01000044 	movi	r4,1
1104177c:	1054a740 	call	11054a74 <usleep>
}
11041780:	0001883a 	nop
11041784:	e037883a 	mov	sp,fp
11041788:	dfc00117 	ldw	ra,4(sp)
1104178c:	df000017 	ldw	fp,0(sp)
11041790:	dec00204 	addi	sp,sp,8
11041794:	f800283a 	ret

11041798 <i2c_stop>:

// SDA 0->1 while SCL=1
void i2c_stop(alt_u32 clk_base, alt_u32 data_base){
11041798:	defffc04 	addi	sp,sp,-16
1104179c:	dfc00315 	stw	ra,12(sp)
110417a0:	df000215 	stw	fp,8(sp)
110417a4:	df000204 	addi	fp,sp,8
110417a8:	e13ffe15 	stw	r4,-8(fp)
110417ac:	e17fff15 	stw	r5,-4(fp)
    // assume SCL = 0
    
    SDA_DIR_OUT(data_base);  // data output enabled
110417b0:	e0bfff17 	ldw	r2,-4(fp)
110417b4:	10800104 	addi	r2,r2,4
110417b8:	1007883a 	mov	r3,r2
110417bc:	00800044 	movi	r2,1
110417c0:	18800035 	stwio	r2,0(r3)
    SDA_LOW(data_base); // Data Low
110417c4:	e0bfff17 	ldw	r2,-4(fp)
110417c8:	0007883a 	mov	r3,zero
110417cc:	10c00035 	stwio	r3,0(r2)
    //SCL_DELAY; 
    SCL_HIGH(clk_base);  // clock high
110417d0:	e0bffe17 	ldw	r2,-8(fp)
110417d4:	00c00044 	movi	r3,1
110417d8:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock high long delay
110417dc:	01000044 	movi	r4,1
110417e0:	1054a740 	call	11054a74 <usleep>
    SDA_HIGH(data_base); // data high
110417e4:	e0bfff17 	ldw	r2,-4(fp)
110417e8:	00c00044 	movi	r3,1
110417ec:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // data high delay
110417f0:	01000044 	movi	r4,1
110417f4:	1054a740 	call	11054a74 <usleep>
}
110417f8:	0001883a 	nop
110417fc:	e037883a 	mov	sp,fp
11041800:	dfc00117 	ldw	ra,4(sp)
11041804:	df000017 	ldw	fp,0(sp)
11041808:	dec00204 	addi	sp,sp,8
1104180c:	f800283a 	ret

11041810 <i2c_write>:

bool i2c_write(alt_u32 clk_base, alt_u32 data_base, alt_u8 Data){ // return true if device response ack
11041810:	defff804 	addi	sp,sp,-32
11041814:	dfc00715 	stw	ra,28(sp)
11041818:	df000615 	stw	fp,24(sp)
1104181c:	df000604 	addi	fp,sp,24
11041820:	e13ffd15 	stw	r4,-12(fp)
11041824:	e17ffe15 	stw	r5,-8(fp)
11041828:	3005883a 	mov	r2,r6
1104182c:	e0bfff05 	stb	r2,-4(fp)
    alt_u8 Mask = 0x80;
11041830:	00bfe004 	movi	r2,-128
11041834:	e0bffa05 	stb	r2,-24(fp)
    bool bAck;
    int i;
    
    // assume, SCL = 0
    
    SDA_DIR_OUT(data_base);  // data write mode
11041838:	e0bffe17 	ldw	r2,-8(fp)
1104183c:	10800104 	addi	r2,r2,4
11041840:	1007883a 	mov	r3,r2
11041844:	00800044 	movi	r2,1
11041848:	18800035 	stwio	r2,0(r3)
    
    for(i=0;i<8;i++){
1104184c:	e03ffb15 	stw	zero,-20(fp)
11041850:	00001f06 	br	110418d0 <i2c_write+0xc0>
        SCL_LOW(clk_base);  // new, make sure data change at clk low
11041854:	e0bffd17 	ldw	r2,-12(fp)
11041858:	0007883a 	mov	r3,zero
1104185c:	10c00035 	stwio	r3,0(r2)
        // output data on bus
        if (Data & Mask){ // there is a delay in this command
11041860:	e0ffff03 	ldbu	r3,-4(fp)
11041864:	e0bffa03 	ldbu	r2,-24(fp)
11041868:	1884703a 	and	r2,r3,r2
1104186c:	10803fcc 	andi	r2,r2,255
11041870:	10000426 	beq	r2,zero,11041884 <i2c_write+0x74>
            SDA_HIGH(data_base);
11041874:	e0bffe17 	ldw	r2,-8(fp)
11041878:	00c00044 	movi	r3,1
1104187c:	10c00035 	stwio	r3,0(r2)
11041880:	00000306 	br	11041890 <i2c_write+0x80>
        }else{    
            SDA_LOW(data_base);
11041884:	e0bffe17 	ldw	r2,-8(fp)
11041888:	0007883a 	mov	r3,zero
1104188c:	10c00035 	stwio	r3,0(r2)
        }
        Mask >>= 1; // there is a delay in this command
11041890:	e0bffa03 	ldbu	r2,-24(fp)
11041894:	1004d07a 	srli	r2,r2,1
11041898:	e0bffa05 	stb	r2,-24(fp)
        // clock high
        SCL_HIGH(clk_base);
1104189c:	e0bffd17 	ldw	r2,-12(fp)
110418a0:	00c00044 	movi	r3,1
110418a4:	10c00035 	stwio	r3,0(r2)
        SCL_DELAY;
110418a8:	01000044 	movi	r4,1
110418ac:	1054a740 	call	11054a74 <usleep>
        SCL_LOW(clk_base);
110418b0:	e0bffd17 	ldw	r2,-12(fp)
110418b4:	0007883a 	mov	r3,zero
110418b8:	10c00035 	stwio	r3,0(r2)
        SCL_DELAY;
110418bc:	01000044 	movi	r4,1
110418c0:	1054a740 	call	11054a74 <usleep>
    
    // assume, SCL = 0
    
    SDA_DIR_OUT(data_base);  // data write mode
    
    for(i=0;i<8;i++){
110418c4:	e0bffb17 	ldw	r2,-20(fp)
110418c8:	10800044 	addi	r2,r2,1
110418cc:	e0bffb15 	stw	r2,-20(fp)
110418d0:	e0bffb17 	ldw	r2,-20(fp)
110418d4:	10800210 	cmplti	r2,r2,8
110418d8:	103fde1e 	bne	r2,zero,11041854 <i2c_write+0x44>
        SCL_LOW(clk_base);
        SCL_DELAY;
    }
    
    //===== get ack
    SDA_DIR_IN(data_base);  // data read mode
110418dc:	e0bffe17 	ldw	r2,-8(fp)
110418e0:	10800104 	addi	r2,r2,4
110418e4:	0007883a 	mov	r3,zero
110418e8:	10c00035 	stwio	r3,0(r2)
    //SCL_DELAY;
    // clock high
    SCL_HIGH(clk_base);  // clock high
110418ec:	e0bffd17 	ldw	r2,-12(fp)
110418f0:	00c00044 	movi	r3,1
110418f4:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY;  // clock high delay
110418f8:	01000044 	movi	r4,1
110418fc:	1054a740 	call	11054a74 <usleep>
    bAck = SDA_READ(data_base)?FALSE:TRUE;  // get ack
11041900:	e0bffe17 	ldw	r2,-8(fp)
11041904:	10800037 	ldwio	r2,0(r2)
11041908:	1005003a 	cmpeq	r2,r2,zero
1104190c:	10803fcc 	andi	r2,r2,255
11041910:	e0bffc15 	stw	r2,-16(fp)
    //SCL_DELAY;
    //SDA_DIR_OUT;
    SCL_LOW(clk_base); // clock low         
11041914:	e0bffd17 	ldw	r2,-12(fp)
11041918:	0007883a 	mov	r3,zero
1104191c:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock low delay
11041920:	01000044 	movi	r4,1
11041924:	1054a740 	call	11054a74 <usleep>
    return bAck;
11041928:	e0bffc17 	ldw	r2,-16(fp)
}    
1104192c:	e037883a 	mov	sp,fp
11041930:	dfc00117 	ldw	ra,4(sp)
11041934:	df000017 	ldw	fp,0(sp)
11041938:	dec00204 	addi	sp,sp,8
1104193c:	f800283a 	ret

11041940 <i2c_read>:

void i2c_read(alt_u32 clk_base, alt_u32 data_base, alt_u8 *pData, bool bAck){ // return true if device response ack
11041940:	defff804 	addi	sp,sp,-32
11041944:	dfc00715 	stw	ra,28(sp)
11041948:	df000615 	stw	fp,24(sp)
1104194c:	df000604 	addi	fp,sp,24
11041950:	e13ffc15 	stw	r4,-16(fp)
11041954:	e17ffd15 	stw	r5,-12(fp)
11041958:	e1bffe15 	stw	r6,-8(fp)
1104195c:	e1ffff15 	stw	r7,-4(fp)
    alt_u8 Data=0;
11041960:	e03ffa05 	stb	zero,-24(fp)
    int i;
    
    // assume SCL = low
    
    SDA_DIR_IN(data_base);  // set data read mode
11041964:	e0bffd17 	ldw	r2,-12(fp)
11041968:	10800104 	addi	r2,r2,4
1104196c:	0007883a 	mov	r3,zero
11041970:	10c00035 	stwio	r3,0(r2)
    SCL_LOW(clk_base); // clock low
11041974:	e0bffc17 	ldw	r2,-16(fp)
11041978:	0007883a 	mov	r3,zero
1104197c:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock low delay
11041980:	01000044 	movi	r4,1
11041984:	1054a740 	call	11054a74 <usleep>

    for(i=0;i<8;i++){
11041988:	e03ffb15 	stw	zero,-20(fp)
1104198c:	00001606 	br	110419e8 <i2c_read+0xa8>
        Data <<= 1;
11041990:	e0bffa03 	ldbu	r2,-24(fp)
11041994:	1085883a 	add	r2,r2,r2
11041998:	e0bffa05 	stb	r2,-24(fp)
        SCL_HIGH(clk_base);  // clock high
1104199c:	e0bffc17 	ldw	r2,-16(fp)
110419a0:	00c00044 	movi	r3,1
110419a4:	10c00035 	stwio	r3,0(r2)
        SCL_DELAY;
110419a8:	01000044 	movi	r4,1
110419ac:	1054a740 	call	11054a74 <usleep>
        if (SDA_READ(data_base))  // read data   
110419b0:	e0bffd17 	ldw	r2,-12(fp)
110419b4:	10800037 	ldwio	r2,0(r2)
110419b8:	10000326 	beq	r2,zero,110419c8 <i2c_read+0x88>
            Data |= 0x01;
110419bc:	e0bffa03 	ldbu	r2,-24(fp)
110419c0:	10800054 	ori	r2,r2,1
110419c4:	e0bffa05 	stb	r2,-24(fp)
        SCL_LOW(clk_base);  // clock log  
110419c8:	e0bffc17 	ldw	r2,-16(fp)
110419cc:	0007883a 	mov	r3,zero
110419d0:	10c00035 	stwio	r3,0(r2)
        SCL_DELAY;
110419d4:	01000044 	movi	r4,1
110419d8:	1054a740 	call	11054a74 <usleep>
    
    SDA_DIR_IN(data_base);  // set data read mode
    SCL_LOW(clk_base); // clock low
    SCL_DELAY; // clock low delay

    for(i=0;i<8;i++){
110419dc:	e0bffb17 	ldw	r2,-20(fp)
110419e0:	10800044 	addi	r2,r2,1
110419e4:	e0bffb15 	stw	r2,-20(fp)
110419e8:	e0bffb17 	ldw	r2,-20(fp)
110419ec:	10800210 	cmplti	r2,r2,8
110419f0:	103fe71e 	bne	r2,zero,11041990 <i2c_read+0x50>
        SCL_LOW(clk_base);  // clock log  
        SCL_DELAY;
    }
    
    // send ACK
    SCL_LOW(clk_base);  // new, make sure data change at clk low
110419f4:	e0bffc17 	ldw	r2,-16(fp)
110419f8:	0007883a 	mov	r3,zero
110419fc:	10c00035 	stwio	r3,0(r2)
    SDA_DIR_OUT(data_base);  // set data write mode
11041a00:	e0bffd17 	ldw	r2,-12(fp)
11041a04:	10800104 	addi	r2,r2,4
11041a08:	1007883a 	mov	r3,r2
11041a0c:	00800044 	movi	r2,1
11041a10:	18800035 	stwio	r2,0(r3)
    if (bAck)
11041a14:	e0bfff17 	ldw	r2,-4(fp)
11041a18:	10000426 	beq	r2,zero,11041a2c <i2c_read+0xec>
        SDA_LOW(data_base);
11041a1c:	e0bffd17 	ldw	r2,-12(fp)
11041a20:	0007883a 	mov	r3,zero
11041a24:	10c00035 	stwio	r3,0(r2)
11041a28:	00000306 	br	11041a38 <i2c_read+0xf8>
    else
        SDA_HIGH(data_base);
11041a2c:	e0bffd17 	ldw	r2,-12(fp)
11041a30:	00c00044 	movi	r3,1
11041a34:	10c00035 	stwio	r3,0(r2)
    SCL_HIGH(clk_base); // clock high
11041a38:	e0bffc17 	ldw	r2,-16(fp)
11041a3c:	00c00044 	movi	r3,1
11041a40:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock high  delay
11041a44:	01000044 	movi	r4,1
11041a48:	1054a740 	call	11054a74 <usleep>
    SCL_LOW(clk_base); // clock low
11041a4c:	e0bffc17 	ldw	r2,-16(fp)
11041a50:	0007883a 	mov	r3,zero
11041a54:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock low delay
11041a58:	01000044 	movi	r4,1
11041a5c:	1054a740 	call	11054a74 <usleep>
    SDA_LOW(data_base);  // data low
11041a60:	e0bffd17 	ldw	r2,-12(fp)
11041a64:	0007883a 	mov	r3,zero
11041a68:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // data low delay
11041a6c:	01000044 	movi	r4,1
11041a70:	1054a740 	call	11054a74 <usleep>
//    SDA_DIR_IN;  // set data read mode
    
    *pData = Data;
11041a74:	e0bffe17 	ldw	r2,-8(fp)
11041a78:	e0fffa03 	ldbu	r3,-24(fp)
11041a7c:	10c00005 	stb	r3,0(r2)
}
11041a80:	0001883a 	nop
11041a84:	e037883a 	mov	sp,fp
11041a88:	dfc00117 	ldw	ra,4(sp)
11041a8c:	df000017 	ldw	fp,0(sp)
11041a90:	dec00204 	addi	sp,sp,8
11041a94:	f800283a 	ret

11041a98 <LED_Display>:
#define LED_INIT_MASK   (0x01 << 3)

#define LED_SET(mask)   IOWR_ALTERA_AVALON_PIO_DATA(PIO_LED_BASE, mask)


void LED_Display(alt_u8 Mask){ // 1: light, 0:unlight
11041a98:	defffd04 	addi	sp,sp,-12
11041a9c:	df000215 	stw	fp,8(sp)
11041aa0:	df000204 	addi	fp,sp,8
11041aa4:	2005883a 	mov	r2,r4
11041aa8:	e0bfff05 	stb	r2,-4(fp)
	alt_u8 ThisMask;
    ThisMask = Mask;//
11041aac:	e0bfff03 	ldbu	r2,-4(fp)
11041ab0:	e0bffe05 	stb	r2,-8(fp)
    LED_SET(ThisMask);  //0:ligh, 1:unlight
11041ab4:	e0fffe03 	ldbu	r3,-8(fp)
11041ab8:	00840034 	movhi	r2,4096
11041abc:	10800c04 	addi	r2,r2,48
11041ac0:	10c00035 	stwio	r3,0(r2)
    
}
11041ac4:	0001883a 	nop
11041ac8:	e037883a 	mov	sp,fp
11041acc:	df000017 	ldw	fp,0(sp)
11041ad0:	dec00104 	addi	sp,sp,4
11041ad4:	f800283a 	ret

11041ad8 <LED_AllOn>:


void LED_AllOn(void){
11041ad8:	defffe04 	addi	sp,sp,-8
11041adc:	dfc00115 	stw	ra,4(sp)
11041ae0:	df000015 	stw	fp,0(sp)
11041ae4:	d839883a 	mov	fp,sp
    LED_Display(0xFF);
11041ae8:	01003fc4 	movi	r4,255
11041aec:	1041a980 	call	11041a98 <LED_Display>
}
11041af0:	0001883a 	nop
11041af4:	e037883a 	mov	sp,fp
11041af8:	dfc00117 	ldw	ra,4(sp)
11041afc:	df000017 	ldw	fp,0(sp)
11041b00:	dec00204 	addi	sp,sp,8
11041b04:	f800283a 	ret

11041b08 <LED_AllOff>:

void LED_AllOff(void){
11041b08:	defffe04 	addi	sp,sp,-8
11041b0c:	dfc00115 	stw	ra,4(sp)
11041b10:	df000015 	stw	fp,0(sp)
11041b14:	d839883a 	mov	fp,sp
    LED_Display(0x00);       
11041b18:	0009883a 	mov	r4,zero
11041b1c:	1041a980 	call	11041a98 <LED_Display>
}
11041b20:	0001883a 	nop
11041b24:	e037883a 	mov	sp,fp
11041b28:	dfc00117 	ldw	ra,4(sp)
11041b2c:	df000017 	ldw	fp,0(sp)
11041b30:	dec00204 	addi	sp,sp,8
11041b34:	f800283a 	ret

11041b38 <LED_LightCount>:


void LED_LightCount(alt_u8 LightCount){ // 1: light, 0:unlight
11041b38:	defffb04 	addi	sp,sp,-20
11041b3c:	dfc00415 	stw	ra,16(sp)
11041b40:	df000315 	stw	fp,12(sp)
11041b44:	df000304 	addi	fp,sp,12
11041b48:	2005883a 	mov	r2,r4
11041b4c:	e0bfff05 	stb	r2,-4(fp)
	alt_u8 Mask = 0;
11041b50:	e03ffd05 	stb	zero,-12(fp)
    int i;
    for(i=0;i<LightCount;i++){
11041b54:	e03ffe15 	stw	zero,-8(fp)
11041b58:	00000906 	br	11041b80 <LED_LightCount+0x48>
        Mask <<= 1;
11041b5c:	e0bffd03 	ldbu	r2,-12(fp)
11041b60:	1085883a 	add	r2,r2,r2
11041b64:	e0bffd05 	stb	r2,-12(fp)
        Mask |= 0x01;
11041b68:	e0bffd03 	ldbu	r2,-12(fp)
11041b6c:	10800054 	ori	r2,r2,1
11041b70:	e0bffd05 	stb	r2,-12(fp)


void LED_LightCount(alt_u8 LightCount){ // 1: light, 0:unlight
	alt_u8 Mask = 0;
    int i;
    for(i=0;i<LightCount;i++){
11041b74:	e0bffe17 	ldw	r2,-8(fp)
11041b78:	10800044 	addi	r2,r2,1
11041b7c:	e0bffe15 	stw	r2,-8(fp)
11041b80:	e0bfff03 	ldbu	r2,-4(fp)
11041b84:	e0fffe17 	ldw	r3,-8(fp)
11041b88:	18bff416 	blt	r3,r2,11041b5c <LED_LightCount+0x24>
        Mask <<= 1;
        Mask |= 0x01;
    }
    LED_Display(Mask);  //0:ligh, 1:unlight
11041b8c:	e0bffd03 	ldbu	r2,-12(fp)
11041b90:	1009883a 	mov	r4,r2
11041b94:	1041a980 	call	11041a98 <LED_Display>
    
}
11041b98:	0001883a 	nop
11041b9c:	e037883a 	mov	sp,fp
11041ba0:	dfc00117 	ldw	ra,4(sp)
11041ba4:	df000017 	ldw	fp,0(sp)
11041ba8:	dec00204 	addi	sp,sp,8
11041bac:	f800283a 	ret

11041bb0 <init_audio>:
alt_u32 display_time_elapsed(alt_u32 sample_num);

// gloal variable
int record_sample_rate;

bool init_audio(AUDIO_FUNC audio_func){
11041bb0:	defffc04 	addi	sp,sp,-16
11041bb4:	dfc00315 	stw	ra,12(sp)
11041bb8:	df000215 	stw	fp,8(sp)
11041bbc:	df000204 	addi	fp,sp,8
11041bc0:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess = TRUE;
11041bc4:	00800044 	movi	r2,1
11041bc8:	e0bffe15 	stw	r2,-8(fp)
    AUDIO_InterfaceActive(FALSE);
11041bcc:	0009883a 	mov	r4,zero
11041bd0:	10405e00 	call	110405e0 <AUDIO_InterfaceActive>
    //
    if (audio_func == MIC_RECORD){
11041bd4:	e0bfff17 	ldw	r2,-4(fp)
11041bd8:	10000b1e 	bne	r2,zero,11041c08 <init_audio+0x58>
        AUDIO_SetInputSource(SOURCE_MIC);
11041bdc:	0009883a 	mov	r4,zero
11041be0:	10409c00 	call	110409c0 <AUDIO_SetInputSource>
        AUDIO_DacEnableSoftMute(TRUE);
11041be4:	01000044 	movi	r4,1
11041be8:	10407c80 	call	110407c8 <AUDIO_DacEnableSoftMute>
        AUDIO_AdcEnableHighPassFilter(FALSE);
11041bec:	0009883a 	mov	r4,zero
11041bf0:	10406a00 	call	110406a0 <AUDIO_AdcEnableHighPassFilter>
        AUDIO_MicMute(FALSE);
11041bf4:	0009883a 	mov	r4,zero
11041bf8:	10408540 	call	11040854 <AUDIO_MicMute>
        AUDIO_LineInMute(TRUE);
11041bfc:	01000044 	movi	r4,1
11041c00:	10408e00 	call	110408e0 <AUDIO_LineInMute>
11041c04:	00002106 	br	11041c8c <init_audio+0xdc>
    }else if (audio_func == LINEIN_RECORD){
11041c08:	e0bfff17 	ldw	r2,-4(fp)
11041c0c:	10800058 	cmpnei	r2,r2,1
11041c10:	10000e1e 	bne	r2,zero,11041c4c <init_audio+0x9c>
        AUDIO_SetInputSource(SOURCE_LINEIN);
11041c14:	01000044 	movi	r4,1
11041c18:	10409c00 	call	110409c0 <AUDIO_SetInputSource>
        AUDIO_DacEnableSoftMute(TRUE);
11041c1c:	01000044 	movi	r4,1
11041c20:	10407c80 	call	110407c8 <AUDIO_DacEnableSoftMute>
        AUDIO_AdcEnableHighPassFilter(FALSE);
11041c24:	0009883a 	mov	r4,zero
11041c28:	10406a00 	call	110406a0 <AUDIO_AdcEnableHighPassFilter>
        AUDIO_MicMute(TRUE);
11041c2c:	01000044 	movi	r4,1
11041c30:	10408540 	call	11040854 <AUDIO_MicMute>
        AUDIO_LineInMute(FALSE);
11041c34:	0009883a 	mov	r4,zero
11041c38:	10408e00 	call	110408e0 <AUDIO_LineInMute>
        AUDIO_SetLineInVol(0x17, 0x17);  // max 0x1F, min:0; 0x17: 0dB (assume max input is 2.0v rms)
11041c3c:	014005c4 	movi	r5,23
11041c40:	010005c4 	movi	r4,23
11041c44:	1040b340 	call	11040b34 <AUDIO_SetLineInVol>
11041c48:	00001006 	br	11041c8c <init_audio+0xdc>
    }else if (audio_func == LINEOUT_PLAY){
11041c4c:	e0bfff17 	ldw	r2,-4(fp)
11041c50:	10800098 	cmpnei	r2,r2,2
11041c54:	10000d1e 	bne	r2,zero,11041c8c <init_audio+0xdc>
        AUDIO_DacEnableSoftMute(TRUE);
11041c58:	01000044 	movi	r4,1
11041c5c:	10407c80 	call	110407c8 <AUDIO_DacEnableSoftMute>
        AUDIO_MicMute(TRUE);
11041c60:	01000044 	movi	r4,1
11041c64:	10408540 	call	11040854 <AUDIO_MicMute>
        AUDIO_LineInMute(FALSE);
11041c68:	0009883a 	mov	r4,zero
11041c6c:	10408e00 	call	110408e0 <AUDIO_LineInMute>
        AUDIO_DacEnableSoftMute(FALSE);
11041c70:	0009883a 	mov	r4,zero
11041c74:	10407c80 	call	110407c8 <AUDIO_DacEnableSoftMute>
        //AUDIO_DacDeemphasisControl(DEEMPHASIS_48K);
        AUDIO_SetLineOutVol(LINEOUT_DEFUALT_VOL, LINEOUT_DEFUALT_VOL); // max 7F, min: 30, 0x79: 0 db
11041c78:	01401804 	movi	r5,96
11041c7c:	01001804 	movi	r4,96
11041c80:	1040c480 	call	11040c48 <AUDIO_SetLineOutVol>
        AUDIO_DacEnableSoftMute(FALSE);
11041c84:	0009883a 	mov	r4,zero
11041c88:	10407c80 	call	110407c8 <AUDIO_DacEnableSoftMute>
    }
    
    if (record_sample_rate == 8000)
11041c8c:	d0a6cb17 	ldw	r2,-25812(gp)
11041c90:	1087d018 	cmpnei	r2,r2,8000
11041c94:	1000031e 	bne	r2,zero,11041ca4 <init_audio+0xf4>
        AUDIO_SetSampleRate(RATE_ADC8K_DAC8K);
11041c98:	010000c4 	movi	r4,3
11041c9c:	1040a500 	call	11040a50 <AUDIO_SetSampleRate>
11041ca0:	00001406 	br	11041cf4 <init_audio+0x144>
    else if (record_sample_rate == 32000)
11041ca4:	d0a6cb17 	ldw	r2,-25812(gp)
11041ca8:	109f4018 	cmpnei	r2,r2,32000
11041cac:	1000031e 	bne	r2,zero,11041cbc <init_audio+0x10c>
        AUDIO_SetSampleRate(RATE_ADC32K_DAC32K);
11041cb0:	01000104 	movi	r4,4
11041cb4:	1040a500 	call	11040a50 <AUDIO_SetSampleRate>
11041cb8:	00000e06 	br	11041cf4 <init_audio+0x144>
    else if (record_sample_rate == 48000)
11041cbc:	d0e6cb17 	ldw	r3,-25812(gp)
11041cc0:	00aee014 	movui	r2,48000
11041cc4:	1880031e 	bne	r3,r2,11041cd4 <init_audio+0x124>
        AUDIO_SetSampleRate(RATE_ADC48K_DAC48K);
11041cc8:	0009883a 	mov	r4,zero
11041ccc:	1040a500 	call	11040a50 <AUDIO_SetSampleRate>
11041cd0:	00000806 	br	11041cf4 <init_audio+0x144>
    else if (record_sample_rate == 44100)
11041cd4:	d0e6cb17 	ldw	r3,-25812(gp)
11041cd8:	00ab1114 	movui	r2,44100
11041cdc:	1880031e 	bne	r3,r2,11041cec <init_audio+0x13c>
        AUDIO_SetSampleRate(RATE_ADC44K1_DAC44K1);
11041ce0:	01000184 	movi	r4,6
11041ce4:	1040a500 	call	11040a50 <AUDIO_SetSampleRate>
11041ce8:	00000206 	br	11041cf4 <init_audio+0x144>
    else    
        AUDIO_SetSampleRate(RATE_ADC96K_DAC96K);
11041cec:	01000144 	movi	r4,5
11041cf0:	1040a500 	call	11040a50 <AUDIO_SetSampleRate>
    //
    AUDIO_InterfaceActive(TRUE);
11041cf4:	01000044 	movi	r4,1
11041cf8:	10405e00 	call	110405e0 <AUDIO_InterfaceActive>
    
    return bSuccess;             
11041cfc:	e0bffe17 	ldw	r2,-8(fp)
}
11041d00:	e037883a 	mov	sp,fp
11041d04:	dfc00117 	ldw	ra,4(sp)
11041d08:	df000017 	ldw	fp,0(sp)
11041d0c:	dec00204 	addi	sp,sp,8
11041d10:	f800283a 	ret

11041d14 <display_time_elapsed>:

alt_u32 display_time_elapsed(alt_u32 sample_num){
11041d14:	defffd04 	addi	sp,sp,-12
11041d18:	df000215 	stw	fp,8(sp)
11041d1c:	df000204 	addi	fp,sp,8
11041d20:	e13fff15 	stw	r4,-4(fp)
    // assume sample rate is 48K
    alt_u32 time;
    time = sample_num * 100 / record_sample_rate;
11041d24:	e0bfff17 	ldw	r2,-4(fp)
11041d28:	10801924 	muli	r2,r2,100
11041d2c:	d0e6cb17 	ldw	r3,-25812(gp)
11041d30:	10c5203a 	divu	r2,r2,r3
11041d34:	e0bffe15 	stw	r2,-8(fp)
    return time;
11041d38:	e0bffe17 	ldw	r2,-8(fp)
}
11041d3c:	e037883a 	mov	sp,fp
11041d40:	df000017 	ldw	fp,0(sp)
11041d44:	dec00104 	addi	sp,sp,4
11041d48:	f800283a 	ret

11041d4c <dump_record_data>:

void dump_record_data(alt_u32 *pData, alt_u32 len){
11041d4c:	defff804 	addi	sp,sp,-32
11041d50:	dfc00715 	stw	ra,28(sp)
11041d54:	df000615 	stw	fp,24(sp)
11041d58:	df000604 	addi	fp,sp,24
11041d5c:	e13ffe15 	stw	r4,-8(fp)
11041d60:	e17fff15 	stw	r5,-4(fp)
    short sample_l, sample_r, sample_max = 0;
11041d64:	e03ffa0d 	sth	zero,-24(fp)
    alt_u32 data;
    int i;
    //return ;
    for(i=0;i<len;i++){
11041d68:	e03ffb15 	stw	zero,-20(fp)
11041d6c:	00002d06 	br	11041e24 <dump_record_data+0xd8>
        data = *pData++;
11041d70:	e0bffe17 	ldw	r2,-8(fp)
11041d74:	10c00104 	addi	r3,r2,4
11041d78:	e0fffe15 	stw	r3,-8(fp)
11041d7c:	10800017 	ldw	r2,0(r2)
11041d80:	e0bffc15 	stw	r2,-16(fp)
        sample_l = (short)((data >> 16) & 0xFFFF);
11041d84:	e0bffc17 	ldw	r2,-16(fp)
11041d88:	1004d43a 	srli	r2,r2,16
11041d8c:	e0bffd0d 	sth	r2,-12(fp)
        sample_r = (short)(data & 0xFFFF);
11041d90:	e0bffc17 	ldw	r2,-16(fp)
11041d94:	e0bffd8d 	sth	r2,-10(fp)
        //printf("[%d]%d/%d\n", i, sample_l, sample_r);
        if (sample_l > 0 && sample_max <  sample_l)
11041d98:	e0bffd0f 	ldh	r2,-12(fp)
11041d9c:	0080050e 	bge	zero,r2,11041db4 <dump_record_data+0x68>
11041da0:	e0fffa0f 	ldh	r3,-24(fp)
11041da4:	e0bffd0f 	ldh	r2,-12(fp)
11041da8:	1880020e 	bge	r3,r2,11041db4 <dump_record_data+0x68>
            sample_max = sample_l;
11041dac:	e0bffd0b 	ldhu	r2,-12(fp)
11041db0:	e0bffa0d 	sth	r2,-24(fp)
        if (sample_l < 0 && sample_max <  -sample_l)
11041db4:	e0bffd0f 	ldh	r2,-12(fp)
11041db8:	1000070e 	bge	r2,zero,11041dd8 <dump_record_data+0x8c>
11041dbc:	e0fffa0f 	ldh	r3,-24(fp)
11041dc0:	e0bffd0f 	ldh	r2,-12(fp)
11041dc4:	0085c83a 	sub	r2,zero,r2
11041dc8:	1880030e 	bge	r3,r2,11041dd8 <dump_record_data+0x8c>
            sample_max = -sample_l;
11041dcc:	e0bffd0b 	ldhu	r2,-12(fp)
11041dd0:	0085c83a 	sub	r2,zero,r2
11041dd4:	e0bffa0d 	sth	r2,-24(fp)
        if (sample_r > 0 && sample_max <  sample_r)
11041dd8:	e0bffd8f 	ldh	r2,-10(fp)
11041ddc:	0080050e 	bge	zero,r2,11041df4 <dump_record_data+0xa8>
11041de0:	e0fffa0f 	ldh	r3,-24(fp)
11041de4:	e0bffd8f 	ldh	r2,-10(fp)
11041de8:	1880020e 	bge	r3,r2,11041df4 <dump_record_data+0xa8>
            sample_max = sample_r;
11041dec:	e0bffd8b 	ldhu	r2,-10(fp)
11041df0:	e0bffa0d 	sth	r2,-24(fp)
        if (sample_r < 0 && sample_max <  -sample_r)
11041df4:	e0bffd8f 	ldh	r2,-10(fp)
11041df8:	1000070e 	bge	r2,zero,11041e18 <dump_record_data+0xcc>
11041dfc:	e0fffa0f 	ldh	r3,-24(fp)
11041e00:	e0bffd8f 	ldh	r2,-10(fp)
11041e04:	0085c83a 	sub	r2,zero,r2
11041e08:	1880030e 	bge	r3,r2,11041e18 <dump_record_data+0xcc>
            sample_max = -sample_r;
11041e0c:	e0bffd8b 	ldhu	r2,-10(fp)
11041e10:	0085c83a 	sub	r2,zero,r2
11041e14:	e0bffa0d 	sth	r2,-24(fp)
void dump_record_data(alt_u32 *pData, alt_u32 len){
    short sample_l, sample_r, sample_max = 0;
    alt_u32 data;
    int i;
    //return ;
    for(i=0;i<len;i++){
11041e18:	e0bffb17 	ldw	r2,-20(fp)
11041e1c:	10800044 	addi	r2,r2,1
11041e20:	e0bffb15 	stw	r2,-20(fp)
11041e24:	e0fffb17 	ldw	r3,-20(fp)
11041e28:	e0bfff17 	ldw	r2,-4(fp)
11041e2c:	18bfd036 	bltu	r3,r2,11041d70 <dump_record_data+0x24>
        if (sample_r > 0 && sample_max <  sample_r)
            sample_max = sample_r;
        if (sample_r < 0 && sample_max <  -sample_r)
            sample_max = -sample_r;
    }
    printf("max=%d\n\n", sample_max);
11041e30:	e0bffa0f 	ldh	r2,-24(fp)
11041e34:	100b883a 	mov	r5,r2
11041e38:	01044174 	movhi	r4,4357
11041e3c:	211b5504 	addi	r4,r4,27988
11041e40:	1045f400 	call	11045f40 <printf>
}
11041e44:	0001883a 	nop
11041e48:	e037883a 	mov	sp,fp
11041e4c:	dfc00117 	ldw	ra,4(sp)
11041e50:	df000017 	ldw	fp,0(sp)
11041e54:	dec00204 	addi	sp,sp,8
11041e58:	f800283a 	ret

11041e5c <main>:

int main()
{
11041e5c:	defff204 	addi	sp,sp,-56
11041e60:	dfc00d15 	stw	ra,52(sp)
11041e64:	df000c15 	stw	fp,48(sp)
11041e68:	dc000b15 	stw	r16,44(sp)
11041e6c:	df000c04 	addi	fp,sp,48
    short *pBuf;
    short data, ch_right, ch_left;
    double MIN_RAD;
    double x = 0, y = 0;
11041e70:	e03ff515 	stw	zero,-44(fp)
11041e74:	e03ff615 	stw	zero,-40(fp)
11041e78:	e03ff715 	stw	zero,-36(fp)
11041e7c:	e03ff815 	stw	zero,-32(fp)
    alt_u16 i = 0, step = 0;
11041e80:	e03ff40d 	sth	zero,-48(fp)
11041e84:	e03ff90d 	sth	zero,-28(fp)

    LED_AllOff();
11041e88:	1041b080 	call	11041b08 <LED_AllOff>
    printf("Welcome Audio Demo\n");
11041e8c:	01044174 	movhi	r4,4357
11041e90:	211b5804 	addi	r4,r4,28000
11041e94:	104603c0 	call	1104603c <puts>

    // prepare
    AUDIO_Init();
11041e98:	10402900 	call	11040290 <AUDIO_Init>
#if defined (USE_ONCHIP_MEM)
    pBuf = (short *)DATA_BUFFER_BASE;
11041e9c:	00844234 	movhi	r2,4360
11041ea0:	e0bffa15 	stw	r2,-24(fp)
        printf("malloc fail\r\n");
        return 0;
    }
#endif

    printf("ready\n\n");
11041ea4:	01044174 	movhi	r4,4357
11041ea8:	211b5d04 	addi	r4,r4,28020
11041eac:	104603c0 	call	1104603c <puts>

    usleep(2000000);
11041eb0:	010007f4 	movhi	r4,31
11041eb4:	21212004 	addi	r4,r4,-31616
11041eb8:	1054a740 	call	11054a74 <usleep>
    record_sample_rate = 96000;
11041ebc:	00800074 	movhi	r2,1
11041ec0:	109dc004 	addi	r2,r2,30464
11041ec4:	d0a6cb15 	stw	r2,-25812(gp)
    LED_Display(0xa);
11041ec8:	01000284 	movi	r4,10
11041ecc:	1041a980 	call	11041a98 <LED_Display>
    AUDIO_FifoClear();
11041ed0:	10411280 	call	11041128 <AUDIO_FifoClear>
    init_audio(LINEOUT_PLAY);
11041ed4:	01000084 	movi	r4,2
11041ed8:	1041bb00 	call	11041bb0 <init_audio>
    AUDIO_REG_READ();
11041edc:	10404600 	call	11040460 <AUDIO_REG_READ>
    printf("playing (sample rate = %d)...\r\n", record_sample_rate);
11041ee0:	d0a6cb17 	ldw	r2,-25812(gp)
11041ee4:	100b883a 	mov	r5,r2
11041ee8:	01044174 	movhi	r4,4357
11041eec:	211b5f04 	addi	r4,r4,28028
11041ef0:	1045f400 	call	11045f40 <printf>
    MIN_RAD = 2.0 * PI / SINE_WAVE_LENGTH;
11041ef4:	009344f4 	movhi	r2,19731
11041ef8:	10b61284 	addi	r2,r2,-10166
11041efc:	e0bffb15 	stw	r2,-20(fp)
11041f00:	008fde74 	movhi	r2,16249
11041f04:	10887ec4 	addi	r2,r2,8699
11041f08:	e0bffc15 	stw	r2,-16(fp)
    for(i=0; i < SINE_WAVE_LENGTH; i++){
11041f0c:	e03ff40d 	sth	zero,-48(fp)
11041f10:	00002806 	br	11041fb4 <main+0x158>
		x = MIN_RAD * i;
11041f14:	e0bff40b 	ldhu	r2,-48(fp)
11041f18:	1009883a 	mov	r4,r2
11041f1c:	1045dd00 	call	11045dd0 <__floatsidf>
11041f20:	1011883a 	mov	r8,r2
11041f24:	1813883a 	mov	r9,r3
11041f28:	e1bffb17 	ldw	r6,-20(fp)
11041f2c:	e1fffc17 	ldw	r7,-16(fp)
11041f30:	4009883a 	mov	r4,r8
11041f34:	480b883a 	mov	r5,r9
11041f38:	1044d3c0 	call	11044d3c <__muldf3>
11041f3c:	1009883a 	mov	r4,r2
11041f40:	180b883a 	mov	r5,r3
11041f44:	e13ff515 	stw	r4,-44(fp)
11041f48:	e17ff615 	stw	r5,-40(fp)
		y = sin(x) * SCALE_FAC;
11041f4c:	e13ff517 	ldw	r4,-44(fp)
11041f50:	e17ff617 	ldw	r5,-40(fp)
11041f54:	10420640 	call	11042064 <sin>
11041f58:	1011883a 	mov	r8,r2
11041f5c:	1813883a 	mov	r9,r3
11041f60:	000d883a 	mov	r6,zero
11041f64:	01d03434 	movhi	r7,16592
11041f68:	4009883a 	mov	r4,r8
11041f6c:	480b883a 	mov	r5,r9
11041f70:	1044d3c0 	call	11044d3c <__muldf3>
11041f74:	1009883a 	mov	r4,r2
11041f78:	180b883a 	mov	r5,r3
11041f7c:	e13ff715 	stw	r4,-36(fp)
11041f80:	e17ff815 	stw	r5,-32(fp)
    	*(pBuf + i) = y;
11041f84:	e0bff40b 	ldhu	r2,-48(fp)
11041f88:	1085883a 	add	r2,r2,r2
11041f8c:	1007883a 	mov	r3,r2
11041f90:	e0bffa17 	ldw	r2,-24(fp)
11041f94:	10e1883a 	add	r16,r2,r3
11041f98:	e13ff717 	ldw	r4,-36(fp)
11041f9c:	e17ff817 	ldw	r5,-32(fp)
11041fa0:	1045d500 	call	11045d50 <__fixdfsi>
11041fa4:	8080000d 	sth	r2,0(r16)
    AUDIO_FifoClear();
    init_audio(LINEOUT_PLAY);
    AUDIO_REG_READ();
    printf("playing (sample rate = %d)...\r\n", record_sample_rate);
    MIN_RAD = 2.0 * PI / SINE_WAVE_LENGTH;
    for(i=0; i < SINE_WAVE_LENGTH; i++){
11041fa8:	e0bff40b 	ldhu	r2,-48(fp)
11041fac:	10800044 	addi	r2,r2,1
11041fb0:	e0bff40d 	sth	r2,-48(fp)
11041fb4:	e0bff40b 	ldhu	r2,-48(fp)
11041fb8:	10810030 	cmpltui	r2,r2,1024
11041fbc:	103fd51e 	bne	r2,zero,11041f14 <main+0xb8>
		x = MIN_RAD * i;
		y = sin(x) * SCALE_FAC;
    	*(pBuf + i) = y;
    }
    step = 2;
11041fc0:	00800084 	movi	r2,2
11041fc4:	e0bff90d 	sth	r2,-28(fp)
    i = 0;
11041fc8:	e03ff40d 	sth	zero,-48(fp)
    // infinite loop
    while(1){
		if (AUDIO_DacFifoNotFull()){
11041fcc:	10410080 	call	11041008 <AUDIO_DacFifoNotFull>
11041fd0:	103ffe26 	beq	r2,zero,11041fcc <main+0x170>
			data = *(pBuf+i);
11041fd4:	e0bff40b 	ldhu	r2,-48(fp)
11041fd8:	1085883a 	add	r2,r2,r2
11041fdc:	1007883a 	mov	r3,r2
11041fe0:	e0bffa17 	ldw	r2,-24(fp)
11041fe4:	10c5883a 	add	r2,r2,r3
11041fe8:	1080000b 	ldhu	r2,0(r2)
11041fec:	e0bffd0d 	sth	r2,-12(fp)
			ch_left = data;
11041ff0:	e0bffd0b 	ldhu	r2,-12(fp)
11041ff4:	e0bffd8d 	sth	r2,-10(fp)
			ch_right = data;
11041ff8:	e0bffd0b 	ldhu	r2,-12(fp)
11041ffc:	e0bffe0d 	sth	r2,-8(fp)
			//printf("i: %d, and data: %d, data>>12: %d\r\n", i, data, data>>12);
			AUDIO_DacFifoSetData(ch_left, ch_right);
11042000:	e0bffd8f 	ldh	r2,-10(fp)
11042004:	e0fffe0f 	ldh	r3,-8(fp)
11042008:	180b883a 	mov	r5,r3
1104200c:	1009883a 	mov	r4,r2
11042010:	10410440 	call	11041044 <AUDIO_DacFifoSetData>
			IOWR_ALTERA_AVALON_PIO_DATA(VPG_BASE, 0);
11042014:	0007883a 	mov	r3,zero
11042018:	00844234 	movhi	r2,4360
1104201c:	10881404 	addi	r2,r2,8272
11042020:	10c00035 	stwio	r3,0(r2)
			LED_Display(data>>12);
11042024:	e0bffd0f 	ldh	r2,-12(fp)
11042028:	1005d33a 	srai	r2,r2,12
1104202c:	10803fcc 	andi	r2,r2,255
11042030:	1009883a 	mov	r4,r2
11042034:	1041a980 	call	11041a98 <LED_Display>
			i += step;
11042038:	e0fff40b 	ldhu	r3,-48(fp)
1104203c:	e0bff90b 	ldhu	r2,-28(fp)
11042040:	1885883a 	add	r2,r3,r2
11042044:	e0bff40d 	sth	r2,-48(fp)
			if (i >= SINE_WAVE_LENGTH)
11042048:	e0bff40b 	ldhu	r2,-48(fp)
1104204c:	10810030 	cmpltui	r2,r2,1024
11042050:	103fde1e 	bne	r2,zero,11041fcc <main+0x170>
				i -= SINE_WAVE_LENGTH;
11042054:	e0bff40b 	ldhu	r2,-48(fp)
11042058:	10bf0004 	addi	r2,r2,-1024
1104205c:	e0bff40d 	sth	r2,-48(fp)
		}
    }
11042060:	003fda06 	br	11041fcc <main+0x170>

11042064 <sin>:
11042064:	00a00034 	movhi	r2,32768
11042068:	defffa04 	addi	sp,sp,-24
1104206c:	10bfffc4 	addi	r2,r2,-1
11042070:	00cffa74 	movhi	r3,16361
11042074:	dfc00515 	stw	ra,20(sp)
11042078:	2884703a 	and	r2,r5,r2
1104207c:	18c87ec4 	addi	r3,r3,8699
11042080:	1880180e 	bge	r3,r2,110420e4 <sin+0x80>
11042084:	00dffc34 	movhi	r3,32752
11042088:	18ffffc4 	addi	r3,r3,-1
1104208c:	1880060e 	bge	r3,r2,110420a8 <sin+0x44>
11042090:	280f883a 	mov	r7,r5
11042094:	200d883a 	mov	r6,r4
11042098:	10454540 	call	11045454 <__subdf3>
1104209c:	dfc00517 	ldw	ra,20(sp)
110420a0:	dec00604 	addi	sp,sp,24
110420a4:	f800283a 	ret
110420a8:	d9800104 	addi	r6,sp,4
110420ac:	10421540 	call	11042154 <__ieee754_rem_pio2>
110420b0:	108000cc 	andi	r2,r2,3
110420b4:	00c00044 	movi	r3,1
110420b8:	10c01926 	beq	r2,r3,11042120 <sin+0xbc>
110420bc:	01000084 	movi	r4,2
110420c0:	11000f26 	beq	r2,r4,11042100 <sin+0x9c>
110420c4:	10001c26 	beq	r2,zero,11042138 <sin+0xd4>
110420c8:	d9800317 	ldw	r6,12(sp)
110420cc:	d9c00417 	ldw	r7,16(sp)
110420d0:	d9000117 	ldw	r4,4(sp)
110420d4:	d9400217 	ldw	r5,8(sp)
110420d8:	10428c00 	call	110428c0 <__kernel_cos>
110420dc:	18e0003c 	xorhi	r3,r3,32768
110420e0:	003fee06 	br	1104209c <sin+0x38>
110420e4:	d8000015 	stw	zero,0(sp)
110420e8:	000d883a 	mov	r6,zero
110420ec:	000f883a 	mov	r7,zero
110420f0:	1043af40 	call	11043af4 <__kernel_sin>
110420f4:	dfc00517 	ldw	ra,20(sp)
110420f8:	dec00604 	addi	sp,sp,24
110420fc:	f800283a 	ret
11042100:	d9800317 	ldw	r6,12(sp)
11042104:	d9c00417 	ldw	r7,16(sp)
11042108:	d9000117 	ldw	r4,4(sp)
1104210c:	d9400217 	ldw	r5,8(sp)
11042110:	d8c00015 	stw	r3,0(sp)
11042114:	1043af40 	call	11043af4 <__kernel_sin>
11042118:	18e0003c 	xorhi	r3,r3,32768
1104211c:	003fdf06 	br	1104209c <sin+0x38>
11042120:	d9800317 	ldw	r6,12(sp)
11042124:	d9c00417 	ldw	r7,16(sp)
11042128:	d9000117 	ldw	r4,4(sp)
1104212c:	d9400217 	ldw	r5,8(sp)
11042130:	10428c00 	call	110428c0 <__kernel_cos>
11042134:	003fd906 	br	1104209c <sin+0x38>
11042138:	d9800317 	ldw	r6,12(sp)
1104213c:	d9c00417 	ldw	r7,16(sp)
11042140:	d9000117 	ldw	r4,4(sp)
11042144:	d9400217 	ldw	r5,8(sp)
11042148:	d8c00015 	stw	r3,0(sp)
1104214c:	1043af40 	call	11043af4 <__kernel_sin>
11042150:	003fd206 	br	1104209c <sin+0x38>

11042154 <__ieee754_rem_pio2>:
11042154:	02200034 	movhi	r8,32768
11042158:	deffea04 	addi	sp,sp,-88
1104215c:	423fffc4 	addi	r8,r8,-1
11042160:	00cffa74 	movhi	r3,16361
11042164:	ddc01315 	stw	r23,76(sp)
11042168:	dc400d15 	stw	r17,52(sp)
1104216c:	dfc01515 	stw	ra,84(sp)
11042170:	df001415 	stw	fp,80(sp)
11042174:	dd801215 	stw	r22,72(sp)
11042178:	dd401115 	stw	r21,68(sp)
1104217c:	dd001015 	stw	r20,64(sp)
11042180:	dcc00f15 	stw	r19,60(sp)
11042184:	dc800e15 	stw	r18,56(sp)
11042188:	dc000c15 	stw	r16,48(sp)
1104218c:	2a2e703a 	and	r23,r5,r8
11042190:	18c87ec4 	addi	r3,r3,8699
11042194:	2823883a 	mov	r17,r5
11042198:	1dc0790e 	bge	r3,r23,11042380 <__ieee754_rem_pio2+0x22c>
1104219c:	009000f4 	movhi	r2,16387
110421a0:	10b65ec4 	addi	r2,r2,-9861
110421a4:	3021883a 	mov	r16,r6
110421a8:	2027883a 	mov	r19,r4
110421ac:	15c02316 	blt	r2,r23,1104223c <__ieee754_rem_pio2+0xe8>
110421b0:	01cffe74 	movhi	r7,16377
110421b4:	39c87ec4 	addi	r7,r7,8699
110421b8:	01951034 	movhi	r6,21568
110421bc:	01417a0e 	bge	zero,r5,110427a8 <__ieee754_rem_pio2+0x654>
110421c0:	10454540 	call	11045454 <__subdf3>
110421c4:	1025883a 	mov	r18,r2
110421c8:	008ffe74 	movhi	r2,16377
110421cc:	10887ec4 	addi	r2,r2,8699
110421d0:	1823883a 	mov	r17,r3
110421d4:	b8808426 	beq	r23,r2,110423e8 <__ieee754_rem_pio2+0x294>
110421d8:	018698b4 	movhi	r6,6754
110421dc:	01cf7474 	movhi	r7,15825
110421e0:	3198cc44 	addi	r6,r6,25393
110421e4:	39ed1844 	addi	r7,r7,-19359
110421e8:	9009883a 	mov	r4,r18
110421ec:	180b883a 	mov	r5,r3
110421f0:	10454540 	call	11045454 <__subdf3>
110421f4:	100d883a 	mov	r6,r2
110421f8:	180f883a 	mov	r7,r3
110421fc:	9009883a 	mov	r4,r18
11042200:	880b883a 	mov	r5,r17
11042204:	80800015 	stw	r2,0(r16)
11042208:	80c00115 	stw	r3,4(r16)
1104220c:	10454540 	call	11045454 <__subdf3>
11042210:	018698b4 	movhi	r6,6754
11042214:	01cf7474 	movhi	r7,15825
11042218:	3198cc44 	addi	r6,r6,25393
1104221c:	39ed1844 	addi	r7,r7,-19359
11042220:	1009883a 	mov	r4,r2
11042224:	180b883a 	mov	r5,r3
11042228:	10454540 	call	11045454 <__subdf3>
1104222c:	80800215 	stw	r2,8(r16)
11042230:	80c00315 	stw	r3,12(r16)
11042234:	00800044 	movi	r2,1
11042238:	00005606 	br	11042394 <__ieee754_rem_pio2+0x240>
1104223c:	00904e74 	movhi	r2,16697
11042240:	10887ec4 	addi	r2,r2,8699
11042244:	15c0830e 	bge	r2,r23,11042454 <__ieee754_rem_pio2+0x300>
11042248:	009ffc34 	movhi	r2,32752
1104224c:	10bfffc4 	addi	r2,r2,-1
11042250:	15c05c16 	blt	r2,r23,110423c4 <__ieee754_rem_pio2+0x270>
11042254:	b829d53a 	srai	r20,r23,20
11042258:	a53efa84 	addi	r20,r20,-1046
1104225c:	a024953a 	slli	r18,r20,20
11042260:	bca5c83a 	sub	r18,r23,r18
11042264:	900b883a 	mov	r5,r18
11042268:	1045d500 	call	11045d50 <__fixdfsi>
1104226c:	1009883a 	mov	r4,r2
11042270:	1045dd00 	call	11045dd0 <__floatsidf>
11042274:	9809883a 	mov	r4,r19
11042278:	900b883a 	mov	r5,r18
1104227c:	100d883a 	mov	r6,r2
11042280:	180f883a 	mov	r7,r3
11042284:	d8800215 	stw	r2,8(sp)
11042288:	d8c00315 	stw	r3,12(sp)
1104228c:	10454540 	call	11045454 <__subdf3>
11042290:	000d883a 	mov	r6,zero
11042294:	01d05c34 	movhi	r7,16752
11042298:	1009883a 	mov	r4,r2
1104229c:	180b883a 	mov	r5,r3
110422a0:	1044d3c0 	call	11044d3c <__muldf3>
110422a4:	180b883a 	mov	r5,r3
110422a8:	1009883a 	mov	r4,r2
110422ac:	182b883a 	mov	r21,r3
110422b0:	102d883a 	mov	r22,r2
110422b4:	1045d500 	call	11045d50 <__fixdfsi>
110422b8:	1009883a 	mov	r4,r2
110422bc:	1045dd00 	call	11045dd0 <__floatsidf>
110422c0:	100d883a 	mov	r6,r2
110422c4:	180f883a 	mov	r7,r3
110422c8:	b009883a 	mov	r4,r22
110422cc:	a80b883a 	mov	r5,r21
110422d0:	1027883a 	mov	r19,r2
110422d4:	1825883a 	mov	r18,r3
110422d8:	d8800415 	stw	r2,16(sp)
110422dc:	d8c00515 	stw	r3,20(sp)
110422e0:	10454540 	call	11045454 <__subdf3>
110422e4:	000d883a 	mov	r6,zero
110422e8:	01d05c34 	movhi	r7,16752
110422ec:	1009883a 	mov	r4,r2
110422f0:	180b883a 	mov	r5,r3
110422f4:	1044d3c0 	call	11044d3c <__muldf3>
110422f8:	000d883a 	mov	r6,zero
110422fc:	000f883a 	mov	r7,zero
11042300:	1009883a 	mov	r4,r2
11042304:	180b883a 	mov	r5,r3
11042308:	d8800615 	stw	r2,24(sp)
1104230c:	d8c00715 	stw	r3,28(sp)
11042310:	1044bd80 	call	11044bd8 <__eqdf2>
11042314:	1001431e 	bne	r2,zero,11042824 <__ieee754_rem_pio2+0x6d0>
11042318:	000f883a 	mov	r7,zero
1104231c:	000d883a 	mov	r6,zero
11042320:	9809883a 	mov	r4,r19
11042324:	900b883a 	mov	r5,r18
11042328:	1044bd80 	call	11044bd8 <__eqdf2>
1104232c:	100f003a 	cmpeq	r7,r2,zero
11042330:	00800084 	movi	r2,2
11042334:	11cfc83a 	sub	r7,r2,r7
11042338:	00800084 	movi	r2,2
1104233c:	d8800015 	stw	r2,0(sp)
11042340:	00844174 	movhi	r2,4357
11042344:	109b8704 	addi	r2,r2,28188
11042348:	d8800115 	stw	r2,4(sp)
1104234c:	a00d883a 	mov	r6,r20
11042350:	800b883a 	mov	r5,r16
11042354:	d9000204 	addi	r4,sp,8
11042358:	1042d640 	call	11042d64 <__kernel_rem_pio2>
1104235c:	88000d0e 	bge	r17,zero,11042394 <__ieee754_rem_pio2+0x240>
11042360:	81000117 	ldw	r4,4(r16)
11042364:	80c00317 	ldw	r3,12(r16)
11042368:	0085c83a 	sub	r2,zero,r2
1104236c:	2120003c 	xorhi	r4,r4,32768
11042370:	18e0003c 	xorhi	r3,r3,32768
11042374:	81000115 	stw	r4,4(r16)
11042378:	80c00315 	stw	r3,12(r16)
1104237c:	00000506 	br	11042394 <__ieee754_rem_pio2+0x240>
11042380:	31000015 	stw	r4,0(r6)
11042384:	31400115 	stw	r5,4(r6)
11042388:	30000215 	stw	zero,8(r6)
1104238c:	30000315 	stw	zero,12(r6)
11042390:	0005883a 	mov	r2,zero
11042394:	dfc01517 	ldw	ra,84(sp)
11042398:	df001417 	ldw	fp,80(sp)
1104239c:	ddc01317 	ldw	r23,76(sp)
110423a0:	dd801217 	ldw	r22,72(sp)
110423a4:	dd401117 	ldw	r21,68(sp)
110423a8:	dd001017 	ldw	r20,64(sp)
110423ac:	dcc00f17 	ldw	r19,60(sp)
110423b0:	dc800e17 	ldw	r18,56(sp)
110423b4:	dc400d17 	ldw	r17,52(sp)
110423b8:	dc000c17 	ldw	r16,48(sp)
110423bc:	dec01604 	addi	sp,sp,88
110423c0:	f800283a 	ret
110423c4:	200d883a 	mov	r6,r4
110423c8:	280f883a 	mov	r7,r5
110423cc:	10454540 	call	11045454 <__subdf3>
110423d0:	80800215 	stw	r2,8(r16)
110423d4:	80800015 	stw	r2,0(r16)
110423d8:	80c00315 	stw	r3,12(r16)
110423dc:	80c00115 	stw	r3,4(r16)
110423e0:	0005883a 	mov	r2,zero
110423e4:	003feb06 	br	11042394 <__ieee754_rem_pio2+0x240>
110423e8:	01cf7474 	movhi	r7,15825
110423ec:	9009883a 	mov	r4,r18
110423f0:	39ed1844 	addi	r7,r7,-19359
110423f4:	01869834 	movhi	r6,6752
110423f8:	180b883a 	mov	r5,r3
110423fc:	10454540 	call	11045454 <__subdf3>
11042400:	018b80f4 	movhi	r6,11779
11042404:	01cee8f4 	movhi	r7,15267
11042408:	319c1cc4 	addi	r6,r6,28787
1104240c:	39c66284 	addi	r7,r7,6538
11042410:	1009883a 	mov	r4,r2
11042414:	180b883a 	mov	r5,r3
11042418:	1025883a 	mov	r18,r2
1104241c:	1823883a 	mov	r17,r3
11042420:	10454540 	call	11045454 <__subdf3>
11042424:	100d883a 	mov	r6,r2
11042428:	180f883a 	mov	r7,r3
1104242c:	9009883a 	mov	r4,r18
11042430:	880b883a 	mov	r5,r17
11042434:	80800015 	stw	r2,0(r16)
11042438:	80c00115 	stw	r3,4(r16)
1104243c:	10454540 	call	11045454 <__subdf3>
11042440:	018b80f4 	movhi	r6,11779
11042444:	01cee8f4 	movhi	r7,15267
11042448:	319c1cc4 	addi	r6,r6,28787
1104244c:	39c66284 	addi	r7,r7,6538
11042450:	003f7306 	br	11042220 <__ieee754_rem_pio2+0xcc>
11042454:	1043dc00 	call	11043dc0 <fabs>
11042458:	019b72b4 	movhi	r6,28106
1104245c:	01cff934 	movhi	r7,16356
11042460:	31b220c4 	addi	r6,r6,-14205
11042464:	39d7cc04 	addi	r7,r7,24368
11042468:	1009883a 	mov	r4,r2
1104246c:	180b883a 	mov	r5,r3
11042470:	102d883a 	mov	r22,r2
11042474:	182b883a 	mov	r21,r3
11042478:	1044d3c0 	call	11044d3c <__muldf3>
1104247c:	000d883a 	mov	r6,zero
11042480:	01cff834 	movhi	r7,16352
11042484:	1009883a 	mov	r4,r2
11042488:	180b883a 	mov	r5,r3
1104248c:	104432c0 	call	1104432c <__adddf3>
11042490:	180b883a 	mov	r5,r3
11042494:	1009883a 	mov	r4,r2
11042498:	1045d500 	call	11045d50 <__fixdfsi>
1104249c:	1009883a 	mov	r4,r2
110424a0:	1025883a 	mov	r18,r2
110424a4:	1045dd00 	call	11045dd0 <__floatsidf>
110424a8:	01cffe74 	movhi	r7,16377
110424ac:	39c87ec4 	addi	r7,r7,8699
110424b0:	01951034 	movhi	r6,21568
110424b4:	1009883a 	mov	r4,r2
110424b8:	180b883a 	mov	r5,r3
110424bc:	1029883a 	mov	r20,r2
110424c0:	1827883a 	mov	r19,r3
110424c4:	1044d3c0 	call	11044d3c <__muldf3>
110424c8:	b009883a 	mov	r4,r22
110424cc:	a80b883a 	mov	r5,r21
110424d0:	100d883a 	mov	r6,r2
110424d4:	180f883a 	mov	r7,r3
110424d8:	10454540 	call	11045454 <__subdf3>
110424dc:	018698b4 	movhi	r6,6754
110424e0:	01cf7474 	movhi	r7,15825
110424e4:	a009883a 	mov	r4,r20
110424e8:	3198cc44 	addi	r6,r6,25393
110424ec:	39ed1844 	addi	r7,r7,-19359
110424f0:	980b883a 	mov	r5,r19
110424f4:	1039883a 	mov	fp,r2
110424f8:	d8c00815 	stw	r3,32(sp)
110424fc:	1044d3c0 	call	11044d3c <__muldf3>
11042500:	010007c4 	movi	r4,31
11042504:	e017883a 	mov	r11,fp
11042508:	da800817 	ldw	r10,32(sp)
1104250c:	102d883a 	mov	r22,r2
11042510:	182b883a 	mov	r21,r3
11042514:	24802816 	blt	r4,r18,110425b8 <__ieee754_rem_pio2+0x464>
11042518:	913fffc4 	addi	r4,r18,-1
1104251c:	2109883a 	add	r4,r4,r4
11042520:	01444174 	movhi	r5,4357
11042524:	2109883a 	add	r4,r4,r4
11042528:	295b6704 	addi	r5,r5,28060
1104252c:	2909883a 	add	r4,r5,r4
11042530:	21000017 	ldw	r4,0(r4)
11042534:	b9002026 	beq	r23,r4,110425b8 <__ieee754_rem_pio2+0x464>
11042538:	100d883a 	mov	r6,r2
1104253c:	180f883a 	mov	r7,r3
11042540:	e009883a 	mov	r4,fp
11042544:	500b883a 	mov	r5,r10
11042548:	da800b15 	stw	r10,44(sp)
1104254c:	df000a15 	stw	fp,40(sp)
11042550:	10454540 	call	11045454 <__subdf3>
11042554:	da800b17 	ldw	r10,44(sp)
11042558:	dac00a17 	ldw	r11,40(sp)
1104255c:	1019883a 	mov	r12,r2
11042560:	1813883a 	mov	r9,r3
11042564:	80800015 	stw	r2,0(r16)
11042568:	80c00115 	stw	r3,4(r16)
1104256c:	600d883a 	mov	r6,r12
11042570:	480f883a 	mov	r7,r9
11042574:	5809883a 	mov	r4,r11
11042578:	500b883a 	mov	r5,r10
1104257c:	da400b15 	stw	r9,44(sp)
11042580:	db000a15 	stw	r12,40(sp)
11042584:	10454540 	call	11045454 <__subdf3>
11042588:	b00d883a 	mov	r6,r22
1104258c:	a80f883a 	mov	r7,r21
11042590:	1009883a 	mov	r4,r2
11042594:	180b883a 	mov	r5,r3
11042598:	10454540 	call	11045454 <__subdf3>
1104259c:	80800215 	stw	r2,8(r16)
110425a0:	80c00315 	stw	r3,12(r16)
110425a4:	da400b17 	ldw	r9,44(sp)
110425a8:	db000a17 	ldw	r12,40(sp)
110425ac:	88009f16 	blt	r17,zero,1104282c <__ieee754_rem_pio2+0x6d8>
110425b0:	9005883a 	mov	r2,r18
110425b4:	003f7706 	br	11042394 <__ieee754_rem_pio2+0x240>
110425b8:	d9400817 	ldw	r5,32(sp)
110425bc:	100d883a 	mov	r6,r2
110425c0:	180f883a 	mov	r7,r3
110425c4:	e009883a 	mov	r4,fp
110425c8:	da800b15 	stw	r10,44(sp)
110425cc:	dac00a15 	stw	r11,40(sp)
110425d0:	10454540 	call	11045454 <__subdf3>
110425d4:	1019883a 	mov	r12,r2
110425d8:	1804d53a 	srli	r2,r3,20
110425dc:	b811d53a 	srai	r8,r23,20
110425e0:	1813883a 	mov	r9,r3
110425e4:	1081ffcc 	andi	r2,r2,2047
110425e8:	80c00115 	stw	r3,4(r16)
110425ec:	83000015 	stw	r12,0(r16)
110425f0:	4085c83a 	sub	r2,r8,r2
110425f4:	00c00404 	movi	r3,16
110425f8:	da800b17 	ldw	r10,44(sp)
110425fc:	dac00a17 	ldw	r11,40(sp)
11042600:	18bfda0e 	bge	r3,r2,1104256c <__ieee754_rem_pio2+0x418>
11042604:	01cf7474 	movhi	r7,15825
11042608:	39ed1844 	addi	r7,r7,-19359
1104260c:	01869834 	movhi	r6,6752
11042610:	a009883a 	mov	r4,r20
11042614:	980b883a 	mov	r5,r19
11042618:	da000a15 	stw	r8,40(sp)
1104261c:	1044d3c0 	call	11044d3c <__muldf3>
11042620:	d9400817 	ldw	r5,32(sp)
11042624:	100d883a 	mov	r6,r2
11042628:	180f883a 	mov	r7,r3
1104262c:	e009883a 	mov	r4,fp
11042630:	102d883a 	mov	r22,r2
11042634:	182b883a 	mov	r21,r3
11042638:	10454540 	call	11045454 <__subdf3>
1104263c:	d9400817 	ldw	r5,32(sp)
11042640:	100d883a 	mov	r6,r2
11042644:	180f883a 	mov	r7,r3
11042648:	e009883a 	mov	r4,fp
1104264c:	182f883a 	mov	r23,r3
11042650:	d8800915 	stw	r2,36(sp)
11042654:	10454540 	call	11045454 <__subdf3>
11042658:	b00d883a 	mov	r6,r22
1104265c:	a80f883a 	mov	r7,r21
11042660:	1009883a 	mov	r4,r2
11042664:	180b883a 	mov	r5,r3
11042668:	10454540 	call	11045454 <__subdf3>
1104266c:	018b80f4 	movhi	r6,11779
11042670:	01cee8f4 	movhi	r7,15267
11042674:	319c1cc4 	addi	r6,r6,28787
11042678:	39c66284 	addi	r7,r7,6538
1104267c:	a009883a 	mov	r4,r20
11042680:	980b883a 	mov	r5,r19
11042684:	102d883a 	mov	r22,r2
11042688:	182b883a 	mov	r21,r3
1104268c:	1044d3c0 	call	11044d3c <__muldf3>
11042690:	b00d883a 	mov	r6,r22
11042694:	a80f883a 	mov	r7,r21
11042698:	1009883a 	mov	r4,r2
1104269c:	180b883a 	mov	r5,r3
110426a0:	10454540 	call	11045454 <__subdf3>
110426a4:	d9000917 	ldw	r4,36(sp)
110426a8:	100d883a 	mov	r6,r2
110426ac:	180f883a 	mov	r7,r3
110426b0:	b80b883a 	mov	r5,r23
110426b4:	102d883a 	mov	r22,r2
110426b8:	182b883a 	mov	r21,r3
110426bc:	10454540 	call	11045454 <__subdf3>
110426c0:	1019883a 	mov	r12,r2
110426c4:	1804d53a 	srli	r2,r3,20
110426c8:	da000a17 	ldw	r8,40(sp)
110426cc:	83000015 	stw	r12,0(r16)
110426d0:	1081ffcc 	andi	r2,r2,2047
110426d4:	4091c83a 	sub	r8,r8,r2
110426d8:	80c00115 	stw	r3,4(r16)
110426dc:	00800c44 	movi	r2,49
110426e0:	1813883a 	mov	r9,r3
110426e4:	1200730e 	bge	r2,r8,110428b4 <__ieee754_rem_pio2+0x760>
110426e8:	01cee8f4 	movhi	r7,15267
110426ec:	39c66284 	addi	r7,r7,6538
110426f0:	018b8034 	movhi	r6,11776
110426f4:	a009883a 	mov	r4,r20
110426f8:	980b883a 	mov	r5,r19
110426fc:	1044d3c0 	call	11044d3c <__muldf3>
11042700:	d9000917 	ldw	r4,36(sp)
11042704:	100d883a 	mov	r6,r2
11042708:	180f883a 	mov	r7,r3
1104270c:	b80b883a 	mov	r5,r23
11042710:	102d883a 	mov	r22,r2
11042714:	182b883a 	mov	r21,r3
11042718:	10454540 	call	11045454 <__subdf3>
1104271c:	d9000917 	ldw	r4,36(sp)
11042720:	100d883a 	mov	r6,r2
11042724:	180f883a 	mov	r7,r3
11042728:	b80b883a 	mov	r5,r23
1104272c:	d8c00b15 	stw	r3,44(sp)
11042730:	d8800a15 	stw	r2,40(sp)
11042734:	10454540 	call	11045454 <__subdf3>
11042738:	b00d883a 	mov	r6,r22
1104273c:	a80f883a 	mov	r7,r21
11042740:	1009883a 	mov	r4,r2
11042744:	180b883a 	mov	r5,r3
11042748:	10454540 	call	11045454 <__subdf3>
1104274c:	01894834 	movhi	r6,9504
11042750:	01ce5f34 	movhi	r7,14716
11042754:	31927044 	addi	r6,r6,18881
11042758:	39e0e684 	addi	r7,r7,-31846
1104275c:	a009883a 	mov	r4,r20
11042760:	980b883a 	mov	r5,r19
11042764:	102d883a 	mov	r22,r2
11042768:	182b883a 	mov	r21,r3
1104276c:	1044d3c0 	call	11044d3c <__muldf3>
11042770:	b00d883a 	mov	r6,r22
11042774:	a80f883a 	mov	r7,r21
11042778:	1009883a 	mov	r4,r2
1104277c:	180b883a 	mov	r5,r3
11042780:	10454540 	call	11045454 <__subdf3>
11042784:	dac00a17 	ldw	r11,40(sp)
11042788:	da800b17 	ldw	r10,44(sp)
1104278c:	102d883a 	mov	r22,r2
11042790:	182b883a 	mov	r21,r3
11042794:	100d883a 	mov	r6,r2
11042798:	180f883a 	mov	r7,r3
1104279c:	5809883a 	mov	r4,r11
110427a0:	500b883a 	mov	r5,r10
110427a4:	003f6a06 	br	11042550 <__ieee754_rem_pio2+0x3fc>
110427a8:	104432c0 	call	1104432c <__adddf3>
110427ac:	1025883a 	mov	r18,r2
110427b0:	008ffe74 	movhi	r2,16377
110427b4:	10887ec4 	addi	r2,r2,8699
110427b8:	1823883a 	mov	r17,r3
110427bc:	b8802226 	beq	r23,r2,11042848 <__ieee754_rem_pio2+0x6f4>
110427c0:	018698b4 	movhi	r6,6754
110427c4:	01cf7474 	movhi	r7,15825
110427c8:	3198cc44 	addi	r6,r6,25393
110427cc:	39ed1844 	addi	r7,r7,-19359
110427d0:	9009883a 	mov	r4,r18
110427d4:	180b883a 	mov	r5,r3
110427d8:	104432c0 	call	1104432c <__adddf3>
110427dc:	100d883a 	mov	r6,r2
110427e0:	180f883a 	mov	r7,r3
110427e4:	9009883a 	mov	r4,r18
110427e8:	880b883a 	mov	r5,r17
110427ec:	80800015 	stw	r2,0(r16)
110427f0:	80c00115 	stw	r3,4(r16)
110427f4:	10454540 	call	11045454 <__subdf3>
110427f8:	018698b4 	movhi	r6,6754
110427fc:	01cf7474 	movhi	r7,15825
11042800:	3198cc44 	addi	r6,r6,25393
11042804:	39ed1844 	addi	r7,r7,-19359
11042808:	1009883a 	mov	r4,r2
1104280c:	180b883a 	mov	r5,r3
11042810:	104432c0 	call	1104432c <__adddf3>
11042814:	80800215 	stw	r2,8(r16)
11042818:	80c00315 	stw	r3,12(r16)
1104281c:	00bfffc4 	movi	r2,-1
11042820:	003edc06 	br	11042394 <__ieee754_rem_pio2+0x240>
11042824:	01c000c4 	movi	r7,3
11042828:	003ec306 	br	11042338 <__ieee754_rem_pio2+0x1e4>
1104282c:	4a60003c 	xorhi	r9,r9,32768
11042830:	18e0003c 	xorhi	r3,r3,32768
11042834:	83000015 	stw	r12,0(r16)
11042838:	82400115 	stw	r9,4(r16)
1104283c:	80c00315 	stw	r3,12(r16)
11042840:	0485c83a 	sub	r2,zero,r18
11042844:	003ed306 	br	11042394 <__ieee754_rem_pio2+0x240>
11042848:	01cf7474 	movhi	r7,15825
1104284c:	9009883a 	mov	r4,r18
11042850:	39ed1844 	addi	r7,r7,-19359
11042854:	01869834 	movhi	r6,6752
11042858:	180b883a 	mov	r5,r3
1104285c:	104432c0 	call	1104432c <__adddf3>
11042860:	018b80f4 	movhi	r6,11779
11042864:	01cee8f4 	movhi	r7,15267
11042868:	319c1cc4 	addi	r6,r6,28787
1104286c:	39c66284 	addi	r7,r7,6538
11042870:	1009883a 	mov	r4,r2
11042874:	180b883a 	mov	r5,r3
11042878:	1025883a 	mov	r18,r2
1104287c:	1823883a 	mov	r17,r3
11042880:	104432c0 	call	1104432c <__adddf3>
11042884:	100d883a 	mov	r6,r2
11042888:	180f883a 	mov	r7,r3
1104288c:	9009883a 	mov	r4,r18
11042890:	880b883a 	mov	r5,r17
11042894:	80800015 	stw	r2,0(r16)
11042898:	80c00115 	stw	r3,4(r16)
1104289c:	10454540 	call	11045454 <__subdf3>
110428a0:	018b80f4 	movhi	r6,11779
110428a4:	01cee8f4 	movhi	r7,15267
110428a8:	319c1cc4 	addi	r6,r6,28787
110428ac:	39c66284 	addi	r7,r7,6538
110428b0:	003fd506 	br	11042808 <__ieee754_rem_pio2+0x6b4>
110428b4:	dac00917 	ldw	r11,36(sp)
110428b8:	b815883a 	mov	r10,r23
110428bc:	003f2b06 	br	1104256c <__ieee754_rem_pio2+0x418>

110428c0 <__kernel_cos>:
110428c0:	defff304 	addi	sp,sp,-52
110428c4:	dc000315 	stw	r16,12(sp)
110428c8:	04200034 	movhi	r16,32768
110428cc:	843fffc4 	addi	r16,r16,-1
110428d0:	008f9034 	movhi	r2,15936
110428d4:	df000b15 	stw	fp,44(sp)
110428d8:	ddc00a15 	stw	r23,40(sp)
110428dc:	dd800915 	stw	r22,36(sp)
110428e0:	dcc00615 	stw	r19,24(sp)
110428e4:	dfc00c15 	stw	ra,48(sp)
110428e8:	dd400815 	stw	r21,32(sp)
110428ec:	dd000715 	stw	r20,28(sp)
110428f0:	dc800515 	stw	r18,20(sp)
110428f4:	dc400415 	stw	r17,16(sp)
110428f8:	2c20703a 	and	r16,r5,r16
110428fc:	10bfffc4 	addi	r2,r2,-1
11042900:	2827883a 	mov	r19,r5
11042904:	202d883a 	mov	r22,r4
11042908:	302f883a 	mov	r23,r6
1104290c:	3839883a 	mov	fp,r7
11042910:	14007516 	blt	r2,r16,11042ae8 <__kernel_cos+0x228>
11042914:	1045d500 	call	11045d50 <__fixdfsi>
11042918:	10010f26 	beq	r2,zero,11042d58 <__kernel_cos+0x498>
1104291c:	b00d883a 	mov	r6,r22
11042920:	980f883a 	mov	r7,r19
11042924:	b009883a 	mov	r4,r22
11042928:	980b883a 	mov	r5,r19
1104292c:	1044d3c0 	call	11044d3c <__muldf3>
11042930:	01afa234 	movhi	r6,48776
11042934:	01ef6a74 	movhi	r7,48553
11042938:	318e3504 	addi	r6,r6,14548
1104293c:	39feba44 	addi	r7,r7,-1303
11042940:	1009883a 	mov	r4,r2
11042944:	180b883a 	mov	r5,r3
11042948:	102b883a 	mov	r21,r2
1104294c:	1829883a 	mov	r20,r3
11042950:	1044d3c0 	call	11044d3c <__muldf3>
11042954:	01af6d74 	movhi	r6,48565
11042958:	01cf88b4 	movhi	r7,15906
1104295c:	31ac7104 	addi	r6,r6,-20028
11042960:	39fba784 	addi	r7,r7,-4450
11042964:	1009883a 	mov	r4,r2
11042968:	180b883a 	mov	r5,r3
1104296c:	104432c0 	call	1104432c <__adddf3>
11042970:	a80d883a 	mov	r6,r21
11042974:	a00f883a 	mov	r7,r20
11042978:	1009883a 	mov	r4,r2
1104297c:	180b883a 	mov	r5,r3
11042980:	1044d3c0 	call	11044d3c <__muldf3>
11042984:	01a02734 	movhi	r6,32924
11042988:	01cfa4b4 	movhi	r7,16018
1104298c:	3194ab44 	addi	r6,r6,21165
11042990:	39df93c4 	addi	r7,r7,32335
11042994:	1009883a 	mov	r4,r2
11042998:	180b883a 	mov	r5,r3
1104299c:	10454540 	call	11045454 <__subdf3>
110429a0:	a80d883a 	mov	r6,r21
110429a4:	a00f883a 	mov	r7,r20
110429a8:	1009883a 	mov	r4,r2
110429ac:	180b883a 	mov	r5,r3
110429b0:	1044d3c0 	call	11044d3c <__muldf3>
110429b4:	018672f4 	movhi	r6,6603
110429b8:	01cfbeb4 	movhi	r7,16122
110429bc:	31856404 	addi	r6,r6,5520
110429c0:	39c06804 	addi	r7,r7,416
110429c4:	1009883a 	mov	r4,r2
110429c8:	180b883a 	mov	r5,r3
110429cc:	104432c0 	call	1104432c <__adddf3>
110429d0:	a80d883a 	mov	r6,r21
110429d4:	a00f883a 	mov	r7,r20
110429d8:	1009883a 	mov	r4,r2
110429dc:	180b883a 	mov	r5,r3
110429e0:	1044d3c0 	call	11044d3c <__muldf3>
110429e4:	0185b074 	movhi	r6,5825
110429e8:	01cfd5f4 	movhi	r7,16215
110429ec:	31945dc4 	addi	r6,r6,20855
110429f0:	39f05b04 	addi	r7,r7,-16020
110429f4:	1009883a 	mov	r4,r2
110429f8:	180b883a 	mov	r5,r3
110429fc:	10454540 	call	11045454 <__subdf3>
11042a00:	a80d883a 	mov	r6,r21
11042a04:	a00f883a 	mov	r7,r20
11042a08:	1009883a 	mov	r4,r2
11042a0c:	180b883a 	mov	r5,r3
11042a10:	1044d3c0 	call	11044d3c <__muldf3>
11042a14:	01955574 	movhi	r6,21845
11042a18:	01cfe974 	movhi	r7,16293
11042a1c:	31955304 	addi	r6,r6,21836
11042a20:	39d55544 	addi	r7,r7,21845
11042a24:	1009883a 	mov	r4,r2
11042a28:	180b883a 	mov	r5,r3
11042a2c:	104432c0 	call	1104432c <__adddf3>
11042a30:	a80d883a 	mov	r6,r21
11042a34:	a00f883a 	mov	r7,r20
11042a38:	1009883a 	mov	r4,r2
11042a3c:	180b883a 	mov	r5,r3
11042a40:	1044d3c0 	call	11044d3c <__muldf3>
11042a44:	1017883a 	mov	r11,r2
11042a48:	1815883a 	mov	r10,r3
11042a4c:	a809883a 	mov	r4,r21
11042a50:	a00b883a 	mov	r5,r20
11042a54:	000d883a 	mov	r6,zero
11042a58:	01cff834 	movhi	r7,16352
11042a5c:	da800215 	stw	r10,8(sp)
11042a60:	dac00115 	stw	r11,4(sp)
11042a64:	1044d3c0 	call	11044d3c <__muldf3>
11042a68:	dac00117 	ldw	r11,4(sp)
11042a6c:	da800217 	ldw	r10,8(sp)
11042a70:	a809883a 	mov	r4,r21
11042a74:	580d883a 	mov	r6,r11
11042a78:	500f883a 	mov	r7,r10
11042a7c:	a00b883a 	mov	r5,r20
11042a80:	1023883a 	mov	r17,r2
11042a84:	1821883a 	mov	r16,r3
11042a88:	1044d3c0 	call	11044d3c <__muldf3>
11042a8c:	b80d883a 	mov	r6,r23
11042a90:	e00f883a 	mov	r7,fp
11042a94:	b009883a 	mov	r4,r22
11042a98:	980b883a 	mov	r5,r19
11042a9c:	1029883a 	mov	r20,r2
11042aa0:	1825883a 	mov	r18,r3
11042aa4:	1044d3c0 	call	11044d3c <__muldf3>
11042aa8:	a009883a 	mov	r4,r20
11042aac:	900b883a 	mov	r5,r18
11042ab0:	100d883a 	mov	r6,r2
11042ab4:	180f883a 	mov	r7,r3
11042ab8:	10454540 	call	11045454 <__subdf3>
11042abc:	8809883a 	mov	r4,r17
11042ac0:	800b883a 	mov	r5,r16
11042ac4:	100d883a 	mov	r6,r2
11042ac8:	180f883a 	mov	r7,r3
11042acc:	10454540 	call	11045454 <__subdf3>
11042ad0:	100d883a 	mov	r6,r2
11042ad4:	180f883a 	mov	r7,r3
11042ad8:	0009883a 	mov	r4,zero
11042adc:	014ffc34 	movhi	r5,16368
11042ae0:	10454540 	call	11045454 <__subdf3>
11042ae4:	00008b06 	br	11042d14 <__kernel_cos+0x454>
11042ae8:	200d883a 	mov	r6,r4
11042aec:	280f883a 	mov	r7,r5
11042af0:	1044d3c0 	call	11044d3c <__muldf3>
11042af4:	01afa234 	movhi	r6,48776
11042af8:	01ef6a74 	movhi	r7,48553
11042afc:	318e3504 	addi	r6,r6,14548
11042b00:	39feba44 	addi	r7,r7,-1303
11042b04:	1009883a 	mov	r4,r2
11042b08:	180b883a 	mov	r5,r3
11042b0c:	1025883a 	mov	r18,r2
11042b10:	1823883a 	mov	r17,r3
11042b14:	1044d3c0 	call	11044d3c <__muldf3>
11042b18:	01af6d74 	movhi	r6,48565
11042b1c:	01cf88b4 	movhi	r7,15906
11042b20:	31ac7104 	addi	r6,r6,-20028
11042b24:	39fba784 	addi	r7,r7,-4450
11042b28:	1009883a 	mov	r4,r2
11042b2c:	180b883a 	mov	r5,r3
11042b30:	104432c0 	call	1104432c <__adddf3>
11042b34:	900d883a 	mov	r6,r18
11042b38:	880f883a 	mov	r7,r17
11042b3c:	1009883a 	mov	r4,r2
11042b40:	180b883a 	mov	r5,r3
11042b44:	1044d3c0 	call	11044d3c <__muldf3>
11042b48:	01a02734 	movhi	r6,32924
11042b4c:	01cfa4b4 	movhi	r7,16018
11042b50:	3194ab44 	addi	r6,r6,21165
11042b54:	39df93c4 	addi	r7,r7,32335
11042b58:	1009883a 	mov	r4,r2
11042b5c:	180b883a 	mov	r5,r3
11042b60:	10454540 	call	11045454 <__subdf3>
11042b64:	900d883a 	mov	r6,r18
11042b68:	880f883a 	mov	r7,r17
11042b6c:	1009883a 	mov	r4,r2
11042b70:	180b883a 	mov	r5,r3
11042b74:	1044d3c0 	call	11044d3c <__muldf3>
11042b78:	018672f4 	movhi	r6,6603
11042b7c:	01cfbeb4 	movhi	r7,16122
11042b80:	31856404 	addi	r6,r6,5520
11042b84:	39c06804 	addi	r7,r7,416
11042b88:	1009883a 	mov	r4,r2
11042b8c:	180b883a 	mov	r5,r3
11042b90:	104432c0 	call	1104432c <__adddf3>
11042b94:	900d883a 	mov	r6,r18
11042b98:	880f883a 	mov	r7,r17
11042b9c:	1009883a 	mov	r4,r2
11042ba0:	180b883a 	mov	r5,r3
11042ba4:	1044d3c0 	call	11044d3c <__muldf3>
11042ba8:	0185b074 	movhi	r6,5825
11042bac:	01cfd5f4 	movhi	r7,16215
11042bb0:	31945dc4 	addi	r6,r6,20855
11042bb4:	39f05b04 	addi	r7,r7,-16020
11042bb8:	1009883a 	mov	r4,r2
11042bbc:	180b883a 	mov	r5,r3
11042bc0:	10454540 	call	11045454 <__subdf3>
11042bc4:	900d883a 	mov	r6,r18
11042bc8:	880f883a 	mov	r7,r17
11042bcc:	1009883a 	mov	r4,r2
11042bd0:	180b883a 	mov	r5,r3
11042bd4:	1044d3c0 	call	11044d3c <__muldf3>
11042bd8:	01955574 	movhi	r6,21845
11042bdc:	01cfe974 	movhi	r7,16293
11042be0:	31955304 	addi	r6,r6,21836
11042be4:	39d55544 	addi	r7,r7,21845
11042be8:	1009883a 	mov	r4,r2
11042bec:	180b883a 	mov	r5,r3
11042bf0:	104432c0 	call	1104432c <__adddf3>
11042bf4:	900d883a 	mov	r6,r18
11042bf8:	880f883a 	mov	r7,r17
11042bfc:	1009883a 	mov	r4,r2
11042c00:	180b883a 	mov	r5,r3
11042c04:	1044d3c0 	call	11044d3c <__muldf3>
11042c08:	1013883a 	mov	r9,r2
11042c0c:	1017883a 	mov	r11,r2
11042c10:	008ff4f4 	movhi	r2,16339
11042c14:	108ccc84 	addi	r2,r2,13106
11042c18:	1811883a 	mov	r8,r3
11042c1c:	902b883a 	mov	r21,r18
11042c20:	8829883a 	mov	r20,r17
11042c24:	1815883a 	mov	r10,r3
11042c28:	143f880e 	bge	r2,r16,11042a4c <__kernel_cos+0x18c>
11042c2c:	008ffa74 	movhi	r2,16361
11042c30:	14004416 	blt	r2,r16,11042d44 <__kernel_cos+0x484>
11042c34:	00bff834 	movhi	r2,65504
11042c38:	80a1883a 	add	r16,r16,r2
11042c3c:	000d883a 	mov	r6,zero
11042c40:	800f883a 	mov	r7,r16
11042c44:	0009883a 	mov	r4,zero
11042c48:	014ffc34 	movhi	r5,16368
11042c4c:	da400115 	stw	r9,4(sp)
11042c50:	d8c00215 	stw	r3,8(sp)
11042c54:	10454540 	call	11045454 <__subdf3>
11042c58:	da000217 	ldw	r8,8(sp)
11042c5c:	da400117 	ldw	r9,4(sp)
11042c60:	102b883a 	mov	r21,r2
11042c64:	d8c00015 	stw	r3,0(sp)
11042c68:	9009883a 	mov	r4,r18
11042c6c:	880b883a 	mov	r5,r17
11042c70:	000d883a 	mov	r6,zero
11042c74:	01cff834 	movhi	r7,16352
11042c78:	da000215 	stw	r8,8(sp)
11042c7c:	da400115 	stw	r9,4(sp)
11042c80:	1044d3c0 	call	11044d3c <__muldf3>
11042c84:	800f883a 	mov	r7,r16
11042c88:	000d883a 	mov	r6,zero
11042c8c:	1009883a 	mov	r4,r2
11042c90:	180b883a 	mov	r5,r3
11042c94:	10454540 	call	11045454 <__subdf3>
11042c98:	da400117 	ldw	r9,4(sp)
11042c9c:	da000217 	ldw	r8,8(sp)
11042ca0:	9009883a 	mov	r4,r18
11042ca4:	480d883a 	mov	r6,r9
11042ca8:	400f883a 	mov	r7,r8
11042cac:	880b883a 	mov	r5,r17
11042cb0:	1029883a 	mov	r20,r2
11042cb4:	1821883a 	mov	r16,r3
11042cb8:	1044d3c0 	call	11044d3c <__muldf3>
11042cbc:	b80d883a 	mov	r6,r23
11042cc0:	e00f883a 	mov	r7,fp
11042cc4:	b009883a 	mov	r4,r22
11042cc8:	980b883a 	mov	r5,r19
11042ccc:	1025883a 	mov	r18,r2
11042cd0:	1823883a 	mov	r17,r3
11042cd4:	1044d3c0 	call	11044d3c <__muldf3>
11042cd8:	100d883a 	mov	r6,r2
11042cdc:	180f883a 	mov	r7,r3
11042ce0:	9009883a 	mov	r4,r18
11042ce4:	880b883a 	mov	r5,r17
11042ce8:	10454540 	call	11045454 <__subdf3>
11042cec:	100d883a 	mov	r6,r2
11042cf0:	180f883a 	mov	r7,r3
11042cf4:	a009883a 	mov	r4,r20
11042cf8:	800b883a 	mov	r5,r16
11042cfc:	10454540 	call	11045454 <__subdf3>
11042d00:	d9400017 	ldw	r5,0(sp)
11042d04:	100d883a 	mov	r6,r2
11042d08:	180f883a 	mov	r7,r3
11042d0c:	a809883a 	mov	r4,r21
11042d10:	10454540 	call	11045454 <__subdf3>
11042d14:	dfc00c17 	ldw	ra,48(sp)
11042d18:	df000b17 	ldw	fp,44(sp)
11042d1c:	ddc00a17 	ldw	r23,40(sp)
11042d20:	dd800917 	ldw	r22,36(sp)
11042d24:	dd400817 	ldw	r21,32(sp)
11042d28:	dd000717 	ldw	r20,28(sp)
11042d2c:	dcc00617 	ldw	r19,24(sp)
11042d30:	dc800517 	ldw	r18,20(sp)
11042d34:	dc400417 	ldw	r17,16(sp)
11042d38:	dc000317 	ldw	r16,12(sp)
11042d3c:	dec00d04 	addi	sp,sp,52
11042d40:	f800283a 	ret
11042d44:	008ff9f4 	movhi	r2,16359
11042d48:	002b883a 	mov	r21,zero
11042d4c:	d8800015 	stw	r2,0(sp)
11042d50:	040ff4b4 	movhi	r16,16338
11042d54:	003fc406 	br	11042c68 <__kernel_cos+0x3a8>
11042d58:	0005883a 	mov	r2,zero
11042d5c:	00cffc34 	movhi	r3,16368
11042d60:	003fec06 	br	11042d14 <__kernel_cos+0x454>

11042d64 <__kernel_rem_pio2>:
11042d64:	deff5a04 	addi	sp,sp,-664
11042d68:	da00a617 	ldw	r8,664(sp)
11042d6c:	00c44174 	movhi	r3,4357
11042d70:	18dbd904 	addi	r3,r3,28516
11042d74:	4205883a 	add	r2,r8,r8
11042d78:	1085883a 	add	r2,r2,r2
11042d7c:	1885883a 	add	r2,r3,r2
11042d80:	d9008e15 	stw	r4,568(sp)
11042d84:	d9408f15 	stw	r5,572(sp)
11042d88:	313fff44 	addi	r4,r6,-3
11042d8c:	01400604 	movi	r5,24
11042d90:	dd80a215 	stw	r22,648(sp)
11042d94:	dc009c15 	stw	r16,624(sp)
11042d98:	dfc0a515 	stw	ra,660(sp)
11042d9c:	df00a415 	stw	fp,656(sp)
11042da0:	ddc0a315 	stw	r23,652(sp)
11042da4:	dd40a115 	stw	r21,644(sp)
11042da8:	dd00a015 	stw	r20,640(sp)
11042dac:	dcc09f15 	stw	r19,636(sp)
11042db0:	dc809e15 	stw	r18,632(sp)
11042db4:	dc409d15 	stw	r17,628(sp)
11042db8:	3021883a 	mov	r16,r6
11042dbc:	d9c09315 	stw	r7,588(sp)
11042dc0:	15800017 	ldw	r22,0(r2)
11042dc4:	10441780 	call	11044178 <__divsi3>
11042dc8:	da009317 	ldw	r8,588(sp)
11042dcc:	d8809215 	stw	r2,584(sp)
11042dd0:	423fffc4 	addi	r8,r8,-1
11042dd4:	da008d15 	stw	r8,564(sp)
11042dd8:	10033b16 	blt	r2,zero,11043ac8 <__kernel_rem_pio2+0xd64>
11042ddc:	da009217 	ldw	r8,584(sp)
11042de0:	d9009217 	ldw	r4,584(sp)
11042de4:	42000044 	addi	r8,r8,1
11042de8:	40fffa24 	muli	r3,r8,-24
11042dec:	da009515 	stw	r8,596(sp)
11042df0:	da008d17 	ldw	r8,564(sp)
11042df4:	1c07883a 	add	r3,r3,r16
11042df8:	d8c09015 	stw	r3,576(sp)
11042dfc:	b205883a 	add	r2,r22,r8
11042e00:	2223c83a 	sub	r17,r4,r8
11042e04:	10001016 	blt	r2,zero,11042e48 <__kernel_rem_pio2+0xe4>
11042e08:	da00a717 	ldw	r8,668(sp)
11042e0c:	8c65883a 	add	r18,r17,r17
11042e10:	94a5883a 	add	r18,r18,r18
11042e14:	1445883a 	add	r2,r2,r17
11042e18:	dcc05004 	addi	r19,sp,320
11042e1c:	44a5883a 	add	r18,r8,r18
11042e20:	14000044 	addi	r16,r2,1
11042e24:	88015316 	blt	r17,zero,11043374 <__kernel_rem_pio2+0x610>
11042e28:	91000017 	ldw	r4,0(r18)
11042e2c:	1045dd00 	call	11045dd0 <__floatsidf>
11042e30:	98800015 	stw	r2,0(r19)
11042e34:	98c00115 	stw	r3,4(r19)
11042e38:	8c400044 	addi	r17,r17,1
11042e3c:	9cc00204 	addi	r19,r19,8
11042e40:	94800104 	addi	r18,r18,4
11042e44:	8c3ff71e 	bne	r17,r16,11042e24 <__kernel_rem_pio2+0xc0>
11042e48:	b0002816 	blt	r22,zero,11042eec <__kernel_rem_pio2+0x188>
11042e4c:	da008d17 	ldw	r8,564(sp)
11042e50:	b4c00044 	addi	r19,r22,1
11042e54:	982690fa 	slli	r19,r19,3
11042e58:	402490fa 	slli	r18,r8,3
11042e5c:	da008e17 	ldw	r8,568(sp)
11042e60:	d8805004 	addi	r2,sp,320
11042e64:	94000204 	addi	r16,r18,8
11042e68:	d823883a 	mov	r17,sp
11042e6c:	14a5883a 	add	r18,r2,r18
11042e70:	dcef883a 	add	r23,sp,r19
11042e74:	4421883a 	add	r16,r8,r16
11042e78:	dd809115 	stw	r22,580(sp)
11042e7c:	4039883a 	mov	fp,r8
11042e80:	da008d17 	ldw	r8,564(sp)
11042e84:	40016016 	blt	r8,zero,11043408 <__kernel_rem_pio2+0x6a4>
11042e88:	e027883a 	mov	r19,fp
11042e8c:	9029883a 	mov	r20,r18
11042e90:	002d883a 	mov	r22,zero
11042e94:	002b883a 	mov	r21,zero
11042e98:	a1800017 	ldw	r6,0(r20)
11042e9c:	a1c00117 	ldw	r7,4(r20)
11042ea0:	99000017 	ldw	r4,0(r19)
11042ea4:	99400117 	ldw	r5,4(r19)
11042ea8:	9cc00204 	addi	r19,r19,8
11042eac:	a53ffe04 	addi	r20,r20,-8
11042eb0:	1044d3c0 	call	11044d3c <__muldf3>
11042eb4:	b009883a 	mov	r4,r22
11042eb8:	a80b883a 	mov	r5,r21
11042ebc:	100d883a 	mov	r6,r2
11042ec0:	180f883a 	mov	r7,r3
11042ec4:	104432c0 	call	1104432c <__adddf3>
11042ec8:	102d883a 	mov	r22,r2
11042ecc:	182b883a 	mov	r21,r3
11042ed0:	9c3ff11e 	bne	r19,r16,11042e98 <__kernel_rem_pio2+0x134>
11042ed4:	8d800015 	stw	r22,0(r17)
11042ed8:	8d400115 	stw	r21,4(r17)
11042edc:	8c400204 	addi	r17,r17,8
11042ee0:	94800204 	addi	r18,r18,8
11042ee4:	8dffe61e 	bne	r17,r23,11042e80 <__kernel_rem_pio2+0x11c>
11042ee8:	dd809117 	ldw	r22,580(sp)
11042eec:	00d00034 	movhi	r3,16384
11042ef0:	da009317 	ldw	r8,588(sp)
11042ef4:	18ffff84 	addi	r3,r3,-2
11042ef8:	b0c7883a 	add	r3,r22,r3
11042efc:	18c7883a 	add	r3,r3,r3
11042f00:	402090fa 	slli	r16,r8,3
11042f04:	18c7883a 	add	r3,r3,r3
11042f08:	da007804 	addi	r8,sp,480
11042f0c:	40d1883a 	add	r8,r8,r3
11042f10:	b0bfffc4 	addi	r2,r22,-1
11042f14:	da009615 	stw	r8,600(sp)
11042f18:	da008e17 	ldw	r8,568(sp)
11042f1c:	1085883a 	add	r2,r2,r2
11042f20:	1085883a 	add	r2,r2,r2
11042f24:	19000104 	addi	r4,r3,4
11042f28:	d885883a 	add	r2,sp,r2
11042f2c:	4421883a 	add	r16,r8,r16
11042f30:	da007804 	addi	r8,sp,480
11042f34:	4111883a 	add	r8,r8,r4
11042f38:	10807804 	addi	r2,r2,480
11042f3c:	da009715 	stw	r8,604(sp)
11042f40:	b025883a 	mov	r18,r22
11042f44:	d8809815 	stw	r2,608(sp)
11042f48:	dd809415 	stw	r22,592(sp)
11042f4c:	900490fa 	slli	r2,r18,3
11042f50:	d885883a 	add	r2,sp,r2
11042f54:	17000017 	ldw	fp,0(r2)
11042f58:	15400117 	ldw	r21,4(r2)
11042f5c:	04802b0e 	bge	zero,r18,1104300c <__kernel_rem_pio2+0x2a8>
11042f60:	00880034 	movhi	r2,8192
11042f64:	10bfffc4 	addi	r2,r2,-1
11042f68:	90a9883a 	add	r20,r18,r2
11042f6c:	a02890fa 	slli	r20,r20,3
11042f70:	dc407804 	addi	r17,sp,480
11042f74:	dcfffe04 	addi	r19,sp,-8
11042f78:	dd29883a 	add	r20,sp,r20
11042f7c:	000d883a 	mov	r6,zero
11042f80:	01cf9c34 	movhi	r7,15984
11042f84:	e009883a 	mov	r4,fp
11042f88:	a80b883a 	mov	r5,r21
11042f8c:	1044d3c0 	call	11044d3c <__muldf3>
11042f90:	180b883a 	mov	r5,r3
11042f94:	1009883a 	mov	r4,r2
11042f98:	1045d500 	call	11045d50 <__fixdfsi>
11042f9c:	1009883a 	mov	r4,r2
11042fa0:	1045dd00 	call	11045dd0 <__floatsidf>
11042fa4:	000d883a 	mov	r6,zero
11042fa8:	01d05c34 	movhi	r7,16752
11042fac:	1009883a 	mov	r4,r2
11042fb0:	180b883a 	mov	r5,r3
11042fb4:	102f883a 	mov	r23,r2
11042fb8:	182d883a 	mov	r22,r3
11042fbc:	1044d3c0 	call	11044d3c <__muldf3>
11042fc0:	100d883a 	mov	r6,r2
11042fc4:	180f883a 	mov	r7,r3
11042fc8:	e009883a 	mov	r4,fp
11042fcc:	a80b883a 	mov	r5,r21
11042fd0:	10454540 	call	11045454 <__subdf3>
11042fd4:	180b883a 	mov	r5,r3
11042fd8:	1009883a 	mov	r4,r2
11042fdc:	1045d500 	call	11045d50 <__fixdfsi>
11042fe0:	a1800017 	ldw	r6,0(r20)
11042fe4:	a1c00117 	ldw	r7,4(r20)
11042fe8:	88800015 	stw	r2,0(r17)
11042fec:	b809883a 	mov	r4,r23
11042ff0:	b00b883a 	mov	r5,r22
11042ff4:	104432c0 	call	1104432c <__adddf3>
11042ff8:	a53ffe04 	addi	r20,r20,-8
11042ffc:	1039883a 	mov	fp,r2
11043000:	182b883a 	mov	r21,r3
11043004:	8c400104 	addi	r17,r17,4
11043008:	a4ffdc1e 	bne	r20,r19,11042f7c <__kernel_rem_pio2+0x218>
1104300c:	d9809017 	ldw	r6,576(sp)
11043010:	a80b883a 	mov	r5,r21
11043014:	e009883a 	mov	r4,fp
11043018:	1043fc00 	call	11043fc0 <scalbn>
1104301c:	000d883a 	mov	r6,zero
11043020:	01cff034 	movhi	r7,16320
11043024:	1009883a 	mov	r4,r2
11043028:	180b883a 	mov	r5,r3
1104302c:	1027883a 	mov	r19,r2
11043030:	1823883a 	mov	r17,r3
11043034:	1044d3c0 	call	11044d3c <__muldf3>
11043038:	1009883a 	mov	r4,r2
1104303c:	180b883a 	mov	r5,r3
11043040:	1043dd40 	call	11043dd4 <floor>
11043044:	000d883a 	mov	r6,zero
11043048:	01d00834 	movhi	r7,16416
1104304c:	1009883a 	mov	r4,r2
11043050:	180b883a 	mov	r5,r3
11043054:	1044d3c0 	call	11044d3c <__muldf3>
11043058:	100d883a 	mov	r6,r2
1104305c:	180f883a 	mov	r7,r3
11043060:	9809883a 	mov	r4,r19
11043064:	880b883a 	mov	r5,r17
11043068:	10454540 	call	11045454 <__subdf3>
1104306c:	180b883a 	mov	r5,r3
11043070:	1009883a 	mov	r4,r2
11043074:	1827883a 	mov	r19,r3
11043078:	1029883a 	mov	r20,r2
1104307c:	1045d500 	call	11045d50 <__fixdfsi>
11043080:	1009883a 	mov	r4,r2
11043084:	1023883a 	mov	r17,r2
11043088:	1045dd00 	call	11045dd0 <__floatsidf>
1104308c:	a009883a 	mov	r4,r20
11043090:	100d883a 	mov	r6,r2
11043094:	180f883a 	mov	r7,r3
11043098:	980b883a 	mov	r5,r19
1104309c:	10454540 	call	11045454 <__subdf3>
110430a0:	d9009017 	ldw	r4,576(sp)
110430a4:	1013883a 	mov	r9,r2
110430a8:	102b883a 	mov	r21,r2
110430ac:	1811883a 	mov	r8,r3
110430b0:	0100b30e 	bge	zero,r4,11043380 <__kernel_rem_pio2+0x61c>
110430b4:	90bfffc4 	addi	r2,r18,-1
110430b8:	1085883a 	add	r2,r2,r2
110430bc:	1085883a 	add	r2,r2,r2
110430c0:	d885883a 	add	r2,sp,r2
110430c4:	10807804 	addi	r2,r2,480
110430c8:	d9809017 	ldw	r6,576(sp)
110430cc:	11400017 	ldw	r5,0(r2)
110430d0:	01000604 	movi	r4,24
110430d4:	2189c83a 	sub	r4,r4,r6
110430d8:	290dd83a 	sra	r6,r5,r4
110430dc:	d9c09017 	ldw	r7,576(sp)
110430e0:	04c005c4 	movi	r19,23
110430e4:	3108983a 	sll	r4,r6,r4
110430e8:	99e7c83a 	sub	r19,r19,r7
110430ec:	89a3883a 	add	r17,r17,r6
110430f0:	2909c83a 	sub	r4,r5,r4
110430f4:	24e7d83a 	sra	r19,r4,r19
110430f8:	11000015 	stw	r4,0(r2)
110430fc:	04c02a0e 	bge	zero,r19,110431a8 <__kernel_rem_pio2+0x444>
11043100:	8c400044 	addi	r17,r17,1
11043104:	0481570e 	bge	zero,r18,11043664 <__kernel_rem_pio2+0x900>
11043108:	02804034 	movhi	r10,256
1104310c:	52bfffc4 	addi	r10,r10,-1
11043110:	d8807804 	addi	r2,sp,480
11043114:	000b883a 	mov	r5,zero
11043118:	0029883a 	mov	r20,zero
1104311c:	01c04034 	movhi	r7,256
11043120:	00000706 	br	11043140 <__kernel_rem_pio2+0x3dc>
11043124:	390dc83a 	sub	r6,r7,r4
11043128:	20000226 	beq	r4,zero,11043134 <__kernel_rem_pio2+0x3d0>
1104312c:	11800015 	stw	r6,0(r2)
11043130:	05000044 	movi	r20,1
11043134:	29400044 	addi	r5,r5,1
11043138:	10800104 	addi	r2,r2,4
1104313c:	2c80080e 	bge	r5,r18,11043160 <__kernel_rem_pio2+0x3fc>
11043140:	11000017 	ldw	r4,0(r2)
11043144:	a03ff726 	beq	r20,zero,11043124 <__kernel_rem_pio2+0x3c0>
11043148:	5109c83a 	sub	r4,r10,r4
1104314c:	11000015 	stw	r4,0(r2)
11043150:	29400044 	addi	r5,r5,1
11043154:	05000044 	movi	r20,1
11043158:	10800104 	addi	r2,r2,4
1104315c:	2cbff816 	blt	r5,r18,11043140 <__kernel_rem_pio2+0x3dc>
11043160:	d9009017 	ldw	r4,576(sp)
11043164:	01000e0e 	bge	zero,r4,110431a0 <__kernel_rem_pio2+0x43c>
11043168:	00800044 	movi	r2,1
1104316c:	20808d26 	beq	r4,r2,110433a4 <__kernel_rem_pio2+0x640>
11043170:	00800084 	movi	r2,2
11043174:	20800a1e 	bne	r4,r2,110431a0 <__kernel_rem_pio2+0x43c>
11043178:	90bfffc4 	addi	r2,r18,-1
1104317c:	1085883a 	add	r2,r2,r2
11043180:	1085883a 	add	r2,r2,r2
11043184:	d885883a 	add	r2,sp,r2
11043188:	10807804 	addi	r2,r2,480
1104318c:	11400017 	ldw	r5,0(r2)
11043190:	01001034 	movhi	r4,64
11043194:	213fffc4 	addi	r4,r4,-1
11043198:	2908703a 	and	r4,r5,r4
1104319c:	11000015 	stw	r4,0(r2)
110431a0:	00800084 	movi	r2,2
110431a4:	98805d26 	beq	r19,r2,1104331c <__kernel_rem_pio2+0x5b8>
110431a8:	400b883a 	mov	r5,r8
110431ac:	000d883a 	mov	r6,zero
110431b0:	000f883a 	mov	r7,zero
110431b4:	a809883a 	mov	r4,r21
110431b8:	da009b15 	stw	r8,620(sp)
110431bc:	1044bd80 	call	11044bd8 <__eqdf2>
110431c0:	da009b17 	ldw	r8,620(sp)
110431c4:	10012b1e 	bne	r2,zero,11043674 <__kernel_rem_pio2+0x910>
110431c8:	da009417 	ldw	r8,592(sp)
110431cc:	917fffc4 	addi	r5,r18,-1
110431d0:	2a000e16 	blt	r5,r8,1104320c <__kernel_rem_pio2+0x4a8>
110431d4:	00900034 	movhi	r2,16384
110431d8:	10bfffc4 	addi	r2,r2,-1
110431dc:	9085883a 	add	r2,r18,r2
110431e0:	1085883a 	add	r2,r2,r2
110431e4:	d9809717 	ldw	r6,604(sp)
110431e8:	1085883a 	add	r2,r2,r2
110431ec:	d9007804 	addi	r4,sp,480
110431f0:	0007883a 	mov	r3,zero
110431f4:	2085883a 	add	r2,r4,r2
110431f8:	11000017 	ldw	r4,0(r2)
110431fc:	10bfff04 	addi	r2,r2,-4
11043200:	1906b03a 	or	r3,r3,r4
11043204:	11bffc1e 	bne	r2,r6,110431f8 <__kernel_rem_pio2+0x494>
11043208:	1800821e 	bne	r3,zero,11043414 <__kernel_rem_pio2+0x6b0>
1104320c:	da009817 	ldw	r8,608(sp)
11043210:	40800017 	ldw	r2,0(r8)
11043214:	1001151e 	bne	r2,zero,1104366c <__kernel_rem_pio2+0x908>
11043218:	d8809617 	ldw	r2,600(sp)
1104321c:	05000044 	movi	r20,1
11043220:	10bfff04 	addi	r2,r2,-4
11043224:	10c00117 	ldw	r3,4(r2)
11043228:	a5000044 	addi	r20,r20,1
1104322c:	183ffc26 	beq	r3,zero,11043220 <__kernel_rem_pio2+0x4bc>
11043230:	9529883a 	add	r20,r18,r20
11043234:	90800044 	addi	r2,r18,1
11043238:	dd009115 	stw	r20,580(sp)
1104323c:	a0803216 	blt	r20,r2,11043308 <__kernel_rem_pio2+0x5a4>
11043240:	da009317 	ldw	r8,588(sp)
11043244:	d8c09117 	ldw	r3,580(sp)
11043248:	44a3883a 	add	r17,r8,r18
1104324c:	da009217 	ldw	r8,584(sp)
11043250:	882290fa 	slli	r17,r17,3
11043254:	40a5883a 	add	r18,r8,r2
11043258:	da009517 	ldw	r8,596(sp)
1104325c:	100490fa 	slli	r2,r2,3
11043260:	94a5883a 	add	r18,r18,r18
11043264:	40eb883a 	add	r21,r8,r3
11043268:	da00a717 	ldw	r8,668(sp)
1104326c:	ad6b883a 	add	r21,r21,r21
11043270:	94a5883a 	add	r18,r18,r18
11043274:	ad6b883a 	add	r21,r21,r21
11043278:	d8c05004 	addi	r3,sp,320
1104327c:	44a5883a 	add	r18,r8,r18
11043280:	1c63883a 	add	r17,r3,r17
11043284:	d8a7883a 	add	r19,sp,r2
11043288:	456b883a 	add	r21,r8,r21
1104328c:	91000017 	ldw	r4,0(r18)
11043290:	1045dd00 	call	11045dd0 <__floatsidf>
11043294:	da008d17 	ldw	r8,564(sp)
11043298:	88800015 	stw	r2,0(r17)
1104329c:	88c00115 	stw	r3,4(r17)
110432a0:	40001b16 	blt	r8,zero,11043310 <__kernel_rem_pio2+0x5ac>
110432a4:	dd008e17 	ldw	r20,568(sp)
110432a8:	882d883a 	mov	r22,r17
110432ac:	002f883a 	mov	r23,zero
110432b0:	0039883a 	mov	fp,zero
110432b4:	b1800017 	ldw	r6,0(r22)
110432b8:	b1c00117 	ldw	r7,4(r22)
110432bc:	a1000017 	ldw	r4,0(r20)
110432c0:	a1400117 	ldw	r5,4(r20)
110432c4:	a5000204 	addi	r20,r20,8
110432c8:	b5bffe04 	addi	r22,r22,-8
110432cc:	1044d3c0 	call	11044d3c <__muldf3>
110432d0:	b809883a 	mov	r4,r23
110432d4:	e00b883a 	mov	r5,fp
110432d8:	100d883a 	mov	r6,r2
110432dc:	180f883a 	mov	r7,r3
110432e0:	104432c0 	call	1104432c <__adddf3>
110432e4:	102f883a 	mov	r23,r2
110432e8:	1839883a 	mov	fp,r3
110432ec:	a43ff11e 	bne	r20,r16,110432b4 <__kernel_rem_pio2+0x550>
110432f0:	9dc00015 	stw	r23,0(r19)
110432f4:	9f000115 	stw	fp,4(r19)
110432f8:	94800104 	addi	r18,r18,4
110432fc:	8c400204 	addi	r17,r17,8
11043300:	9cc00204 	addi	r19,r19,8
11043304:	957fe11e 	bne	r18,r21,1104328c <__kernel_rem_pio2+0x528>
11043308:	dc809117 	ldw	r18,580(sp)
1104330c:	003f0f06 	br	11042f4c <__kernel_rem_pio2+0x1e8>
11043310:	002f883a 	mov	r23,zero
11043314:	0039883a 	mov	fp,zero
11043318:	003ff506 	br	110432f0 <__kernel_rem_pio2+0x58c>
1104331c:	480d883a 	mov	r6,r9
11043320:	180f883a 	mov	r7,r3
11043324:	0009883a 	mov	r4,zero
11043328:	014ffc34 	movhi	r5,16368
1104332c:	10454540 	call	11045454 <__subdf3>
11043330:	102b883a 	mov	r21,r2
11043334:	1811883a 	mov	r8,r3
11043338:	a03f9b26 	beq	r20,zero,110431a8 <__kernel_rem_pio2+0x444>
1104333c:	d9809017 	ldw	r6,576(sp)
11043340:	0009883a 	mov	r4,zero
11043344:	014ffc34 	movhi	r5,16368
11043348:	d8c09b15 	stw	r3,620(sp)
1104334c:	1043fc00 	call	11043fc0 <scalbn>
11043350:	da009b17 	ldw	r8,620(sp)
11043354:	a809883a 	mov	r4,r21
11043358:	100d883a 	mov	r6,r2
1104335c:	400b883a 	mov	r5,r8
11043360:	180f883a 	mov	r7,r3
11043364:	10454540 	call	11045454 <__subdf3>
11043368:	102b883a 	mov	r21,r2
1104336c:	1811883a 	mov	r8,r3
11043370:	003f8d06 	br	110431a8 <__kernel_rem_pio2+0x444>
11043374:	0005883a 	mov	r2,zero
11043378:	0007883a 	mov	r3,zero
1104337c:	003eac06 	br	11042e30 <__kernel_rem_pio2+0xcc>
11043380:	d8809017 	ldw	r2,576(sp)
11043384:	1000121e 	bne	r2,zero,110433d0 <__kernel_rem_pio2+0x66c>
11043388:	90bfffc4 	addi	r2,r18,-1
1104338c:	1085883a 	add	r2,r2,r2
11043390:	1085883a 	add	r2,r2,r2
11043394:	d885883a 	add	r2,sp,r2
11043398:	14c07817 	ldw	r19,480(r2)
1104339c:	9827d5fa 	srai	r19,r19,23
110433a0:	003f5606 	br	110430fc <__kernel_rem_pio2+0x398>
110433a4:	90bfffc4 	addi	r2,r18,-1
110433a8:	1085883a 	add	r2,r2,r2
110433ac:	1085883a 	add	r2,r2,r2
110433b0:	d885883a 	add	r2,sp,r2
110433b4:	10807804 	addi	r2,r2,480
110433b8:	11000017 	ldw	r4,0(r2)
110433bc:	01402034 	movhi	r5,128
110433c0:	297fffc4 	addi	r5,r5,-1
110433c4:	2148703a 	and	r4,r4,r5
110433c8:	11000015 	stw	r4,0(r2)
110433cc:	003f7406 	br	110431a0 <__kernel_rem_pio2+0x43c>
110433d0:	4809883a 	mov	r4,r9
110433d4:	180b883a 	mov	r5,r3
110433d8:	000d883a 	mov	r6,zero
110433dc:	01cff834 	movhi	r7,16352
110433e0:	d8c09a15 	stw	r3,616(sp)
110433e4:	d8c09b15 	stw	r3,620(sp)
110433e8:	da409915 	stw	r9,612(sp)
110433ec:	1044c600 	call	11044c60 <__gedf2>
110433f0:	d8c09a17 	ldw	r3,616(sp)
110433f4:	da009b17 	ldw	r8,620(sp)
110433f8:	da409917 	ldw	r9,612(sp)
110433fc:	1000920e 	bge	r2,zero,11043648 <__kernel_rem_pio2+0x8e4>
11043400:	0027883a 	mov	r19,zero
11043404:	003f6806 	br	110431a8 <__kernel_rem_pio2+0x444>
11043408:	002d883a 	mov	r22,zero
1104340c:	002b883a 	mov	r21,zero
11043410:	003eb006 	br	11042ed4 <__kernel_rem_pio2+0x170>
11043414:	2945883a 	add	r2,r5,r5
11043418:	da009017 	ldw	r8,576(sp)
1104341c:	1085883a 	add	r2,r2,r2
11043420:	d885883a 	add	r2,sp,r2
11043424:	10807817 	ldw	r2,480(r2)
11043428:	423ffa04 	addi	r8,r8,-24
1104342c:	dc409115 	stw	r17,580(sp)
11043430:	dcc08d15 	stw	r19,564(sp)
11043434:	da009015 	stw	r8,576(sp)
11043438:	dd809417 	ldw	r22,592(sp)
1104343c:	2823883a 	mov	r17,r5
11043440:	10000e1e 	bne	r2,zero,1104347c <__kernel_rem_pio2+0x718>
11043444:	00900034 	movhi	r2,16384
11043448:	10bfffc4 	addi	r2,r2,-1
1104344c:	2885883a 	add	r2,r5,r2
11043450:	1085883a 	add	r2,r2,r2
11043454:	d8c07804 	addi	r3,sp,480
11043458:	1085883a 	add	r2,r2,r2
1104345c:	1885883a 	add	r2,r3,r2
11043460:	4007883a 	mov	r3,r8
11043464:	10bfff04 	addi	r2,r2,-4
11043468:	11000117 	ldw	r4,4(r2)
1104346c:	8c7fffc4 	addi	r17,r17,-1
11043470:	18fffa04 	addi	r3,r3,-24
11043474:	203ffb26 	beq	r4,zero,11043464 <__kernel_rem_pio2+0x700>
11043478:	d8c09015 	stw	r3,576(sp)
1104347c:	d9809017 	ldw	r6,576(sp)
11043480:	0009883a 	mov	r4,zero
11043484:	014ffc34 	movhi	r5,16368
11043488:	1043fc00 	call	11043fc0 <scalbn>
1104348c:	1029883a 	mov	r20,r2
11043490:	182b883a 	mov	r21,r3
11043494:	88018416 	blt	r17,zero,11043aa8 <__kernel_rem_pio2+0xd44>
11043498:	881090fa 	slli	r8,r17,3
1104349c:	d8c07804 	addi	r3,sp,480
110434a0:	da008e15 	stw	r8,568(sp)
110434a4:	d8808e17 	ldw	r2,568(sp)
110434a8:	8c51883a 	add	r8,r17,r17
110434ac:	4211883a 	add	r8,r8,r8
110434b0:	d8a1883a 	add	r16,sp,r2
110434b4:	1a25883a 	add	r18,r3,r8
110434b8:	da3ffe04 	addi	r8,sp,-8
110434bc:	da008c15 	stw	r8,560(sp)
110434c0:	8039883a 	mov	fp,r16
110434c4:	91000017 	ldw	r4,0(r18)
110434c8:	e73ffe04 	addi	fp,fp,-8
110434cc:	94bfff04 	addi	r18,r18,-4
110434d0:	1045dd00 	call	11045dd0 <__floatsidf>
110434d4:	a00d883a 	mov	r6,r20
110434d8:	a80f883a 	mov	r7,r21
110434dc:	1009883a 	mov	r4,r2
110434e0:	180b883a 	mov	r5,r3
110434e4:	1044d3c0 	call	11044d3c <__muldf3>
110434e8:	a009883a 	mov	r4,r20
110434ec:	a80b883a 	mov	r5,r21
110434f0:	e0800215 	stw	r2,8(fp)
110434f4:	e0c00315 	stw	r3,12(fp)
110434f8:	000d883a 	mov	r6,zero
110434fc:	01cf9c34 	movhi	r7,15984
11043500:	1044d3c0 	call	11044d3c <__muldf3>
11043504:	da008c17 	ldw	r8,560(sp)
11043508:	1029883a 	mov	r20,r2
1104350c:	182b883a 	mov	r21,r3
11043510:	e23fec1e 	bne	fp,r8,110434c4 <__kernel_rem_pio2+0x760>
11043514:	0029883a 	mov	r20,zero
11043518:	b0004f16 	blt	r22,zero,11043658 <__kernel_rem_pio2+0x8f4>
1104351c:	05444174 	movhi	r21,4357
11043520:	014ffe74 	movhi	r5,16377
11043524:	ad5bcb04 	addi	r21,r21,28460
11043528:	8027883a 	mov	r19,r16
1104352c:	01100034 	movhi	r4,16384
11043530:	29487ec4 	addi	r5,r5,8699
11043534:	0039883a 	mov	fp,zero
11043538:	002f883a 	mov	r23,zero
1104353c:	0025883a 	mov	r18,zero
11043540:	00000506 	br	11043558 <__kernel_rem_pio2+0x7f4>
11043544:	9cc00204 	addi	r19,r19,8
11043548:	a4800f16 	blt	r20,r18,11043588 <__kernel_rem_pio2+0x824>
1104354c:	a9000017 	ldw	r4,0(r21)
11043550:	a9400117 	ldw	r5,4(r21)
11043554:	ad400204 	addi	r21,r21,8
11043558:	99800017 	ldw	r6,0(r19)
1104355c:	99c00117 	ldw	r7,4(r19)
11043560:	94800044 	addi	r18,r18,1
11043564:	1044d3c0 	call	11044d3c <__muldf3>
11043568:	e009883a 	mov	r4,fp
1104356c:	b80b883a 	mov	r5,r23
11043570:	100d883a 	mov	r6,r2
11043574:	180f883a 	mov	r7,r3
11043578:	104432c0 	call	1104432c <__adddf3>
1104357c:	1039883a 	mov	fp,r2
11043580:	182f883a 	mov	r23,r3
11043584:	b4bfef0e 	bge	r22,r18,11043544 <__kernel_rem_pio2+0x7e0>
11043588:	a00490fa 	slli	r2,r20,3
1104358c:	da008c17 	ldw	r8,560(sp)
11043590:	843ffe04 	addi	r16,r16,-8
11043594:	d885883a 	add	r2,sp,r2
11043598:	10802804 	addi	r2,r2,160
1104359c:	17000015 	stw	fp,0(r2)
110435a0:	15c00115 	stw	r23,4(r2)
110435a4:	a5000044 	addi	r20,r20,1
110435a8:	823fdb1e 	bne	r16,r8,11043518 <__kernel_rem_pio2+0x7b4>
110435ac:	da00a617 	ldw	r8,664(sp)
110435b0:	00800084 	movi	r2,2
110435b4:	12006616 	blt	r2,r8,11043750 <__kernel_rem_pio2+0x9ec>
110435b8:	0200de16 	blt	zero,r8,11043934 <__kernel_rem_pio2+0xbd0>
110435bc:	4000141e 	bne	r8,zero,11043610 <__kernel_rem_pio2+0x8ac>
110435c0:	da008e17 	ldw	r8,568(sp)
110435c4:	d8802804 	addi	r2,sp,160
110435c8:	0007883a 	mov	r3,zero
110435cc:	1225883a 	add	r18,r2,r8
110435d0:	043fffc4 	movi	r16,-1
110435d4:	0005883a 	mov	r2,zero
110435d8:	91800017 	ldw	r6,0(r18)
110435dc:	91c00117 	ldw	r7,4(r18)
110435e0:	1009883a 	mov	r4,r2
110435e4:	180b883a 	mov	r5,r3
110435e8:	8c7fffc4 	addi	r17,r17,-1
110435ec:	104432c0 	call	1104432c <__adddf3>
110435f0:	94bffe04 	addi	r18,r18,-8
110435f4:	8c3ff81e 	bne	r17,r16,110435d8 <__kernel_rem_pio2+0x874>
110435f8:	da008d17 	ldw	r8,564(sp)
110435fc:	40000126 	beq	r8,zero,11043604 <__kernel_rem_pio2+0x8a0>
11043600:	18e0003c 	xorhi	r3,r3,32768
11043604:	da008f17 	ldw	r8,572(sp)
11043608:	40800015 	stw	r2,0(r8)
1104360c:	40c00115 	stw	r3,4(r8)
11043610:	da009117 	ldw	r8,580(sp)
11043614:	408001cc 	andi	r2,r8,7
11043618:	dfc0a517 	ldw	ra,660(sp)
1104361c:	df00a417 	ldw	fp,656(sp)
11043620:	ddc0a317 	ldw	r23,652(sp)
11043624:	dd80a217 	ldw	r22,648(sp)
11043628:	dd40a117 	ldw	r21,644(sp)
1104362c:	dd00a017 	ldw	r20,640(sp)
11043630:	dcc09f17 	ldw	r19,636(sp)
11043634:	dc809e17 	ldw	r18,632(sp)
11043638:	dc409d17 	ldw	r17,628(sp)
1104363c:	dc009c17 	ldw	r16,624(sp)
11043640:	dec0a604 	addi	sp,sp,664
11043644:	f800283a 	ret
11043648:	8c400044 	addi	r17,r17,1
1104364c:	04810d0e 	bge	zero,r18,11043a84 <__kernel_rem_pio2+0xd20>
11043650:	04c00084 	movi	r19,2
11043654:	003eac06 	br	11043108 <__kernel_rem_pio2+0x3a4>
11043658:	0039883a 	mov	fp,zero
1104365c:	002f883a 	mov	r23,zero
11043660:	003fc906 	br	11043588 <__kernel_rem_pio2+0x824>
11043664:	0029883a 	mov	r20,zero
11043668:	003ebd06 	br	11043160 <__kernel_rem_pio2+0x3fc>
1104366c:	05000044 	movi	r20,1
11043670:	003eef06 	br	11043230 <__kernel_rem_pio2+0x4cc>
11043674:	4029883a 	mov	r20,r8
11043678:	da009017 	ldw	r8,576(sp)
1104367c:	a809883a 	mov	r4,r21
11043680:	a00b883a 	mov	r5,r20
11043684:	020dc83a 	sub	r6,zero,r8
11043688:	dc409115 	stw	r17,580(sp)
1104368c:	dd809417 	ldw	r22,592(sp)
11043690:	dcc08d15 	stw	r19,564(sp)
11043694:	1043fc00 	call	11043fc0 <scalbn>
11043698:	000d883a 	mov	r6,zero
1104369c:	01d05c34 	movhi	r7,16752
110436a0:	1009883a 	mov	r4,r2
110436a4:	180b883a 	mov	r5,r3
110436a8:	102b883a 	mov	r21,r2
110436ac:	1823883a 	mov	r17,r3
110436b0:	1044c600 	call	11044c60 <__gedf2>
110436b4:	1000e916 	blt	r2,zero,11043a5c <__kernel_rem_pio2+0xcf8>
110436b8:	000d883a 	mov	r6,zero
110436bc:	01cf9c34 	movhi	r7,15984
110436c0:	880b883a 	mov	r5,r17
110436c4:	a809883a 	mov	r4,r21
110436c8:	1044d3c0 	call	11044d3c <__muldf3>
110436cc:	180b883a 	mov	r5,r3
110436d0:	1009883a 	mov	r4,r2
110436d4:	1045d500 	call	11045d50 <__fixdfsi>
110436d8:	1029883a 	mov	r20,r2
110436dc:	9485883a 	add	r2,r18,r18
110436e0:	1085883a 	add	r2,r2,r2
110436e4:	a009883a 	mov	r4,r20
110436e8:	d8a1883a 	add	r16,sp,r2
110436ec:	1045dd00 	call	11045dd0 <__floatsidf>
110436f0:	000d883a 	mov	r6,zero
110436f4:	01d05c34 	movhi	r7,16752
110436f8:	1009883a 	mov	r4,r2
110436fc:	180b883a 	mov	r5,r3
11043700:	1044d3c0 	call	11044d3c <__muldf3>
11043704:	880b883a 	mov	r5,r17
11043708:	100d883a 	mov	r6,r2
1104370c:	180f883a 	mov	r7,r3
11043710:	a809883a 	mov	r4,r21
11043714:	10454540 	call	11045454 <__subdf3>
11043718:	180b883a 	mov	r5,r3
1104371c:	1009883a 	mov	r4,r2
11043720:	1045d500 	call	11045d50 <__fixdfsi>
11043724:	da009017 	ldw	r8,576(sp)
11043728:	94400044 	addi	r17,r18,1
1104372c:	8c47883a 	add	r3,r17,r17
11043730:	84007804 	addi	r16,r16,480
11043734:	18c7883a 	add	r3,r3,r3
11043738:	80800015 	stw	r2,0(r16)
1104373c:	d8c7883a 	add	r3,sp,r3
11043740:	42000604 	addi	r8,r8,24
11043744:	da009015 	stw	r8,576(sp)
11043748:	1d007815 	stw	r20,480(r3)
1104374c:	003f4b06 	br	1104347c <__kernel_rem_pio2+0x718>
11043750:	da00a617 	ldw	r8,664(sp)
11043754:	008000c4 	movi	r2,3
11043758:	40bfad1e 	bne	r8,r2,11043610 <__kernel_rem_pio2+0x8ac>
1104375c:	0440bc0e 	bge	zero,r17,11043a50 <__kernel_rem_pio2+0xcec>
11043760:	da008e17 	ldw	r8,568(sp)
11043764:	882090fa 	slli	r16,r17,3
11043768:	dd402804 	addi	r21,sp,160
1104376c:	da05883a 	add	r2,sp,r8
11043770:	10802804 	addi	r2,r2,160
11043774:	15c00017 	ldw	r23,0(r2)
11043778:	15800117 	ldw	r22,4(r2)
1104377c:	8029883a 	mov	r20,r16
11043780:	843ffe04 	addi	r16,r16,-8
11043784:	ac21883a 	add	r16,r21,r16
11043788:	ad29883a 	add	r20,r21,r20
1104378c:	dac02604 	addi	r11,sp,152
11043790:	8811883a 	mov	r8,r17
11043794:	84400017 	ldw	r17,0(r16)
11043798:	87000117 	ldw	fp,4(r16)
1104379c:	b80d883a 	mov	r6,r23
110437a0:	b00f883a 	mov	r7,r22
110437a4:	8809883a 	mov	r4,r17
110437a8:	e00b883a 	mov	r5,fp
110437ac:	da009b15 	stw	r8,620(sp)
110437b0:	dac09915 	stw	r11,612(sp)
110437b4:	104432c0 	call	1104432c <__adddf3>
110437b8:	100d883a 	mov	r6,r2
110437bc:	180f883a 	mov	r7,r3
110437c0:	8809883a 	mov	r4,r17
110437c4:	e00b883a 	mov	r5,fp
110437c8:	1027883a 	mov	r19,r2
110437cc:	1825883a 	mov	r18,r3
110437d0:	10454540 	call	11045454 <__subdf3>
110437d4:	b80d883a 	mov	r6,r23
110437d8:	b00f883a 	mov	r7,r22
110437dc:	1009883a 	mov	r4,r2
110437e0:	180b883a 	mov	r5,r3
110437e4:	104432c0 	call	1104432c <__adddf3>
110437e8:	dac09917 	ldw	r11,612(sp)
110437ec:	a0800015 	stw	r2,0(r20)
110437f0:	a0c00115 	stw	r3,4(r20)
110437f4:	84c00015 	stw	r19,0(r16)
110437f8:	84800115 	stw	r18,4(r16)
110437fc:	843ffe04 	addi	r16,r16,-8
11043800:	a53ffe04 	addi	r20,r20,-8
11043804:	982f883a 	mov	r23,r19
11043808:	902d883a 	mov	r22,r18
1104380c:	da009b17 	ldw	r8,620(sp)
11043810:	5c3fe01e 	bne	r11,r16,11043794 <__kernel_rem_pio2+0xa30>
11043814:	00800044 	movi	r2,1
11043818:	12008d0e 	bge	r2,r8,11043a50 <__kernel_rem_pio2+0xcec>
1104381c:	402090fa 	slli	r16,r8,3
11043820:	da008e17 	ldw	r8,568(sp)
11043824:	8023883a 	mov	r17,r16
11043828:	da05883a 	add	r2,sp,r8
1104382c:	10802804 	addi	r2,r2,160
11043830:	15800017 	ldw	r22,0(r2)
11043834:	15000117 	ldw	r20,4(r2)
11043838:	ac63883a 	add	r17,r21,r17
1104383c:	843ffe04 	addi	r16,r16,-8
11043840:	ac21883a 	add	r16,r21,r16
11043844:	8825883a 	mov	r18,r17
11043848:	8811883a 	mov	r8,r17
1104384c:	84400017 	ldw	r17,0(r16)
11043850:	87000117 	ldw	fp,4(r16)
11043854:	b009883a 	mov	r4,r22
11043858:	a00b883a 	mov	r5,r20
1104385c:	880d883a 	mov	r6,r17
11043860:	e00f883a 	mov	r7,fp
11043864:	da009b15 	stw	r8,620(sp)
11043868:	104432c0 	call	1104432c <__adddf3>
1104386c:	100d883a 	mov	r6,r2
11043870:	180f883a 	mov	r7,r3
11043874:	8809883a 	mov	r4,r17
11043878:	e00b883a 	mov	r5,fp
1104387c:	102f883a 	mov	r23,r2
11043880:	1827883a 	mov	r19,r3
11043884:	10454540 	call	11045454 <__subdf3>
11043888:	b00d883a 	mov	r6,r22
1104388c:	a00f883a 	mov	r7,r20
11043890:	1009883a 	mov	r4,r2
11043894:	180b883a 	mov	r5,r3
11043898:	104432c0 	call	1104432c <__adddf3>
1104389c:	90800015 	stw	r2,0(r18)
110438a0:	90c00115 	stw	r3,4(r18)
110438a4:	85c00015 	stw	r23,0(r16)
110438a8:	84c00115 	stw	r19,4(r16)
110438ac:	843ffe04 	addi	r16,r16,-8
110438b0:	94bffe04 	addi	r18,r18,-8
110438b4:	b82d883a 	mov	r22,r23
110438b8:	9829883a 	mov	r20,r19
110438bc:	da009b17 	ldw	r8,620(sp)
110438c0:	ac3fe21e 	bne	r21,r16,1104384c <__kernel_rem_pio2+0xae8>
110438c4:	4023883a 	mov	r17,r8
110438c8:	dc002a04 	addi	r16,sp,168
110438cc:	0005883a 	mov	r2,zero
110438d0:	0007883a 	mov	r3,zero
110438d4:	89800017 	ldw	r6,0(r17)
110438d8:	89c00117 	ldw	r7,4(r17)
110438dc:	1009883a 	mov	r4,r2
110438e0:	8c7ffe04 	addi	r17,r17,-8
110438e4:	180b883a 	mov	r5,r3
110438e8:	104432c0 	call	1104432c <__adddf3>
110438ec:	847ff91e 	bne	r16,r17,110438d4 <__kernel_rem_pio2+0xb70>
110438f0:	da008d17 	ldw	r8,564(sp)
110438f4:	40004726 	beq	r8,zero,11043a14 <__kernel_rem_pio2+0xcb0>
110438f8:	d9002b17 	ldw	r4,172(sp)
110438fc:	d9402917 	ldw	r5,164(sp)
11043900:	d9802a17 	ldw	r6,168(sp)
11043904:	da008f17 	ldw	r8,572(sp)
11043908:	d9c02817 	ldw	r7,160(sp)
1104390c:	2960003c 	xorhi	r5,r5,32768
11043910:	2120003c 	xorhi	r4,r4,32768
11043914:	18e0003c 	xorhi	r3,r3,32768
11043918:	41c00015 	stw	r7,0(r8)
1104391c:	41400115 	stw	r5,4(r8)
11043920:	41800215 	stw	r6,8(r8)
11043924:	41000315 	stw	r4,12(r8)
11043928:	40800415 	stw	r2,16(r8)
1104392c:	40c00515 	stw	r3,20(r8)
11043930:	003f3706 	br	11043610 <__kernel_rem_pio2+0x8ac>
11043934:	da008e17 	ldw	r8,568(sp)
11043938:	d8802804 	addi	r2,sp,160
1104393c:	dc002604 	addi	r16,sp,152
11043940:	1225883a 	add	r18,r2,r8
11043944:	0007883a 	mov	r3,zero
11043948:	0005883a 	mov	r2,zero
1104394c:	91800017 	ldw	r6,0(r18)
11043950:	91c00117 	ldw	r7,4(r18)
11043954:	1009883a 	mov	r4,r2
11043958:	94bffe04 	addi	r18,r18,-8
1104395c:	180b883a 	mov	r5,r3
11043960:	104432c0 	call	1104432c <__adddf3>
11043964:	943ff91e 	bne	r18,r16,1104394c <__kernel_rem_pio2+0xbe8>
11043968:	da008d17 	ldw	r8,564(sp)
1104396c:	d9002817 	ldw	r4,160(sp)
11043970:	d9402917 	ldw	r5,164(sp)
11043974:	40001a26 	beq	r8,zero,110439e0 <__kernel_rem_pio2+0xc7c>
11043978:	da008f17 	ldw	r8,572(sp)
1104397c:	19a0003c 	xorhi	r6,r3,32768
11043980:	180f883a 	mov	r7,r3
11043984:	41800115 	stw	r6,4(r8)
11043988:	40800015 	stw	r2,0(r8)
1104398c:	100d883a 	mov	r6,r2
11043990:	10454540 	call	11045454 <__subdf3>
11043994:	04400c0e 	bge	zero,r17,110439c8 <__kernel_rem_pio2+0xc64>
11043998:	dc002a04 	addi	r16,sp,168
1104399c:	04800044 	movi	r18,1
110439a0:	81800017 	ldw	r6,0(r16)
110439a4:	81c00117 	ldw	r7,4(r16)
110439a8:	1009883a 	mov	r4,r2
110439ac:	180b883a 	mov	r5,r3
110439b0:	94800044 	addi	r18,r18,1
110439b4:	104432c0 	call	1104432c <__adddf3>
110439b8:	84000204 	addi	r16,r16,8
110439bc:	8cbff80e 	bge	r17,r18,110439a0 <__kernel_rem_pio2+0xc3c>
110439c0:	da008d17 	ldw	r8,564(sp)
110439c4:	40004226 	beq	r8,zero,11043ad0 <__kernel_rem_pio2+0xd6c>
110439c8:	da008f17 	ldw	r8,572(sp)
110439cc:	1009883a 	mov	r4,r2
110439d0:	18a0003c 	xorhi	r2,r3,32768
110439d4:	41000215 	stw	r4,8(r8)
110439d8:	40800315 	stw	r2,12(r8)
110439dc:	003f0c06 	br	11043610 <__kernel_rem_pio2+0x8ac>
110439e0:	da008f17 	ldw	r8,572(sp)
110439e4:	100d883a 	mov	r6,r2
110439e8:	180f883a 	mov	r7,r3
110439ec:	40800015 	stw	r2,0(r8)
110439f0:	40c00115 	stw	r3,4(r8)
110439f4:	10454540 	call	11045454 <__subdf3>
110439f8:	047fe716 	blt	zero,r17,11043998 <__kernel_rem_pio2+0xc34>
110439fc:	da008f17 	ldw	r8,572(sp)
11043a00:	1009883a 	mov	r4,r2
11043a04:	1805883a 	mov	r2,r3
11043a08:	41000215 	stw	r4,8(r8)
11043a0c:	40800315 	stw	r2,12(r8)
11043a10:	003eff06 	br	11043610 <__kernel_rem_pio2+0x8ac>
11043a14:	da008f17 	ldw	r8,572(sp)
11043a18:	d9802817 	ldw	r6,160(sp)
11043a1c:	d9402a17 	ldw	r5,168(sp)
11043a20:	d9002b17 	ldw	r4,172(sp)
11043a24:	41800015 	stw	r6,0(r8)
11043a28:	d9802917 	ldw	r6,164(sp)
11043a2c:	41400215 	stw	r5,8(r8)
11043a30:	41000315 	stw	r4,12(r8)
11043a34:	41800115 	stw	r6,4(r8)
11043a38:	40800415 	stw	r2,16(r8)
11043a3c:	40c00515 	stw	r3,20(r8)
11043a40:	003ef306 	br	11043610 <__kernel_rem_pio2+0x8ac>
11043a44:	da00a617 	ldw	r8,664(sp)
11043a48:	008000c4 	movi	r2,3
11043a4c:	40bef01e 	bne	r8,r2,11043610 <__kernel_rem_pio2+0x8ac>
11043a50:	0005883a 	mov	r2,zero
11043a54:	0007883a 	mov	r3,zero
11043a58:	003fa506 	br	110438f0 <__kernel_rem_pio2+0xb8c>
11043a5c:	9485883a 	add	r2,r18,r18
11043a60:	1085883a 	add	r2,r2,r2
11043a64:	d8a1883a 	add	r16,sp,r2
11043a68:	880b883a 	mov	r5,r17
11043a6c:	a809883a 	mov	r4,r21
11043a70:	84007804 	addi	r16,r16,480
11043a74:	1045d500 	call	11045d50 <__fixdfsi>
11043a78:	80800015 	stw	r2,0(r16)
11043a7c:	9023883a 	mov	r17,r18
11043a80:	003e7e06 	br	1104347c <__kernel_rem_pio2+0x718>
11043a84:	a80d883a 	mov	r6,r21
11043a88:	400f883a 	mov	r7,r8
11043a8c:	0009883a 	mov	r4,zero
11043a90:	014ffc34 	movhi	r5,16368
11043a94:	10454540 	call	11045454 <__subdf3>
11043a98:	102b883a 	mov	r21,r2
11043a9c:	1811883a 	mov	r8,r3
11043aa0:	04c00084 	movi	r19,2
11043aa4:	003dc006 	br	110431a8 <__kernel_rem_pio2+0x444>
11043aa8:	da00a617 	ldw	r8,664(sp)
11043aac:	00800084 	movi	r2,2
11043ab0:	123fe416 	blt	r2,r8,11043a44 <__kernel_rem_pio2+0xce0>
11043ab4:	02000c16 	blt	zero,r8,11043ae8 <__kernel_rem_pio2+0xd84>
11043ab8:	403ed51e 	bne	r8,zero,11043610 <__kernel_rem_pio2+0x8ac>
11043abc:	0005883a 	mov	r2,zero
11043ac0:	0007883a 	mov	r3,zero
11043ac4:	003ecc06 	br	110435f8 <__kernel_rem_pio2+0x894>
11043ac8:	d8009215 	stw	zero,584(sp)
11043acc:	003cc306 	br	11042ddc <__kernel_rem_pio2+0x78>
11043ad0:	da008f17 	ldw	r8,572(sp)
11043ad4:	1009883a 	mov	r4,r2
11043ad8:	1805883a 	mov	r2,r3
11043adc:	41000215 	stw	r4,8(r8)
11043ae0:	40800315 	stw	r2,12(r8)
11043ae4:	003eca06 	br	11043610 <__kernel_rem_pio2+0x8ac>
11043ae8:	0005883a 	mov	r2,zero
11043aec:	0007883a 	mov	r3,zero
11043af0:	003f9d06 	br	11043968 <__kernel_rem_pio2+0xc04>

11043af4 <__kernel_sin>:
11043af4:	00a00034 	movhi	r2,32768
11043af8:	defff404 	addi	sp,sp,-48
11043afc:	10bfffc4 	addi	r2,r2,-1
11043b00:	00cf9034 	movhi	r3,15936
11043b04:	ddc00915 	stw	r23,36(sp)
11043b08:	dd800815 	stw	r22,32(sp)
11043b0c:	dc400315 	stw	r17,12(sp)
11043b10:	dc000215 	stw	r16,8(sp)
11043b14:	dfc00b15 	stw	ra,44(sp)
11043b18:	df000a15 	stw	fp,40(sp)
11043b1c:	dd400715 	stw	r21,28(sp)
11043b20:	dd000615 	stw	r20,24(sp)
11043b24:	dcc00515 	stw	r19,20(sp)
11043b28:	dc800415 	stw	r18,16(sp)
11043b2c:	2884703a 	and	r2,r5,r2
11043b30:	18ffffc4 	addi	r3,r3,-1
11043b34:	2821883a 	mov	r16,r5
11043b38:	2023883a 	mov	r17,r4
11043b3c:	302f883a 	mov	r23,r6
11043b40:	382d883a 	mov	r22,r7
11043b44:	18800216 	blt	r3,r2,11043b50 <__kernel_sin+0x5c>
11043b48:	1045d500 	call	11045d50 <__fixdfsi>
11043b4c:	10009926 	beq	r2,zero,11043db4 <__kernel_sin+0x2c0>
11043b50:	880d883a 	mov	r6,r17
11043b54:	800f883a 	mov	r7,r16
11043b58:	8809883a 	mov	r4,r17
11043b5c:	800b883a 	mov	r5,r16
11043b60:	1044d3c0 	call	11044d3c <__muldf3>
11043b64:	100d883a 	mov	r6,r2
11043b68:	180f883a 	mov	r7,r3
11043b6c:	8809883a 	mov	r4,r17
11043b70:	800b883a 	mov	r5,r16
11043b74:	1027883a 	mov	r19,r2
11043b78:	1825883a 	mov	r18,r3
11043b7c:	1044d3c0 	call	11044d3c <__muldf3>
11043b80:	0196b434 	movhi	r6,23248
11043b84:	01cf79b4 	movhi	r7,15846
11043b88:	31b55f04 	addi	r6,r6,-10884
11043b8c:	39f64e84 	addi	r7,r7,-9926
11043b90:	9809883a 	mov	r4,r19
11043b94:	900b883a 	mov	r5,r18
11043b98:	102b883a 	mov	r21,r2
11043b9c:	1829883a 	mov	r20,r3
11043ba0:	1044d3c0 	call	11044d3c <__muldf3>
11043ba4:	01a28b34 	movhi	r6,35372
11043ba8:	01cf96f4 	movhi	r7,15963
11043bac:	31a73ac4 	addi	r6,r6,-25365
11043bb0:	39f97984 	addi	r7,r7,-6682
11043bb4:	1009883a 	mov	r4,r2
11043bb8:	180b883a 	mov	r5,r3
11043bbc:	10454540 	call	11045454 <__subdf3>
11043bc0:	980d883a 	mov	r6,r19
11043bc4:	900f883a 	mov	r7,r18
11043bc8:	1009883a 	mov	r4,r2
11043bcc:	180b883a 	mov	r5,r3
11043bd0:	1044d3c0 	call	11044d3c <__muldf3>
11043bd4:	0195ecb4 	movhi	r6,22450
11043bd8:	01cfb1f4 	movhi	r7,16071
11043bdc:	31bf9f44 	addi	r6,r6,-387
11043be0:	39c778c4 	addi	r7,r7,7651
11043be4:	1009883a 	mov	r4,r2
11043be8:	180b883a 	mov	r5,r3
11043bec:	104432c0 	call	1104432c <__adddf3>
11043bf0:	980d883a 	mov	r6,r19
11043bf4:	900f883a 	mov	r7,r18
11043bf8:	1009883a 	mov	r4,r2
11043bfc:	180b883a 	mov	r5,r3
11043c00:	1044d3c0 	call	11044d3c <__muldf3>
11043c04:	01867074 	movhi	r6,6593
11043c08:	01cfcab4 	movhi	r7,16170
11043c0c:	31987544 	addi	r6,r6,25045
11043c10:	39c06804 	addi	r7,r7,416
11043c14:	1009883a 	mov	r4,r2
11043c18:	180b883a 	mov	r5,r3
11043c1c:	10454540 	call	11045454 <__subdf3>
11043c20:	980d883a 	mov	r6,r19
11043c24:	900f883a 	mov	r7,r18
11043c28:	1009883a 	mov	r4,r2
11043c2c:	180b883a 	mov	r5,r3
11043c30:	1044d3c0 	call	11044d3c <__muldf3>
11043c34:	01844474 	movhi	r6,4369
11043c38:	01cfe074 	movhi	r7,16257
11043c3c:	31be2984 	addi	r6,r6,-1882
11043c40:	39c44444 	addi	r7,r7,4369
11043c44:	1009883a 	mov	r4,r2
11043c48:	180b883a 	mov	r5,r3
11043c4c:	104432c0 	call	1104432c <__adddf3>
11043c50:	1011883a 	mov	r8,r2
11043c54:	d8800c17 	ldw	r2,48(sp)
11043c58:	1839883a 	mov	fp,r3
11043c5c:	10003e26 	beq	r2,zero,11043d58 <__kernel_sin+0x264>
11043c60:	000d883a 	mov	r6,zero
11043c64:	01cff834 	movhi	r7,16352
11043c68:	b809883a 	mov	r4,r23
11043c6c:	b00b883a 	mov	r5,r22
11043c70:	da000015 	stw	r8,0(sp)
11043c74:	1044d3c0 	call	11044d3c <__muldf3>
11043c78:	da000017 	ldw	r8,0(sp)
11043c7c:	e00f883a 	mov	r7,fp
11043c80:	a809883a 	mov	r4,r21
11043c84:	400d883a 	mov	r6,r8
11043c88:	a00b883a 	mov	r5,r20
11043c8c:	d8c00115 	stw	r3,4(sp)
11043c90:	d8800015 	stw	r2,0(sp)
11043c94:	1044d3c0 	call	11044d3c <__muldf3>
11043c98:	da800017 	ldw	r10,0(sp)
11043c9c:	da400117 	ldw	r9,4(sp)
11043ca0:	100d883a 	mov	r6,r2
11043ca4:	5009883a 	mov	r4,r10
11043ca8:	480b883a 	mov	r5,r9
11043cac:	180f883a 	mov	r7,r3
11043cb0:	10454540 	call	11045454 <__subdf3>
11043cb4:	980d883a 	mov	r6,r19
11043cb8:	900f883a 	mov	r7,r18
11043cbc:	1009883a 	mov	r4,r2
11043cc0:	180b883a 	mov	r5,r3
11043cc4:	1044d3c0 	call	11044d3c <__muldf3>
11043cc8:	b80d883a 	mov	r6,r23
11043ccc:	b00f883a 	mov	r7,r22
11043cd0:	1009883a 	mov	r4,r2
11043cd4:	180b883a 	mov	r5,r3
11043cd8:	10454540 	call	11045454 <__subdf3>
11043cdc:	01955574 	movhi	r6,21845
11043ce0:	01cff174 	movhi	r7,16325
11043ce4:	31955244 	addi	r6,r6,21833
11043ce8:	39d55544 	addi	r7,r7,21845
11043cec:	a809883a 	mov	r4,r21
11043cf0:	a00b883a 	mov	r5,r20
11043cf4:	1027883a 	mov	r19,r2
11043cf8:	1825883a 	mov	r18,r3
11043cfc:	1044d3c0 	call	11044d3c <__muldf3>
11043d00:	100d883a 	mov	r6,r2
11043d04:	180f883a 	mov	r7,r3
11043d08:	9809883a 	mov	r4,r19
11043d0c:	900b883a 	mov	r5,r18
11043d10:	104432c0 	call	1104432c <__adddf3>
11043d14:	100d883a 	mov	r6,r2
11043d18:	180f883a 	mov	r7,r3
11043d1c:	8809883a 	mov	r4,r17
11043d20:	800b883a 	mov	r5,r16
11043d24:	10454540 	call	11045454 <__subdf3>
11043d28:	dfc00b17 	ldw	ra,44(sp)
11043d2c:	df000a17 	ldw	fp,40(sp)
11043d30:	ddc00917 	ldw	r23,36(sp)
11043d34:	dd800817 	ldw	r22,32(sp)
11043d38:	dd400717 	ldw	r21,28(sp)
11043d3c:	dd000617 	ldw	r20,24(sp)
11043d40:	dcc00517 	ldw	r19,20(sp)
11043d44:	dc800417 	ldw	r18,16(sp)
11043d48:	dc400317 	ldw	r17,12(sp)
11043d4c:	dc000217 	ldw	r16,8(sp)
11043d50:	dec00c04 	addi	sp,sp,48
11043d54:	f800283a 	ret
11043d58:	400d883a 	mov	r6,r8
11043d5c:	9809883a 	mov	r4,r19
11043d60:	900b883a 	mov	r5,r18
11043d64:	180f883a 	mov	r7,r3
11043d68:	1044d3c0 	call	11044d3c <__muldf3>
11043d6c:	01955574 	movhi	r6,21845
11043d70:	01cff174 	movhi	r7,16325
11043d74:	31955244 	addi	r6,r6,21833
11043d78:	39d55544 	addi	r7,r7,21845
11043d7c:	1009883a 	mov	r4,r2
11043d80:	180b883a 	mov	r5,r3
11043d84:	10454540 	call	11045454 <__subdf3>
11043d88:	a80d883a 	mov	r6,r21
11043d8c:	a00f883a 	mov	r7,r20
11043d90:	1009883a 	mov	r4,r2
11043d94:	180b883a 	mov	r5,r3
11043d98:	1044d3c0 	call	11044d3c <__muldf3>
11043d9c:	880d883a 	mov	r6,r17
11043da0:	800f883a 	mov	r7,r16
11043da4:	1009883a 	mov	r4,r2
11043da8:	180b883a 	mov	r5,r3
11043dac:	104432c0 	call	1104432c <__adddf3>
11043db0:	003fdd06 	br	11043d28 <__kernel_sin+0x234>
11043db4:	8805883a 	mov	r2,r17
11043db8:	8007883a 	mov	r3,r16
11043dbc:	003fda06 	br	11043d28 <__kernel_sin+0x234>

11043dc0 <fabs>:
11043dc0:	00e00034 	movhi	r3,32768
11043dc4:	18ffffc4 	addi	r3,r3,-1
11043dc8:	2005883a 	mov	r2,r4
11043dcc:	28c6703a 	and	r3,r5,r3
11043dd0:	f800283a 	ret

11043dd4 <floor>:
11043dd4:	2811d53a 	srai	r8,r5,20
11043dd8:	defffa04 	addi	sp,sp,-24
11043ddc:	dcc00315 	stw	r19,12(sp)
11043de0:	4201ffcc 	andi	r8,r8,2047
11043de4:	dc800215 	stw	r18,8(sp)
11043de8:	dc400115 	stw	r17,4(sp)
11043dec:	dc000015 	stw	r16,0(sp)
11043df0:	dfc00515 	stw	ra,20(sp)
11043df4:	dd000415 	stw	r20,16(sp)
11043df8:	44bf0044 	addi	r18,r8,-1023
11043dfc:	018004c4 	movi	r6,19
11043e00:	2821883a 	mov	r16,r5
11043e04:	2005883a 	mov	r2,r4
11043e08:	280f883a 	mov	r7,r5
11043e0c:	2827883a 	mov	r19,r5
11043e10:	2023883a 	mov	r17,r4
11043e14:	34801916 	blt	r6,r18,11043e7c <floor+0xa8>
11043e18:	90003c16 	blt	r18,zero,11043f0c <floor+0x138>
11043e1c:	05000434 	movhi	r20,16
11043e20:	a53fffc4 	addi	r20,r20,-1
11043e24:	a4a9d83a 	sra	r20,r20,r18
11043e28:	2d0c703a 	and	r6,r5,r20
11043e2c:	310cb03a 	or	r6,r6,r4
11043e30:	30001626 	beq	r6,zero,11043e8c <floor+0xb8>
11043e34:	01a20034 	movhi	r6,34816
11043e38:	01df8e34 	movhi	r7,32312
11043e3c:	319d6704 	addi	r6,r6,30108
11043e40:	39f90f04 	addi	r7,r7,-7108
11043e44:	104432c0 	call	1104432c <__adddf3>
11043e48:	000d883a 	mov	r6,zero
11043e4c:	000f883a 	mov	r7,zero
11043e50:	1009883a 	mov	r4,r2
11043e54:	180b883a 	mov	r5,r3
11043e58:	1044c600 	call	11044c60 <__gedf2>
11043e5c:	0080040e 	bge	zero,r2,11043e70 <floor+0x9c>
11043e60:	80003c16 	blt	r16,zero,11043f54 <floor+0x180>
11043e64:	0520303a 	nor	r16,zero,r20
11043e68:	84e0703a 	and	r16,r16,r19
11043e6c:	0023883a 	mov	r17,zero
11043e70:	8805883a 	mov	r2,r17
11043e74:	8007883a 	mov	r3,r16
11043e78:	00000506 	br	11043e90 <floor+0xbc>
11043e7c:	01800cc4 	movi	r6,51
11043e80:	34800b0e 	bge	r6,r18,11043eb0 <floor+0xdc>
11043e84:	01810004 	movi	r6,1024
11043e88:	91802f26 	beq	r18,r6,11043f48 <floor+0x174>
11043e8c:	3807883a 	mov	r3,r7
11043e90:	dfc00517 	ldw	ra,20(sp)
11043e94:	dd000417 	ldw	r20,16(sp)
11043e98:	dcc00317 	ldw	r19,12(sp)
11043e9c:	dc800217 	ldw	r18,8(sp)
11043ea0:	dc400117 	ldw	r17,4(sp)
11043ea4:	dc000017 	ldw	r16,0(sp)
11043ea8:	dec00604 	addi	sp,sp,24
11043eac:	f800283a 	ret
11043eb0:	423efb44 	addi	r8,r8,-1043
11043eb4:	053fffc4 	movi	r20,-1
11043eb8:	a228d83a 	srl	r20,r20,r8
11043ebc:	250c703a 	and	r6,r4,r20
11043ec0:	303ff226 	beq	r6,zero,11043e8c <floor+0xb8>
11043ec4:	01a20034 	movhi	r6,34816
11043ec8:	01df8e34 	movhi	r7,32312
11043ecc:	319d6704 	addi	r6,r6,30108
11043ed0:	39f90f04 	addi	r7,r7,-7108
11043ed4:	104432c0 	call	1104432c <__adddf3>
11043ed8:	000d883a 	mov	r6,zero
11043edc:	000f883a 	mov	r7,zero
11043ee0:	1009883a 	mov	r4,r2
11043ee4:	180b883a 	mov	r5,r3
11043ee8:	1044c600 	call	11044c60 <__gedf2>
11043eec:	00bfe00e 	bge	zero,r2,11043e70 <floor+0x9c>
11043ef0:	80001c16 	blt	r16,zero,11043f64 <floor+0x190>
11043ef4:	0510303a 	nor	r8,zero,r20
11043ef8:	9821883a 	mov	r16,r19
11043efc:	8a22703a 	and	r17,r17,r8
11043f00:	8805883a 	mov	r2,r17
11043f04:	8007883a 	mov	r3,r16
11043f08:	003fe106 	br	11043e90 <floor+0xbc>
11043f0c:	01a20034 	movhi	r6,34816
11043f10:	01df8e34 	movhi	r7,32312
11043f14:	319d6704 	addi	r6,r6,30108
11043f18:	39f90f04 	addi	r7,r7,-7108
11043f1c:	104432c0 	call	1104432c <__adddf3>
11043f20:	000d883a 	mov	r6,zero
11043f24:	000f883a 	mov	r7,zero
11043f28:	1009883a 	mov	r4,r2
11043f2c:	180b883a 	mov	r5,r3
11043f30:	1044c600 	call	11044c60 <__gedf2>
11043f34:	00bfce0e 	bge	zero,r2,11043e70 <floor+0x9c>
11043f38:	80001516 	blt	r16,zero,11043f90 <floor+0x1bc>
11043f3c:	0023883a 	mov	r17,zero
11043f40:	0021883a 	mov	r16,zero
11043f44:	003fca06 	br	11043e70 <floor+0x9c>
11043f48:	200d883a 	mov	r6,r4
11043f4c:	104432c0 	call	1104432c <__adddf3>
11043f50:	003fcf06 	br	11043e90 <floor+0xbc>
11043f54:	00800434 	movhi	r2,16
11043f58:	14a5d83a 	sra	r18,r2,r18
11043f5c:	84a7883a 	add	r19,r16,r18
11043f60:	003fc006 	br	11043e64 <floor+0x90>
11043f64:	00800504 	movi	r2,20
11043f68:	90801326 	beq	r18,r2,11043fb8 <floor+0x1e4>
11043f6c:	00800d04 	movi	r2,52
11043f70:	14a5c83a 	sub	r18,r2,r18
11043f74:	00800044 	movi	r2,1
11043f78:	1484983a 	sll	r2,r2,r18
11043f7c:	1445883a 	add	r2,r2,r17
11043f80:	14400b2e 	bgeu	r2,r17,11043fb0 <floor+0x1dc>
11043f84:	84c00044 	addi	r19,r16,1
11043f88:	1023883a 	mov	r17,r2
11043f8c:	003fd906 	br	11043ef4 <floor+0x120>
11043f90:	00a00034 	movhi	r2,32768
11043f94:	10bfffc4 	addi	r2,r2,-1
11043f98:	8084703a 	and	r2,r16,r2
11043f9c:	1462b03a 	or	r17,r2,r17
11043fa0:	883fb326 	beq	r17,zero,11043e70 <floor+0x9c>
11043fa4:	0023883a 	mov	r17,zero
11043fa8:	042ffc34 	movhi	r16,49136
11043fac:	003fb006 	br	11043e70 <floor+0x9c>
11043fb0:	1023883a 	mov	r17,r2
11043fb4:	003fcf06 	br	11043ef4 <floor+0x120>
11043fb8:	84c00044 	addi	r19,r16,1
11043fbc:	003fcd06 	br	11043ef4 <floor+0x120>

11043fc0 <scalbn>:
11043fc0:	2a1ffc2c 	andhi	r8,r5,32752
11043fc4:	4011d53a 	srai	r8,r8,20
11043fc8:	defffe04 	addi	sp,sp,-8
11043fcc:	dc000015 	stw	r16,0(sp)
11043fd0:	dfc00115 	stw	ra,4(sp)
11043fd4:	280f883a 	mov	r7,r5
11043fd8:	2015883a 	mov	r10,r4
11043fdc:	3021883a 	mov	r16,r6
11043fe0:	40001e1e 	bne	r8,zero,1104405c <scalbn+0x9c>
11043fe4:	00a00034 	movhi	r2,32768
11043fe8:	10bfffc4 	addi	r2,r2,-1
11043fec:	2884703a 	and	r2,r5,r2
11043ff0:	1104b03a 	or	r2,r2,r4
11043ff4:	10002226 	beq	r2,zero,11044080 <scalbn+0xc0>
11043ff8:	01d0d434 	movhi	r7,17232
11043ffc:	000d883a 	mov	r6,zero
11044000:	1044d3c0 	call	11044d3c <__muldf3>
11044004:	013ffff4 	movhi	r4,65535
11044008:	210f2c04 	addi	r4,r4,15536
1104400c:	1015883a 	mov	r10,r2
11044010:	180f883a 	mov	r7,r3
11044014:	81002a16 	blt	r16,r4,110440c0 <scalbn+0x100>
11044018:	191ffc2c 	andhi	r4,r3,32752
1104401c:	2009d53a 	srai	r4,r4,20
11044020:	223ff284 	addi	r8,r4,-54
11044024:	8211883a 	add	r8,r16,r8
11044028:	0081ff84 	movi	r2,2046
1104402c:	12002f16 	blt	r2,r8,110440ec <scalbn+0x12c>
11044030:	0200190e 	bge	zero,r8,11044098 <scalbn+0xd8>
11044034:	4010953a 	slli	r8,r8,20
11044038:	01600434 	movhi	r5,32784
1104403c:	297fffc4 	addi	r5,r5,-1
11044040:	194e703a 	and	r7,r3,r5
11044044:	5005883a 	mov	r2,r10
11044048:	3a06b03a 	or	r3,r7,r8
1104404c:	dfc00117 	ldw	ra,4(sp)
11044050:	dc000017 	ldw	r16,0(sp)
11044054:	dec00204 	addi	sp,sp,8
11044058:	f800283a 	ret
1104405c:	0081ffc4 	movi	r2,2047
11044060:	2807883a 	mov	r3,r5
11044064:	40bfef1e 	bne	r8,r2,11044024 <scalbn+0x64>
11044068:	200d883a 	mov	r6,r4
1104406c:	104432c0 	call	1104432c <__adddf3>
11044070:	dfc00117 	ldw	ra,4(sp)
11044074:	dc000017 	ldw	r16,0(sp)
11044078:	dec00204 	addi	sp,sp,8
1104407c:	f800283a 	ret
11044080:	2005883a 	mov	r2,r4
11044084:	2807883a 	mov	r3,r5
11044088:	dfc00117 	ldw	ra,4(sp)
1104408c:	dc000017 	ldw	r16,0(sp)
11044090:	dec00204 	addi	sp,sp,8
11044094:	f800283a 	ret
11044098:	00bff2c4 	movi	r2,-53
1104409c:	4080240e 	bge	r8,r2,11044130 <scalbn+0x170>
110440a0:	00b0d414 	movui	r2,50000
110440a4:	14001116 	blt	r2,r16,110440ec <scalbn+0x12c>
110440a8:	0130be74 	movhi	r4,49913
110440ac:	01406974 	movhi	r5,421
110440b0:	213cd644 	addi	r4,r4,-3239
110440b4:	295b87c4 	addi	r5,r5,28191
110440b8:	500d883a 	mov	r6,r10
110440bc:	104415c0 	call	1104415c <copysign>
110440c0:	01b0be74 	movhi	r6,49913
110440c4:	01c06974 	movhi	r7,421
110440c8:	31bcd644 	addi	r6,r6,-3239
110440cc:	39db87c4 	addi	r7,r7,28191
110440d0:	1009883a 	mov	r4,r2
110440d4:	180b883a 	mov	r5,r3
110440d8:	1044d3c0 	call	11044d3c <__muldf3>
110440dc:	dfc00117 	ldw	ra,4(sp)
110440e0:	dc000017 	ldw	r16,0(sp)
110440e4:	dec00204 	addi	sp,sp,8
110440e8:	f800283a 	ret
110440ec:	01220034 	movhi	r4,34816
110440f0:	015f8e34 	movhi	r5,32312
110440f4:	500d883a 	mov	r6,r10
110440f8:	211d6704 	addi	r4,r4,30108
110440fc:	29790f04 	addi	r5,r5,-7108
11044100:	104415c0 	call	1104415c <copysign>
11044104:	01a20034 	movhi	r6,34816
11044108:	01df8e34 	movhi	r7,32312
1104410c:	319d6704 	addi	r6,r6,30108
11044110:	39f90f04 	addi	r7,r7,-7108
11044114:	1009883a 	mov	r4,r2
11044118:	180b883a 	mov	r5,r3
1104411c:	1044d3c0 	call	11044d3c <__muldf3>
11044120:	dfc00117 	ldw	ra,4(sp)
11044124:	dc000017 	ldw	r16,0(sp)
11044128:	dec00204 	addi	sp,sp,8
1104412c:	f800283a 	ret
11044130:	42000d84 	addi	r8,r8,54
11044134:	4012953a 	slli	r9,r8,20
11044138:	01e00434 	movhi	r7,32784
1104413c:	39ffffc4 	addi	r7,r7,-1
11044140:	19ca703a 	and	r5,r3,r7
11044144:	000d883a 	mov	r6,zero
11044148:	01cf2434 	movhi	r7,15504
1104414c:	5009883a 	mov	r4,r10
11044150:	494ab03a 	or	r5,r9,r5
11044154:	1044d3c0 	call	11044d3c <__muldf3>
11044158:	003fbc06 	br	1104404c <scalbn+0x8c>

1104415c <copysign>:
1104415c:	2005883a 	mov	r2,r4
11044160:	01200034 	movhi	r4,32768
11044164:	213fffc4 	addi	r4,r4,-1
11044168:	38e0002c 	andhi	r3,r7,32768
1104416c:	290a703a 	and	r5,r5,r4
11044170:	28c6b03a 	or	r3,r5,r3
11044174:	f800283a 	ret

11044178 <__divsi3>:
11044178:	20001b16 	blt	r4,zero,110441e8 <__divsi3+0x70>
1104417c:	000f883a 	mov	r7,zero
11044180:	28001616 	blt	r5,zero,110441dc <__divsi3+0x64>
11044184:	200d883a 	mov	r6,r4
11044188:	29001a2e 	bgeu	r5,r4,110441f4 <__divsi3+0x7c>
1104418c:	00800804 	movi	r2,32
11044190:	00c00044 	movi	r3,1
11044194:	00000106 	br	1104419c <__divsi3+0x24>
11044198:	10000d26 	beq	r2,zero,110441d0 <__divsi3+0x58>
1104419c:	294b883a 	add	r5,r5,r5
110441a0:	10bfffc4 	addi	r2,r2,-1
110441a4:	18c7883a 	add	r3,r3,r3
110441a8:	293ffb36 	bltu	r5,r4,11044198 <__divsi3+0x20>
110441ac:	0005883a 	mov	r2,zero
110441b0:	18000726 	beq	r3,zero,110441d0 <__divsi3+0x58>
110441b4:	0005883a 	mov	r2,zero
110441b8:	31400236 	bltu	r6,r5,110441c4 <__divsi3+0x4c>
110441bc:	314dc83a 	sub	r6,r6,r5
110441c0:	10c4b03a 	or	r2,r2,r3
110441c4:	1806d07a 	srli	r3,r3,1
110441c8:	280ad07a 	srli	r5,r5,1
110441cc:	183ffa1e 	bne	r3,zero,110441b8 <__divsi3+0x40>
110441d0:	38000126 	beq	r7,zero,110441d8 <__divsi3+0x60>
110441d4:	0085c83a 	sub	r2,zero,r2
110441d8:	f800283a 	ret
110441dc:	014bc83a 	sub	r5,zero,r5
110441e0:	39c0005c 	xori	r7,r7,1
110441e4:	003fe706 	br	11044184 <__divsi3+0xc>
110441e8:	0109c83a 	sub	r4,zero,r4
110441ec:	01c00044 	movi	r7,1
110441f0:	003fe306 	br	11044180 <__divsi3+0x8>
110441f4:	00c00044 	movi	r3,1
110441f8:	003fee06 	br	110441b4 <__divsi3+0x3c>

110441fc <__modsi3>:
110441fc:	20001716 	blt	r4,zero,1104425c <__modsi3+0x60>
11044200:	000f883a 	mov	r7,zero
11044204:	2005883a 	mov	r2,r4
11044208:	28001216 	blt	r5,zero,11044254 <__modsi3+0x58>
1104420c:	2900162e 	bgeu	r5,r4,11044268 <__modsi3+0x6c>
11044210:	01800804 	movi	r6,32
11044214:	00c00044 	movi	r3,1
11044218:	00000106 	br	11044220 <__modsi3+0x24>
1104421c:	30000a26 	beq	r6,zero,11044248 <__modsi3+0x4c>
11044220:	294b883a 	add	r5,r5,r5
11044224:	31bfffc4 	addi	r6,r6,-1
11044228:	18c7883a 	add	r3,r3,r3
1104422c:	293ffb36 	bltu	r5,r4,1104421c <__modsi3+0x20>
11044230:	18000526 	beq	r3,zero,11044248 <__modsi3+0x4c>
11044234:	1806d07a 	srli	r3,r3,1
11044238:	11400136 	bltu	r2,r5,11044240 <__modsi3+0x44>
1104423c:	1145c83a 	sub	r2,r2,r5
11044240:	280ad07a 	srli	r5,r5,1
11044244:	183ffb1e 	bne	r3,zero,11044234 <__modsi3+0x38>
11044248:	38000126 	beq	r7,zero,11044250 <__modsi3+0x54>
1104424c:	0085c83a 	sub	r2,zero,r2
11044250:	f800283a 	ret
11044254:	014bc83a 	sub	r5,zero,r5
11044258:	003fec06 	br	1104420c <__modsi3+0x10>
1104425c:	0109c83a 	sub	r4,zero,r4
11044260:	01c00044 	movi	r7,1
11044264:	003fe706 	br	11044204 <__modsi3+0x8>
11044268:	00c00044 	movi	r3,1
1104426c:	003ff106 	br	11044234 <__modsi3+0x38>

11044270 <__udivsi3>:
11044270:	200d883a 	mov	r6,r4
11044274:	2900152e 	bgeu	r5,r4,110442cc <__udivsi3+0x5c>
11044278:	28001416 	blt	r5,zero,110442cc <__udivsi3+0x5c>
1104427c:	00800804 	movi	r2,32
11044280:	00c00044 	movi	r3,1
11044284:	00000206 	br	11044290 <__udivsi3+0x20>
11044288:	10000e26 	beq	r2,zero,110442c4 <__udivsi3+0x54>
1104428c:	28000516 	blt	r5,zero,110442a4 <__udivsi3+0x34>
11044290:	294b883a 	add	r5,r5,r5
11044294:	10bfffc4 	addi	r2,r2,-1
11044298:	18c7883a 	add	r3,r3,r3
1104429c:	293ffa36 	bltu	r5,r4,11044288 <__udivsi3+0x18>
110442a0:	18000826 	beq	r3,zero,110442c4 <__udivsi3+0x54>
110442a4:	0005883a 	mov	r2,zero
110442a8:	31400236 	bltu	r6,r5,110442b4 <__udivsi3+0x44>
110442ac:	314dc83a 	sub	r6,r6,r5
110442b0:	10c4b03a 	or	r2,r2,r3
110442b4:	1806d07a 	srli	r3,r3,1
110442b8:	280ad07a 	srli	r5,r5,1
110442bc:	183ffa1e 	bne	r3,zero,110442a8 <__udivsi3+0x38>
110442c0:	f800283a 	ret
110442c4:	0005883a 	mov	r2,zero
110442c8:	f800283a 	ret
110442cc:	00c00044 	movi	r3,1
110442d0:	003ff406 	br	110442a4 <__udivsi3+0x34>

110442d4 <__umodsi3>:
110442d4:	2005883a 	mov	r2,r4
110442d8:	2900122e 	bgeu	r5,r4,11044324 <__umodsi3+0x50>
110442dc:	28001116 	blt	r5,zero,11044324 <__umodsi3+0x50>
110442e0:	01800804 	movi	r6,32
110442e4:	00c00044 	movi	r3,1
110442e8:	00000206 	br	110442f4 <__umodsi3+0x20>
110442ec:	30000c26 	beq	r6,zero,11044320 <__umodsi3+0x4c>
110442f0:	28000516 	blt	r5,zero,11044308 <__umodsi3+0x34>
110442f4:	294b883a 	add	r5,r5,r5
110442f8:	31bfffc4 	addi	r6,r6,-1
110442fc:	18c7883a 	add	r3,r3,r3
11044300:	293ffa36 	bltu	r5,r4,110442ec <__umodsi3+0x18>
11044304:	18000626 	beq	r3,zero,11044320 <__umodsi3+0x4c>
11044308:	1806d07a 	srli	r3,r3,1
1104430c:	11400136 	bltu	r2,r5,11044314 <__umodsi3+0x40>
11044310:	1145c83a 	sub	r2,r2,r5
11044314:	280ad07a 	srli	r5,r5,1
11044318:	183ffb1e 	bne	r3,zero,11044308 <__umodsi3+0x34>
1104431c:	f800283a 	ret
11044320:	f800283a 	ret
11044324:	00c00044 	movi	r3,1
11044328:	003ff706 	br	11044308 <__umodsi3+0x34>

1104432c <__adddf3>:
1104432c:	02c00434 	movhi	r11,16
11044330:	5affffc4 	addi	r11,r11,-1
11044334:	2806d7fa 	srli	r3,r5,31
11044338:	2ad4703a 	and	r10,r5,r11
1104433c:	3ad2703a 	and	r9,r7,r11
11044340:	3804d53a 	srli	r2,r7,20
11044344:	3018d77a 	srli	r12,r6,29
11044348:	280ad53a 	srli	r5,r5,20
1104434c:	501490fa 	slli	r10,r10,3
11044350:	2010d77a 	srli	r8,r4,29
11044354:	481290fa 	slli	r9,r9,3
11044358:	380ed7fa 	srli	r7,r7,31
1104435c:	defffb04 	addi	sp,sp,-20
11044360:	dc800215 	stw	r18,8(sp)
11044364:	dc400115 	stw	r17,4(sp)
11044368:	dc000015 	stw	r16,0(sp)
1104436c:	dfc00415 	stw	ra,16(sp)
11044370:	dcc00315 	stw	r19,12(sp)
11044374:	1c803fcc 	andi	r18,r3,255
11044378:	2c01ffcc 	andi	r16,r5,2047
1104437c:	5210b03a 	or	r8,r10,r8
11044380:	202290fa 	slli	r17,r4,3
11044384:	1081ffcc 	andi	r2,r2,2047
11044388:	4b12b03a 	or	r9,r9,r12
1104438c:	300c90fa 	slli	r6,r6,3
11044390:	91c07526 	beq	r18,r7,11044568 <__adddf3+0x23c>
11044394:	8087c83a 	sub	r3,r16,r2
11044398:	00c0ab0e 	bge	zero,r3,11044648 <__adddf3+0x31c>
1104439c:	10002a1e 	bne	r2,zero,11044448 <__adddf3+0x11c>
110443a0:	4984b03a 	or	r2,r9,r6
110443a4:	1000961e 	bne	r2,zero,11044600 <__adddf3+0x2d4>
110443a8:	888001cc 	andi	r2,r17,7
110443ac:	10000726 	beq	r2,zero,110443cc <__adddf3+0xa0>
110443b0:	888003cc 	andi	r2,r17,15
110443b4:	00c00104 	movi	r3,4
110443b8:	10c00426 	beq	r2,r3,110443cc <__adddf3+0xa0>
110443bc:	88c7883a 	add	r3,r17,r3
110443c0:	1c63803a 	cmpltu	r17,r3,r17
110443c4:	4451883a 	add	r8,r8,r17
110443c8:	1823883a 	mov	r17,r3
110443cc:	4080202c 	andhi	r2,r8,128
110443d0:	10005926 	beq	r2,zero,11044538 <__adddf3+0x20c>
110443d4:	84000044 	addi	r16,r16,1
110443d8:	0081ffc4 	movi	r2,2047
110443dc:	8080ba26 	beq	r16,r2,110446c8 <__adddf3+0x39c>
110443e0:	00bfe034 	movhi	r2,65408
110443e4:	10bfffc4 	addi	r2,r2,-1
110443e8:	4090703a 	and	r8,r8,r2
110443ec:	4004977a 	slli	r2,r8,29
110443f0:	4010927a 	slli	r8,r8,9
110443f4:	8822d0fa 	srli	r17,r17,3
110443f8:	8401ffcc 	andi	r16,r16,2047
110443fc:	4010d33a 	srli	r8,r8,12
11044400:	9007883a 	mov	r3,r18
11044404:	1444b03a 	or	r2,r2,r17
11044408:	8401ffcc 	andi	r16,r16,2047
1104440c:	8020953a 	slli	r16,r16,20
11044410:	18c03fcc 	andi	r3,r3,255
11044414:	01000434 	movhi	r4,16
11044418:	213fffc4 	addi	r4,r4,-1
1104441c:	180697fa 	slli	r3,r3,31
11044420:	4110703a 	and	r8,r8,r4
11044424:	4410b03a 	or	r8,r8,r16
11044428:	40c6b03a 	or	r3,r8,r3
1104442c:	dfc00417 	ldw	ra,16(sp)
11044430:	dcc00317 	ldw	r19,12(sp)
11044434:	dc800217 	ldw	r18,8(sp)
11044438:	dc400117 	ldw	r17,4(sp)
1104443c:	dc000017 	ldw	r16,0(sp)
11044440:	dec00504 	addi	sp,sp,20
11044444:	f800283a 	ret
11044448:	0081ffc4 	movi	r2,2047
1104444c:	80bfd626 	beq	r16,r2,110443a8 <__adddf3+0x7c>
11044450:	4a402034 	orhi	r9,r9,128
11044454:	00800e04 	movi	r2,56
11044458:	10c09f16 	blt	r2,r3,110446d8 <__adddf3+0x3ac>
1104445c:	008007c4 	movi	r2,31
11044460:	10c0c216 	blt	r2,r3,1104476c <__adddf3+0x440>
11044464:	00800804 	movi	r2,32
11044468:	10c5c83a 	sub	r2,r2,r3
1104446c:	488a983a 	sll	r5,r9,r2
11044470:	30c8d83a 	srl	r4,r6,r3
11044474:	3084983a 	sll	r2,r6,r2
11044478:	48c6d83a 	srl	r3,r9,r3
1104447c:	290cb03a 	or	r6,r5,r4
11044480:	1004c03a 	cmpne	r2,r2,zero
11044484:	308cb03a 	or	r6,r6,r2
11044488:	898dc83a 	sub	r6,r17,r6
1104448c:	89a3803a 	cmpltu	r17,r17,r6
11044490:	40d1c83a 	sub	r8,r8,r3
11044494:	4451c83a 	sub	r8,r8,r17
11044498:	3023883a 	mov	r17,r6
1104449c:	4080202c 	andhi	r2,r8,128
110444a0:	10002326 	beq	r2,zero,11044530 <__adddf3+0x204>
110444a4:	04c02034 	movhi	r19,128
110444a8:	9cffffc4 	addi	r19,r19,-1
110444ac:	44e6703a 	and	r19,r8,r19
110444b0:	98007626 	beq	r19,zero,1104468c <__adddf3+0x360>
110444b4:	9809883a 	mov	r4,r19
110444b8:	1045eac0 	call	11045eac <__clzsi2>
110444bc:	10fffe04 	addi	r3,r2,-8
110444c0:	010007c4 	movi	r4,31
110444c4:	20c07716 	blt	r4,r3,110446a4 <__adddf3+0x378>
110444c8:	00800804 	movi	r2,32
110444cc:	10c5c83a 	sub	r2,r2,r3
110444d0:	8884d83a 	srl	r2,r17,r2
110444d4:	98d0983a 	sll	r8,r19,r3
110444d8:	88e2983a 	sll	r17,r17,r3
110444dc:	1204b03a 	or	r2,r2,r8
110444e0:	1c007416 	blt	r3,r16,110446b4 <__adddf3+0x388>
110444e4:	1c21c83a 	sub	r16,r3,r16
110444e8:	82000044 	addi	r8,r16,1
110444ec:	00c007c4 	movi	r3,31
110444f0:	1a009116 	blt	r3,r8,11044738 <__adddf3+0x40c>
110444f4:	00c00804 	movi	r3,32
110444f8:	1a07c83a 	sub	r3,r3,r8
110444fc:	8a08d83a 	srl	r4,r17,r8
11044500:	88e2983a 	sll	r17,r17,r3
11044504:	10c6983a 	sll	r3,r2,r3
11044508:	1210d83a 	srl	r8,r2,r8
1104450c:	8804c03a 	cmpne	r2,r17,zero
11044510:	1906b03a 	or	r3,r3,r4
11044514:	18a2b03a 	or	r17,r3,r2
11044518:	0021883a 	mov	r16,zero
1104451c:	003fa206 	br	110443a8 <__adddf3+0x7c>
11044520:	1890b03a 	or	r8,r3,r2
11044524:	40017d26 	beq	r8,zero,11044b1c <__adddf3+0x7f0>
11044528:	1011883a 	mov	r8,r2
1104452c:	1823883a 	mov	r17,r3
11044530:	888001cc 	andi	r2,r17,7
11044534:	103f9e1e 	bne	r2,zero,110443b0 <__adddf3+0x84>
11044538:	4004977a 	slli	r2,r8,29
1104453c:	8822d0fa 	srli	r17,r17,3
11044540:	4010d0fa 	srli	r8,r8,3
11044544:	9007883a 	mov	r3,r18
11044548:	1444b03a 	or	r2,r2,r17
1104454c:	0101ffc4 	movi	r4,2047
11044550:	81002426 	beq	r16,r4,110445e4 <__adddf3+0x2b8>
11044554:	8120703a 	and	r16,r16,r4
11044558:	01000434 	movhi	r4,16
1104455c:	213fffc4 	addi	r4,r4,-1
11044560:	4110703a 	and	r8,r8,r4
11044564:	003fa806 	br	11044408 <__adddf3+0xdc>
11044568:	8089c83a 	sub	r4,r16,r2
1104456c:	01005e0e 	bge	zero,r4,110446e8 <__adddf3+0x3bc>
11044570:	10002b26 	beq	r2,zero,11044620 <__adddf3+0x2f4>
11044574:	0081ffc4 	movi	r2,2047
11044578:	80bf8b26 	beq	r16,r2,110443a8 <__adddf3+0x7c>
1104457c:	4a402034 	orhi	r9,r9,128
11044580:	00800e04 	movi	r2,56
11044584:	1100a40e 	bge	r2,r4,11044818 <__adddf3+0x4ec>
11044588:	498cb03a 	or	r6,r9,r6
1104458c:	300ac03a 	cmpne	r5,r6,zero
11044590:	0013883a 	mov	r9,zero
11044594:	2c4b883a 	add	r5,r5,r17
11044598:	2c63803a 	cmpltu	r17,r5,r17
1104459c:	4a11883a 	add	r8,r9,r8
110445a0:	8a11883a 	add	r8,r17,r8
110445a4:	2823883a 	mov	r17,r5
110445a8:	4080202c 	andhi	r2,r8,128
110445ac:	103fe026 	beq	r2,zero,11044530 <__adddf3+0x204>
110445b0:	84000044 	addi	r16,r16,1
110445b4:	0081ffc4 	movi	r2,2047
110445b8:	8080d226 	beq	r16,r2,11044904 <__adddf3+0x5d8>
110445bc:	00bfe034 	movhi	r2,65408
110445c0:	10bfffc4 	addi	r2,r2,-1
110445c4:	4090703a 	and	r8,r8,r2
110445c8:	880ad07a 	srli	r5,r17,1
110445cc:	400897fa 	slli	r4,r8,31
110445d0:	88c0004c 	andi	r3,r17,1
110445d4:	28e2b03a 	or	r17,r5,r3
110445d8:	4010d07a 	srli	r8,r8,1
110445dc:	2462b03a 	or	r17,r4,r17
110445e0:	003f7106 	br	110443a8 <__adddf3+0x7c>
110445e4:	4088b03a 	or	r4,r8,r2
110445e8:	20014526 	beq	r4,zero,11044b00 <__adddf3+0x7d4>
110445ec:	01000434 	movhi	r4,16
110445f0:	42000234 	orhi	r8,r8,8
110445f4:	213fffc4 	addi	r4,r4,-1
110445f8:	4110703a 	and	r8,r8,r4
110445fc:	003f8206 	br	11044408 <__adddf3+0xdc>
11044600:	18ffffc4 	addi	r3,r3,-1
11044604:	1800491e 	bne	r3,zero,1104472c <__adddf3+0x400>
11044608:	898bc83a 	sub	r5,r17,r6
1104460c:	8963803a 	cmpltu	r17,r17,r5
11044610:	4251c83a 	sub	r8,r8,r9
11044614:	4451c83a 	sub	r8,r8,r17
11044618:	2823883a 	mov	r17,r5
1104461c:	003f9f06 	br	1104449c <__adddf3+0x170>
11044620:	4984b03a 	or	r2,r9,r6
11044624:	103f6026 	beq	r2,zero,110443a8 <__adddf3+0x7c>
11044628:	213fffc4 	addi	r4,r4,-1
1104462c:	2000931e 	bne	r4,zero,1104487c <__adddf3+0x550>
11044630:	898d883a 	add	r6,r17,r6
11044634:	3463803a 	cmpltu	r17,r6,r17
11044638:	4251883a 	add	r8,r8,r9
1104463c:	8a11883a 	add	r8,r17,r8
11044640:	3023883a 	mov	r17,r6
11044644:	003fd806 	br	110445a8 <__adddf3+0x27c>
11044648:	1800541e 	bne	r3,zero,1104479c <__adddf3+0x470>
1104464c:	80800044 	addi	r2,r16,1
11044650:	1081ffcc 	andi	r2,r2,2047
11044654:	00c00044 	movi	r3,1
11044658:	1880a00e 	bge	r3,r2,110448dc <__adddf3+0x5b0>
1104465c:	8989c83a 	sub	r4,r17,r6
11044660:	8905803a 	cmpltu	r2,r17,r4
11044664:	4267c83a 	sub	r19,r8,r9
11044668:	98a7c83a 	sub	r19,r19,r2
1104466c:	9880202c 	andhi	r2,r19,128
11044670:	10006326 	beq	r2,zero,11044800 <__adddf3+0x4d4>
11044674:	3463c83a 	sub	r17,r6,r17
11044678:	4a07c83a 	sub	r3,r9,r8
1104467c:	344d803a 	cmpltu	r6,r6,r17
11044680:	19a7c83a 	sub	r19,r3,r6
11044684:	3825883a 	mov	r18,r7
11044688:	983f8a1e 	bne	r19,zero,110444b4 <__adddf3+0x188>
1104468c:	8809883a 	mov	r4,r17
11044690:	1045eac0 	call	11045eac <__clzsi2>
11044694:	10800804 	addi	r2,r2,32
11044698:	10fffe04 	addi	r3,r2,-8
1104469c:	010007c4 	movi	r4,31
110446a0:	20ff890e 	bge	r4,r3,110444c8 <__adddf3+0x19c>
110446a4:	10bff604 	addi	r2,r2,-40
110446a8:	8884983a 	sll	r2,r17,r2
110446ac:	0023883a 	mov	r17,zero
110446b0:	1c3f8c0e 	bge	r3,r16,110444e4 <__adddf3+0x1b8>
110446b4:	023fe034 	movhi	r8,65408
110446b8:	423fffc4 	addi	r8,r8,-1
110446bc:	80e1c83a 	sub	r16,r16,r3
110446c0:	1210703a 	and	r8,r2,r8
110446c4:	003f3806 	br	110443a8 <__adddf3+0x7c>
110446c8:	9007883a 	mov	r3,r18
110446cc:	0011883a 	mov	r8,zero
110446d0:	0005883a 	mov	r2,zero
110446d4:	003f4c06 	br	11044408 <__adddf3+0xdc>
110446d8:	498cb03a 	or	r6,r9,r6
110446dc:	300cc03a 	cmpne	r6,r6,zero
110446e0:	0007883a 	mov	r3,zero
110446e4:	003f6806 	br	11044488 <__adddf3+0x15c>
110446e8:	20009c1e 	bne	r4,zero,1104495c <__adddf3+0x630>
110446ec:	80800044 	addi	r2,r16,1
110446f0:	1141ffcc 	andi	r5,r2,2047
110446f4:	01000044 	movi	r4,1
110446f8:	2140670e 	bge	r4,r5,11044898 <__adddf3+0x56c>
110446fc:	0101ffc4 	movi	r4,2047
11044700:	11007f26 	beq	r2,r4,11044900 <__adddf3+0x5d4>
11044704:	898d883a 	add	r6,r17,r6
11044708:	4247883a 	add	r3,r8,r9
1104470c:	3451803a 	cmpltu	r8,r6,r17
11044710:	40d1883a 	add	r8,r8,r3
11044714:	402297fa 	slli	r17,r8,31
11044718:	300cd07a 	srli	r6,r6,1
1104471c:	4010d07a 	srli	r8,r8,1
11044720:	1021883a 	mov	r16,r2
11044724:	89a2b03a 	or	r17,r17,r6
11044728:	003f1f06 	br	110443a8 <__adddf3+0x7c>
1104472c:	0081ffc4 	movi	r2,2047
11044730:	80bf481e 	bne	r16,r2,11044454 <__adddf3+0x128>
11044734:	003f1c06 	br	110443a8 <__adddf3+0x7c>
11044738:	843ff844 	addi	r16,r16,-31
1104473c:	01000804 	movi	r4,32
11044740:	1406d83a 	srl	r3,r2,r16
11044744:	41005026 	beq	r8,r4,11044888 <__adddf3+0x55c>
11044748:	01001004 	movi	r4,64
1104474c:	2211c83a 	sub	r8,r4,r8
11044750:	1204983a 	sll	r2,r2,r8
11044754:	88a2b03a 	or	r17,r17,r2
11044758:	8822c03a 	cmpne	r17,r17,zero
1104475c:	1c62b03a 	or	r17,r3,r17
11044760:	0011883a 	mov	r8,zero
11044764:	0021883a 	mov	r16,zero
11044768:	003f7106 	br	11044530 <__adddf3+0x204>
1104476c:	193ff804 	addi	r4,r3,-32
11044770:	00800804 	movi	r2,32
11044774:	4908d83a 	srl	r4,r9,r4
11044778:	18804526 	beq	r3,r2,11044890 <__adddf3+0x564>
1104477c:	00801004 	movi	r2,64
11044780:	10c5c83a 	sub	r2,r2,r3
11044784:	4886983a 	sll	r3,r9,r2
11044788:	198cb03a 	or	r6,r3,r6
1104478c:	300cc03a 	cmpne	r6,r6,zero
11044790:	218cb03a 	or	r6,r4,r6
11044794:	0007883a 	mov	r3,zero
11044798:	003f3b06 	br	11044488 <__adddf3+0x15c>
1104479c:	80002a26 	beq	r16,zero,11044848 <__adddf3+0x51c>
110447a0:	0101ffc4 	movi	r4,2047
110447a4:	11006826 	beq	r2,r4,11044948 <__adddf3+0x61c>
110447a8:	00c7c83a 	sub	r3,zero,r3
110447ac:	42002034 	orhi	r8,r8,128
110447b0:	01000e04 	movi	r4,56
110447b4:	20c07c16 	blt	r4,r3,110449a8 <__adddf3+0x67c>
110447b8:	010007c4 	movi	r4,31
110447bc:	20c0da16 	blt	r4,r3,11044b28 <__adddf3+0x7fc>
110447c0:	01000804 	movi	r4,32
110447c4:	20c9c83a 	sub	r4,r4,r3
110447c8:	4114983a 	sll	r10,r8,r4
110447cc:	88cad83a 	srl	r5,r17,r3
110447d0:	8908983a 	sll	r4,r17,r4
110447d4:	40c6d83a 	srl	r3,r8,r3
110447d8:	5162b03a 	or	r17,r10,r5
110447dc:	2008c03a 	cmpne	r4,r4,zero
110447e0:	8922b03a 	or	r17,r17,r4
110447e4:	3463c83a 	sub	r17,r6,r17
110447e8:	48c7c83a 	sub	r3,r9,r3
110447ec:	344d803a 	cmpltu	r6,r6,r17
110447f0:	1991c83a 	sub	r8,r3,r6
110447f4:	1021883a 	mov	r16,r2
110447f8:	3825883a 	mov	r18,r7
110447fc:	003f2706 	br	1104449c <__adddf3+0x170>
11044800:	24d0b03a 	or	r8,r4,r19
11044804:	40001b1e 	bne	r8,zero,11044874 <__adddf3+0x548>
11044808:	0005883a 	mov	r2,zero
1104480c:	0007883a 	mov	r3,zero
11044810:	0021883a 	mov	r16,zero
11044814:	003f4d06 	br	1104454c <__adddf3+0x220>
11044818:	008007c4 	movi	r2,31
1104481c:	11003c16 	blt	r2,r4,11044910 <__adddf3+0x5e4>
11044820:	00800804 	movi	r2,32
11044824:	1105c83a 	sub	r2,r2,r4
11044828:	488e983a 	sll	r7,r9,r2
1104482c:	310ad83a 	srl	r5,r6,r4
11044830:	3084983a 	sll	r2,r6,r2
11044834:	4912d83a 	srl	r9,r9,r4
11044838:	394ab03a 	or	r5,r7,r5
1104483c:	1004c03a 	cmpne	r2,r2,zero
11044840:	288ab03a 	or	r5,r5,r2
11044844:	003f5306 	br	11044594 <__adddf3+0x268>
11044848:	4448b03a 	or	r4,r8,r17
1104484c:	20003e26 	beq	r4,zero,11044948 <__adddf3+0x61c>
11044850:	00c6303a 	nor	r3,zero,r3
11044854:	18003a1e 	bne	r3,zero,11044940 <__adddf3+0x614>
11044858:	3463c83a 	sub	r17,r6,r17
1104485c:	4a07c83a 	sub	r3,r9,r8
11044860:	344d803a 	cmpltu	r6,r6,r17
11044864:	1991c83a 	sub	r8,r3,r6
11044868:	1021883a 	mov	r16,r2
1104486c:	3825883a 	mov	r18,r7
11044870:	003f0a06 	br	1104449c <__adddf3+0x170>
11044874:	2023883a 	mov	r17,r4
11044878:	003f0d06 	br	110444b0 <__adddf3+0x184>
1104487c:	0081ffc4 	movi	r2,2047
11044880:	80bf3f1e 	bne	r16,r2,11044580 <__adddf3+0x254>
11044884:	003ec806 	br	110443a8 <__adddf3+0x7c>
11044888:	0005883a 	mov	r2,zero
1104488c:	003fb106 	br	11044754 <__adddf3+0x428>
11044890:	0007883a 	mov	r3,zero
11044894:	003fbc06 	br	11044788 <__adddf3+0x45c>
11044898:	4444b03a 	or	r2,r8,r17
1104489c:	8000871e 	bne	r16,zero,11044abc <__adddf3+0x790>
110448a0:	1000ba26 	beq	r2,zero,11044b8c <__adddf3+0x860>
110448a4:	4984b03a 	or	r2,r9,r6
110448a8:	103ebf26 	beq	r2,zero,110443a8 <__adddf3+0x7c>
110448ac:	8985883a 	add	r2,r17,r6
110448b0:	4247883a 	add	r3,r8,r9
110448b4:	1451803a 	cmpltu	r8,r2,r17
110448b8:	40d1883a 	add	r8,r8,r3
110448bc:	40c0202c 	andhi	r3,r8,128
110448c0:	1023883a 	mov	r17,r2
110448c4:	183f1a26 	beq	r3,zero,11044530 <__adddf3+0x204>
110448c8:	00bfe034 	movhi	r2,65408
110448cc:	10bfffc4 	addi	r2,r2,-1
110448d0:	2021883a 	mov	r16,r4
110448d4:	4090703a 	and	r8,r8,r2
110448d8:	003eb306 	br	110443a8 <__adddf3+0x7c>
110448dc:	4444b03a 	or	r2,r8,r17
110448e0:	8000291e 	bne	r16,zero,11044988 <__adddf3+0x65c>
110448e4:	10004b1e 	bne	r2,zero,11044a14 <__adddf3+0x6e8>
110448e8:	4990b03a 	or	r8,r9,r6
110448ec:	40008b26 	beq	r8,zero,11044b1c <__adddf3+0x7f0>
110448f0:	4811883a 	mov	r8,r9
110448f4:	3023883a 	mov	r17,r6
110448f8:	3825883a 	mov	r18,r7
110448fc:	003eaa06 	br	110443a8 <__adddf3+0x7c>
11044900:	1021883a 	mov	r16,r2
11044904:	0011883a 	mov	r8,zero
11044908:	0005883a 	mov	r2,zero
1104490c:	003f0f06 	br	1104454c <__adddf3+0x220>
11044910:	217ff804 	addi	r5,r4,-32
11044914:	00800804 	movi	r2,32
11044918:	494ad83a 	srl	r5,r9,r5
1104491c:	20807d26 	beq	r4,r2,11044b14 <__adddf3+0x7e8>
11044920:	00801004 	movi	r2,64
11044924:	1109c83a 	sub	r4,r2,r4
11044928:	4912983a 	sll	r9,r9,r4
1104492c:	498cb03a 	or	r6,r9,r6
11044930:	300cc03a 	cmpne	r6,r6,zero
11044934:	298ab03a 	or	r5,r5,r6
11044938:	0013883a 	mov	r9,zero
1104493c:	003f1506 	br	11044594 <__adddf3+0x268>
11044940:	0101ffc4 	movi	r4,2047
11044944:	113f9a1e 	bne	r2,r4,110447b0 <__adddf3+0x484>
11044948:	4811883a 	mov	r8,r9
1104494c:	3023883a 	mov	r17,r6
11044950:	1021883a 	mov	r16,r2
11044954:	3825883a 	mov	r18,r7
11044958:	003e9306 	br	110443a8 <__adddf3+0x7c>
1104495c:	8000161e 	bne	r16,zero,110449b8 <__adddf3+0x68c>
11044960:	444ab03a 	or	r5,r8,r17
11044964:	28005126 	beq	r5,zero,11044aac <__adddf3+0x780>
11044968:	0108303a 	nor	r4,zero,r4
1104496c:	20004d1e 	bne	r4,zero,11044aa4 <__adddf3+0x778>
11044970:	89a3883a 	add	r17,r17,r6
11044974:	4253883a 	add	r9,r8,r9
11044978:	898d803a 	cmpltu	r6,r17,r6
1104497c:	3251883a 	add	r8,r6,r9
11044980:	1021883a 	mov	r16,r2
11044984:	003f0806 	br	110445a8 <__adddf3+0x27c>
11044988:	1000301e 	bne	r2,zero,11044a4c <__adddf3+0x720>
1104498c:	4984b03a 	or	r2,r9,r6
11044990:	10007126 	beq	r2,zero,11044b58 <__adddf3+0x82c>
11044994:	4811883a 	mov	r8,r9
11044998:	3023883a 	mov	r17,r6
1104499c:	3825883a 	mov	r18,r7
110449a0:	0401ffc4 	movi	r16,2047
110449a4:	003e8006 	br	110443a8 <__adddf3+0x7c>
110449a8:	4462b03a 	or	r17,r8,r17
110449ac:	8822c03a 	cmpne	r17,r17,zero
110449b0:	0007883a 	mov	r3,zero
110449b4:	003f8b06 	br	110447e4 <__adddf3+0x4b8>
110449b8:	0141ffc4 	movi	r5,2047
110449bc:	11403b26 	beq	r2,r5,11044aac <__adddf3+0x780>
110449c0:	0109c83a 	sub	r4,zero,r4
110449c4:	42002034 	orhi	r8,r8,128
110449c8:	01400e04 	movi	r5,56
110449cc:	29006716 	blt	r5,r4,11044b6c <__adddf3+0x840>
110449d0:	014007c4 	movi	r5,31
110449d4:	29007016 	blt	r5,r4,11044b98 <__adddf3+0x86c>
110449d8:	01400804 	movi	r5,32
110449dc:	290bc83a 	sub	r5,r5,r4
110449e0:	4154983a 	sll	r10,r8,r5
110449e4:	890ed83a 	srl	r7,r17,r4
110449e8:	894a983a 	sll	r5,r17,r5
110449ec:	4108d83a 	srl	r4,r8,r4
110449f0:	51e2b03a 	or	r17,r10,r7
110449f4:	280ac03a 	cmpne	r5,r5,zero
110449f8:	8962b03a 	or	r17,r17,r5
110449fc:	89a3883a 	add	r17,r17,r6
11044a00:	2253883a 	add	r9,r4,r9
11044a04:	898d803a 	cmpltu	r6,r17,r6
11044a08:	3251883a 	add	r8,r6,r9
11044a0c:	1021883a 	mov	r16,r2
11044a10:	003ee506 	br	110445a8 <__adddf3+0x27c>
11044a14:	4984b03a 	or	r2,r9,r6
11044a18:	103e6326 	beq	r2,zero,110443a8 <__adddf3+0x7c>
11044a1c:	8987c83a 	sub	r3,r17,r6
11044a20:	88c9803a 	cmpltu	r4,r17,r3
11044a24:	4245c83a 	sub	r2,r8,r9
11044a28:	1105c83a 	sub	r2,r2,r4
11044a2c:	1100202c 	andhi	r4,r2,128
11044a30:	203ebb26 	beq	r4,zero,11044520 <__adddf3+0x1f4>
11044a34:	3463c83a 	sub	r17,r6,r17
11044a38:	4a07c83a 	sub	r3,r9,r8
11044a3c:	344d803a 	cmpltu	r6,r6,r17
11044a40:	1991c83a 	sub	r8,r3,r6
11044a44:	3825883a 	mov	r18,r7
11044a48:	003e5706 	br	110443a8 <__adddf3+0x7c>
11044a4c:	4984b03a 	or	r2,r9,r6
11044a50:	10002e26 	beq	r2,zero,11044b0c <__adddf3+0x7e0>
11044a54:	4004d0fa 	srli	r2,r8,3
11044a58:	8822d0fa 	srli	r17,r17,3
11044a5c:	4010977a 	slli	r8,r8,29
11044a60:	10c0022c 	andhi	r3,r2,8
11044a64:	4462b03a 	or	r17,r8,r17
11044a68:	18000826 	beq	r3,zero,11044a8c <__adddf3+0x760>
11044a6c:	4808d0fa 	srli	r4,r9,3
11044a70:	20c0022c 	andhi	r3,r4,8
11044a74:	1800051e 	bne	r3,zero,11044a8c <__adddf3+0x760>
11044a78:	300cd0fa 	srli	r6,r6,3
11044a7c:	4806977a 	slli	r3,r9,29
11044a80:	2005883a 	mov	r2,r4
11044a84:	3825883a 	mov	r18,r7
11044a88:	19a2b03a 	or	r17,r3,r6
11044a8c:	8810d77a 	srli	r8,r17,29
11044a90:	100490fa 	slli	r2,r2,3
11044a94:	882290fa 	slli	r17,r17,3
11044a98:	0401ffc4 	movi	r16,2047
11044a9c:	4090b03a 	or	r8,r8,r2
11044aa0:	003e4106 	br	110443a8 <__adddf3+0x7c>
11044aa4:	0141ffc4 	movi	r5,2047
11044aa8:	117fc71e 	bne	r2,r5,110449c8 <__adddf3+0x69c>
11044aac:	4811883a 	mov	r8,r9
11044ab0:	3023883a 	mov	r17,r6
11044ab4:	1021883a 	mov	r16,r2
11044ab8:	003e3b06 	br	110443a8 <__adddf3+0x7c>
11044abc:	10002f26 	beq	r2,zero,11044b7c <__adddf3+0x850>
11044ac0:	4984b03a 	or	r2,r9,r6
11044ac4:	10001126 	beq	r2,zero,11044b0c <__adddf3+0x7e0>
11044ac8:	4004d0fa 	srli	r2,r8,3
11044acc:	8822d0fa 	srli	r17,r17,3
11044ad0:	4010977a 	slli	r8,r8,29
11044ad4:	10c0022c 	andhi	r3,r2,8
11044ad8:	4462b03a 	or	r17,r8,r17
11044adc:	183feb26 	beq	r3,zero,11044a8c <__adddf3+0x760>
11044ae0:	4808d0fa 	srli	r4,r9,3
11044ae4:	20c0022c 	andhi	r3,r4,8
11044ae8:	183fe81e 	bne	r3,zero,11044a8c <__adddf3+0x760>
11044aec:	300cd0fa 	srli	r6,r6,3
11044af0:	4806977a 	slli	r3,r9,29
11044af4:	2005883a 	mov	r2,r4
11044af8:	19a2b03a 	or	r17,r3,r6
11044afc:	003fe306 	br	11044a8c <__adddf3+0x760>
11044b00:	0011883a 	mov	r8,zero
11044b04:	0005883a 	mov	r2,zero
11044b08:	003e3f06 	br	11044408 <__adddf3+0xdc>
11044b0c:	0401ffc4 	movi	r16,2047
11044b10:	003e2506 	br	110443a8 <__adddf3+0x7c>
11044b14:	0013883a 	mov	r9,zero
11044b18:	003f8406 	br	1104492c <__adddf3+0x600>
11044b1c:	0005883a 	mov	r2,zero
11044b20:	0007883a 	mov	r3,zero
11044b24:	003e8906 	br	1104454c <__adddf3+0x220>
11044b28:	197ff804 	addi	r5,r3,-32
11044b2c:	01000804 	movi	r4,32
11044b30:	414ad83a 	srl	r5,r8,r5
11044b34:	19002426 	beq	r3,r4,11044bc8 <__adddf3+0x89c>
11044b38:	01001004 	movi	r4,64
11044b3c:	20c7c83a 	sub	r3,r4,r3
11044b40:	40c6983a 	sll	r3,r8,r3
11044b44:	1c46b03a 	or	r3,r3,r17
11044b48:	1806c03a 	cmpne	r3,r3,zero
11044b4c:	28e2b03a 	or	r17,r5,r3
11044b50:	0007883a 	mov	r3,zero
11044b54:	003f2306 	br	110447e4 <__adddf3+0x4b8>
11044b58:	0007883a 	mov	r3,zero
11044b5c:	5811883a 	mov	r8,r11
11044b60:	00bfffc4 	movi	r2,-1
11044b64:	0401ffc4 	movi	r16,2047
11044b68:	003e7806 	br	1104454c <__adddf3+0x220>
11044b6c:	4462b03a 	or	r17,r8,r17
11044b70:	8822c03a 	cmpne	r17,r17,zero
11044b74:	0009883a 	mov	r4,zero
11044b78:	003fa006 	br	110449fc <__adddf3+0x6d0>
11044b7c:	4811883a 	mov	r8,r9
11044b80:	3023883a 	mov	r17,r6
11044b84:	0401ffc4 	movi	r16,2047
11044b88:	003e0706 	br	110443a8 <__adddf3+0x7c>
11044b8c:	4811883a 	mov	r8,r9
11044b90:	3023883a 	mov	r17,r6
11044b94:	003e0406 	br	110443a8 <__adddf3+0x7c>
11044b98:	21fff804 	addi	r7,r4,-32
11044b9c:	01400804 	movi	r5,32
11044ba0:	41ced83a 	srl	r7,r8,r7
11044ba4:	21400a26 	beq	r4,r5,11044bd0 <__adddf3+0x8a4>
11044ba8:	01401004 	movi	r5,64
11044bac:	2909c83a 	sub	r4,r5,r4
11044bb0:	4108983a 	sll	r4,r8,r4
11044bb4:	2448b03a 	or	r4,r4,r17
11044bb8:	2008c03a 	cmpne	r4,r4,zero
11044bbc:	3922b03a 	or	r17,r7,r4
11044bc0:	0009883a 	mov	r4,zero
11044bc4:	003f8d06 	br	110449fc <__adddf3+0x6d0>
11044bc8:	0007883a 	mov	r3,zero
11044bcc:	003fdd06 	br	11044b44 <__adddf3+0x818>
11044bd0:	0009883a 	mov	r4,zero
11044bd4:	003ff706 	br	11044bb4 <__adddf3+0x888>

11044bd8 <__eqdf2>:
11044bd8:	2804d53a 	srli	r2,r5,20
11044bdc:	3806d53a 	srli	r3,r7,20
11044be0:	02000434 	movhi	r8,16
11044be4:	423fffc4 	addi	r8,r8,-1
11044be8:	1081ffcc 	andi	r2,r2,2047
11044bec:	0281ffc4 	movi	r10,2047
11044bf0:	2a12703a 	and	r9,r5,r8
11044bf4:	18c1ffcc 	andi	r3,r3,2047
11044bf8:	3a10703a 	and	r8,r7,r8
11044bfc:	280ad7fa 	srli	r5,r5,31
11044c00:	380ed7fa 	srli	r7,r7,31
11044c04:	12801026 	beq	r2,r10,11044c48 <__eqdf2+0x70>
11044c08:	0281ffc4 	movi	r10,2047
11044c0c:	1a800a26 	beq	r3,r10,11044c38 <__eqdf2+0x60>
11044c10:	10c00226 	beq	r2,r3,11044c1c <__eqdf2+0x44>
11044c14:	00800044 	movi	r2,1
11044c18:	f800283a 	ret
11044c1c:	4a3ffd1e 	bne	r9,r8,11044c14 <__eqdf2+0x3c>
11044c20:	21bffc1e 	bne	r4,r6,11044c14 <__eqdf2+0x3c>
11044c24:	29c00c26 	beq	r5,r7,11044c58 <__eqdf2+0x80>
11044c28:	103ffa1e 	bne	r2,zero,11044c14 <__eqdf2+0x3c>
11044c2c:	2244b03a 	or	r2,r4,r9
11044c30:	1004c03a 	cmpne	r2,r2,zero
11044c34:	f800283a 	ret
11044c38:	3214b03a 	or	r10,r6,r8
11044c3c:	503ff426 	beq	r10,zero,11044c10 <__eqdf2+0x38>
11044c40:	00800044 	movi	r2,1
11044c44:	f800283a 	ret
11044c48:	2254b03a 	or	r10,r4,r9
11044c4c:	503fee26 	beq	r10,zero,11044c08 <__eqdf2+0x30>
11044c50:	00800044 	movi	r2,1
11044c54:	f800283a 	ret
11044c58:	0005883a 	mov	r2,zero
11044c5c:	f800283a 	ret

11044c60 <__gedf2>:
11044c60:	2804d53a 	srli	r2,r5,20
11044c64:	3806d53a 	srli	r3,r7,20
11044c68:	02000434 	movhi	r8,16
11044c6c:	423fffc4 	addi	r8,r8,-1
11044c70:	1081ffcc 	andi	r2,r2,2047
11044c74:	0241ffc4 	movi	r9,2047
11044c78:	2a14703a 	and	r10,r5,r8
11044c7c:	18c1ffcc 	andi	r3,r3,2047
11044c80:	3a10703a 	and	r8,r7,r8
11044c84:	280ad7fa 	srli	r5,r5,31
11044c88:	380ed7fa 	srli	r7,r7,31
11044c8c:	12401d26 	beq	r2,r9,11044d04 <__gedf2+0xa4>
11044c90:	0241ffc4 	movi	r9,2047
11044c94:	1a401226 	beq	r3,r9,11044ce0 <__gedf2+0x80>
11044c98:	1000081e 	bne	r2,zero,11044cbc <__gedf2+0x5c>
11044c9c:	2296b03a 	or	r11,r4,r10
11044ca0:	5813003a 	cmpeq	r9,r11,zero
11044ca4:	1800091e 	bne	r3,zero,11044ccc <__gedf2+0x6c>
11044ca8:	3218b03a 	or	r12,r6,r8
11044cac:	6000071e 	bne	r12,zero,11044ccc <__gedf2+0x6c>
11044cb0:	0005883a 	mov	r2,zero
11044cb4:	5800101e 	bne	r11,zero,11044cf8 <__gedf2+0x98>
11044cb8:	f800283a 	ret
11044cbc:	18000c1e 	bne	r3,zero,11044cf0 <__gedf2+0x90>
11044cc0:	3212b03a 	or	r9,r6,r8
11044cc4:	48000c26 	beq	r9,zero,11044cf8 <__gedf2+0x98>
11044cc8:	0013883a 	mov	r9,zero
11044ccc:	39c03fcc 	andi	r7,r7,255
11044cd0:	48000826 	beq	r9,zero,11044cf4 <__gedf2+0x94>
11044cd4:	38000926 	beq	r7,zero,11044cfc <__gedf2+0x9c>
11044cd8:	00800044 	movi	r2,1
11044cdc:	f800283a 	ret
11044ce0:	3212b03a 	or	r9,r6,r8
11044ce4:	483fec26 	beq	r9,zero,11044c98 <__gedf2+0x38>
11044ce8:	00bfff84 	movi	r2,-2
11044cec:	f800283a 	ret
11044cf0:	39c03fcc 	andi	r7,r7,255
11044cf4:	29c00626 	beq	r5,r7,11044d10 <__gedf2+0xb0>
11044cf8:	283ff726 	beq	r5,zero,11044cd8 <__gedf2+0x78>
11044cfc:	00bfffc4 	movi	r2,-1
11044d00:	f800283a 	ret
11044d04:	2292b03a 	or	r9,r4,r10
11044d08:	483fe126 	beq	r9,zero,11044c90 <__gedf2+0x30>
11044d0c:	003ff606 	br	11044ce8 <__gedf2+0x88>
11044d10:	18bff916 	blt	r3,r2,11044cf8 <__gedf2+0x98>
11044d14:	10c00316 	blt	r2,r3,11044d24 <__gedf2+0xc4>
11044d18:	42bff736 	bltu	r8,r10,11044cf8 <__gedf2+0x98>
11044d1c:	52000326 	beq	r10,r8,11044d2c <__gedf2+0xcc>
11044d20:	5200042e 	bgeu	r10,r8,11044d34 <__gedf2+0xd4>
11044d24:	283fec1e 	bne	r5,zero,11044cd8 <__gedf2+0x78>
11044d28:	003ff406 	br	11044cfc <__gedf2+0x9c>
11044d2c:	313ff236 	bltu	r6,r4,11044cf8 <__gedf2+0x98>
11044d30:	21bffc36 	bltu	r4,r6,11044d24 <__gedf2+0xc4>
11044d34:	0005883a 	mov	r2,zero
11044d38:	f800283a 	ret

11044d3c <__muldf3>:
11044d3c:	defff304 	addi	sp,sp,-52
11044d40:	2804d53a 	srli	r2,r5,20
11044d44:	dd800915 	stw	r22,36(sp)
11044d48:	282cd7fa 	srli	r22,r5,31
11044d4c:	dc000315 	stw	r16,12(sp)
11044d50:	04000434 	movhi	r16,16
11044d54:	dd400815 	stw	r21,32(sp)
11044d58:	dc800515 	stw	r18,20(sp)
11044d5c:	843fffc4 	addi	r16,r16,-1
11044d60:	dfc00c15 	stw	ra,48(sp)
11044d64:	df000b15 	stw	fp,44(sp)
11044d68:	ddc00a15 	stw	r23,40(sp)
11044d6c:	dd000715 	stw	r20,28(sp)
11044d70:	dcc00615 	stw	r19,24(sp)
11044d74:	dc400415 	stw	r17,16(sp)
11044d78:	1481ffcc 	andi	r18,r2,2047
11044d7c:	2c20703a 	and	r16,r5,r16
11044d80:	b02b883a 	mov	r21,r22
11044d84:	b2403fcc 	andi	r9,r22,255
11044d88:	90006026 	beq	r18,zero,11044f0c <__muldf3+0x1d0>
11044d8c:	0081ffc4 	movi	r2,2047
11044d90:	2029883a 	mov	r20,r4
11044d94:	90803626 	beq	r18,r2,11044e70 <__muldf3+0x134>
11044d98:	80800434 	orhi	r2,r16,16
11044d9c:	100490fa 	slli	r2,r2,3
11044da0:	2020d77a 	srli	r16,r4,29
11044da4:	202890fa 	slli	r20,r4,3
11044da8:	94bf0044 	addi	r18,r18,-1023
11044dac:	80a0b03a 	or	r16,r16,r2
11044db0:	0027883a 	mov	r19,zero
11044db4:	0039883a 	mov	fp,zero
11044db8:	3804d53a 	srli	r2,r7,20
11044dbc:	382ed7fa 	srli	r23,r7,31
11044dc0:	04400434 	movhi	r17,16
11044dc4:	8c7fffc4 	addi	r17,r17,-1
11044dc8:	1081ffcc 	andi	r2,r2,2047
11044dcc:	3011883a 	mov	r8,r6
11044dd0:	3c62703a 	and	r17,r7,r17
11044dd4:	ba803fcc 	andi	r10,r23,255
11044dd8:	10006d26 	beq	r2,zero,11044f90 <__muldf3+0x254>
11044ddc:	00c1ffc4 	movi	r3,2047
11044de0:	10c06526 	beq	r2,r3,11044f78 <__muldf3+0x23c>
11044de4:	88c00434 	orhi	r3,r17,16
11044de8:	180690fa 	slli	r3,r3,3
11044dec:	3022d77a 	srli	r17,r6,29
11044df0:	301090fa 	slli	r8,r6,3
11044df4:	10bf0044 	addi	r2,r2,-1023
11044df8:	88e2b03a 	or	r17,r17,r3
11044dfc:	000b883a 	mov	r5,zero
11044e00:	9085883a 	add	r2,r18,r2
11044e04:	2cc8b03a 	or	r4,r5,r19
11044e08:	00c003c4 	movi	r3,15
11044e0c:	bdacf03a 	xor	r22,r23,r22
11044e10:	12c00044 	addi	r11,r2,1
11044e14:	19009936 	bltu	r3,r4,1104507c <__muldf3+0x340>
11044e18:	200890ba 	slli	r4,r4,2
11044e1c:	00c44134 	movhi	r3,4356
11044e20:	18d38c04 	addi	r3,r3,20016
11044e24:	20c9883a 	add	r4,r4,r3
11044e28:	20c00017 	ldw	r3,0(r4)
11044e2c:	1800683a 	jmp	r3
11044e30:	1104507c 	xorhi	r4,r2,4417
11044e34:	11044e90 	cmplti	r4,r2,4410
11044e38:	11044e90 	cmplti	r4,r2,4410
11044e3c:	11044e8c 	andi	r4,r2,4410
11044e40:	11045058 	cmpnei	r4,r2,4417
11044e44:	11045058 	cmpnei	r4,r2,4417
11044e48:	11045040 	call	11104504 <__alt_data_end+0x84504>
11044e4c:	11044e8c 	andi	r4,r2,4410
11044e50:	11045058 	cmpnei	r4,r2,4417
11044e54:	11045040 	call	11104504 <__alt_data_end+0x84504>
11044e58:	11045058 	cmpnei	r4,r2,4417
11044e5c:	11044e8c 	andi	r4,r2,4410
11044e60:	11045068 	cmpgeui	r4,r2,4417
11044e64:	11045068 	cmpgeui	r4,r2,4417
11044e68:	11045068 	cmpgeui	r4,r2,4417
11044e6c:	11045284 	addi	r4,r2,4426
11044e70:	2404b03a 	or	r2,r4,r16
11044e74:	10006f1e 	bne	r2,zero,11045034 <__muldf3+0x2f8>
11044e78:	04c00204 	movi	r19,8
11044e7c:	0021883a 	mov	r16,zero
11044e80:	0029883a 	mov	r20,zero
11044e84:	07000084 	movi	fp,2
11044e88:	003fcb06 	br	11044db8 <__muldf3+0x7c>
11044e8c:	502d883a 	mov	r22,r10
11044e90:	00800084 	movi	r2,2
11044e94:	28805726 	beq	r5,r2,11044ff4 <__muldf3+0x2b8>
11044e98:	008000c4 	movi	r2,3
11044e9c:	28816626 	beq	r5,r2,11045438 <__muldf3+0x6fc>
11044ea0:	00800044 	movi	r2,1
11044ea4:	2881411e 	bne	r5,r2,110453ac <__muldf3+0x670>
11044ea8:	b02b883a 	mov	r21,r22
11044eac:	0005883a 	mov	r2,zero
11044eb0:	000b883a 	mov	r5,zero
11044eb4:	0029883a 	mov	r20,zero
11044eb8:	1004953a 	slli	r2,r2,20
11044ebc:	a8c03fcc 	andi	r3,r21,255
11044ec0:	04400434 	movhi	r17,16
11044ec4:	8c7fffc4 	addi	r17,r17,-1
11044ec8:	180697fa 	slli	r3,r3,31
11044ecc:	2c4a703a 	and	r5,r5,r17
11044ed0:	288ab03a 	or	r5,r5,r2
11044ed4:	28c6b03a 	or	r3,r5,r3
11044ed8:	a005883a 	mov	r2,r20
11044edc:	dfc00c17 	ldw	ra,48(sp)
11044ee0:	df000b17 	ldw	fp,44(sp)
11044ee4:	ddc00a17 	ldw	r23,40(sp)
11044ee8:	dd800917 	ldw	r22,36(sp)
11044eec:	dd400817 	ldw	r21,32(sp)
11044ef0:	dd000717 	ldw	r20,28(sp)
11044ef4:	dcc00617 	ldw	r19,24(sp)
11044ef8:	dc800517 	ldw	r18,20(sp)
11044efc:	dc400417 	ldw	r17,16(sp)
11044f00:	dc000317 	ldw	r16,12(sp)
11044f04:	dec00d04 	addi	sp,sp,52
11044f08:	f800283a 	ret
11044f0c:	2404b03a 	or	r2,r4,r16
11044f10:	2027883a 	mov	r19,r4
11044f14:	10004226 	beq	r2,zero,11045020 <__muldf3+0x2e4>
11044f18:	8000fc26 	beq	r16,zero,1104530c <__muldf3+0x5d0>
11044f1c:	8009883a 	mov	r4,r16
11044f20:	d9800215 	stw	r6,8(sp)
11044f24:	d9c00015 	stw	r7,0(sp)
11044f28:	da400115 	stw	r9,4(sp)
11044f2c:	1045eac0 	call	11045eac <__clzsi2>
11044f30:	d9800217 	ldw	r6,8(sp)
11044f34:	d9c00017 	ldw	r7,0(sp)
11044f38:	da400117 	ldw	r9,4(sp)
11044f3c:	113ffd44 	addi	r4,r2,-11
11044f40:	00c00704 	movi	r3,28
11044f44:	1900ed16 	blt	r3,r4,110452fc <__muldf3+0x5c0>
11044f48:	00c00744 	movi	r3,29
11044f4c:	147ffe04 	addi	r17,r2,-8
11044f50:	1907c83a 	sub	r3,r3,r4
11044f54:	8460983a 	sll	r16,r16,r17
11044f58:	98c6d83a 	srl	r3,r19,r3
11044f5c:	9c68983a 	sll	r20,r19,r17
11044f60:	1c20b03a 	or	r16,r3,r16
11044f64:	1080fcc4 	addi	r2,r2,1011
11044f68:	00a5c83a 	sub	r18,zero,r2
11044f6c:	0027883a 	mov	r19,zero
11044f70:	0039883a 	mov	fp,zero
11044f74:	003f9006 	br	11044db8 <__muldf3+0x7c>
11044f78:	3446b03a 	or	r3,r6,r17
11044f7c:	1800261e 	bne	r3,zero,11045018 <__muldf3+0x2dc>
11044f80:	0023883a 	mov	r17,zero
11044f84:	0011883a 	mov	r8,zero
11044f88:	01400084 	movi	r5,2
11044f8c:	003f9c06 	br	11044e00 <__muldf3+0xc4>
11044f90:	3446b03a 	or	r3,r6,r17
11044f94:	18001c26 	beq	r3,zero,11045008 <__muldf3+0x2cc>
11044f98:	8800ce26 	beq	r17,zero,110452d4 <__muldf3+0x598>
11044f9c:	8809883a 	mov	r4,r17
11044fa0:	d9800215 	stw	r6,8(sp)
11044fa4:	da400115 	stw	r9,4(sp)
11044fa8:	da800015 	stw	r10,0(sp)
11044fac:	1045eac0 	call	11045eac <__clzsi2>
11044fb0:	d9800217 	ldw	r6,8(sp)
11044fb4:	da400117 	ldw	r9,4(sp)
11044fb8:	da800017 	ldw	r10,0(sp)
11044fbc:	113ffd44 	addi	r4,r2,-11
11044fc0:	00c00704 	movi	r3,28
11044fc4:	1900bf16 	blt	r3,r4,110452c4 <__muldf3+0x588>
11044fc8:	00c00744 	movi	r3,29
11044fcc:	123ffe04 	addi	r8,r2,-8
11044fd0:	1907c83a 	sub	r3,r3,r4
11044fd4:	8a22983a 	sll	r17,r17,r8
11044fd8:	30c6d83a 	srl	r3,r6,r3
11044fdc:	3210983a 	sll	r8,r6,r8
11044fe0:	1c62b03a 	or	r17,r3,r17
11044fe4:	1080fcc4 	addi	r2,r2,1011
11044fe8:	0085c83a 	sub	r2,zero,r2
11044fec:	000b883a 	mov	r5,zero
11044ff0:	003f8306 	br	11044e00 <__muldf3+0xc4>
11044ff4:	b02b883a 	mov	r21,r22
11044ff8:	0081ffc4 	movi	r2,2047
11044ffc:	000b883a 	mov	r5,zero
11045000:	0029883a 	mov	r20,zero
11045004:	003fac06 	br	11044eb8 <__muldf3+0x17c>
11045008:	0023883a 	mov	r17,zero
1104500c:	0011883a 	mov	r8,zero
11045010:	01400044 	movi	r5,1
11045014:	003f7a06 	br	11044e00 <__muldf3+0xc4>
11045018:	014000c4 	movi	r5,3
1104501c:	003f7806 	br	11044e00 <__muldf3+0xc4>
11045020:	04c00104 	movi	r19,4
11045024:	0021883a 	mov	r16,zero
11045028:	0029883a 	mov	r20,zero
1104502c:	07000044 	movi	fp,1
11045030:	003f6106 	br	11044db8 <__muldf3+0x7c>
11045034:	04c00304 	movi	r19,12
11045038:	070000c4 	movi	fp,3
1104503c:	003f5e06 	br	11044db8 <__muldf3+0x7c>
11045040:	01400434 	movhi	r5,16
11045044:	002b883a 	mov	r21,zero
11045048:	297fffc4 	addi	r5,r5,-1
1104504c:	053fffc4 	movi	r20,-1
11045050:	0081ffc4 	movi	r2,2047
11045054:	003f9806 	br	11044eb8 <__muldf3+0x17c>
11045058:	8023883a 	mov	r17,r16
1104505c:	a011883a 	mov	r8,r20
11045060:	e00b883a 	mov	r5,fp
11045064:	003f8a06 	br	11044e90 <__muldf3+0x154>
11045068:	8023883a 	mov	r17,r16
1104506c:	a011883a 	mov	r8,r20
11045070:	482d883a 	mov	r22,r9
11045074:	e00b883a 	mov	r5,fp
11045078:	003f8506 	br	11044e90 <__muldf3+0x154>
1104507c:	a00ad43a 	srli	r5,r20,16
11045080:	401ad43a 	srli	r13,r8,16
11045084:	a53fffcc 	andi	r20,r20,65535
11045088:	423fffcc 	andi	r8,r8,65535
1104508c:	4519383a 	mul	r12,r8,r20
11045090:	4147383a 	mul	r3,r8,r5
11045094:	6d09383a 	mul	r4,r13,r20
11045098:	600cd43a 	srli	r6,r12,16
1104509c:	2b5d383a 	mul	r14,r5,r13
110450a0:	20c9883a 	add	r4,r4,r3
110450a4:	310d883a 	add	r6,r6,r4
110450a8:	30c0022e 	bgeu	r6,r3,110450b4 <__muldf3+0x378>
110450ac:	00c00074 	movhi	r3,1
110450b0:	70dd883a 	add	r14,r14,r3
110450b4:	8826d43a 	srli	r19,r17,16
110450b8:	8bffffcc 	andi	r15,r17,65535
110450bc:	7d23383a 	mul	r17,r15,r20
110450c0:	7949383a 	mul	r4,r15,r5
110450c4:	9d29383a 	mul	r20,r19,r20
110450c8:	8814d43a 	srli	r10,r17,16
110450cc:	3012943a 	slli	r9,r6,16
110450d0:	a129883a 	add	r20,r20,r4
110450d4:	633fffcc 	andi	r12,r12,65535
110450d8:	5515883a 	add	r10,r10,r20
110450dc:	3006d43a 	srli	r3,r6,16
110450e0:	4b13883a 	add	r9,r9,r12
110450e4:	2ccb383a 	mul	r5,r5,r19
110450e8:	5100022e 	bgeu	r10,r4,110450f4 <__muldf3+0x3b8>
110450ec:	01000074 	movhi	r4,1
110450f0:	290b883a 	add	r5,r5,r4
110450f4:	802ad43a 	srli	r21,r16,16
110450f8:	843fffcc 	andi	r16,r16,65535
110450fc:	440d383a 	mul	r6,r8,r16
11045100:	4565383a 	mul	r18,r8,r21
11045104:	8349383a 	mul	r4,r16,r13
11045108:	500e943a 	slli	r7,r10,16
1104510c:	3010d43a 	srli	r8,r6,16
11045110:	5028d43a 	srli	r20,r10,16
11045114:	2489883a 	add	r4,r4,r18
11045118:	8abfffcc 	andi	r10,r17,65535
1104511c:	3a95883a 	add	r10,r7,r10
11045120:	4119883a 	add	r12,r8,r4
11045124:	a169883a 	add	r20,r20,r5
11045128:	1a87883a 	add	r3,r3,r10
1104512c:	6d5b383a 	mul	r13,r13,r21
11045130:	6480022e 	bgeu	r12,r18,1104513c <__muldf3+0x400>
11045134:	01000074 	movhi	r4,1
11045138:	691b883a 	add	r13,r13,r4
1104513c:	7c25383a 	mul	r18,r15,r16
11045140:	7d4b383a 	mul	r5,r15,r21
11045144:	84cf383a 	mul	r7,r16,r19
11045148:	901ed43a 	srli	r15,r18,16
1104514c:	6008d43a 	srli	r4,r12,16
11045150:	6010943a 	slli	r8,r12,16
11045154:	394f883a 	add	r7,r7,r5
11045158:	333fffcc 	andi	r12,r6,65535
1104515c:	79df883a 	add	r15,r15,r7
11045160:	235b883a 	add	r13,r4,r13
11045164:	9d63383a 	mul	r17,r19,r21
11045168:	4309883a 	add	r4,r8,r12
1104516c:	7940022e 	bgeu	r15,r5,11045178 <__muldf3+0x43c>
11045170:	01400074 	movhi	r5,1
11045174:	8963883a 	add	r17,r17,r5
11045178:	780a943a 	slli	r5,r15,16
1104517c:	91bfffcc 	andi	r6,r18,65535
11045180:	70c7883a 	add	r3,r14,r3
11045184:	298d883a 	add	r6,r5,r6
11045188:	1a8f803a 	cmpltu	r7,r3,r10
1104518c:	350b883a 	add	r5,r6,r20
11045190:	20c7883a 	add	r3,r4,r3
11045194:	3955883a 	add	r10,r7,r5
11045198:	1909803a 	cmpltu	r4,r3,r4
1104519c:	6a91883a 	add	r8,r13,r10
110451a0:	780cd43a 	srli	r6,r15,16
110451a4:	2219883a 	add	r12,r4,r8
110451a8:	2d0b803a 	cmpltu	r5,r5,r20
110451ac:	51cf803a 	cmpltu	r7,r10,r7
110451b0:	29ceb03a 	or	r7,r5,r7
110451b4:	4351803a 	cmpltu	r8,r8,r13
110451b8:	610b803a 	cmpltu	r5,r12,r4
110451bc:	4148b03a 	or	r4,r8,r5
110451c0:	398f883a 	add	r7,r7,r6
110451c4:	3909883a 	add	r4,r7,r4
110451c8:	1810927a 	slli	r8,r3,9
110451cc:	2449883a 	add	r4,r4,r17
110451d0:	2008927a 	slli	r4,r4,9
110451d4:	6022d5fa 	srli	r17,r12,23
110451d8:	1806d5fa 	srli	r3,r3,23
110451dc:	4252b03a 	or	r9,r8,r9
110451e0:	600a927a 	slli	r5,r12,9
110451e4:	4810c03a 	cmpne	r8,r9,zero
110451e8:	2462b03a 	or	r17,r4,r17
110451ec:	40c6b03a 	or	r3,r8,r3
110451f0:	8900402c 	andhi	r4,r17,256
110451f4:	1950b03a 	or	r8,r3,r5
110451f8:	20000726 	beq	r4,zero,11045218 <__muldf3+0x4dc>
110451fc:	4006d07a 	srli	r3,r8,1
11045200:	880497fa 	slli	r2,r17,31
11045204:	4200004c 	andi	r8,r8,1
11045208:	8822d07a 	srli	r17,r17,1
1104520c:	1a10b03a 	or	r8,r3,r8
11045210:	1210b03a 	or	r8,r2,r8
11045214:	5805883a 	mov	r2,r11
11045218:	1140ffc4 	addi	r5,r2,1023
1104521c:	0140440e 	bge	zero,r5,11045330 <__muldf3+0x5f4>
11045220:	40c001cc 	andi	r3,r8,7
11045224:	18000726 	beq	r3,zero,11045244 <__muldf3+0x508>
11045228:	40c003cc 	andi	r3,r8,15
1104522c:	01000104 	movi	r4,4
11045230:	19000426 	beq	r3,r4,11045244 <__muldf3+0x508>
11045234:	4107883a 	add	r3,r8,r4
11045238:	1a11803a 	cmpltu	r8,r3,r8
1104523c:	8a23883a 	add	r17,r17,r8
11045240:	1811883a 	mov	r8,r3
11045244:	88c0402c 	andhi	r3,r17,256
11045248:	18000426 	beq	r3,zero,1104525c <__muldf3+0x520>
1104524c:	11410004 	addi	r5,r2,1024
11045250:	00bfc034 	movhi	r2,65280
11045254:	10bfffc4 	addi	r2,r2,-1
11045258:	88a2703a 	and	r17,r17,r2
1104525c:	0081ff84 	movi	r2,2046
11045260:	117f6416 	blt	r2,r5,11044ff4 <__muldf3+0x2b8>
11045264:	8828977a 	slli	r20,r17,29
11045268:	4010d0fa 	srli	r8,r8,3
1104526c:	8822927a 	slli	r17,r17,9
11045270:	2881ffcc 	andi	r2,r5,2047
11045274:	a228b03a 	or	r20,r20,r8
11045278:	880ad33a 	srli	r5,r17,12
1104527c:	b02b883a 	mov	r21,r22
11045280:	003f0d06 	br	11044eb8 <__muldf3+0x17c>
11045284:	8080022c 	andhi	r2,r16,8
11045288:	10000926 	beq	r2,zero,110452b0 <__muldf3+0x574>
1104528c:	8880022c 	andhi	r2,r17,8
11045290:	1000071e 	bne	r2,zero,110452b0 <__muldf3+0x574>
11045294:	00800434 	movhi	r2,16
11045298:	89400234 	orhi	r5,r17,8
1104529c:	10bfffc4 	addi	r2,r2,-1
110452a0:	b82b883a 	mov	r21,r23
110452a4:	288a703a 	and	r5,r5,r2
110452a8:	4029883a 	mov	r20,r8
110452ac:	003f6806 	br	11045050 <__muldf3+0x314>
110452b0:	00800434 	movhi	r2,16
110452b4:	81400234 	orhi	r5,r16,8
110452b8:	10bfffc4 	addi	r2,r2,-1
110452bc:	288a703a 	and	r5,r5,r2
110452c0:	003f6306 	br	11045050 <__muldf3+0x314>
110452c4:	147ff604 	addi	r17,r2,-40
110452c8:	3462983a 	sll	r17,r6,r17
110452cc:	0011883a 	mov	r8,zero
110452d0:	003f4406 	br	11044fe4 <__muldf3+0x2a8>
110452d4:	3009883a 	mov	r4,r6
110452d8:	d9800215 	stw	r6,8(sp)
110452dc:	da400115 	stw	r9,4(sp)
110452e0:	da800015 	stw	r10,0(sp)
110452e4:	1045eac0 	call	11045eac <__clzsi2>
110452e8:	10800804 	addi	r2,r2,32
110452ec:	da800017 	ldw	r10,0(sp)
110452f0:	da400117 	ldw	r9,4(sp)
110452f4:	d9800217 	ldw	r6,8(sp)
110452f8:	003f3006 	br	11044fbc <__muldf3+0x280>
110452fc:	143ff604 	addi	r16,r2,-40
11045300:	9c20983a 	sll	r16,r19,r16
11045304:	0029883a 	mov	r20,zero
11045308:	003f1606 	br	11044f64 <__muldf3+0x228>
1104530c:	d9800215 	stw	r6,8(sp)
11045310:	d9c00015 	stw	r7,0(sp)
11045314:	da400115 	stw	r9,4(sp)
11045318:	1045eac0 	call	11045eac <__clzsi2>
1104531c:	10800804 	addi	r2,r2,32
11045320:	da400117 	ldw	r9,4(sp)
11045324:	d9c00017 	ldw	r7,0(sp)
11045328:	d9800217 	ldw	r6,8(sp)
1104532c:	003f0306 	br	11044f3c <__muldf3+0x200>
11045330:	00c00044 	movi	r3,1
11045334:	1947c83a 	sub	r3,r3,r5
11045338:	00800e04 	movi	r2,56
1104533c:	10feda16 	blt	r2,r3,11044ea8 <__muldf3+0x16c>
11045340:	008007c4 	movi	r2,31
11045344:	10c01b16 	blt	r2,r3,110453b4 <__muldf3+0x678>
11045348:	00800804 	movi	r2,32
1104534c:	10c5c83a 	sub	r2,r2,r3
11045350:	888a983a 	sll	r5,r17,r2
11045354:	40c8d83a 	srl	r4,r8,r3
11045358:	4084983a 	sll	r2,r8,r2
1104535c:	88e2d83a 	srl	r17,r17,r3
11045360:	2906b03a 	or	r3,r5,r4
11045364:	1004c03a 	cmpne	r2,r2,zero
11045368:	1886b03a 	or	r3,r3,r2
1104536c:	188001cc 	andi	r2,r3,7
11045370:	10000726 	beq	r2,zero,11045390 <__muldf3+0x654>
11045374:	188003cc 	andi	r2,r3,15
11045378:	01000104 	movi	r4,4
1104537c:	11000426 	beq	r2,r4,11045390 <__muldf3+0x654>
11045380:	1805883a 	mov	r2,r3
11045384:	10c00104 	addi	r3,r2,4
11045388:	1885803a 	cmpltu	r2,r3,r2
1104538c:	88a3883a 	add	r17,r17,r2
11045390:	8880202c 	andhi	r2,r17,128
11045394:	10001c26 	beq	r2,zero,11045408 <__muldf3+0x6cc>
11045398:	b02b883a 	mov	r21,r22
1104539c:	00800044 	movi	r2,1
110453a0:	000b883a 	mov	r5,zero
110453a4:	0029883a 	mov	r20,zero
110453a8:	003ec306 	br	11044eb8 <__muldf3+0x17c>
110453ac:	5805883a 	mov	r2,r11
110453b0:	003f9906 	br	11045218 <__muldf3+0x4dc>
110453b4:	00bff844 	movi	r2,-31
110453b8:	1145c83a 	sub	r2,r2,r5
110453bc:	8888d83a 	srl	r4,r17,r2
110453c0:	00800804 	movi	r2,32
110453c4:	18801a26 	beq	r3,r2,11045430 <__muldf3+0x6f4>
110453c8:	00801004 	movi	r2,64
110453cc:	10c5c83a 	sub	r2,r2,r3
110453d0:	8884983a 	sll	r2,r17,r2
110453d4:	1204b03a 	or	r2,r2,r8
110453d8:	1004c03a 	cmpne	r2,r2,zero
110453dc:	2084b03a 	or	r2,r4,r2
110453e0:	144001cc 	andi	r17,r2,7
110453e4:	88000d1e 	bne	r17,zero,1104541c <__muldf3+0x6e0>
110453e8:	000b883a 	mov	r5,zero
110453ec:	1028d0fa 	srli	r20,r2,3
110453f0:	b02b883a 	mov	r21,r22
110453f4:	0005883a 	mov	r2,zero
110453f8:	a468b03a 	or	r20,r20,r17
110453fc:	003eae06 	br	11044eb8 <__muldf3+0x17c>
11045400:	1007883a 	mov	r3,r2
11045404:	0023883a 	mov	r17,zero
11045408:	880a927a 	slli	r5,r17,9
1104540c:	1805883a 	mov	r2,r3
11045410:	8822977a 	slli	r17,r17,29
11045414:	280ad33a 	srli	r5,r5,12
11045418:	003ff406 	br	110453ec <__muldf3+0x6b0>
1104541c:	10c003cc 	andi	r3,r2,15
11045420:	01000104 	movi	r4,4
11045424:	193ff626 	beq	r3,r4,11045400 <__muldf3+0x6c4>
11045428:	0023883a 	mov	r17,zero
1104542c:	003fd506 	br	11045384 <__muldf3+0x648>
11045430:	0005883a 	mov	r2,zero
11045434:	003fe706 	br	110453d4 <__muldf3+0x698>
11045438:	00800434 	movhi	r2,16
1104543c:	89400234 	orhi	r5,r17,8
11045440:	10bfffc4 	addi	r2,r2,-1
11045444:	b02b883a 	mov	r21,r22
11045448:	288a703a 	and	r5,r5,r2
1104544c:	4029883a 	mov	r20,r8
11045450:	003eff06 	br	11045050 <__muldf3+0x314>

11045454 <__subdf3>:
11045454:	02000434 	movhi	r8,16
11045458:	423fffc4 	addi	r8,r8,-1
1104545c:	defffb04 	addi	sp,sp,-20
11045460:	2a14703a 	and	r10,r5,r8
11045464:	3812d53a 	srli	r9,r7,20
11045468:	3a10703a 	and	r8,r7,r8
1104546c:	2006d77a 	srli	r3,r4,29
11045470:	3004d77a 	srli	r2,r6,29
11045474:	dc000015 	stw	r16,0(sp)
11045478:	501490fa 	slli	r10,r10,3
1104547c:	2820d53a 	srli	r16,r5,20
11045480:	401090fa 	slli	r8,r8,3
11045484:	dc800215 	stw	r18,8(sp)
11045488:	dc400115 	stw	r17,4(sp)
1104548c:	dfc00415 	stw	ra,16(sp)
11045490:	202290fa 	slli	r17,r4,3
11045494:	dcc00315 	stw	r19,12(sp)
11045498:	4a41ffcc 	andi	r9,r9,2047
1104549c:	0101ffc4 	movi	r4,2047
110454a0:	2824d7fa 	srli	r18,r5,31
110454a4:	8401ffcc 	andi	r16,r16,2047
110454a8:	50c6b03a 	or	r3,r10,r3
110454ac:	380ed7fa 	srli	r7,r7,31
110454b0:	408ab03a 	or	r5,r8,r2
110454b4:	300c90fa 	slli	r6,r6,3
110454b8:	49009626 	beq	r9,r4,11045714 <__subdf3+0x2c0>
110454bc:	39c0005c 	xori	r7,r7,1
110454c0:	8245c83a 	sub	r2,r16,r9
110454c4:	3c807426 	beq	r7,r18,11045698 <__subdf3+0x244>
110454c8:	0080af0e 	bge	zero,r2,11045788 <__subdf3+0x334>
110454cc:	48002a1e 	bne	r9,zero,11045578 <__subdf3+0x124>
110454d0:	2988b03a 	or	r4,r5,r6
110454d4:	20009a1e 	bne	r4,zero,11045740 <__subdf3+0x2ec>
110454d8:	888001cc 	andi	r2,r17,7
110454dc:	10000726 	beq	r2,zero,110454fc <__subdf3+0xa8>
110454e0:	888003cc 	andi	r2,r17,15
110454e4:	01000104 	movi	r4,4
110454e8:	11000426 	beq	r2,r4,110454fc <__subdf3+0xa8>
110454ec:	890b883a 	add	r5,r17,r4
110454f0:	2c63803a 	cmpltu	r17,r5,r17
110454f4:	1c47883a 	add	r3,r3,r17
110454f8:	2823883a 	mov	r17,r5
110454fc:	1880202c 	andhi	r2,r3,128
11045500:	10005926 	beq	r2,zero,11045668 <__subdf3+0x214>
11045504:	84000044 	addi	r16,r16,1
11045508:	0081ffc4 	movi	r2,2047
1104550c:	8080be26 	beq	r16,r2,11045808 <__subdf3+0x3b4>
11045510:	017fe034 	movhi	r5,65408
11045514:	297fffc4 	addi	r5,r5,-1
11045518:	1946703a 	and	r3,r3,r5
1104551c:	1804977a 	slli	r2,r3,29
11045520:	1806927a 	slli	r3,r3,9
11045524:	8822d0fa 	srli	r17,r17,3
11045528:	8401ffcc 	andi	r16,r16,2047
1104552c:	180ad33a 	srli	r5,r3,12
11045530:	9100004c 	andi	r4,r18,1
11045534:	1444b03a 	or	r2,r2,r17
11045538:	80c1ffcc 	andi	r3,r16,2047
1104553c:	1820953a 	slli	r16,r3,20
11045540:	20c03fcc 	andi	r3,r4,255
11045544:	180897fa 	slli	r4,r3,31
11045548:	00c00434 	movhi	r3,16
1104554c:	18ffffc4 	addi	r3,r3,-1
11045550:	28c6703a 	and	r3,r5,r3
11045554:	1c06b03a 	or	r3,r3,r16
11045558:	1906b03a 	or	r3,r3,r4
1104555c:	dfc00417 	ldw	ra,16(sp)
11045560:	dcc00317 	ldw	r19,12(sp)
11045564:	dc800217 	ldw	r18,8(sp)
11045568:	dc400117 	ldw	r17,4(sp)
1104556c:	dc000017 	ldw	r16,0(sp)
11045570:	dec00504 	addi	sp,sp,20
11045574:	f800283a 	ret
11045578:	0101ffc4 	movi	r4,2047
1104557c:	813fd626 	beq	r16,r4,110454d8 <__subdf3+0x84>
11045580:	29402034 	orhi	r5,r5,128
11045584:	01000e04 	movi	r4,56
11045588:	2080a316 	blt	r4,r2,11045818 <__subdf3+0x3c4>
1104558c:	010007c4 	movi	r4,31
11045590:	2080c616 	blt	r4,r2,110458ac <__subdf3+0x458>
11045594:	01000804 	movi	r4,32
11045598:	2089c83a 	sub	r4,r4,r2
1104559c:	2910983a 	sll	r8,r5,r4
110455a0:	308ed83a 	srl	r7,r6,r2
110455a4:	3108983a 	sll	r4,r6,r4
110455a8:	2884d83a 	srl	r2,r5,r2
110455ac:	41ccb03a 	or	r6,r8,r7
110455b0:	2008c03a 	cmpne	r4,r4,zero
110455b4:	310cb03a 	or	r6,r6,r4
110455b8:	898dc83a 	sub	r6,r17,r6
110455bc:	89a3803a 	cmpltu	r17,r17,r6
110455c0:	1887c83a 	sub	r3,r3,r2
110455c4:	1c47c83a 	sub	r3,r3,r17
110455c8:	3023883a 	mov	r17,r6
110455cc:	1880202c 	andhi	r2,r3,128
110455d0:	10002326 	beq	r2,zero,11045660 <__subdf3+0x20c>
110455d4:	04c02034 	movhi	r19,128
110455d8:	9cffffc4 	addi	r19,r19,-1
110455dc:	1ce6703a 	and	r19,r3,r19
110455e0:	98007a26 	beq	r19,zero,110457cc <__subdf3+0x378>
110455e4:	9809883a 	mov	r4,r19
110455e8:	1045eac0 	call	11045eac <__clzsi2>
110455ec:	113ffe04 	addi	r4,r2,-8
110455f0:	00c007c4 	movi	r3,31
110455f4:	19007b16 	blt	r3,r4,110457e4 <__subdf3+0x390>
110455f8:	00800804 	movi	r2,32
110455fc:	1105c83a 	sub	r2,r2,r4
11045600:	8884d83a 	srl	r2,r17,r2
11045604:	9906983a 	sll	r3,r19,r4
11045608:	8922983a 	sll	r17,r17,r4
1104560c:	10c4b03a 	or	r2,r2,r3
11045610:	24007816 	blt	r4,r16,110457f4 <__subdf3+0x3a0>
11045614:	2421c83a 	sub	r16,r4,r16
11045618:	80c00044 	addi	r3,r16,1
1104561c:	010007c4 	movi	r4,31
11045620:	20c09516 	blt	r4,r3,11045878 <__subdf3+0x424>
11045624:	01400804 	movi	r5,32
11045628:	28cbc83a 	sub	r5,r5,r3
1104562c:	88c8d83a 	srl	r4,r17,r3
11045630:	8962983a 	sll	r17,r17,r5
11045634:	114a983a 	sll	r5,r2,r5
11045638:	10c6d83a 	srl	r3,r2,r3
1104563c:	8804c03a 	cmpne	r2,r17,zero
11045640:	290ab03a 	or	r5,r5,r4
11045644:	28a2b03a 	or	r17,r5,r2
11045648:	0021883a 	mov	r16,zero
1104564c:	003fa206 	br	110454d8 <__subdf3+0x84>
11045650:	2090b03a 	or	r8,r4,r2
11045654:	40018e26 	beq	r8,zero,11045c90 <__subdf3+0x83c>
11045658:	1007883a 	mov	r3,r2
1104565c:	2023883a 	mov	r17,r4
11045660:	888001cc 	andi	r2,r17,7
11045664:	103f9e1e 	bne	r2,zero,110454e0 <__subdf3+0x8c>
11045668:	1804977a 	slli	r2,r3,29
1104566c:	8822d0fa 	srli	r17,r17,3
11045670:	1810d0fa 	srli	r8,r3,3
11045674:	9100004c 	andi	r4,r18,1
11045678:	1444b03a 	or	r2,r2,r17
1104567c:	00c1ffc4 	movi	r3,2047
11045680:	80c02826 	beq	r16,r3,11045724 <__subdf3+0x2d0>
11045684:	01400434 	movhi	r5,16
11045688:	297fffc4 	addi	r5,r5,-1
1104568c:	80e0703a 	and	r16,r16,r3
11045690:	414a703a 	and	r5,r8,r5
11045694:	003fa806 	br	11045538 <__subdf3+0xe4>
11045698:	0080630e 	bge	zero,r2,11045828 <__subdf3+0x3d4>
1104569c:	48003026 	beq	r9,zero,11045760 <__subdf3+0x30c>
110456a0:	0101ffc4 	movi	r4,2047
110456a4:	813f8c26 	beq	r16,r4,110454d8 <__subdf3+0x84>
110456a8:	29402034 	orhi	r5,r5,128
110456ac:	01000e04 	movi	r4,56
110456b0:	2080a90e 	bge	r4,r2,11045958 <__subdf3+0x504>
110456b4:	298cb03a 	or	r6,r5,r6
110456b8:	3012c03a 	cmpne	r9,r6,zero
110456bc:	0005883a 	mov	r2,zero
110456c0:	4c53883a 	add	r9,r9,r17
110456c4:	4c63803a 	cmpltu	r17,r9,r17
110456c8:	10c7883a 	add	r3,r2,r3
110456cc:	88c7883a 	add	r3,r17,r3
110456d0:	4823883a 	mov	r17,r9
110456d4:	1880202c 	andhi	r2,r3,128
110456d8:	1000d026 	beq	r2,zero,11045a1c <__subdf3+0x5c8>
110456dc:	84000044 	addi	r16,r16,1
110456e0:	0081ffc4 	movi	r2,2047
110456e4:	8080fe26 	beq	r16,r2,11045ae0 <__subdf3+0x68c>
110456e8:	00bfe034 	movhi	r2,65408
110456ec:	10bfffc4 	addi	r2,r2,-1
110456f0:	1886703a 	and	r3,r3,r2
110456f4:	880ad07a 	srli	r5,r17,1
110456f8:	180497fa 	slli	r2,r3,31
110456fc:	8900004c 	andi	r4,r17,1
11045700:	2922b03a 	or	r17,r5,r4
11045704:	1806d07a 	srli	r3,r3,1
11045708:	1462b03a 	or	r17,r2,r17
1104570c:	3825883a 	mov	r18,r7
11045710:	003f7106 	br	110454d8 <__subdf3+0x84>
11045714:	2984b03a 	or	r2,r5,r6
11045718:	103f6826 	beq	r2,zero,110454bc <__subdf3+0x68>
1104571c:	39c03fcc 	andi	r7,r7,255
11045720:	003f6706 	br	110454c0 <__subdf3+0x6c>
11045724:	4086b03a 	or	r3,r8,r2
11045728:	18015226 	beq	r3,zero,11045c74 <__subdf3+0x820>
1104572c:	00c00434 	movhi	r3,16
11045730:	41400234 	orhi	r5,r8,8
11045734:	18ffffc4 	addi	r3,r3,-1
11045738:	28ca703a 	and	r5,r5,r3
1104573c:	003f7e06 	br	11045538 <__subdf3+0xe4>
11045740:	10bfffc4 	addi	r2,r2,-1
11045744:	1000491e 	bne	r2,zero,1104586c <__subdf3+0x418>
11045748:	898fc83a 	sub	r7,r17,r6
1104574c:	89e3803a 	cmpltu	r17,r17,r7
11045750:	1947c83a 	sub	r3,r3,r5
11045754:	1c47c83a 	sub	r3,r3,r17
11045758:	3823883a 	mov	r17,r7
1104575c:	003f9b06 	br	110455cc <__subdf3+0x178>
11045760:	2988b03a 	or	r4,r5,r6
11045764:	203f5c26 	beq	r4,zero,110454d8 <__subdf3+0x84>
11045768:	10bfffc4 	addi	r2,r2,-1
1104576c:	1000931e 	bne	r2,zero,110459bc <__subdf3+0x568>
11045770:	898d883a 	add	r6,r17,r6
11045774:	3463803a 	cmpltu	r17,r6,r17
11045778:	1947883a 	add	r3,r3,r5
1104577c:	88c7883a 	add	r3,r17,r3
11045780:	3023883a 	mov	r17,r6
11045784:	003fd306 	br	110456d4 <__subdf3+0x280>
11045788:	1000541e 	bne	r2,zero,110458dc <__subdf3+0x488>
1104578c:	80800044 	addi	r2,r16,1
11045790:	1081ffcc 	andi	r2,r2,2047
11045794:	01000044 	movi	r4,1
11045798:	2080a20e 	bge	r4,r2,11045a24 <__subdf3+0x5d0>
1104579c:	8989c83a 	sub	r4,r17,r6
110457a0:	8905803a 	cmpltu	r2,r17,r4
110457a4:	1967c83a 	sub	r19,r3,r5
110457a8:	98a7c83a 	sub	r19,r19,r2
110457ac:	9880202c 	andhi	r2,r19,128
110457b0:	10006326 	beq	r2,zero,11045940 <__subdf3+0x4ec>
110457b4:	3463c83a 	sub	r17,r6,r17
110457b8:	28c7c83a 	sub	r3,r5,r3
110457bc:	344d803a 	cmpltu	r6,r6,r17
110457c0:	19a7c83a 	sub	r19,r3,r6
110457c4:	3825883a 	mov	r18,r7
110457c8:	983f861e 	bne	r19,zero,110455e4 <__subdf3+0x190>
110457cc:	8809883a 	mov	r4,r17
110457d0:	1045eac0 	call	11045eac <__clzsi2>
110457d4:	10800804 	addi	r2,r2,32
110457d8:	113ffe04 	addi	r4,r2,-8
110457dc:	00c007c4 	movi	r3,31
110457e0:	193f850e 	bge	r3,r4,110455f8 <__subdf3+0x1a4>
110457e4:	10bff604 	addi	r2,r2,-40
110457e8:	8884983a 	sll	r2,r17,r2
110457ec:	0023883a 	mov	r17,zero
110457f0:	243f880e 	bge	r4,r16,11045614 <__subdf3+0x1c0>
110457f4:	00ffe034 	movhi	r3,65408
110457f8:	18ffffc4 	addi	r3,r3,-1
110457fc:	8121c83a 	sub	r16,r16,r4
11045800:	10c6703a 	and	r3,r2,r3
11045804:	003f3406 	br	110454d8 <__subdf3+0x84>
11045808:	9100004c 	andi	r4,r18,1
1104580c:	000b883a 	mov	r5,zero
11045810:	0005883a 	mov	r2,zero
11045814:	003f4806 	br	11045538 <__subdf3+0xe4>
11045818:	298cb03a 	or	r6,r5,r6
1104581c:	300cc03a 	cmpne	r6,r6,zero
11045820:	0005883a 	mov	r2,zero
11045824:	003f6406 	br	110455b8 <__subdf3+0x164>
11045828:	10009a1e 	bne	r2,zero,11045a94 <__subdf3+0x640>
1104582c:	82400044 	addi	r9,r16,1
11045830:	4881ffcc 	andi	r2,r9,2047
11045834:	02800044 	movi	r10,1
11045838:	5080670e 	bge	r10,r2,110459d8 <__subdf3+0x584>
1104583c:	0081ffc4 	movi	r2,2047
11045840:	4880af26 	beq	r9,r2,11045b00 <__subdf3+0x6ac>
11045844:	898d883a 	add	r6,r17,r6
11045848:	1945883a 	add	r2,r3,r5
1104584c:	3447803a 	cmpltu	r3,r6,r17
11045850:	1887883a 	add	r3,r3,r2
11045854:	182297fa 	slli	r17,r3,31
11045858:	300cd07a 	srli	r6,r6,1
1104585c:	1806d07a 	srli	r3,r3,1
11045860:	4821883a 	mov	r16,r9
11045864:	89a2b03a 	or	r17,r17,r6
11045868:	003f1b06 	br	110454d8 <__subdf3+0x84>
1104586c:	0101ffc4 	movi	r4,2047
11045870:	813f441e 	bne	r16,r4,11045584 <__subdf3+0x130>
11045874:	003f1806 	br	110454d8 <__subdf3+0x84>
11045878:	843ff844 	addi	r16,r16,-31
1104587c:	01400804 	movi	r5,32
11045880:	1408d83a 	srl	r4,r2,r16
11045884:	19405026 	beq	r3,r5,110459c8 <__subdf3+0x574>
11045888:	01401004 	movi	r5,64
1104588c:	28c7c83a 	sub	r3,r5,r3
11045890:	10c4983a 	sll	r2,r2,r3
11045894:	88a2b03a 	or	r17,r17,r2
11045898:	8822c03a 	cmpne	r17,r17,zero
1104589c:	2462b03a 	or	r17,r4,r17
110458a0:	0007883a 	mov	r3,zero
110458a4:	0021883a 	mov	r16,zero
110458a8:	003f6d06 	br	11045660 <__subdf3+0x20c>
110458ac:	11fff804 	addi	r7,r2,-32
110458b0:	01000804 	movi	r4,32
110458b4:	29ced83a 	srl	r7,r5,r7
110458b8:	11004526 	beq	r2,r4,110459d0 <__subdf3+0x57c>
110458bc:	01001004 	movi	r4,64
110458c0:	2089c83a 	sub	r4,r4,r2
110458c4:	2904983a 	sll	r2,r5,r4
110458c8:	118cb03a 	or	r6,r2,r6
110458cc:	300cc03a 	cmpne	r6,r6,zero
110458d0:	398cb03a 	or	r6,r7,r6
110458d4:	0005883a 	mov	r2,zero
110458d8:	003f3706 	br	110455b8 <__subdf3+0x164>
110458dc:	80002a26 	beq	r16,zero,11045988 <__subdf3+0x534>
110458e0:	0101ffc4 	movi	r4,2047
110458e4:	49006626 	beq	r9,r4,11045a80 <__subdf3+0x62c>
110458e8:	0085c83a 	sub	r2,zero,r2
110458ec:	18c02034 	orhi	r3,r3,128
110458f0:	01000e04 	movi	r4,56
110458f4:	20807e16 	blt	r4,r2,11045af0 <__subdf3+0x69c>
110458f8:	010007c4 	movi	r4,31
110458fc:	2080e716 	blt	r4,r2,11045c9c <__subdf3+0x848>
11045900:	01000804 	movi	r4,32
11045904:	2089c83a 	sub	r4,r4,r2
11045908:	1914983a 	sll	r10,r3,r4
1104590c:	8890d83a 	srl	r8,r17,r2
11045910:	8908983a 	sll	r4,r17,r4
11045914:	1884d83a 	srl	r2,r3,r2
11045918:	5222b03a 	or	r17,r10,r8
1104591c:	2006c03a 	cmpne	r3,r4,zero
11045920:	88e2b03a 	or	r17,r17,r3
11045924:	3463c83a 	sub	r17,r6,r17
11045928:	2885c83a 	sub	r2,r5,r2
1104592c:	344d803a 	cmpltu	r6,r6,r17
11045930:	1187c83a 	sub	r3,r2,r6
11045934:	4821883a 	mov	r16,r9
11045938:	3825883a 	mov	r18,r7
1104593c:	003f2306 	br	110455cc <__subdf3+0x178>
11045940:	24d0b03a 	or	r8,r4,r19
11045944:	40001b1e 	bne	r8,zero,110459b4 <__subdf3+0x560>
11045948:	0005883a 	mov	r2,zero
1104594c:	0009883a 	mov	r4,zero
11045950:	0021883a 	mov	r16,zero
11045954:	003f4906 	br	1104567c <__subdf3+0x228>
11045958:	010007c4 	movi	r4,31
1104595c:	20803a16 	blt	r4,r2,11045a48 <__subdf3+0x5f4>
11045960:	01000804 	movi	r4,32
11045964:	2089c83a 	sub	r4,r4,r2
11045968:	2912983a 	sll	r9,r5,r4
1104596c:	3090d83a 	srl	r8,r6,r2
11045970:	3108983a 	sll	r4,r6,r4
11045974:	2884d83a 	srl	r2,r5,r2
11045978:	4a12b03a 	or	r9,r9,r8
1104597c:	2008c03a 	cmpne	r4,r4,zero
11045980:	4912b03a 	or	r9,r9,r4
11045984:	003f4e06 	br	110456c0 <__subdf3+0x26c>
11045988:	1c48b03a 	or	r4,r3,r17
1104598c:	20003c26 	beq	r4,zero,11045a80 <__subdf3+0x62c>
11045990:	0084303a 	nor	r2,zero,r2
11045994:	1000381e 	bne	r2,zero,11045a78 <__subdf3+0x624>
11045998:	3463c83a 	sub	r17,r6,r17
1104599c:	28c5c83a 	sub	r2,r5,r3
110459a0:	344d803a 	cmpltu	r6,r6,r17
110459a4:	1187c83a 	sub	r3,r2,r6
110459a8:	4821883a 	mov	r16,r9
110459ac:	3825883a 	mov	r18,r7
110459b0:	003f0606 	br	110455cc <__subdf3+0x178>
110459b4:	2023883a 	mov	r17,r4
110459b8:	003f0906 	br	110455e0 <__subdf3+0x18c>
110459bc:	0101ffc4 	movi	r4,2047
110459c0:	813f3a1e 	bne	r16,r4,110456ac <__subdf3+0x258>
110459c4:	003ec406 	br	110454d8 <__subdf3+0x84>
110459c8:	0005883a 	mov	r2,zero
110459cc:	003fb106 	br	11045894 <__subdf3+0x440>
110459d0:	0005883a 	mov	r2,zero
110459d4:	003fbc06 	br	110458c8 <__subdf3+0x474>
110459d8:	1c44b03a 	or	r2,r3,r17
110459dc:	80008e1e 	bne	r16,zero,11045c18 <__subdf3+0x7c4>
110459e0:	1000c826 	beq	r2,zero,11045d04 <__subdf3+0x8b0>
110459e4:	2984b03a 	or	r2,r5,r6
110459e8:	103ebb26 	beq	r2,zero,110454d8 <__subdf3+0x84>
110459ec:	8989883a 	add	r4,r17,r6
110459f0:	1945883a 	add	r2,r3,r5
110459f4:	2447803a 	cmpltu	r3,r4,r17
110459f8:	1887883a 	add	r3,r3,r2
110459fc:	1880202c 	andhi	r2,r3,128
11045a00:	2023883a 	mov	r17,r4
11045a04:	103f1626 	beq	r2,zero,11045660 <__subdf3+0x20c>
11045a08:	00bfe034 	movhi	r2,65408
11045a0c:	10bfffc4 	addi	r2,r2,-1
11045a10:	5021883a 	mov	r16,r10
11045a14:	1886703a 	and	r3,r3,r2
11045a18:	003eaf06 	br	110454d8 <__subdf3+0x84>
11045a1c:	3825883a 	mov	r18,r7
11045a20:	003f0f06 	br	11045660 <__subdf3+0x20c>
11045a24:	1c44b03a 	or	r2,r3,r17
11045a28:	8000251e 	bne	r16,zero,11045ac0 <__subdf3+0x66c>
11045a2c:	1000661e 	bne	r2,zero,11045bc8 <__subdf3+0x774>
11045a30:	2990b03a 	or	r8,r5,r6
11045a34:	40009626 	beq	r8,zero,11045c90 <__subdf3+0x83c>
11045a38:	2807883a 	mov	r3,r5
11045a3c:	3023883a 	mov	r17,r6
11045a40:	3825883a 	mov	r18,r7
11045a44:	003ea406 	br	110454d8 <__subdf3+0x84>
11045a48:	127ff804 	addi	r9,r2,-32
11045a4c:	01000804 	movi	r4,32
11045a50:	2a52d83a 	srl	r9,r5,r9
11045a54:	11008c26 	beq	r2,r4,11045c88 <__subdf3+0x834>
11045a58:	01001004 	movi	r4,64
11045a5c:	2085c83a 	sub	r2,r4,r2
11045a60:	2884983a 	sll	r2,r5,r2
11045a64:	118cb03a 	or	r6,r2,r6
11045a68:	300cc03a 	cmpne	r6,r6,zero
11045a6c:	4992b03a 	or	r9,r9,r6
11045a70:	0005883a 	mov	r2,zero
11045a74:	003f1206 	br	110456c0 <__subdf3+0x26c>
11045a78:	0101ffc4 	movi	r4,2047
11045a7c:	493f9c1e 	bne	r9,r4,110458f0 <__subdf3+0x49c>
11045a80:	2807883a 	mov	r3,r5
11045a84:	3023883a 	mov	r17,r6
11045a88:	4821883a 	mov	r16,r9
11045a8c:	3825883a 	mov	r18,r7
11045a90:	003e9106 	br	110454d8 <__subdf3+0x84>
11045a94:	80001f1e 	bne	r16,zero,11045b14 <__subdf3+0x6c0>
11045a98:	1c48b03a 	or	r4,r3,r17
11045a9c:	20005a26 	beq	r4,zero,11045c08 <__subdf3+0x7b4>
11045aa0:	0084303a 	nor	r2,zero,r2
11045aa4:	1000561e 	bne	r2,zero,11045c00 <__subdf3+0x7ac>
11045aa8:	89a3883a 	add	r17,r17,r6
11045aac:	1945883a 	add	r2,r3,r5
11045ab0:	898d803a 	cmpltu	r6,r17,r6
11045ab4:	3087883a 	add	r3,r6,r2
11045ab8:	4821883a 	mov	r16,r9
11045abc:	003f0506 	br	110456d4 <__subdf3+0x280>
11045ac0:	10002b1e 	bne	r2,zero,11045b70 <__subdf3+0x71c>
11045ac4:	2984b03a 	or	r2,r5,r6
11045ac8:	10008026 	beq	r2,zero,11045ccc <__subdf3+0x878>
11045acc:	2807883a 	mov	r3,r5
11045ad0:	3023883a 	mov	r17,r6
11045ad4:	3825883a 	mov	r18,r7
11045ad8:	0401ffc4 	movi	r16,2047
11045adc:	003e7e06 	br	110454d8 <__subdf3+0x84>
11045ae0:	3809883a 	mov	r4,r7
11045ae4:	0011883a 	mov	r8,zero
11045ae8:	0005883a 	mov	r2,zero
11045aec:	003ee306 	br	1104567c <__subdf3+0x228>
11045af0:	1c62b03a 	or	r17,r3,r17
11045af4:	8822c03a 	cmpne	r17,r17,zero
11045af8:	0005883a 	mov	r2,zero
11045afc:	003f8906 	br	11045924 <__subdf3+0x4d0>
11045b00:	3809883a 	mov	r4,r7
11045b04:	4821883a 	mov	r16,r9
11045b08:	0011883a 	mov	r8,zero
11045b0c:	0005883a 	mov	r2,zero
11045b10:	003eda06 	br	1104567c <__subdf3+0x228>
11045b14:	0101ffc4 	movi	r4,2047
11045b18:	49003b26 	beq	r9,r4,11045c08 <__subdf3+0x7b4>
11045b1c:	0085c83a 	sub	r2,zero,r2
11045b20:	18c02034 	orhi	r3,r3,128
11045b24:	01000e04 	movi	r4,56
11045b28:	20806e16 	blt	r4,r2,11045ce4 <__subdf3+0x890>
11045b2c:	010007c4 	movi	r4,31
11045b30:	20807716 	blt	r4,r2,11045d10 <__subdf3+0x8bc>
11045b34:	01000804 	movi	r4,32
11045b38:	2089c83a 	sub	r4,r4,r2
11045b3c:	1914983a 	sll	r10,r3,r4
11045b40:	8890d83a 	srl	r8,r17,r2
11045b44:	8908983a 	sll	r4,r17,r4
11045b48:	1884d83a 	srl	r2,r3,r2
11045b4c:	5222b03a 	or	r17,r10,r8
11045b50:	2006c03a 	cmpne	r3,r4,zero
11045b54:	88e2b03a 	or	r17,r17,r3
11045b58:	89a3883a 	add	r17,r17,r6
11045b5c:	1145883a 	add	r2,r2,r5
11045b60:	898d803a 	cmpltu	r6,r17,r6
11045b64:	3087883a 	add	r3,r6,r2
11045b68:	4821883a 	mov	r16,r9
11045b6c:	003ed906 	br	110456d4 <__subdf3+0x280>
11045b70:	2984b03a 	or	r2,r5,r6
11045b74:	10004226 	beq	r2,zero,11045c80 <__subdf3+0x82c>
11045b78:	1808d0fa 	srli	r4,r3,3
11045b7c:	8822d0fa 	srli	r17,r17,3
11045b80:	1806977a 	slli	r3,r3,29
11045b84:	2080022c 	andhi	r2,r4,8
11045b88:	1c62b03a 	or	r17,r3,r17
11045b8c:	10000826 	beq	r2,zero,11045bb0 <__subdf3+0x75c>
11045b90:	2812d0fa 	srli	r9,r5,3
11045b94:	4880022c 	andhi	r2,r9,8
11045b98:	1000051e 	bne	r2,zero,11045bb0 <__subdf3+0x75c>
11045b9c:	300cd0fa 	srli	r6,r6,3
11045ba0:	2804977a 	slli	r2,r5,29
11045ba4:	4809883a 	mov	r4,r9
11045ba8:	3825883a 	mov	r18,r7
11045bac:	11a2b03a 	or	r17,r2,r6
11045bb0:	8806d77a 	srli	r3,r17,29
11045bb4:	200890fa 	slli	r4,r4,3
11045bb8:	882290fa 	slli	r17,r17,3
11045bbc:	0401ffc4 	movi	r16,2047
11045bc0:	1906b03a 	or	r3,r3,r4
11045bc4:	003e4406 	br	110454d8 <__subdf3+0x84>
11045bc8:	2984b03a 	or	r2,r5,r6
11045bcc:	103e4226 	beq	r2,zero,110454d8 <__subdf3+0x84>
11045bd0:	8989c83a 	sub	r4,r17,r6
11045bd4:	8911803a 	cmpltu	r8,r17,r4
11045bd8:	1945c83a 	sub	r2,r3,r5
11045bdc:	1205c83a 	sub	r2,r2,r8
11045be0:	1200202c 	andhi	r8,r2,128
11045be4:	403e9a26 	beq	r8,zero,11045650 <__subdf3+0x1fc>
11045be8:	3463c83a 	sub	r17,r6,r17
11045bec:	28c5c83a 	sub	r2,r5,r3
11045bf0:	344d803a 	cmpltu	r6,r6,r17
11045bf4:	1187c83a 	sub	r3,r2,r6
11045bf8:	3825883a 	mov	r18,r7
11045bfc:	003e3606 	br	110454d8 <__subdf3+0x84>
11045c00:	0101ffc4 	movi	r4,2047
11045c04:	493fc71e 	bne	r9,r4,11045b24 <__subdf3+0x6d0>
11045c08:	2807883a 	mov	r3,r5
11045c0c:	3023883a 	mov	r17,r6
11045c10:	4821883a 	mov	r16,r9
11045c14:	003e3006 	br	110454d8 <__subdf3+0x84>
11045c18:	10003626 	beq	r2,zero,11045cf4 <__subdf3+0x8a0>
11045c1c:	2984b03a 	or	r2,r5,r6
11045c20:	10001726 	beq	r2,zero,11045c80 <__subdf3+0x82c>
11045c24:	1808d0fa 	srli	r4,r3,3
11045c28:	8822d0fa 	srli	r17,r17,3
11045c2c:	1806977a 	slli	r3,r3,29
11045c30:	2080022c 	andhi	r2,r4,8
11045c34:	1c62b03a 	or	r17,r3,r17
11045c38:	10000726 	beq	r2,zero,11045c58 <__subdf3+0x804>
11045c3c:	2812d0fa 	srli	r9,r5,3
11045c40:	4880022c 	andhi	r2,r9,8
11045c44:	1000041e 	bne	r2,zero,11045c58 <__subdf3+0x804>
11045c48:	300cd0fa 	srli	r6,r6,3
11045c4c:	2804977a 	slli	r2,r5,29
11045c50:	4809883a 	mov	r4,r9
11045c54:	11a2b03a 	or	r17,r2,r6
11045c58:	8806d77a 	srli	r3,r17,29
11045c5c:	200890fa 	slli	r4,r4,3
11045c60:	882290fa 	slli	r17,r17,3
11045c64:	3825883a 	mov	r18,r7
11045c68:	1906b03a 	or	r3,r3,r4
11045c6c:	0401ffc4 	movi	r16,2047
11045c70:	003e1906 	br	110454d8 <__subdf3+0x84>
11045c74:	000b883a 	mov	r5,zero
11045c78:	0005883a 	mov	r2,zero
11045c7c:	003e2e06 	br	11045538 <__subdf3+0xe4>
11045c80:	0401ffc4 	movi	r16,2047
11045c84:	003e1406 	br	110454d8 <__subdf3+0x84>
11045c88:	0005883a 	mov	r2,zero
11045c8c:	003f7506 	br	11045a64 <__subdf3+0x610>
11045c90:	0005883a 	mov	r2,zero
11045c94:	0009883a 	mov	r4,zero
11045c98:	003e7806 	br	1104567c <__subdf3+0x228>
11045c9c:	123ff804 	addi	r8,r2,-32
11045ca0:	01000804 	movi	r4,32
11045ca4:	1a10d83a 	srl	r8,r3,r8
11045ca8:	11002526 	beq	r2,r4,11045d40 <__subdf3+0x8ec>
11045cac:	01001004 	movi	r4,64
11045cb0:	2085c83a 	sub	r2,r4,r2
11045cb4:	1884983a 	sll	r2,r3,r2
11045cb8:	1444b03a 	or	r2,r2,r17
11045cbc:	1004c03a 	cmpne	r2,r2,zero
11045cc0:	40a2b03a 	or	r17,r8,r2
11045cc4:	0005883a 	mov	r2,zero
11045cc8:	003f1606 	br	11045924 <__subdf3+0x4d0>
11045ccc:	02000434 	movhi	r8,16
11045cd0:	0009883a 	mov	r4,zero
11045cd4:	423fffc4 	addi	r8,r8,-1
11045cd8:	00bfffc4 	movi	r2,-1
11045cdc:	0401ffc4 	movi	r16,2047
11045ce0:	003e6606 	br	1104567c <__subdf3+0x228>
11045ce4:	1c62b03a 	or	r17,r3,r17
11045ce8:	8822c03a 	cmpne	r17,r17,zero
11045cec:	0005883a 	mov	r2,zero
11045cf0:	003f9906 	br	11045b58 <__subdf3+0x704>
11045cf4:	2807883a 	mov	r3,r5
11045cf8:	3023883a 	mov	r17,r6
11045cfc:	0401ffc4 	movi	r16,2047
11045d00:	003df506 	br	110454d8 <__subdf3+0x84>
11045d04:	2807883a 	mov	r3,r5
11045d08:	3023883a 	mov	r17,r6
11045d0c:	003df206 	br	110454d8 <__subdf3+0x84>
11045d10:	123ff804 	addi	r8,r2,-32
11045d14:	01000804 	movi	r4,32
11045d18:	1a10d83a 	srl	r8,r3,r8
11045d1c:	11000a26 	beq	r2,r4,11045d48 <__subdf3+0x8f4>
11045d20:	01001004 	movi	r4,64
11045d24:	2085c83a 	sub	r2,r4,r2
11045d28:	1884983a 	sll	r2,r3,r2
11045d2c:	1444b03a 	or	r2,r2,r17
11045d30:	1004c03a 	cmpne	r2,r2,zero
11045d34:	40a2b03a 	or	r17,r8,r2
11045d38:	0005883a 	mov	r2,zero
11045d3c:	003f8606 	br	11045b58 <__subdf3+0x704>
11045d40:	0005883a 	mov	r2,zero
11045d44:	003fdc06 	br	11045cb8 <__subdf3+0x864>
11045d48:	0005883a 	mov	r2,zero
11045d4c:	003ff706 	br	11045d2c <__subdf3+0x8d8>

11045d50 <__fixdfsi>:
11045d50:	280cd53a 	srli	r6,r5,20
11045d54:	00c00434 	movhi	r3,16
11045d58:	18ffffc4 	addi	r3,r3,-1
11045d5c:	3181ffcc 	andi	r6,r6,2047
11045d60:	01c0ff84 	movi	r7,1022
11045d64:	28c6703a 	and	r3,r5,r3
11045d68:	280ad7fa 	srli	r5,r5,31
11045d6c:	3980120e 	bge	r7,r6,11045db8 <__fixdfsi+0x68>
11045d70:	00810744 	movi	r2,1053
11045d74:	11800c16 	blt	r2,r6,11045da8 <__fixdfsi+0x58>
11045d78:	00810cc4 	movi	r2,1075
11045d7c:	1185c83a 	sub	r2,r2,r6
11045d80:	01c007c4 	movi	r7,31
11045d84:	18c00434 	orhi	r3,r3,16
11045d88:	38800d16 	blt	r7,r2,11045dc0 <__fixdfsi+0x70>
11045d8c:	31befb44 	addi	r6,r6,-1043
11045d90:	2084d83a 	srl	r2,r4,r2
11045d94:	1986983a 	sll	r3,r3,r6
11045d98:	1884b03a 	or	r2,r3,r2
11045d9c:	28000726 	beq	r5,zero,11045dbc <__fixdfsi+0x6c>
11045da0:	0085c83a 	sub	r2,zero,r2
11045da4:	f800283a 	ret
11045da8:	00a00034 	movhi	r2,32768
11045dac:	10bfffc4 	addi	r2,r2,-1
11045db0:	2885883a 	add	r2,r5,r2
11045db4:	f800283a 	ret
11045db8:	0005883a 	mov	r2,zero
11045dbc:	f800283a 	ret
11045dc0:	008104c4 	movi	r2,1043
11045dc4:	1185c83a 	sub	r2,r2,r6
11045dc8:	1884d83a 	srl	r2,r3,r2
11045dcc:	003ff306 	br	11045d9c <__fixdfsi+0x4c>

11045dd0 <__floatsidf>:
11045dd0:	defffd04 	addi	sp,sp,-12
11045dd4:	dfc00215 	stw	ra,8(sp)
11045dd8:	dc400115 	stw	r17,4(sp)
11045ddc:	dc000015 	stw	r16,0(sp)
11045de0:	20002b26 	beq	r4,zero,11045e90 <__floatsidf+0xc0>
11045de4:	2023883a 	mov	r17,r4
11045de8:	2020d7fa 	srli	r16,r4,31
11045dec:	20002d16 	blt	r4,zero,11045ea4 <__floatsidf+0xd4>
11045df0:	8809883a 	mov	r4,r17
11045df4:	1045eac0 	call	11045eac <__clzsi2>
11045df8:	01410784 	movi	r5,1054
11045dfc:	288bc83a 	sub	r5,r5,r2
11045e00:	01010cc4 	movi	r4,1075
11045e04:	2149c83a 	sub	r4,r4,r5
11045e08:	00c007c4 	movi	r3,31
11045e0c:	1900160e 	bge	r3,r4,11045e68 <__floatsidf+0x98>
11045e10:	00c104c4 	movi	r3,1043
11045e14:	1947c83a 	sub	r3,r3,r5
11045e18:	88c6983a 	sll	r3,r17,r3
11045e1c:	00800434 	movhi	r2,16
11045e20:	10bfffc4 	addi	r2,r2,-1
11045e24:	1886703a 	and	r3,r3,r2
11045e28:	2941ffcc 	andi	r5,r5,2047
11045e2c:	800d883a 	mov	r6,r16
11045e30:	0005883a 	mov	r2,zero
11045e34:	280a953a 	slli	r5,r5,20
11045e38:	31803fcc 	andi	r6,r6,255
11045e3c:	01000434 	movhi	r4,16
11045e40:	300c97fa 	slli	r6,r6,31
11045e44:	213fffc4 	addi	r4,r4,-1
11045e48:	1906703a 	and	r3,r3,r4
11045e4c:	1946b03a 	or	r3,r3,r5
11045e50:	1986b03a 	or	r3,r3,r6
11045e54:	dfc00217 	ldw	ra,8(sp)
11045e58:	dc400117 	ldw	r17,4(sp)
11045e5c:	dc000017 	ldw	r16,0(sp)
11045e60:	dec00304 	addi	sp,sp,12
11045e64:	f800283a 	ret
11045e68:	00c002c4 	movi	r3,11
11045e6c:	1887c83a 	sub	r3,r3,r2
11045e70:	88c6d83a 	srl	r3,r17,r3
11045e74:	8904983a 	sll	r2,r17,r4
11045e78:	01000434 	movhi	r4,16
11045e7c:	213fffc4 	addi	r4,r4,-1
11045e80:	2941ffcc 	andi	r5,r5,2047
11045e84:	1906703a 	and	r3,r3,r4
11045e88:	800d883a 	mov	r6,r16
11045e8c:	003fe906 	br	11045e34 <__floatsidf+0x64>
11045e90:	000d883a 	mov	r6,zero
11045e94:	000b883a 	mov	r5,zero
11045e98:	0007883a 	mov	r3,zero
11045e9c:	0005883a 	mov	r2,zero
11045ea0:	003fe406 	br	11045e34 <__floatsidf+0x64>
11045ea4:	0123c83a 	sub	r17,zero,r4
11045ea8:	003fd106 	br	11045df0 <__floatsidf+0x20>

11045eac <__clzsi2>:
11045eac:	00bfffd4 	movui	r2,65535
11045eb0:	11000536 	bltu	r2,r4,11045ec8 <__clzsi2+0x1c>
11045eb4:	00803fc4 	movi	r2,255
11045eb8:	11000f36 	bltu	r2,r4,11045ef8 <__clzsi2+0x4c>
11045ebc:	00800804 	movi	r2,32
11045ec0:	0007883a 	mov	r3,zero
11045ec4:	00000506 	br	11045edc <__clzsi2+0x30>
11045ec8:	00804034 	movhi	r2,256
11045ecc:	10bfffc4 	addi	r2,r2,-1
11045ed0:	11000c2e 	bgeu	r2,r4,11045f04 <__clzsi2+0x58>
11045ed4:	00800204 	movi	r2,8
11045ed8:	00c00604 	movi	r3,24
11045edc:	20c8d83a 	srl	r4,r4,r3
11045ee0:	00c44174 	movhi	r3,4357
11045ee4:	18dbdd04 	addi	r3,r3,28532
11045ee8:	1909883a 	add	r4,r3,r4
11045eec:	20c00003 	ldbu	r3,0(r4)
11045ef0:	10c5c83a 	sub	r2,r2,r3
11045ef4:	f800283a 	ret
11045ef8:	00800604 	movi	r2,24
11045efc:	00c00204 	movi	r3,8
11045f00:	003ff606 	br	11045edc <__clzsi2+0x30>
11045f04:	00800404 	movi	r2,16
11045f08:	1007883a 	mov	r3,r2
11045f0c:	003ff306 	br	11045edc <__clzsi2+0x30>

11045f10 <_printf_r>:
11045f10:	defffd04 	addi	sp,sp,-12
11045f14:	2805883a 	mov	r2,r5
11045f18:	dfc00015 	stw	ra,0(sp)
11045f1c:	d9800115 	stw	r6,4(sp)
11045f20:	d9c00215 	stw	r7,8(sp)
11045f24:	21400217 	ldw	r5,8(r4)
11045f28:	d9c00104 	addi	r7,sp,4
11045f2c:	100d883a 	mov	r6,r2
11045f30:	10483840 	call	11048384 <___vfprintf_internal_r>
11045f34:	dfc00017 	ldw	ra,0(sp)
11045f38:	dec00304 	addi	sp,sp,12
11045f3c:	f800283a 	ret

11045f40 <printf>:
11045f40:	defffc04 	addi	sp,sp,-16
11045f44:	dfc00015 	stw	ra,0(sp)
11045f48:	d9400115 	stw	r5,4(sp)
11045f4c:	d9800215 	stw	r6,8(sp)
11045f50:	d9c00315 	stw	r7,12(sp)
11045f54:	008441b4 	movhi	r2,4358
11045f58:	10a35704 	addi	r2,r2,-29348
11045f5c:	10800017 	ldw	r2,0(r2)
11045f60:	200b883a 	mov	r5,r4
11045f64:	d9800104 	addi	r6,sp,4
11045f68:	11000217 	ldw	r4,8(r2)
11045f6c:	104a57c0 	call	1104a57c <__vfprintf_internal>
11045f70:	dfc00017 	ldw	ra,0(sp)
11045f74:	dec00404 	addi	sp,sp,16
11045f78:	f800283a 	ret

11045f7c <_puts_r>:
11045f7c:	defff604 	addi	sp,sp,-40
11045f80:	dc000715 	stw	r16,28(sp)
11045f84:	2021883a 	mov	r16,r4
11045f88:	2809883a 	mov	r4,r5
11045f8c:	dc400815 	stw	r17,32(sp)
11045f90:	dfc00915 	stw	ra,36(sp)
11045f94:	2823883a 	mov	r17,r5
11045f98:	10461140 	call	11046114 <strlen>
11045f9c:	10c00044 	addi	r3,r2,1
11045fa0:	d8800115 	stw	r2,4(sp)
11045fa4:	00844174 	movhi	r2,4357
11045fa8:	109c1d04 	addi	r2,r2,28788
11045fac:	d8800215 	stw	r2,8(sp)
11045fb0:	00800044 	movi	r2,1
11045fb4:	d8800315 	stw	r2,12(sp)
11045fb8:	00800084 	movi	r2,2
11045fbc:	dc400015 	stw	r17,0(sp)
11045fc0:	d8c00615 	stw	r3,24(sp)
11045fc4:	dec00415 	stw	sp,16(sp)
11045fc8:	d8800515 	stw	r2,20(sp)
11045fcc:	80000226 	beq	r16,zero,11045fd8 <_puts_r+0x5c>
11045fd0:	80800e17 	ldw	r2,56(r16)
11045fd4:	10001426 	beq	r2,zero,11046028 <_puts_r+0xac>
11045fd8:	81400217 	ldw	r5,8(r16)
11045fdc:	2880030b 	ldhu	r2,12(r5)
11045fe0:	10c8000c 	andi	r3,r2,8192
11045fe4:	1800061e 	bne	r3,zero,11046000 <_puts_r+0x84>
11045fe8:	29001917 	ldw	r4,100(r5)
11045fec:	00f7ffc4 	movi	r3,-8193
11045ff0:	10880014 	ori	r2,r2,8192
11045ff4:	20c6703a 	and	r3,r4,r3
11045ff8:	2880030d 	sth	r2,12(r5)
11045ffc:	28c01915 	stw	r3,100(r5)
11046000:	d9800404 	addi	r6,sp,16
11046004:	8009883a 	mov	r4,r16
11046008:	104cbd00 	call	1104cbd0 <__sfvwrite_r>
1104600c:	1000091e 	bne	r2,zero,11046034 <_puts_r+0xb8>
11046010:	00800284 	movi	r2,10
11046014:	dfc00917 	ldw	ra,36(sp)
11046018:	dc400817 	ldw	r17,32(sp)
1104601c:	dc000717 	ldw	r16,28(sp)
11046020:	dec00a04 	addi	sp,sp,40
11046024:	f800283a 	ret
11046028:	8009883a 	mov	r4,r16
1104602c:	104c74c0 	call	1104c74c <__sinit>
11046030:	003fe906 	br	11045fd8 <_puts_r+0x5c>
11046034:	00bfffc4 	movi	r2,-1
11046038:	003ff606 	br	11046014 <_puts_r+0x98>

1104603c <puts>:
1104603c:	008441b4 	movhi	r2,4358
11046040:	10a35704 	addi	r2,r2,-29348
11046044:	200b883a 	mov	r5,r4
11046048:	11000017 	ldw	r4,0(r2)
1104604c:	1045f7c1 	jmpi	11045f7c <_puts_r>

11046050 <_sprintf_r>:
11046050:	deffe404 	addi	sp,sp,-112
11046054:	2807883a 	mov	r3,r5
11046058:	dfc01a15 	stw	ra,104(sp)
1104605c:	d9c01b15 	stw	r7,108(sp)
11046060:	00a00034 	movhi	r2,32768
11046064:	10bfffc4 	addi	r2,r2,-1
11046068:	02008204 	movi	r8,520
1104606c:	d8800215 	stw	r2,8(sp)
11046070:	d8800515 	stw	r2,20(sp)
11046074:	d9c01b04 	addi	r7,sp,108
11046078:	d80b883a 	mov	r5,sp
1104607c:	00bfffc4 	movi	r2,-1
11046080:	d8c00015 	stw	r3,0(sp)
11046084:	d8c00415 	stw	r3,16(sp)
11046088:	da00030d 	sth	r8,12(sp)
1104608c:	d880038d 	sth	r2,14(sp)
11046090:	10461ac0 	call	110461ac <___svfprintf_internal_r>
11046094:	d8c00017 	ldw	r3,0(sp)
11046098:	18000005 	stb	zero,0(r3)
1104609c:	dfc01a17 	ldw	ra,104(sp)
110460a0:	dec01c04 	addi	sp,sp,112
110460a4:	f800283a 	ret

110460a8 <sprintf>:
110460a8:	deffe304 	addi	sp,sp,-116
110460ac:	2007883a 	mov	r3,r4
110460b0:	dfc01a15 	stw	ra,104(sp)
110460b4:	d9801b15 	stw	r6,108(sp)
110460b8:	d9c01c15 	stw	r7,112(sp)
110460bc:	010441b4 	movhi	r4,4358
110460c0:	21235704 	addi	r4,r4,-29348
110460c4:	21000017 	ldw	r4,0(r4)
110460c8:	00a00034 	movhi	r2,32768
110460cc:	10bfffc4 	addi	r2,r2,-1
110460d0:	280d883a 	mov	r6,r5
110460d4:	02008204 	movi	r8,520
110460d8:	d8800215 	stw	r2,8(sp)
110460dc:	d8800515 	stw	r2,20(sp)
110460e0:	d9c01b04 	addi	r7,sp,108
110460e4:	d80b883a 	mov	r5,sp
110460e8:	00bfffc4 	movi	r2,-1
110460ec:	d8c00015 	stw	r3,0(sp)
110460f0:	d8c00415 	stw	r3,16(sp)
110460f4:	da00030d 	sth	r8,12(sp)
110460f8:	d880038d 	sth	r2,14(sp)
110460fc:	10461ac0 	call	110461ac <___svfprintf_internal_r>
11046100:	d8c00017 	ldw	r3,0(sp)
11046104:	18000005 	stb	zero,0(r3)
11046108:	dfc01a17 	ldw	ra,104(sp)
1104610c:	dec01d04 	addi	sp,sp,116
11046110:	f800283a 	ret

11046114 <strlen>:
11046114:	208000cc 	andi	r2,r4,3
11046118:	10002026 	beq	r2,zero,1104619c <strlen+0x88>
1104611c:	20800007 	ldb	r2,0(r4)
11046120:	10002026 	beq	r2,zero,110461a4 <strlen+0x90>
11046124:	2005883a 	mov	r2,r4
11046128:	00000206 	br	11046134 <strlen+0x20>
1104612c:	10c00007 	ldb	r3,0(r2)
11046130:	18001826 	beq	r3,zero,11046194 <strlen+0x80>
11046134:	10800044 	addi	r2,r2,1
11046138:	10c000cc 	andi	r3,r2,3
1104613c:	183ffb1e 	bne	r3,zero,1104612c <strlen+0x18>
11046140:	10c00017 	ldw	r3,0(r2)
11046144:	01ffbff4 	movhi	r7,65279
11046148:	39ffbfc4 	addi	r7,r7,-257
1104614c:	00ca303a 	nor	r5,zero,r3
11046150:	01a02074 	movhi	r6,32897
11046154:	19c7883a 	add	r3,r3,r7
11046158:	31a02004 	addi	r6,r6,-32640
1104615c:	1946703a 	and	r3,r3,r5
11046160:	1986703a 	and	r3,r3,r6
11046164:	1800091e 	bne	r3,zero,1104618c <strlen+0x78>
11046168:	10800104 	addi	r2,r2,4
1104616c:	10c00017 	ldw	r3,0(r2)
11046170:	19cb883a 	add	r5,r3,r7
11046174:	00c6303a 	nor	r3,zero,r3
11046178:	28c6703a 	and	r3,r5,r3
1104617c:	1986703a 	and	r3,r3,r6
11046180:	183ff926 	beq	r3,zero,11046168 <strlen+0x54>
11046184:	00000106 	br	1104618c <strlen+0x78>
11046188:	10800044 	addi	r2,r2,1
1104618c:	10c00007 	ldb	r3,0(r2)
11046190:	183ffd1e 	bne	r3,zero,11046188 <strlen+0x74>
11046194:	1105c83a 	sub	r2,r2,r4
11046198:	f800283a 	ret
1104619c:	2005883a 	mov	r2,r4
110461a0:	003fe706 	br	11046140 <strlen+0x2c>
110461a4:	0005883a 	mov	r2,zero
110461a8:	f800283a 	ret

110461ac <___svfprintf_internal_r>:
110461ac:	deffb704 	addi	sp,sp,-292
110461b0:	dfc04815 	stw	ra,288(sp)
110461b4:	ddc04615 	stw	r23,280(sp)
110461b8:	d9402c15 	stw	r5,176(sp)
110461bc:	d9003915 	stw	r4,228(sp)
110461c0:	302f883a 	mov	r23,r6
110461c4:	d9c02d15 	stw	r7,180(sp)
110461c8:	df004715 	stw	fp,284(sp)
110461cc:	dd804515 	stw	r22,276(sp)
110461d0:	dd404415 	stw	r21,272(sp)
110461d4:	dd004315 	stw	r20,268(sp)
110461d8:	dcc04215 	stw	r19,264(sp)
110461dc:	dc804115 	stw	r18,260(sp)
110461e0:	dc404015 	stw	r17,256(sp)
110461e4:	dc003f15 	stw	r16,252(sp)
110461e8:	104d2c00 	call	1104d2c0 <_localeconv_r>
110461ec:	10800017 	ldw	r2,0(r2)
110461f0:	1009883a 	mov	r4,r2
110461f4:	d8803415 	stw	r2,208(sp)
110461f8:	10461140 	call	11046114 <strlen>
110461fc:	d8c02c17 	ldw	r3,176(sp)
11046200:	d8803815 	stw	r2,224(sp)
11046204:	1880030b 	ldhu	r2,12(r3)
11046208:	1080200c 	andi	r2,r2,128
1104620c:	10000226 	beq	r2,zero,11046218 <___svfprintf_internal_r+0x6c>
11046210:	18800417 	ldw	r2,16(r3)
11046214:	10067f26 	beq	r2,zero,11047c14 <___svfprintf_internal_r+0x1a68>
11046218:	dcc03917 	ldw	r19,228(sp)
1104621c:	d8c00404 	addi	r3,sp,16
11046220:	05444174 	movhi	r21,4357
11046224:	d9001e04 	addi	r4,sp,120
11046228:	ad5c2e84 	addi	r21,r21,28858
1104622c:	d8c01e15 	stw	r3,120(sp)
11046230:	d8002015 	stw	zero,128(sp)
11046234:	d8001f15 	stw	zero,124(sp)
11046238:	d8003315 	stw	zero,204(sp)
1104623c:	d8003615 	stw	zero,216(sp)
11046240:	d8003715 	stw	zero,220(sp)
11046244:	1811883a 	mov	r8,r3
11046248:	d8003a15 	stw	zero,232(sp)
1104624c:	d8003b15 	stw	zero,236(sp)
11046250:	d8002f15 	stw	zero,188(sp)
11046254:	d9002815 	stw	r4,160(sp)
11046258:	b8800007 	ldb	r2,0(r23)
1104625c:	10026726 	beq	r2,zero,11046bfc <___svfprintf_internal_r+0xa50>
11046260:	00c00944 	movi	r3,37
11046264:	b821883a 	mov	r16,r23
11046268:	10c0021e 	bne	r2,r3,11046274 <___svfprintf_internal_r+0xc8>
1104626c:	00001406 	br	110462c0 <___svfprintf_internal_r+0x114>
11046270:	10c00326 	beq	r2,r3,11046280 <___svfprintf_internal_r+0xd4>
11046274:	84000044 	addi	r16,r16,1
11046278:	80800007 	ldb	r2,0(r16)
1104627c:	103ffc1e 	bne	r2,zero,11046270 <___svfprintf_internal_r+0xc4>
11046280:	85e3c83a 	sub	r17,r16,r23
11046284:	88000e26 	beq	r17,zero,110462c0 <___svfprintf_internal_r+0x114>
11046288:	d8c02017 	ldw	r3,128(sp)
1104628c:	d8801f17 	ldw	r2,124(sp)
11046290:	45c00015 	stw	r23,0(r8)
11046294:	1c47883a 	add	r3,r3,r17
11046298:	10800044 	addi	r2,r2,1
1104629c:	d8c02015 	stw	r3,128(sp)
110462a0:	44400115 	stw	r17,4(r8)
110462a4:	d8801f15 	stw	r2,124(sp)
110462a8:	00c001c4 	movi	r3,7
110462ac:	18809716 	blt	r3,r2,1104650c <___svfprintf_internal_r+0x360>
110462b0:	42000204 	addi	r8,r8,8
110462b4:	d9402f17 	ldw	r5,188(sp)
110462b8:	2c4b883a 	add	r5,r5,r17
110462bc:	d9402f15 	stw	r5,188(sp)
110462c0:	80800007 	ldb	r2,0(r16)
110462c4:	10009826 	beq	r2,zero,11046528 <___svfprintf_internal_r+0x37c>
110462c8:	84400047 	ldb	r17,1(r16)
110462cc:	00bfffc4 	movi	r2,-1
110462d0:	85c00044 	addi	r23,r16,1
110462d4:	d8002785 	stb	zero,158(sp)
110462d8:	0007883a 	mov	r3,zero
110462dc:	000f883a 	mov	r7,zero
110462e0:	d8802915 	stw	r2,164(sp)
110462e4:	d8003115 	stw	zero,196(sp)
110462e8:	0025883a 	mov	r18,zero
110462ec:	01401604 	movi	r5,88
110462f0:	01800244 	movi	r6,9
110462f4:	02800a84 	movi	r10,42
110462f8:	02401b04 	movi	r9,108
110462fc:	bdc00044 	addi	r23,r23,1
11046300:	88bff804 	addi	r2,r17,-32
11046304:	2882f036 	bltu	r5,r2,11046ec8 <___svfprintf_internal_r+0xd1c>
11046308:	100490ba 	slli	r2,r2,2
1104630c:	01044134 	movhi	r4,4356
11046310:	2118c804 	addi	r4,r4,25376
11046314:	1105883a 	add	r2,r2,r4
11046318:	10800017 	ldw	r2,0(r2)
1104631c:	1000683a 	jmp	r2
11046320:	11046e30 	cmpltui	r4,r2,4536
11046324:	11046ec8 	cmpgei	r4,r2,4539
11046328:	11046ec8 	cmpgei	r4,r2,4539
1104632c:	11046e24 	muli	r4,r2,4536
11046330:	11046ec8 	cmpgei	r4,r2,4539
11046334:	11046ec8 	cmpgei	r4,r2,4539
11046338:	11046ec8 	cmpgei	r4,r2,4539
1104633c:	11046ec8 	cmpgei	r4,r2,4539
11046340:	11046ec8 	cmpgei	r4,r2,4539
11046344:	11046ec8 	cmpgei	r4,r2,4539
11046348:	11046584 	addi	r4,r2,4502
1104634c:	11046d60 	cmpeqi	r4,r2,4533
11046350:	11046ec8 	cmpgei	r4,r2,4539
11046354:	11046494 	ori	r4,r2,4498
11046358:	110465ac 	andhi	r4,r2,4502
1104635c:	11046ec8 	cmpgei	r4,r2,4539
11046360:	11046620 	cmpeqi	r4,r2,4504
11046364:	110465ec 	andhi	r4,r2,4503
11046368:	110465ec 	andhi	r4,r2,4503
1104636c:	110465ec 	andhi	r4,r2,4503
11046370:	110465ec 	andhi	r4,r2,4503
11046374:	110465ec 	andhi	r4,r2,4503
11046378:	110465ec 	andhi	r4,r2,4503
1104637c:	110465ec 	andhi	r4,r2,4503
11046380:	110465ec 	andhi	r4,r2,4503
11046384:	110465ec 	andhi	r4,r2,4503
11046388:	11046ec8 	cmpgei	r4,r2,4539
1104638c:	11046ec8 	cmpgei	r4,r2,4539
11046390:	11046ec8 	cmpgei	r4,r2,4539
11046394:	11046ec8 	cmpgei	r4,r2,4539
11046398:	11046ec8 	cmpgei	r4,r2,4539
1104639c:	11046ec8 	cmpgei	r4,r2,4539
110463a0:	11046ec8 	cmpgei	r4,r2,4539
110463a4:	11046ec8 	cmpgei	r4,r2,4539
110463a8:	11046ec8 	cmpgei	r4,r2,4539
110463ac:	11046ec8 	cmpgei	r4,r2,4539
110463b0:	110466d8 	cmpnei	r4,r2,4507
110463b4:	1104662c 	andhi	r4,r2,4504
110463b8:	11046ec8 	cmpgei	r4,r2,4539
110463bc:	1104662c 	andhi	r4,r2,4504
110463c0:	11046ec8 	cmpgei	r4,r2,4539
110463c4:	11046ec8 	cmpgei	r4,r2,4539
110463c8:	11046ec8 	cmpgei	r4,r2,4539
110463cc:	11046ec8 	cmpgei	r4,r2,4539
110463d0:	110466cc 	andi	r4,r2,4507
110463d4:	11046ec8 	cmpgei	r4,r2,4539
110463d8:	11046ec8 	cmpgei	r4,r2,4539
110463dc:	11046794 	ori	r4,r2,4510
110463e0:	11046ec8 	cmpgei	r4,r2,4539
110463e4:	11046ec8 	cmpgei	r4,r2,4539
110463e8:	11046ec8 	cmpgei	r4,r2,4539
110463ec:	11046ec8 	cmpgei	r4,r2,4539
110463f0:	11046ec8 	cmpgei	r4,r2,4539
110463f4:	11046c04 	addi	r4,r2,4528
110463f8:	11046ec8 	cmpgei	r4,r2,4539
110463fc:	11046ec8 	cmpgei	r4,r2,4539
11046400:	11046c64 	muli	r4,r2,4529
11046404:	11046ec8 	cmpgei	r4,r2,4539
11046408:	11046ec8 	cmpgei	r4,r2,4539
1104640c:	11046ec8 	cmpgei	r4,r2,4539
11046410:	11046ec8 	cmpgei	r4,r2,4539
11046414:	11046ec8 	cmpgei	r4,r2,4539
11046418:	11046ec8 	cmpgei	r4,r2,4539
1104641c:	11046ec8 	cmpgei	r4,r2,4539
11046420:	11046ec8 	cmpgei	r4,r2,4539
11046424:	11046ec8 	cmpgei	r4,r2,4539
11046428:	11046ec8 	cmpgei	r4,r2,4539
1104642c:	11046d14 	ori	r4,r2,4532
11046430:	11046e50 	cmplti	r4,r2,4537
11046434:	1104662c 	andhi	r4,r2,4504
11046438:	1104662c 	andhi	r4,r2,4504
1104643c:	1104662c 	andhi	r4,r2,4504
11046440:	11046ea4 	muli	r4,r2,4538
11046444:	11046e50 	cmplti	r4,r2,4537
11046448:	11046ec8 	cmpgei	r4,r2,4539
1104644c:	11046ec8 	cmpgei	r4,r2,4539
11046450:	11046e60 	cmpeqi	r4,r2,4537
11046454:	11046ec8 	cmpgei	r4,r2,4539
11046458:	11046e70 	cmpltui	r4,r2,4537
1104645c:	11046d50 	cmplti	r4,r2,4533
11046460:	110464a0 	cmpeqi	r4,r2,4498
11046464:	11046d70 	cmpltui	r4,r2,4533
11046468:	11046ec8 	cmpgei	r4,r2,4539
1104646c:	11046d7c 	xorhi	r4,r2,4533
11046470:	11046ec8 	cmpgei	r4,r2,4539
11046474:	11046dd8 	cmpnei	r4,r2,4535
11046478:	11046ec8 	cmpgei	r4,r2,4539
1104647c:	11046ec8 	cmpgei	r4,r2,4539
11046480:	11046de8 	cmpgeui	r4,r2,4535
11046484:	d9003117 	ldw	r4,196(sp)
11046488:	d8802d15 	stw	r2,180(sp)
1104648c:	0109c83a 	sub	r4,zero,r4
11046490:	d9003115 	stw	r4,196(sp)
11046494:	94800114 	ori	r18,r18,4
11046498:	bc400007 	ldb	r17,0(r23)
1104649c:	003f9706 	br	110462fc <___svfprintf_internal_r+0x150>
110464a0:	00800c04 	movi	r2,48
110464a4:	d9002d17 	ldw	r4,180(sp)
110464a8:	d9402917 	ldw	r5,164(sp)
110464ac:	d8802705 	stb	r2,156(sp)
110464b0:	00801e04 	movi	r2,120
110464b4:	d8802745 	stb	r2,157(sp)
110464b8:	d8002785 	stb	zero,158(sp)
110464bc:	20c00104 	addi	r3,r4,4
110464c0:	25000017 	ldw	r20,0(r4)
110464c4:	002d883a 	mov	r22,zero
110464c8:	90800094 	ori	r2,r18,2
110464cc:	28028616 	blt	r5,zero,11046ee8 <___svfprintf_internal_r+0xd3c>
110464d0:	00bfdfc4 	movi	r2,-129
110464d4:	90a4703a 	and	r18,r18,r2
110464d8:	d8c02d15 	stw	r3,180(sp)
110464dc:	94800094 	ori	r18,r18,2
110464e0:	a002731e 	bne	r20,zero,11046eb0 <___svfprintf_internal_r+0xd04>
110464e4:	00844174 	movhi	r2,4357
110464e8:	109c2704 	addi	r2,r2,28828
110464ec:	d8803a15 	stw	r2,232(sp)
110464f0:	04401e04 	movi	r17,120
110464f4:	d8c02917 	ldw	r3,164(sp)
110464f8:	0039883a 	mov	fp,zero
110464fc:	1801d526 	beq	r3,zero,11046c54 <___svfprintf_internal_r+0xaa8>
11046500:	0029883a 	mov	r20,zero
11046504:	002d883a 	mov	r22,zero
11046508:	0001f106 	br	11046cd0 <___svfprintf_internal_r+0xb24>
1104650c:	d9402c17 	ldw	r5,176(sp)
11046510:	d9801e04 	addi	r6,sp,120
11046514:	9809883a 	mov	r4,r19
11046518:	104f9a80 	call	1104f9a8 <__ssprint_r>
1104651c:	1000081e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
11046520:	da000404 	addi	r8,sp,16
11046524:	003f6306 	br	110462b4 <___svfprintf_internal_r+0x108>
11046528:	d8802017 	ldw	r2,128(sp)
1104652c:	10000426 	beq	r2,zero,11046540 <___svfprintf_internal_r+0x394>
11046530:	d9402c17 	ldw	r5,176(sp)
11046534:	d9003917 	ldw	r4,228(sp)
11046538:	d9801e04 	addi	r6,sp,120
1104653c:	104f9a80 	call	1104f9a8 <__ssprint_r>
11046540:	d8802c17 	ldw	r2,176(sp)
11046544:	10c0030b 	ldhu	r3,12(r2)
11046548:	d8802f17 	ldw	r2,188(sp)
1104654c:	18c0100c 	andi	r3,r3,64
11046550:	1805f51e 	bne	r3,zero,11047d28 <___svfprintf_internal_r+0x1b7c>
11046554:	dfc04817 	ldw	ra,288(sp)
11046558:	df004717 	ldw	fp,284(sp)
1104655c:	ddc04617 	ldw	r23,280(sp)
11046560:	dd804517 	ldw	r22,276(sp)
11046564:	dd404417 	ldw	r21,272(sp)
11046568:	dd004317 	ldw	r20,268(sp)
1104656c:	dcc04217 	ldw	r19,264(sp)
11046570:	dc804117 	ldw	r18,260(sp)
11046574:	dc404017 	ldw	r17,256(sp)
11046578:	dc003f17 	ldw	r16,252(sp)
1104657c:	dec04904 	addi	sp,sp,292
11046580:	f800283a 	ret
11046584:	d8802d17 	ldw	r2,180(sp)
11046588:	d9002d17 	ldw	r4,180(sp)
1104658c:	10800017 	ldw	r2,0(r2)
11046590:	d8803115 	stw	r2,196(sp)
11046594:	20800104 	addi	r2,r4,4
11046598:	d9003117 	ldw	r4,196(sp)
1104659c:	203fb916 	blt	r4,zero,11046484 <___svfprintf_internal_r+0x2d8>
110465a0:	d8802d15 	stw	r2,180(sp)
110465a4:	bc400007 	ldb	r17,0(r23)
110465a8:	003f5406 	br	110462fc <___svfprintf_internal_r+0x150>
110465ac:	bc400007 	ldb	r17,0(r23)
110465b0:	bac00044 	addi	r11,r23,1
110465b4:	8a873926 	beq	r17,r10,1104829c <___svfprintf_internal_r+0x20f0>
110465b8:	88bff404 	addi	r2,r17,-48
110465bc:	0009883a 	mov	r4,zero
110465c0:	30868836 	bltu	r6,r2,11047fe4 <___svfprintf_internal_r+0x1e38>
110465c4:	5c400007 	ldb	r17,0(r11)
110465c8:	210002a4 	muli	r4,r4,10
110465cc:	5dc00044 	addi	r23,r11,1
110465d0:	b817883a 	mov	r11,r23
110465d4:	2089883a 	add	r4,r4,r2
110465d8:	88bff404 	addi	r2,r17,-48
110465dc:	30bff92e 	bgeu	r6,r2,110465c4 <___svfprintf_internal_r+0x418>
110465e0:	2005d716 	blt	r4,zero,11047d40 <___svfprintf_internal_r+0x1b94>
110465e4:	d9002915 	stw	r4,164(sp)
110465e8:	003f4506 	br	11046300 <___svfprintf_internal_r+0x154>
110465ec:	b809883a 	mov	r4,r23
110465f0:	d8003115 	stw	zero,196(sp)
110465f4:	88bff404 	addi	r2,r17,-48
110465f8:	0017883a 	mov	r11,zero
110465fc:	24400007 	ldb	r17,0(r4)
11046600:	5ac002a4 	muli	r11,r11,10
11046604:	bdc00044 	addi	r23,r23,1
11046608:	b809883a 	mov	r4,r23
1104660c:	12d7883a 	add	r11,r2,r11
11046610:	88bff404 	addi	r2,r17,-48
11046614:	30bff92e 	bgeu	r6,r2,110465fc <___svfprintf_internal_r+0x450>
11046618:	dac03115 	stw	r11,196(sp)
1104661c:	003f3806 	br	11046300 <___svfprintf_internal_r+0x154>
11046620:	94802014 	ori	r18,r18,128
11046624:	bc400007 	ldb	r17,0(r23)
11046628:	003f3406 	br	110462fc <___svfprintf_internal_r+0x150>
1104662c:	18c03fcc 	andi	r3,r3,255
11046630:	1807471e 	bne	r3,zero,11048350 <___svfprintf_internal_r+0x21a4>
11046634:	9080020c 	andi	r2,r18,8
11046638:	10047d26 	beq	r2,zero,11047830 <___svfprintf_internal_r+0x1684>
1104663c:	d8c02d17 	ldw	r3,180(sp)
11046640:	d9002d17 	ldw	r4,180(sp)
11046644:	d9402d17 	ldw	r5,180(sp)
11046648:	18c00017 	ldw	r3,0(r3)
1104664c:	21000117 	ldw	r4,4(r4)
11046650:	29400204 	addi	r5,r5,8
11046654:	d8c03615 	stw	r3,216(sp)
11046658:	d9003715 	stw	r4,220(sp)
1104665c:	d9402d15 	stw	r5,180(sp)
11046660:	d9003617 	ldw	r4,216(sp)
11046664:	d9403717 	ldw	r5,220(sp)
11046668:	da003e15 	stw	r8,248(sp)
1104666c:	04000044 	movi	r16,1
11046670:	104f6c80 	call	1104f6c8 <__fpclassifyd>
11046674:	da003e17 	ldw	r8,248(sp)
11046678:	14044b1e 	bne	r2,r16,110477a8 <___svfprintf_internal_r+0x15fc>
1104667c:	d9003617 	ldw	r4,216(sp)
11046680:	d9403717 	ldw	r5,220(sp)
11046684:	000d883a 	mov	r6,zero
11046688:	000f883a 	mov	r7,zero
1104668c:	10540c80 	call	110540c8 <__ledf2>
11046690:	da003e17 	ldw	r8,248(sp)
11046694:	1005f316 	blt	r2,zero,11047e64 <___svfprintf_internal_r+0x1cb8>
11046698:	df002783 	ldbu	fp,158(sp)
1104669c:	008011c4 	movi	r2,71
110466a0:	1445590e 	bge	r2,r17,11047c08 <___svfprintf_internal_r+0x1a5c>
110466a4:	04044174 	movhi	r16,4357
110466a8:	841c1f04 	addi	r16,r16,28796
110466ac:	00c000c4 	movi	r3,3
110466b0:	00bfdfc4 	movi	r2,-129
110466b4:	d8c02a15 	stw	r3,168(sp)
110466b8:	90a4703a 	and	r18,r18,r2
110466bc:	d8c02e15 	stw	r3,184(sp)
110466c0:	d8002915 	stw	zero,164(sp)
110466c4:	d8003215 	stw	zero,200(sp)
110466c8:	00006606 	br	11046864 <___svfprintf_internal_r+0x6b8>
110466cc:	94800214 	ori	r18,r18,8
110466d0:	bc400007 	ldb	r17,0(r23)
110466d4:	003f0906 	br	110462fc <___svfprintf_internal_r+0x150>
110466d8:	18c03fcc 	andi	r3,r3,255
110466dc:	1807181e 	bne	r3,zero,11048340 <___svfprintf_internal_r+0x2194>
110466e0:	94800414 	ori	r18,r18,16
110466e4:	9080080c 	andi	r2,r18,32
110466e8:	10039626 	beq	r2,zero,11047544 <___svfprintf_internal_r+0x1398>
110466ec:	d9402d17 	ldw	r5,180(sp)
110466f0:	28800117 	ldw	r2,4(r5)
110466f4:	2d000017 	ldw	r20,0(r5)
110466f8:	29400204 	addi	r5,r5,8
110466fc:	d9402d15 	stw	r5,180(sp)
11046700:	102d883a 	mov	r22,r2
11046704:	10039816 	blt	r2,zero,11047568 <___svfprintf_internal_r+0x13bc>
11046708:	d9402917 	ldw	r5,164(sp)
1104670c:	df002783 	ldbu	fp,158(sp)
11046710:	2803ab16 	blt	r5,zero,110475c0 <___svfprintf_internal_r+0x1414>
11046714:	00ffdfc4 	movi	r3,-129
11046718:	a584b03a 	or	r2,r20,r22
1104671c:	90e4703a 	and	r18,r18,r3
11046720:	10014a26 	beq	r2,zero,11046c4c <___svfprintf_internal_r+0xaa0>
11046724:	b0034b26 	beq	r22,zero,11047454 <___svfprintf_internal_r+0x12a8>
11046728:	dc402a15 	stw	r17,168(sp)
1104672c:	dc001e04 	addi	r16,sp,120
11046730:	b023883a 	mov	r17,r22
11046734:	402d883a 	mov	r22,r8
11046738:	a009883a 	mov	r4,r20
1104673c:	880b883a 	mov	r5,r17
11046740:	01800284 	movi	r6,10
11046744:	000f883a 	mov	r7,zero
11046748:	10532a80 	call	110532a8 <__umoddi3>
1104674c:	10800c04 	addi	r2,r2,48
11046750:	843fffc4 	addi	r16,r16,-1
11046754:	a009883a 	mov	r4,r20
11046758:	880b883a 	mov	r5,r17
1104675c:	80800005 	stb	r2,0(r16)
11046760:	01800284 	movi	r6,10
11046764:	000f883a 	mov	r7,zero
11046768:	1052d300 	call	11052d30 <__udivdi3>
1104676c:	1029883a 	mov	r20,r2
11046770:	10c4b03a 	or	r2,r2,r3
11046774:	1823883a 	mov	r17,r3
11046778:	103fef1e 	bne	r2,zero,11046738 <___svfprintf_internal_r+0x58c>
1104677c:	d8c02817 	ldw	r3,160(sp)
11046780:	dc402a17 	ldw	r17,168(sp)
11046784:	b011883a 	mov	r8,r22
11046788:	1c07c83a 	sub	r3,r3,r16
1104678c:	d8c02e15 	stw	r3,184(sp)
11046790:	00002e06 	br	1104684c <___svfprintf_internal_r+0x6a0>
11046794:	18c03fcc 	andi	r3,r3,255
11046798:	1806e71e 	bne	r3,zero,11048338 <___svfprintf_internal_r+0x218c>
1104679c:	94800414 	ori	r18,r18,16
110467a0:	9080080c 	andi	r2,r18,32
110467a4:	1002d426 	beq	r2,zero,110472f8 <___svfprintf_internal_r+0x114c>
110467a8:	d9402d17 	ldw	r5,180(sp)
110467ac:	d8c02917 	ldw	r3,164(sp)
110467b0:	d8002785 	stb	zero,158(sp)
110467b4:	28800204 	addi	r2,r5,8
110467b8:	2d000017 	ldw	r20,0(r5)
110467bc:	2d800117 	ldw	r22,4(r5)
110467c0:	18041516 	blt	r3,zero,11047818 <___svfprintf_internal_r+0x166c>
110467c4:	013fdfc4 	movi	r4,-129
110467c8:	a586b03a 	or	r3,r20,r22
110467cc:	d8802d15 	stw	r2,180(sp)
110467d0:	9124703a 	and	r18,r18,r4
110467d4:	1802d51e 	bne	r3,zero,1104732c <___svfprintf_internal_r+0x1180>
110467d8:	d9402917 	ldw	r5,164(sp)
110467dc:	0039883a 	mov	fp,zero
110467e0:	2806be26 	beq	r5,zero,110482dc <___svfprintf_internal_r+0x2130>
110467e4:	0029883a 	mov	r20,zero
110467e8:	002d883a 	mov	r22,zero
110467ec:	dc001e04 	addi	r16,sp,120
110467f0:	a006d0fa 	srli	r3,r20,3
110467f4:	b008977a 	slli	r4,r22,29
110467f8:	b02cd0fa 	srli	r22,r22,3
110467fc:	a50001cc 	andi	r20,r20,7
11046800:	a0800c04 	addi	r2,r20,48
11046804:	843fffc4 	addi	r16,r16,-1
11046808:	20e8b03a 	or	r20,r4,r3
1104680c:	80800005 	stb	r2,0(r16)
11046810:	a586b03a 	or	r3,r20,r22
11046814:	183ff61e 	bne	r3,zero,110467f0 <___svfprintf_internal_r+0x644>
11046818:	90c0004c 	andi	r3,r18,1
1104681c:	18013926 	beq	r3,zero,11046d04 <___svfprintf_internal_r+0xb58>
11046820:	10803fcc 	andi	r2,r2,255
11046824:	1080201c 	xori	r2,r2,128
11046828:	10bfe004 	addi	r2,r2,-128
1104682c:	00c00c04 	movi	r3,48
11046830:	10c13426 	beq	r2,r3,11046d04 <___svfprintf_internal_r+0xb58>
11046834:	80ffffc5 	stb	r3,-1(r16)
11046838:	d8c02817 	ldw	r3,160(sp)
1104683c:	80bfffc4 	addi	r2,r16,-1
11046840:	1021883a 	mov	r16,r2
11046844:	1887c83a 	sub	r3,r3,r2
11046848:	d8c02e15 	stw	r3,184(sp)
1104684c:	d8802e17 	ldw	r2,184(sp)
11046850:	d9002917 	ldw	r4,164(sp)
11046854:	1100010e 	bge	r2,r4,1104685c <___svfprintf_internal_r+0x6b0>
11046858:	2005883a 	mov	r2,r4
1104685c:	d8802a15 	stw	r2,168(sp)
11046860:	d8003215 	stw	zero,200(sp)
11046864:	e7003fcc 	andi	fp,fp,255
11046868:	e700201c 	xori	fp,fp,128
1104686c:	e73fe004 	addi	fp,fp,-128
11046870:	e0000326 	beq	fp,zero,11046880 <___svfprintf_internal_r+0x6d4>
11046874:	d8c02a17 	ldw	r3,168(sp)
11046878:	18c00044 	addi	r3,r3,1
1104687c:	d8c02a15 	stw	r3,168(sp)
11046880:	90c0008c 	andi	r3,r18,2
11046884:	d8c02b15 	stw	r3,172(sp)
11046888:	18000326 	beq	r3,zero,11046898 <___svfprintf_internal_r+0x6ec>
1104688c:	d8c02a17 	ldw	r3,168(sp)
11046890:	18c00084 	addi	r3,r3,2
11046894:	d8c02a15 	stw	r3,168(sp)
11046898:	90c0210c 	andi	r3,r18,132
1104689c:	d8c03015 	stw	r3,192(sp)
110468a0:	1801a11e 	bne	r3,zero,11046f28 <___svfprintf_internal_r+0xd7c>
110468a4:	d9003117 	ldw	r4,196(sp)
110468a8:	d8c02a17 	ldw	r3,168(sp)
110468ac:	20e9c83a 	sub	r20,r4,r3
110468b0:	05019d0e 	bge	zero,r20,11046f28 <___svfprintf_internal_r+0xd7c>
110468b4:	02400404 	movi	r9,16
110468b8:	d8c02017 	ldw	r3,128(sp)
110468bc:	d8801f17 	ldw	r2,124(sp)
110468c0:	4d051b0e 	bge	r9,r20,11047d30 <___svfprintf_internal_r+0x1b84>
110468c4:	01444174 	movhi	r5,4357
110468c8:	295c3284 	addi	r5,r5,28874
110468cc:	dc403c15 	stw	r17,240(sp)
110468d0:	d9403515 	stw	r5,212(sp)
110468d4:	a023883a 	mov	r17,r20
110468d8:	482d883a 	mov	r22,r9
110468dc:	9029883a 	mov	r20,r18
110468e0:	070001c4 	movi	fp,7
110468e4:	8025883a 	mov	r18,r16
110468e8:	dc002c17 	ldw	r16,176(sp)
110468ec:	00000306 	br	110468fc <___svfprintf_internal_r+0x750>
110468f0:	8c7ffc04 	addi	r17,r17,-16
110468f4:	42000204 	addi	r8,r8,8
110468f8:	b440130e 	bge	r22,r17,11046948 <___svfprintf_internal_r+0x79c>
110468fc:	01044174 	movhi	r4,4357
11046900:	18c00404 	addi	r3,r3,16
11046904:	10800044 	addi	r2,r2,1
11046908:	211c3284 	addi	r4,r4,28874
1104690c:	41000015 	stw	r4,0(r8)
11046910:	45800115 	stw	r22,4(r8)
11046914:	d8c02015 	stw	r3,128(sp)
11046918:	d8801f15 	stw	r2,124(sp)
1104691c:	e0bff40e 	bge	fp,r2,110468f0 <___svfprintf_internal_r+0x744>
11046920:	d9801e04 	addi	r6,sp,120
11046924:	800b883a 	mov	r5,r16
11046928:	9809883a 	mov	r4,r19
1104692c:	104f9a80 	call	1104f9a8 <__ssprint_r>
11046930:	103f031e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
11046934:	8c7ffc04 	addi	r17,r17,-16
11046938:	d8c02017 	ldw	r3,128(sp)
1104693c:	d8801f17 	ldw	r2,124(sp)
11046940:	da000404 	addi	r8,sp,16
11046944:	b47fed16 	blt	r22,r17,110468fc <___svfprintf_internal_r+0x750>
11046948:	9021883a 	mov	r16,r18
1104694c:	a025883a 	mov	r18,r20
11046950:	8829883a 	mov	r20,r17
11046954:	dc403c17 	ldw	r17,240(sp)
11046958:	d9403517 	ldw	r5,212(sp)
1104695c:	a0c7883a 	add	r3,r20,r3
11046960:	10800044 	addi	r2,r2,1
11046964:	41400015 	stw	r5,0(r8)
11046968:	45000115 	stw	r20,4(r8)
1104696c:	d8c02015 	stw	r3,128(sp)
11046970:	d8801f15 	stw	r2,124(sp)
11046974:	010001c4 	movi	r4,7
11046978:	20829f16 	blt	r4,r2,110473f8 <___svfprintf_internal_r+0x124c>
1104697c:	df002787 	ldb	fp,158(sp)
11046980:	42000204 	addi	r8,r8,8
11046984:	e0000c26 	beq	fp,zero,110469b8 <___svfprintf_internal_r+0x80c>
11046988:	d8801f17 	ldw	r2,124(sp)
1104698c:	d9002784 	addi	r4,sp,158
11046990:	18c00044 	addi	r3,r3,1
11046994:	10800044 	addi	r2,r2,1
11046998:	41000015 	stw	r4,0(r8)
1104699c:	01000044 	movi	r4,1
110469a0:	41000115 	stw	r4,4(r8)
110469a4:	d8c02015 	stw	r3,128(sp)
110469a8:	d8801f15 	stw	r2,124(sp)
110469ac:	010001c4 	movi	r4,7
110469b0:	20823816 	blt	r4,r2,11047294 <___svfprintf_internal_r+0x10e8>
110469b4:	42000204 	addi	r8,r8,8
110469b8:	d8802b17 	ldw	r2,172(sp)
110469bc:	10000c26 	beq	r2,zero,110469f0 <___svfprintf_internal_r+0x844>
110469c0:	d8801f17 	ldw	r2,124(sp)
110469c4:	d9002704 	addi	r4,sp,156
110469c8:	18c00084 	addi	r3,r3,2
110469cc:	10800044 	addi	r2,r2,1
110469d0:	41000015 	stw	r4,0(r8)
110469d4:	01000084 	movi	r4,2
110469d8:	41000115 	stw	r4,4(r8)
110469dc:	d8c02015 	stw	r3,128(sp)
110469e0:	d8801f15 	stw	r2,124(sp)
110469e4:	010001c4 	movi	r4,7
110469e8:	20823216 	blt	r4,r2,110472b4 <___svfprintf_internal_r+0x1108>
110469ec:	42000204 	addi	r8,r8,8
110469f0:	d9003017 	ldw	r4,192(sp)
110469f4:	00802004 	movi	r2,128
110469f8:	20819726 	beq	r4,r2,11047058 <___svfprintf_internal_r+0xeac>
110469fc:	d9402917 	ldw	r5,164(sp)
11046a00:	d8802e17 	ldw	r2,184(sp)
11046a04:	28adc83a 	sub	r22,r5,r2
11046a08:	05802f0e 	bge	zero,r22,11046ac8 <___svfprintf_internal_r+0x91c>
11046a0c:	07000404 	movi	fp,16
11046a10:	d8801f17 	ldw	r2,124(sp)
11046a14:	e583c00e 	bge	fp,r22,11047918 <___svfprintf_internal_r+0x176c>
11046a18:	01444174 	movhi	r5,4357
11046a1c:	295c2e84 	addi	r5,r5,28858
11046a20:	dc402915 	stw	r17,164(sp)
11046a24:	d9402b15 	stw	r5,172(sp)
11046a28:	b023883a 	mov	r17,r22
11046a2c:	050001c4 	movi	r20,7
11046a30:	902d883a 	mov	r22,r18
11046a34:	8025883a 	mov	r18,r16
11046a38:	dc002c17 	ldw	r16,176(sp)
11046a3c:	00000306 	br	11046a4c <___svfprintf_internal_r+0x8a0>
11046a40:	8c7ffc04 	addi	r17,r17,-16
11046a44:	42000204 	addi	r8,r8,8
11046a48:	e440110e 	bge	fp,r17,11046a90 <___svfprintf_internal_r+0x8e4>
11046a4c:	18c00404 	addi	r3,r3,16
11046a50:	10800044 	addi	r2,r2,1
11046a54:	45400015 	stw	r21,0(r8)
11046a58:	47000115 	stw	fp,4(r8)
11046a5c:	d8c02015 	stw	r3,128(sp)
11046a60:	d8801f15 	stw	r2,124(sp)
11046a64:	a0bff60e 	bge	r20,r2,11046a40 <___svfprintf_internal_r+0x894>
11046a68:	d9801e04 	addi	r6,sp,120
11046a6c:	800b883a 	mov	r5,r16
11046a70:	9809883a 	mov	r4,r19
11046a74:	104f9a80 	call	1104f9a8 <__ssprint_r>
11046a78:	103eb11e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
11046a7c:	8c7ffc04 	addi	r17,r17,-16
11046a80:	d8c02017 	ldw	r3,128(sp)
11046a84:	d8801f17 	ldw	r2,124(sp)
11046a88:	da000404 	addi	r8,sp,16
11046a8c:	e47fef16 	blt	fp,r17,11046a4c <___svfprintf_internal_r+0x8a0>
11046a90:	9021883a 	mov	r16,r18
11046a94:	b025883a 	mov	r18,r22
11046a98:	882d883a 	mov	r22,r17
11046a9c:	dc402917 	ldw	r17,164(sp)
11046aa0:	d9002b17 	ldw	r4,172(sp)
11046aa4:	1d87883a 	add	r3,r3,r22
11046aa8:	10800044 	addi	r2,r2,1
11046aac:	41000015 	stw	r4,0(r8)
11046ab0:	45800115 	stw	r22,4(r8)
11046ab4:	d8c02015 	stw	r3,128(sp)
11046ab8:	d8801f15 	stw	r2,124(sp)
11046abc:	010001c4 	movi	r4,7
11046ac0:	2081ec16 	blt	r4,r2,11047274 <___svfprintf_internal_r+0x10c8>
11046ac4:	42000204 	addi	r8,r8,8
11046ac8:	9080400c 	andi	r2,r18,256
11046acc:	1001181e 	bne	r2,zero,11046f30 <___svfprintf_internal_r+0xd84>
11046ad0:	d9402e17 	ldw	r5,184(sp)
11046ad4:	d8801f17 	ldw	r2,124(sp)
11046ad8:	44000015 	stw	r16,0(r8)
11046adc:	1947883a 	add	r3,r3,r5
11046ae0:	10800044 	addi	r2,r2,1
11046ae4:	41400115 	stw	r5,4(r8)
11046ae8:	d8c02015 	stw	r3,128(sp)
11046aec:	d8801f15 	stw	r2,124(sp)
11046af0:	010001c4 	movi	r4,7
11046af4:	2081d116 	blt	r4,r2,1104723c <___svfprintf_internal_r+0x1090>
11046af8:	42000204 	addi	r8,r8,8
11046afc:	9480010c 	andi	r18,r18,4
11046b00:	90003226 	beq	r18,zero,11046bcc <___svfprintf_internal_r+0xa20>
11046b04:	d9403117 	ldw	r5,196(sp)
11046b08:	d8802a17 	ldw	r2,168(sp)
11046b0c:	28a1c83a 	sub	r16,r5,r2
11046b10:	04002e0e 	bge	zero,r16,11046bcc <___svfprintf_internal_r+0xa20>
11046b14:	04400404 	movi	r17,16
11046b18:	d8801f17 	ldw	r2,124(sp)
11046b1c:	8c04b90e 	bge	r17,r16,11047e04 <___svfprintf_internal_r+0x1c58>
11046b20:	01444174 	movhi	r5,4357
11046b24:	295c3284 	addi	r5,r5,28874
11046b28:	d9403515 	stw	r5,212(sp)
11046b2c:	048001c4 	movi	r18,7
11046b30:	dd002c17 	ldw	r20,176(sp)
11046b34:	00000306 	br	11046b44 <___svfprintf_internal_r+0x998>
11046b38:	843ffc04 	addi	r16,r16,-16
11046b3c:	42000204 	addi	r8,r8,8
11046b40:	8c00130e 	bge	r17,r16,11046b90 <___svfprintf_internal_r+0x9e4>
11046b44:	01044174 	movhi	r4,4357
11046b48:	18c00404 	addi	r3,r3,16
11046b4c:	10800044 	addi	r2,r2,1
11046b50:	211c3284 	addi	r4,r4,28874
11046b54:	41000015 	stw	r4,0(r8)
11046b58:	44400115 	stw	r17,4(r8)
11046b5c:	d8c02015 	stw	r3,128(sp)
11046b60:	d8801f15 	stw	r2,124(sp)
11046b64:	90bff40e 	bge	r18,r2,11046b38 <___svfprintf_internal_r+0x98c>
11046b68:	d9801e04 	addi	r6,sp,120
11046b6c:	a00b883a 	mov	r5,r20
11046b70:	9809883a 	mov	r4,r19
11046b74:	104f9a80 	call	1104f9a8 <__ssprint_r>
11046b78:	103e711e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
11046b7c:	843ffc04 	addi	r16,r16,-16
11046b80:	d8c02017 	ldw	r3,128(sp)
11046b84:	d8801f17 	ldw	r2,124(sp)
11046b88:	da000404 	addi	r8,sp,16
11046b8c:	8c3fed16 	blt	r17,r16,11046b44 <___svfprintf_internal_r+0x998>
11046b90:	d9403517 	ldw	r5,212(sp)
11046b94:	1c07883a 	add	r3,r3,r16
11046b98:	10800044 	addi	r2,r2,1
11046b9c:	41400015 	stw	r5,0(r8)
11046ba0:	44000115 	stw	r16,4(r8)
11046ba4:	d8c02015 	stw	r3,128(sp)
11046ba8:	d8801f15 	stw	r2,124(sp)
11046bac:	010001c4 	movi	r4,7
11046bb0:	2080060e 	bge	r4,r2,11046bcc <___svfprintf_internal_r+0xa20>
11046bb4:	d9402c17 	ldw	r5,176(sp)
11046bb8:	d9801e04 	addi	r6,sp,120
11046bbc:	9809883a 	mov	r4,r19
11046bc0:	104f9a80 	call	1104f9a8 <__ssprint_r>
11046bc4:	103e5e1e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
11046bc8:	d8c02017 	ldw	r3,128(sp)
11046bcc:	d8803117 	ldw	r2,196(sp)
11046bd0:	d9002a17 	ldw	r4,168(sp)
11046bd4:	1100010e 	bge	r2,r4,11046bdc <___svfprintf_internal_r+0xa30>
11046bd8:	2005883a 	mov	r2,r4
11046bdc:	d9402f17 	ldw	r5,188(sp)
11046be0:	288b883a 	add	r5,r5,r2
11046be4:	d9402f15 	stw	r5,188(sp)
11046be8:	18019c1e 	bne	r3,zero,1104725c <___svfprintf_internal_r+0x10b0>
11046bec:	b8800007 	ldb	r2,0(r23)
11046bf0:	d8001f15 	stw	zero,124(sp)
11046bf4:	da000404 	addi	r8,sp,16
11046bf8:	103d991e 	bne	r2,zero,11046260 <___svfprintf_internal_r+0xb4>
11046bfc:	b821883a 	mov	r16,r23
11046c00:	003daf06 	br	110462c0 <___svfprintf_internal_r+0x114>
11046c04:	18c03fcc 	andi	r3,r3,255
11046c08:	1805c71e 	bne	r3,zero,11048328 <___svfprintf_internal_r+0x217c>
11046c0c:	94800414 	ori	r18,r18,16
11046c10:	9080080c 	andi	r2,r18,32
11046c14:	10020126 	beq	r2,zero,1104741c <___svfprintf_internal_r+0x1270>
11046c18:	d8802d17 	ldw	r2,180(sp)
11046c1c:	d9002917 	ldw	r4,164(sp)
11046c20:	d8002785 	stb	zero,158(sp)
11046c24:	10c00204 	addi	r3,r2,8
11046c28:	15000017 	ldw	r20,0(r2)
11046c2c:	15800117 	ldw	r22,4(r2)
11046c30:	20038e16 	blt	r4,zero,11047a6c <___svfprintf_internal_r+0x18c0>
11046c34:	013fdfc4 	movi	r4,-129
11046c38:	a584b03a 	or	r2,r20,r22
11046c3c:	d8c02d15 	stw	r3,180(sp)
11046c40:	9124703a 	and	r18,r18,r4
11046c44:	0039883a 	mov	fp,zero
11046c48:	103eb61e 	bne	r2,zero,11046724 <___svfprintf_internal_r+0x578>
11046c4c:	d8802917 	ldw	r2,164(sp)
11046c50:	1002c81e 	bne	r2,zero,11047774 <___svfprintf_internal_r+0x15c8>
11046c54:	d8002915 	stw	zero,164(sp)
11046c58:	d8002e15 	stw	zero,184(sp)
11046c5c:	dc001e04 	addi	r16,sp,120
11046c60:	003efa06 	br	1104684c <___svfprintf_internal_r+0x6a0>
11046c64:	18c03fcc 	andi	r3,r3,255
11046c68:	1805ad1e 	bne	r3,zero,11048320 <___svfprintf_internal_r+0x2174>
11046c6c:	01444174 	movhi	r5,4357
11046c70:	295c2204 	addi	r5,r5,28808
11046c74:	d9403a15 	stw	r5,232(sp)
11046c78:	9080080c 	andi	r2,r18,32
11046c7c:	10006126 	beq	r2,zero,11046e04 <___svfprintf_internal_r+0xc58>
11046c80:	d8802d17 	ldw	r2,180(sp)
11046c84:	15000017 	ldw	r20,0(r2)
11046c88:	15800117 	ldw	r22,4(r2)
11046c8c:	10800204 	addi	r2,r2,8
11046c90:	d8802d15 	stw	r2,180(sp)
11046c94:	9080004c 	andi	r2,r18,1
11046c98:	10018e26 	beq	r2,zero,110472d4 <___svfprintf_internal_r+0x1128>
11046c9c:	a584b03a 	or	r2,r20,r22
11046ca0:	10030926 	beq	r2,zero,110478c8 <___svfprintf_internal_r+0x171c>
11046ca4:	d8c02917 	ldw	r3,164(sp)
11046ca8:	00800c04 	movi	r2,48
11046cac:	d8802705 	stb	r2,156(sp)
11046cb0:	dc402745 	stb	r17,157(sp)
11046cb4:	d8002785 	stb	zero,158(sp)
11046cb8:	90800094 	ori	r2,r18,2
11046cbc:	18048716 	blt	r3,zero,11047edc <___svfprintf_internal_r+0x1d30>
11046cc0:	00bfdfc4 	movi	r2,-129
11046cc4:	90a4703a 	and	r18,r18,r2
11046cc8:	94800094 	ori	r18,r18,2
11046ccc:	0039883a 	mov	fp,zero
11046cd0:	d9003a17 	ldw	r4,232(sp)
11046cd4:	dc001e04 	addi	r16,sp,120
11046cd8:	a08003cc 	andi	r2,r20,15
11046cdc:	b006973a 	slli	r3,r22,28
11046ce0:	2085883a 	add	r2,r4,r2
11046ce4:	a028d13a 	srli	r20,r20,4
11046ce8:	10800003 	ldbu	r2,0(r2)
11046cec:	b02cd13a 	srli	r22,r22,4
11046cf0:	843fffc4 	addi	r16,r16,-1
11046cf4:	1d28b03a 	or	r20,r3,r20
11046cf8:	80800005 	stb	r2,0(r16)
11046cfc:	a584b03a 	or	r2,r20,r22
11046d00:	103ff51e 	bne	r2,zero,11046cd8 <___svfprintf_internal_r+0xb2c>
11046d04:	d8c02817 	ldw	r3,160(sp)
11046d08:	1c07c83a 	sub	r3,r3,r16
11046d0c:	d8c02e15 	stw	r3,184(sp)
11046d10:	003ece06 	br	1104684c <___svfprintf_internal_r+0x6a0>
11046d14:	d8c02d17 	ldw	r3,180(sp)
11046d18:	d9002d17 	ldw	r4,180(sp)
11046d1c:	d8002785 	stb	zero,158(sp)
11046d20:	18800017 	ldw	r2,0(r3)
11046d24:	21000104 	addi	r4,r4,4
11046d28:	00c00044 	movi	r3,1
11046d2c:	d8c02a15 	stw	r3,168(sp)
11046d30:	d8801405 	stb	r2,80(sp)
11046d34:	d9002d15 	stw	r4,180(sp)
11046d38:	d8c02e15 	stw	r3,184(sp)
11046d3c:	d8002915 	stw	zero,164(sp)
11046d40:	d8003215 	stw	zero,200(sp)
11046d44:	dc001404 	addi	r16,sp,80
11046d48:	0039883a 	mov	fp,zero
11046d4c:	003ecc06 	br	11046880 <___svfprintf_internal_r+0x6d4>
11046d50:	18c03fcc 	andi	r3,r3,255
11046d54:	183e9226 	beq	r3,zero,110467a0 <___svfprintf_internal_r+0x5f4>
11046d58:	d9c02785 	stb	r7,158(sp)
11046d5c:	003e9006 	br	110467a0 <___svfprintf_internal_r+0x5f4>
11046d60:	00c00044 	movi	r3,1
11046d64:	01c00ac4 	movi	r7,43
11046d68:	bc400007 	ldb	r17,0(r23)
11046d6c:	003d6306 	br	110462fc <___svfprintf_internal_r+0x150>
11046d70:	94800814 	ori	r18,r18,32
11046d74:	bc400007 	ldb	r17,0(r23)
11046d78:	003d6006 	br	110462fc <___svfprintf_internal_r+0x150>
11046d7c:	d8c02d17 	ldw	r3,180(sp)
11046d80:	d8002785 	stb	zero,158(sp)
11046d84:	1c000017 	ldw	r16,0(r3)
11046d88:	1d000104 	addi	r20,r3,4
11046d8c:	80040f26 	beq	r16,zero,11047dcc <___svfprintf_internal_r+0x1c20>
11046d90:	d9002917 	ldw	r4,164(sp)
11046d94:	2003dc16 	blt	r4,zero,11047d08 <___svfprintf_internal_r+0x1b5c>
11046d98:	200d883a 	mov	r6,r4
11046d9c:	000b883a 	mov	r5,zero
11046da0:	8009883a 	mov	r4,r16
11046da4:	da003e15 	stw	r8,248(sp)
11046da8:	104dcb80 	call	1104dcb8 <memchr>
11046dac:	da003e17 	ldw	r8,248(sp)
11046db0:	10045826 	beq	r2,zero,11047f14 <___svfprintf_internal_r+0x1d68>
11046db4:	1405c83a 	sub	r2,r2,r16
11046db8:	d8802e15 	stw	r2,184(sp)
11046dbc:	1003d816 	blt	r2,zero,11047d20 <___svfprintf_internal_r+0x1b74>
11046dc0:	df002783 	ldbu	fp,158(sp)
11046dc4:	d8802a15 	stw	r2,168(sp)
11046dc8:	dd002d15 	stw	r20,180(sp)
11046dcc:	d8002915 	stw	zero,164(sp)
11046dd0:	d8003215 	stw	zero,200(sp)
11046dd4:	003ea306 	br	11046864 <___svfprintf_internal_r+0x6b8>
11046dd8:	18c03fcc 	andi	r3,r3,255
11046ddc:	183f8c26 	beq	r3,zero,11046c10 <___svfprintf_internal_r+0xa64>
11046de0:	d9c02785 	stb	r7,158(sp)
11046de4:	003f8a06 	br	11046c10 <___svfprintf_internal_r+0xa64>
11046de8:	18c03fcc 	andi	r3,r3,255
11046dec:	1805631e 	bne	r3,zero,1104837c <___svfprintf_internal_r+0x21d0>
11046df0:	01444174 	movhi	r5,4357
11046df4:	295c2704 	addi	r5,r5,28828
11046df8:	d9403a15 	stw	r5,232(sp)
11046dfc:	9080080c 	andi	r2,r18,32
11046e00:	103f9f1e 	bne	r2,zero,11046c80 <___svfprintf_internal_r+0xad4>
11046e04:	9080040c 	andi	r2,r18,16
11046e08:	10029c26 	beq	r2,zero,1104787c <___svfprintf_internal_r+0x16d0>
11046e0c:	d8c02d17 	ldw	r3,180(sp)
11046e10:	002d883a 	mov	r22,zero
11046e14:	1d000017 	ldw	r20,0(r3)
11046e18:	18c00104 	addi	r3,r3,4
11046e1c:	d8c02d15 	stw	r3,180(sp)
11046e20:	003f9c06 	br	11046c94 <___svfprintf_internal_r+0xae8>
11046e24:	94800054 	ori	r18,r18,1
11046e28:	bc400007 	ldb	r17,0(r23)
11046e2c:	003d3306 	br	110462fc <___svfprintf_internal_r+0x150>
11046e30:	38803fcc 	andi	r2,r7,255
11046e34:	1080201c 	xori	r2,r2,128
11046e38:	10bfe004 	addi	r2,r2,-128
11046e3c:	1002971e 	bne	r2,zero,1104789c <___svfprintf_internal_r+0x16f0>
11046e40:	00c00044 	movi	r3,1
11046e44:	01c00804 	movi	r7,32
11046e48:	bc400007 	ldb	r17,0(r23)
11046e4c:	003d2b06 	br	110462fc <___svfprintf_internal_r+0x150>
11046e50:	18c03fcc 	andi	r3,r3,255
11046e54:	183e2326 	beq	r3,zero,110466e4 <___svfprintf_internal_r+0x538>
11046e58:	d9c02785 	stb	r7,158(sp)
11046e5c:	003e2106 	br	110466e4 <___svfprintf_internal_r+0x538>
11046e60:	bc400007 	ldb	r17,0(r23)
11046e64:	8a430426 	beq	r17,r9,11047a78 <___svfprintf_internal_r+0x18cc>
11046e68:	94800414 	ori	r18,r18,16
11046e6c:	003d2306 	br	110462fc <___svfprintf_internal_r+0x150>
11046e70:	18c03fcc 	andi	r3,r3,255
11046e74:	18053f1e 	bne	r3,zero,11048374 <___svfprintf_internal_r+0x21c8>
11046e78:	9080080c 	andi	r2,r18,32
11046e7c:	10028926 	beq	r2,zero,110478a4 <___svfprintf_internal_r+0x16f8>
11046e80:	d9402d17 	ldw	r5,180(sp)
11046e84:	d9002f17 	ldw	r4,188(sp)
11046e88:	28800017 	ldw	r2,0(r5)
11046e8c:	2007d7fa 	srai	r3,r4,31
11046e90:	29400104 	addi	r5,r5,4
11046e94:	d9402d15 	stw	r5,180(sp)
11046e98:	11000015 	stw	r4,0(r2)
11046e9c:	10c00115 	stw	r3,4(r2)
11046ea0:	003ced06 	br	11046258 <___svfprintf_internal_r+0xac>
11046ea4:	94801014 	ori	r18,r18,64
11046ea8:	bc400007 	ldb	r17,0(r23)
11046eac:	003d1306 	br	110462fc <___svfprintf_internal_r+0x150>
11046eb0:	01044174 	movhi	r4,4357
11046eb4:	211c2704 	addi	r4,r4,28828
11046eb8:	0039883a 	mov	fp,zero
11046ebc:	d9003a15 	stw	r4,232(sp)
11046ec0:	04401e04 	movi	r17,120
11046ec4:	003f8206 	br	11046cd0 <___svfprintf_internal_r+0xb24>
11046ec8:	18c03fcc 	andi	r3,r3,255
11046ecc:	1805221e 	bne	r3,zero,11048358 <___svfprintf_internal_r+0x21ac>
11046ed0:	883d9526 	beq	r17,zero,11046528 <___svfprintf_internal_r+0x37c>
11046ed4:	00c00044 	movi	r3,1
11046ed8:	d8c02a15 	stw	r3,168(sp)
11046edc:	dc401405 	stb	r17,80(sp)
11046ee0:	d8002785 	stb	zero,158(sp)
11046ee4:	003f9406 	br	11046d38 <___svfprintf_internal_r+0xb8c>
11046ee8:	01044174 	movhi	r4,4357
11046eec:	211c2704 	addi	r4,r4,28828
11046ef0:	d9003a15 	stw	r4,232(sp)
11046ef4:	d8c02d15 	stw	r3,180(sp)
11046ef8:	1025883a 	mov	r18,r2
11046efc:	04401e04 	movi	r17,120
11046f00:	a584b03a 	or	r2,r20,r22
11046f04:	1000fa1e 	bne	r2,zero,110472f0 <___svfprintf_internal_r+0x1144>
11046f08:	0039883a 	mov	fp,zero
11046f0c:	00800084 	movi	r2,2
11046f10:	10803fcc 	andi	r2,r2,255
11046f14:	00c00044 	movi	r3,1
11046f18:	10c21626 	beq	r2,r3,11047774 <___svfprintf_internal_r+0x15c8>
11046f1c:	00c00084 	movi	r3,2
11046f20:	10fe301e 	bne	r2,r3,110467e4 <___svfprintf_internal_r+0x638>
11046f24:	003d7606 	br	11046500 <___svfprintf_internal_r+0x354>
11046f28:	d8c02017 	ldw	r3,128(sp)
11046f2c:	003e9506 	br	11046984 <___svfprintf_internal_r+0x7d8>
11046f30:	00801944 	movi	r2,101
11046f34:	14407c0e 	bge	r2,r17,11047128 <___svfprintf_internal_r+0xf7c>
11046f38:	d9003617 	ldw	r4,216(sp)
11046f3c:	d9403717 	ldw	r5,220(sp)
11046f40:	000d883a 	mov	r6,zero
11046f44:	000f883a 	mov	r7,zero
11046f48:	d8c03d15 	stw	r3,244(sp)
11046f4c:	da003e15 	stw	r8,248(sp)
11046f50:	1044bd80 	call	11044bd8 <__eqdf2>
11046f54:	d8c03d17 	ldw	r3,244(sp)
11046f58:	da003e17 	ldw	r8,248(sp)
11046f5c:	1000f51e 	bne	r2,zero,11047334 <___svfprintf_internal_r+0x1188>
11046f60:	d8801f17 	ldw	r2,124(sp)
11046f64:	01044174 	movhi	r4,4357
11046f68:	211c2e04 	addi	r4,r4,28856
11046f6c:	18c00044 	addi	r3,r3,1
11046f70:	10800044 	addi	r2,r2,1
11046f74:	41000015 	stw	r4,0(r8)
11046f78:	01000044 	movi	r4,1
11046f7c:	41000115 	stw	r4,4(r8)
11046f80:	d8c02015 	stw	r3,128(sp)
11046f84:	d8801f15 	stw	r2,124(sp)
11046f88:	010001c4 	movi	r4,7
11046f8c:	20826616 	blt	r4,r2,11047928 <___svfprintf_internal_r+0x177c>
11046f90:	42000204 	addi	r8,r8,8
11046f94:	d8802617 	ldw	r2,152(sp)
11046f98:	d9403317 	ldw	r5,204(sp)
11046f9c:	11400216 	blt	r2,r5,11046fa8 <___svfprintf_internal_r+0xdfc>
11046fa0:	9080004c 	andi	r2,r18,1
11046fa4:	103ed526 	beq	r2,zero,11046afc <___svfprintf_internal_r+0x950>
11046fa8:	d8803817 	ldw	r2,224(sp)
11046fac:	d9003417 	ldw	r4,208(sp)
11046fb0:	d9403817 	ldw	r5,224(sp)
11046fb4:	1887883a 	add	r3,r3,r2
11046fb8:	d8801f17 	ldw	r2,124(sp)
11046fbc:	41000015 	stw	r4,0(r8)
11046fc0:	41400115 	stw	r5,4(r8)
11046fc4:	10800044 	addi	r2,r2,1
11046fc8:	d8c02015 	stw	r3,128(sp)
11046fcc:	d8801f15 	stw	r2,124(sp)
11046fd0:	010001c4 	movi	r4,7
11046fd4:	2082af16 	blt	r4,r2,11047a94 <___svfprintf_internal_r+0x18e8>
11046fd8:	42000204 	addi	r8,r8,8
11046fdc:	d8803317 	ldw	r2,204(sp)
11046fe0:	143fffc4 	addi	r16,r2,-1
11046fe4:	043ec50e 	bge	zero,r16,11046afc <___svfprintf_internal_r+0x950>
11046fe8:	04400404 	movi	r17,16
11046fec:	d8801f17 	ldw	r2,124(sp)
11046ff0:	8c00860e 	bge	r17,r16,1104720c <___svfprintf_internal_r+0x1060>
11046ff4:	01444174 	movhi	r5,4357
11046ff8:	295c2e84 	addi	r5,r5,28858
11046ffc:	d9402b15 	stw	r5,172(sp)
11047000:	058001c4 	movi	r22,7
11047004:	dd002c17 	ldw	r20,176(sp)
11047008:	00000306 	br	11047018 <___svfprintf_internal_r+0xe6c>
1104700c:	42000204 	addi	r8,r8,8
11047010:	843ffc04 	addi	r16,r16,-16
11047014:	8c00800e 	bge	r17,r16,11047218 <___svfprintf_internal_r+0x106c>
11047018:	18c00404 	addi	r3,r3,16
1104701c:	10800044 	addi	r2,r2,1
11047020:	45400015 	stw	r21,0(r8)
11047024:	44400115 	stw	r17,4(r8)
11047028:	d8c02015 	stw	r3,128(sp)
1104702c:	d8801f15 	stw	r2,124(sp)
11047030:	b0bff60e 	bge	r22,r2,1104700c <___svfprintf_internal_r+0xe60>
11047034:	d9801e04 	addi	r6,sp,120
11047038:	a00b883a 	mov	r5,r20
1104703c:	9809883a 	mov	r4,r19
11047040:	104f9a80 	call	1104f9a8 <__ssprint_r>
11047044:	103d3e1e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
11047048:	d8c02017 	ldw	r3,128(sp)
1104704c:	d8801f17 	ldw	r2,124(sp)
11047050:	da000404 	addi	r8,sp,16
11047054:	003fee06 	br	11047010 <___svfprintf_internal_r+0xe64>
11047058:	d9403117 	ldw	r5,196(sp)
1104705c:	d8802a17 	ldw	r2,168(sp)
11047060:	28adc83a 	sub	r22,r5,r2
11047064:	05be650e 	bge	zero,r22,110469fc <___svfprintf_internal_r+0x850>
11047068:	07000404 	movi	fp,16
1104706c:	d8801f17 	ldw	r2,124(sp)
11047070:	e583a20e 	bge	fp,r22,11047efc <___svfprintf_internal_r+0x1d50>
11047074:	01444174 	movhi	r5,4357
11047078:	295c2e84 	addi	r5,r5,28858
1104707c:	dc403015 	stw	r17,192(sp)
11047080:	d9402b15 	stw	r5,172(sp)
11047084:	b023883a 	mov	r17,r22
11047088:	050001c4 	movi	r20,7
1104708c:	902d883a 	mov	r22,r18
11047090:	8025883a 	mov	r18,r16
11047094:	dc002c17 	ldw	r16,176(sp)
11047098:	00000306 	br	110470a8 <___svfprintf_internal_r+0xefc>
1104709c:	8c7ffc04 	addi	r17,r17,-16
110470a0:	42000204 	addi	r8,r8,8
110470a4:	e440110e 	bge	fp,r17,110470ec <___svfprintf_internal_r+0xf40>
110470a8:	18c00404 	addi	r3,r3,16
110470ac:	10800044 	addi	r2,r2,1
110470b0:	45400015 	stw	r21,0(r8)
110470b4:	47000115 	stw	fp,4(r8)
110470b8:	d8c02015 	stw	r3,128(sp)
110470bc:	d8801f15 	stw	r2,124(sp)
110470c0:	a0bff60e 	bge	r20,r2,1104709c <___svfprintf_internal_r+0xef0>
110470c4:	d9801e04 	addi	r6,sp,120
110470c8:	800b883a 	mov	r5,r16
110470cc:	9809883a 	mov	r4,r19
110470d0:	104f9a80 	call	1104f9a8 <__ssprint_r>
110470d4:	103d1a1e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
110470d8:	8c7ffc04 	addi	r17,r17,-16
110470dc:	d8c02017 	ldw	r3,128(sp)
110470e0:	d8801f17 	ldw	r2,124(sp)
110470e4:	da000404 	addi	r8,sp,16
110470e8:	e47fef16 	blt	fp,r17,110470a8 <___svfprintf_internal_r+0xefc>
110470ec:	9021883a 	mov	r16,r18
110470f0:	b025883a 	mov	r18,r22
110470f4:	882d883a 	mov	r22,r17
110470f8:	dc403017 	ldw	r17,192(sp)
110470fc:	d9002b17 	ldw	r4,172(sp)
11047100:	1d87883a 	add	r3,r3,r22
11047104:	10800044 	addi	r2,r2,1
11047108:	41000015 	stw	r4,0(r8)
1104710c:	45800115 	stw	r22,4(r8)
11047110:	d8c02015 	stw	r3,128(sp)
11047114:	d8801f15 	stw	r2,124(sp)
11047118:	010001c4 	movi	r4,7
1104711c:	20819a16 	blt	r4,r2,11047788 <___svfprintf_internal_r+0x15dc>
11047120:	42000204 	addi	r8,r8,8
11047124:	003e3506 	br	110469fc <___svfprintf_internal_r+0x850>
11047128:	d9403317 	ldw	r5,204(sp)
1104712c:	00800044 	movi	r2,1
11047130:	18c00044 	addi	r3,r3,1
11047134:	1141710e 	bge	r2,r5,110476fc <___svfprintf_internal_r+0x1550>
11047138:	dc401f17 	ldw	r17,124(sp)
1104713c:	00800044 	movi	r2,1
11047140:	40800115 	stw	r2,4(r8)
11047144:	8c400044 	addi	r17,r17,1
11047148:	44000015 	stw	r16,0(r8)
1104714c:	d8c02015 	stw	r3,128(sp)
11047150:	dc401f15 	stw	r17,124(sp)
11047154:	008001c4 	movi	r2,7
11047158:	14417416 	blt	r2,r17,1104772c <___svfprintf_internal_r+0x1580>
1104715c:	42000204 	addi	r8,r8,8
11047160:	d8803817 	ldw	r2,224(sp)
11047164:	d9003417 	ldw	r4,208(sp)
11047168:	8c400044 	addi	r17,r17,1
1104716c:	10c7883a 	add	r3,r2,r3
11047170:	40800115 	stw	r2,4(r8)
11047174:	41000015 	stw	r4,0(r8)
11047178:	d8c02015 	stw	r3,128(sp)
1104717c:	dc401f15 	stw	r17,124(sp)
11047180:	008001c4 	movi	r2,7
11047184:	14417216 	blt	r2,r17,11047750 <___svfprintf_internal_r+0x15a4>
11047188:	45800204 	addi	r22,r8,8
1104718c:	d9003617 	ldw	r4,216(sp)
11047190:	d9403717 	ldw	r5,220(sp)
11047194:	000d883a 	mov	r6,zero
11047198:	000f883a 	mov	r7,zero
1104719c:	d8c03d15 	stw	r3,244(sp)
110471a0:	1044bd80 	call	11044bd8 <__eqdf2>
110471a4:	d8c03d17 	ldw	r3,244(sp)
110471a8:	1000b326 	beq	r2,zero,11047478 <___svfprintf_internal_r+0x12cc>
110471ac:	d9403317 	ldw	r5,204(sp)
110471b0:	84000044 	addi	r16,r16,1
110471b4:	8c400044 	addi	r17,r17,1
110471b8:	28bfffc4 	addi	r2,r5,-1
110471bc:	1887883a 	add	r3,r3,r2
110471c0:	b0800115 	stw	r2,4(r22)
110471c4:	b4000015 	stw	r16,0(r22)
110471c8:	d8c02015 	stw	r3,128(sp)
110471cc:	dc401f15 	stw	r17,124(sp)
110471d0:	008001c4 	movi	r2,7
110471d4:	1440d216 	blt	r2,r17,11047520 <___svfprintf_internal_r+0x1374>
110471d8:	b5800204 	addi	r22,r22,8
110471dc:	d9003b17 	ldw	r4,236(sp)
110471e0:	df0022c4 	addi	fp,sp,139
110471e4:	8c400044 	addi	r17,r17,1
110471e8:	20c7883a 	add	r3,r4,r3
110471ec:	b7000015 	stw	fp,0(r22)
110471f0:	b1000115 	stw	r4,4(r22)
110471f4:	d8c02015 	stw	r3,128(sp)
110471f8:	dc401f15 	stw	r17,124(sp)
110471fc:	008001c4 	movi	r2,7
11047200:	14400e16 	blt	r2,r17,1104723c <___svfprintf_internal_r+0x1090>
11047204:	b2000204 	addi	r8,r22,8
11047208:	003e3c06 	br	11046afc <___svfprintf_internal_r+0x950>
1104720c:	01044174 	movhi	r4,4357
11047210:	211c2e84 	addi	r4,r4,28858
11047214:	d9002b15 	stw	r4,172(sp)
11047218:	d9002b17 	ldw	r4,172(sp)
1104721c:	1c07883a 	add	r3,r3,r16
11047220:	44000115 	stw	r16,4(r8)
11047224:	41000015 	stw	r4,0(r8)
11047228:	10800044 	addi	r2,r2,1
1104722c:	d8c02015 	stw	r3,128(sp)
11047230:	d8801f15 	stw	r2,124(sp)
11047234:	010001c4 	movi	r4,7
11047238:	20be2f0e 	bge	r4,r2,11046af8 <___svfprintf_internal_r+0x94c>
1104723c:	d9402c17 	ldw	r5,176(sp)
11047240:	d9801e04 	addi	r6,sp,120
11047244:	9809883a 	mov	r4,r19
11047248:	104f9a80 	call	1104f9a8 <__ssprint_r>
1104724c:	103cbc1e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
11047250:	d8c02017 	ldw	r3,128(sp)
11047254:	da000404 	addi	r8,sp,16
11047258:	003e2806 	br	11046afc <___svfprintf_internal_r+0x950>
1104725c:	d9402c17 	ldw	r5,176(sp)
11047260:	d9801e04 	addi	r6,sp,120
11047264:	9809883a 	mov	r4,r19
11047268:	104f9a80 	call	1104f9a8 <__ssprint_r>
1104726c:	103e5f26 	beq	r2,zero,11046bec <___svfprintf_internal_r+0xa40>
11047270:	003cb306 	br	11046540 <___svfprintf_internal_r+0x394>
11047274:	d9402c17 	ldw	r5,176(sp)
11047278:	d9801e04 	addi	r6,sp,120
1104727c:	9809883a 	mov	r4,r19
11047280:	104f9a80 	call	1104f9a8 <__ssprint_r>
11047284:	103cae1e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
11047288:	d8c02017 	ldw	r3,128(sp)
1104728c:	da000404 	addi	r8,sp,16
11047290:	003e0d06 	br	11046ac8 <___svfprintf_internal_r+0x91c>
11047294:	d9402c17 	ldw	r5,176(sp)
11047298:	d9801e04 	addi	r6,sp,120
1104729c:	9809883a 	mov	r4,r19
110472a0:	104f9a80 	call	1104f9a8 <__ssprint_r>
110472a4:	103ca61e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
110472a8:	d8c02017 	ldw	r3,128(sp)
110472ac:	da000404 	addi	r8,sp,16
110472b0:	003dc106 	br	110469b8 <___svfprintf_internal_r+0x80c>
110472b4:	d9402c17 	ldw	r5,176(sp)
110472b8:	d9801e04 	addi	r6,sp,120
110472bc:	9809883a 	mov	r4,r19
110472c0:	104f9a80 	call	1104f9a8 <__ssprint_r>
110472c4:	103c9e1e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
110472c8:	d8c02017 	ldw	r3,128(sp)
110472cc:	da000404 	addi	r8,sp,16
110472d0:	003dc706 	br	110469f0 <___svfprintf_internal_r+0x844>
110472d4:	d8802917 	ldw	r2,164(sp)
110472d8:	d8002785 	stb	zero,158(sp)
110472dc:	103f0816 	blt	r2,zero,11046f00 <___svfprintf_internal_r+0xd54>
110472e0:	00ffdfc4 	movi	r3,-129
110472e4:	a584b03a 	or	r2,r20,r22
110472e8:	90e4703a 	and	r18,r18,r3
110472ec:	103c8126 	beq	r2,zero,110464f4 <___svfprintf_internal_r+0x348>
110472f0:	0039883a 	mov	fp,zero
110472f4:	003e7606 	br	11046cd0 <___svfprintf_internal_r+0xb24>
110472f8:	9080040c 	andi	r2,r18,16
110472fc:	10013d26 	beq	r2,zero,110477f4 <___svfprintf_internal_r+0x1648>
11047300:	d9002d17 	ldw	r4,180(sp)
11047304:	d9402917 	ldw	r5,164(sp)
11047308:	d8002785 	stb	zero,158(sp)
1104730c:	20800104 	addi	r2,r4,4
11047310:	25000017 	ldw	r20,0(r4)
11047314:	002d883a 	mov	r22,zero
11047318:	28013f16 	blt	r5,zero,11047818 <___svfprintf_internal_r+0x166c>
1104731c:	00ffdfc4 	movi	r3,-129
11047320:	d8802d15 	stw	r2,180(sp)
11047324:	90e4703a 	and	r18,r18,r3
11047328:	a03d2b26 	beq	r20,zero,110467d8 <___svfprintf_internal_r+0x62c>
1104732c:	0039883a 	mov	fp,zero
11047330:	003d2e06 	br	110467ec <___svfprintf_internal_r+0x640>
11047334:	dc402617 	ldw	r17,152(sp)
11047338:	0441830e 	bge	zero,r17,11047948 <___svfprintf_internal_r+0x179c>
1104733c:	dc403217 	ldw	r17,200(sp)
11047340:	d8803317 	ldw	r2,204(sp)
11047344:	1440010e 	bge	r2,r17,1104734c <___svfprintf_internal_r+0x11a0>
11047348:	1023883a 	mov	r17,r2
1104734c:	04400a0e 	bge	zero,r17,11047378 <___svfprintf_internal_r+0x11cc>
11047350:	d8801f17 	ldw	r2,124(sp)
11047354:	1c47883a 	add	r3,r3,r17
11047358:	44000015 	stw	r16,0(r8)
1104735c:	10800044 	addi	r2,r2,1
11047360:	44400115 	stw	r17,4(r8)
11047364:	d8c02015 	stw	r3,128(sp)
11047368:	d8801f15 	stw	r2,124(sp)
1104736c:	010001c4 	movi	r4,7
11047370:	20827516 	blt	r4,r2,11047d48 <___svfprintf_internal_r+0x1b9c>
11047374:	42000204 	addi	r8,r8,8
11047378:	88027b16 	blt	r17,zero,11047d68 <___svfprintf_internal_r+0x1bbc>
1104737c:	d9003217 	ldw	r4,200(sp)
11047380:	2463c83a 	sub	r17,r4,r17
11047384:	0440990e 	bge	zero,r17,110475ec <___svfprintf_internal_r+0x1440>
11047388:	05800404 	movi	r22,16
1104738c:	d8801f17 	ldw	r2,124(sp)
11047390:	b441530e 	bge	r22,r17,110478e0 <___svfprintf_internal_r+0x1734>
11047394:	01044174 	movhi	r4,4357
11047398:	211c2e84 	addi	r4,r4,28858
1104739c:	d9002b15 	stw	r4,172(sp)
110473a0:	070001c4 	movi	fp,7
110473a4:	dd002c17 	ldw	r20,176(sp)
110473a8:	00000306 	br	110473b8 <___svfprintf_internal_r+0x120c>
110473ac:	42000204 	addi	r8,r8,8
110473b0:	8c7ffc04 	addi	r17,r17,-16
110473b4:	b4414d0e 	bge	r22,r17,110478ec <___svfprintf_internal_r+0x1740>
110473b8:	18c00404 	addi	r3,r3,16
110473bc:	10800044 	addi	r2,r2,1
110473c0:	45400015 	stw	r21,0(r8)
110473c4:	45800115 	stw	r22,4(r8)
110473c8:	d8c02015 	stw	r3,128(sp)
110473cc:	d8801f15 	stw	r2,124(sp)
110473d0:	e0bff60e 	bge	fp,r2,110473ac <___svfprintf_internal_r+0x1200>
110473d4:	d9801e04 	addi	r6,sp,120
110473d8:	a00b883a 	mov	r5,r20
110473dc:	9809883a 	mov	r4,r19
110473e0:	104f9a80 	call	1104f9a8 <__ssprint_r>
110473e4:	103c561e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
110473e8:	d8c02017 	ldw	r3,128(sp)
110473ec:	d8801f17 	ldw	r2,124(sp)
110473f0:	da000404 	addi	r8,sp,16
110473f4:	003fee06 	br	110473b0 <___svfprintf_internal_r+0x1204>
110473f8:	d9402c17 	ldw	r5,176(sp)
110473fc:	d9801e04 	addi	r6,sp,120
11047400:	9809883a 	mov	r4,r19
11047404:	104f9a80 	call	1104f9a8 <__ssprint_r>
11047408:	103c4d1e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
1104740c:	d8c02017 	ldw	r3,128(sp)
11047410:	df002787 	ldb	fp,158(sp)
11047414:	da000404 	addi	r8,sp,16
11047418:	003d5a06 	br	11046984 <___svfprintf_internal_r+0x7d8>
1104741c:	9080040c 	andi	r2,r18,16
11047420:	10005c26 	beq	r2,zero,11047594 <___svfprintf_internal_r+0x13e8>
11047424:	d9402d17 	ldw	r5,180(sp)
11047428:	d8c02917 	ldw	r3,164(sp)
1104742c:	d8002785 	stb	zero,158(sp)
11047430:	28800104 	addi	r2,r5,4
11047434:	2d000017 	ldw	r20,0(r5)
11047438:	002d883a 	mov	r22,zero
1104743c:	18005e16 	blt	r3,zero,110475b8 <___svfprintf_internal_r+0x140c>
11047440:	00ffdfc4 	movi	r3,-129
11047444:	d8802d15 	stw	r2,180(sp)
11047448:	90e4703a 	and	r18,r18,r3
1104744c:	0039883a 	mov	fp,zero
11047450:	a03dfe26 	beq	r20,zero,11046c4c <___svfprintf_internal_r+0xaa0>
11047454:	00800244 	movi	r2,9
11047458:	153cb336 	bltu	r2,r20,11046728 <___svfprintf_internal_r+0x57c>
1104745c:	a5000c04 	addi	r20,r20,48
11047460:	dc001dc4 	addi	r16,sp,119
11047464:	dd001dc5 	stb	r20,119(sp)
11047468:	d8c02817 	ldw	r3,160(sp)
1104746c:	1c07c83a 	sub	r3,r3,r16
11047470:	d8c02e15 	stw	r3,184(sp)
11047474:	003cf506 	br	1104684c <___svfprintf_internal_r+0x6a0>
11047478:	d8803317 	ldw	r2,204(sp)
1104747c:	143fffc4 	addi	r16,r2,-1
11047480:	043f560e 	bge	zero,r16,110471dc <___svfprintf_internal_r+0x1030>
11047484:	07000404 	movi	fp,16
11047488:	e403530e 	bge	fp,r16,110481d8 <___svfprintf_internal_r+0x202c>
1104748c:	01444174 	movhi	r5,4357
11047490:	295c2e84 	addi	r5,r5,28858
11047494:	d9402b15 	stw	r5,172(sp)
11047498:	01c001c4 	movi	r7,7
1104749c:	dd002c17 	ldw	r20,176(sp)
110474a0:	00000306 	br	110474b0 <___svfprintf_internal_r+0x1304>
110474a4:	843ffc04 	addi	r16,r16,-16
110474a8:	b5800204 	addi	r22,r22,8
110474ac:	e400130e 	bge	fp,r16,110474fc <___svfprintf_internal_r+0x1350>
110474b0:	18c00404 	addi	r3,r3,16
110474b4:	8c400044 	addi	r17,r17,1
110474b8:	b5400015 	stw	r21,0(r22)
110474bc:	b7000115 	stw	fp,4(r22)
110474c0:	d8c02015 	stw	r3,128(sp)
110474c4:	dc401f15 	stw	r17,124(sp)
110474c8:	3c7ff60e 	bge	r7,r17,110474a4 <___svfprintf_internal_r+0x12f8>
110474cc:	d9801e04 	addi	r6,sp,120
110474d0:	a00b883a 	mov	r5,r20
110474d4:	9809883a 	mov	r4,r19
110474d8:	d9c03d15 	stw	r7,244(sp)
110474dc:	104f9a80 	call	1104f9a8 <__ssprint_r>
110474e0:	d9c03d17 	ldw	r7,244(sp)
110474e4:	103c161e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
110474e8:	843ffc04 	addi	r16,r16,-16
110474ec:	d8c02017 	ldw	r3,128(sp)
110474f0:	dc401f17 	ldw	r17,124(sp)
110474f4:	dd800404 	addi	r22,sp,16
110474f8:	e43fed16 	blt	fp,r16,110474b0 <___svfprintf_internal_r+0x1304>
110474fc:	d8802b17 	ldw	r2,172(sp)
11047500:	1c07883a 	add	r3,r3,r16
11047504:	8c400044 	addi	r17,r17,1
11047508:	b0800015 	stw	r2,0(r22)
1104750c:	b4000115 	stw	r16,4(r22)
11047510:	d8c02015 	stw	r3,128(sp)
11047514:	dc401f15 	stw	r17,124(sp)
11047518:	008001c4 	movi	r2,7
1104751c:	147f2e0e 	bge	r2,r17,110471d8 <___svfprintf_internal_r+0x102c>
11047520:	d9402c17 	ldw	r5,176(sp)
11047524:	d9801e04 	addi	r6,sp,120
11047528:	9809883a 	mov	r4,r19
1104752c:	104f9a80 	call	1104f9a8 <__ssprint_r>
11047530:	103c031e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
11047534:	d8c02017 	ldw	r3,128(sp)
11047538:	dc401f17 	ldw	r17,124(sp)
1104753c:	dd800404 	addi	r22,sp,16
11047540:	003f2606 	br	110471dc <___svfprintf_internal_r+0x1030>
11047544:	9080040c 	andi	r2,r18,16
11047548:	1000c326 	beq	r2,zero,11047858 <___svfprintf_internal_r+0x16ac>
1104754c:	d8802d17 	ldw	r2,180(sp)
11047550:	15000017 	ldw	r20,0(r2)
11047554:	10800104 	addi	r2,r2,4
11047558:	d8802d15 	stw	r2,180(sp)
1104755c:	a02dd7fa 	srai	r22,r20,31
11047560:	b005883a 	mov	r2,r22
11047564:	103c680e 	bge	r2,zero,11046708 <___svfprintf_internal_r+0x55c>
11047568:	0529c83a 	sub	r20,zero,r20
1104756c:	a004c03a 	cmpne	r2,r20,zero
11047570:	05adc83a 	sub	r22,zero,r22
11047574:	b0adc83a 	sub	r22,r22,r2
11047578:	d8802917 	ldw	r2,164(sp)
1104757c:	07000b44 	movi	fp,45
11047580:	df002785 	stb	fp,158(sp)
11047584:	10022e16 	blt	r2,zero,11047e40 <___svfprintf_internal_r+0x1c94>
11047588:	00bfdfc4 	movi	r2,-129
1104758c:	90a4703a 	and	r18,r18,r2
11047590:	003c6406 	br	11046724 <___svfprintf_internal_r+0x578>
11047594:	9080100c 	andi	r2,r18,64
11047598:	d8002785 	stb	zero,158(sp)
1104759c:	10012526 	beq	r2,zero,11047a34 <___svfprintf_internal_r+0x1888>
110475a0:	d9002d17 	ldw	r4,180(sp)
110475a4:	d9402917 	ldw	r5,164(sp)
110475a8:	002d883a 	mov	r22,zero
110475ac:	20800104 	addi	r2,r4,4
110475b0:	2500000b 	ldhu	r20,0(r4)
110475b4:	283fa20e 	bge	r5,zero,11047440 <___svfprintf_internal_r+0x1294>
110475b8:	d8802d15 	stw	r2,180(sp)
110475bc:	0039883a 	mov	fp,zero
110475c0:	a584b03a 	or	r2,r20,r22
110475c4:	103c571e 	bne	r2,zero,11046724 <___svfprintf_internal_r+0x578>
110475c8:	00800044 	movi	r2,1
110475cc:	003e5006 	br	11046f10 <___svfprintf_internal_r+0xd64>
110475d0:	d9402c17 	ldw	r5,176(sp)
110475d4:	d9801e04 	addi	r6,sp,120
110475d8:	9809883a 	mov	r4,r19
110475dc:	104f9a80 	call	1104f9a8 <__ssprint_r>
110475e0:	103bd71e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
110475e4:	d8c02017 	ldw	r3,128(sp)
110475e8:	da000404 	addi	r8,sp,16
110475ec:	d9003217 	ldw	r4,200(sp)
110475f0:	d8802617 	ldw	r2,152(sp)
110475f4:	d9403317 	ldw	r5,204(sp)
110475f8:	8123883a 	add	r17,r16,r4
110475fc:	11400216 	blt	r2,r5,11047608 <___svfprintf_internal_r+0x145c>
11047600:	9100004c 	andi	r4,r18,1
11047604:	20000d26 	beq	r4,zero,1104763c <___svfprintf_internal_r+0x1490>
11047608:	d9003817 	ldw	r4,224(sp)
1104760c:	d9403417 	ldw	r5,208(sp)
11047610:	1907883a 	add	r3,r3,r4
11047614:	d9001f17 	ldw	r4,124(sp)
11047618:	41400015 	stw	r5,0(r8)
1104761c:	d9403817 	ldw	r5,224(sp)
11047620:	21000044 	addi	r4,r4,1
11047624:	d8c02015 	stw	r3,128(sp)
11047628:	41400115 	stw	r5,4(r8)
1104762c:	d9001f15 	stw	r4,124(sp)
11047630:	014001c4 	movi	r5,7
11047634:	2901dc16 	blt	r5,r4,11047da8 <___svfprintf_internal_r+0x1bfc>
11047638:	42000204 	addi	r8,r8,8
1104763c:	d9003317 	ldw	r4,204(sp)
11047640:	8121883a 	add	r16,r16,r4
11047644:	2085c83a 	sub	r2,r4,r2
11047648:	8461c83a 	sub	r16,r16,r17
1104764c:	1400010e 	bge	r2,r16,11047654 <___svfprintf_internal_r+0x14a8>
11047650:	1021883a 	mov	r16,r2
11047654:	04000a0e 	bge	zero,r16,11047680 <___svfprintf_internal_r+0x14d4>
11047658:	d9001f17 	ldw	r4,124(sp)
1104765c:	1c07883a 	add	r3,r3,r16
11047660:	44400015 	stw	r17,0(r8)
11047664:	21000044 	addi	r4,r4,1
11047668:	44000115 	stw	r16,4(r8)
1104766c:	d8c02015 	stw	r3,128(sp)
11047670:	d9001f15 	stw	r4,124(sp)
11047674:	014001c4 	movi	r5,7
11047678:	2901e616 	blt	r5,r4,11047e14 <___svfprintf_internal_r+0x1c68>
1104767c:	42000204 	addi	r8,r8,8
11047680:	8001f616 	blt	r16,zero,11047e5c <___svfprintf_internal_r+0x1cb0>
11047684:	1421c83a 	sub	r16,r2,r16
11047688:	043d1c0e 	bge	zero,r16,11046afc <___svfprintf_internal_r+0x950>
1104768c:	04400404 	movi	r17,16
11047690:	d8801f17 	ldw	r2,124(sp)
11047694:	8c3edd0e 	bge	r17,r16,1104720c <___svfprintf_internal_r+0x1060>
11047698:	01444174 	movhi	r5,4357
1104769c:	295c2e84 	addi	r5,r5,28858
110476a0:	d9402b15 	stw	r5,172(sp)
110476a4:	058001c4 	movi	r22,7
110476a8:	dd002c17 	ldw	r20,176(sp)
110476ac:	00000306 	br	110476bc <___svfprintf_internal_r+0x1510>
110476b0:	42000204 	addi	r8,r8,8
110476b4:	843ffc04 	addi	r16,r16,-16
110476b8:	8c3ed70e 	bge	r17,r16,11047218 <___svfprintf_internal_r+0x106c>
110476bc:	18c00404 	addi	r3,r3,16
110476c0:	10800044 	addi	r2,r2,1
110476c4:	45400015 	stw	r21,0(r8)
110476c8:	44400115 	stw	r17,4(r8)
110476cc:	d8c02015 	stw	r3,128(sp)
110476d0:	d8801f15 	stw	r2,124(sp)
110476d4:	b0bff60e 	bge	r22,r2,110476b0 <___svfprintf_internal_r+0x1504>
110476d8:	d9801e04 	addi	r6,sp,120
110476dc:	a00b883a 	mov	r5,r20
110476e0:	9809883a 	mov	r4,r19
110476e4:	104f9a80 	call	1104f9a8 <__ssprint_r>
110476e8:	103b951e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
110476ec:	d8c02017 	ldw	r3,128(sp)
110476f0:	d8801f17 	ldw	r2,124(sp)
110476f4:	da000404 	addi	r8,sp,16
110476f8:	003fee06 	br	110476b4 <___svfprintf_internal_r+0x1508>
110476fc:	9088703a 	and	r4,r18,r2
11047700:	203e8d1e 	bne	r4,zero,11047138 <___svfprintf_internal_r+0xf8c>
11047704:	dc401f17 	ldw	r17,124(sp)
11047708:	40800115 	stw	r2,4(r8)
1104770c:	44000015 	stw	r16,0(r8)
11047710:	8c400044 	addi	r17,r17,1
11047714:	d8c02015 	stw	r3,128(sp)
11047718:	dc401f15 	stw	r17,124(sp)
1104771c:	008001c4 	movi	r2,7
11047720:	147f7f16 	blt	r2,r17,11047520 <___svfprintf_internal_r+0x1374>
11047724:	45800204 	addi	r22,r8,8
11047728:	003eac06 	br	110471dc <___svfprintf_internal_r+0x1030>
1104772c:	d9402c17 	ldw	r5,176(sp)
11047730:	d9801e04 	addi	r6,sp,120
11047734:	9809883a 	mov	r4,r19
11047738:	104f9a80 	call	1104f9a8 <__ssprint_r>
1104773c:	103b801e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
11047740:	d8c02017 	ldw	r3,128(sp)
11047744:	dc401f17 	ldw	r17,124(sp)
11047748:	da000404 	addi	r8,sp,16
1104774c:	003e8406 	br	11047160 <___svfprintf_internal_r+0xfb4>
11047750:	d9402c17 	ldw	r5,176(sp)
11047754:	d9801e04 	addi	r6,sp,120
11047758:	9809883a 	mov	r4,r19
1104775c:	104f9a80 	call	1104f9a8 <__ssprint_r>
11047760:	103b771e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
11047764:	d8c02017 	ldw	r3,128(sp)
11047768:	dc401f17 	ldw	r17,124(sp)
1104776c:	dd800404 	addi	r22,sp,16
11047770:	003e8606 	br	1104718c <___svfprintf_internal_r+0xfe0>
11047774:	0029883a 	mov	r20,zero
11047778:	a5000c04 	addi	r20,r20,48
1104777c:	dc001dc4 	addi	r16,sp,119
11047780:	dd001dc5 	stb	r20,119(sp)
11047784:	003f3806 	br	11047468 <___svfprintf_internal_r+0x12bc>
11047788:	d9402c17 	ldw	r5,176(sp)
1104778c:	d9801e04 	addi	r6,sp,120
11047790:	9809883a 	mov	r4,r19
11047794:	104f9a80 	call	1104f9a8 <__ssprint_r>
11047798:	103b691e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
1104779c:	d8c02017 	ldw	r3,128(sp)
110477a0:	da000404 	addi	r8,sp,16
110477a4:	003c9506 	br	110469fc <___svfprintf_internal_r+0x850>
110477a8:	d9003617 	ldw	r4,216(sp)
110477ac:	d9403717 	ldw	r5,220(sp)
110477b0:	da003e15 	stw	r8,248(sp)
110477b4:	104f6c80 	call	1104f6c8 <__fpclassifyd>
110477b8:	da003e17 	ldw	r8,248(sp)
110477bc:	1000bd1e 	bne	r2,zero,11047ab4 <___svfprintf_internal_r+0x1908>
110477c0:	008011c4 	movi	r2,71
110477c4:	14411e0e 	bge	r2,r17,11047c40 <___svfprintf_internal_r+0x1a94>
110477c8:	04044174 	movhi	r16,4357
110477cc:	841c2104 	addi	r16,r16,28804
110477d0:	00c000c4 	movi	r3,3
110477d4:	00bfdfc4 	movi	r2,-129
110477d8:	d8c02a15 	stw	r3,168(sp)
110477dc:	90a4703a 	and	r18,r18,r2
110477e0:	df002783 	ldbu	fp,158(sp)
110477e4:	d8c02e15 	stw	r3,184(sp)
110477e8:	d8002915 	stw	zero,164(sp)
110477ec:	d8003215 	stw	zero,200(sp)
110477f0:	003c1c06 	br	11046864 <___svfprintf_internal_r+0x6b8>
110477f4:	9080100c 	andi	r2,r18,64
110477f8:	d8002785 	stb	zero,158(sp)
110477fc:	10009426 	beq	r2,zero,11047a50 <___svfprintf_internal_r+0x18a4>
11047800:	d8c02d17 	ldw	r3,180(sp)
11047804:	d9002917 	ldw	r4,164(sp)
11047808:	002d883a 	mov	r22,zero
1104780c:	18800104 	addi	r2,r3,4
11047810:	1d00000b 	ldhu	r20,0(r3)
11047814:	203ec10e 	bge	r4,zero,1104731c <___svfprintf_internal_r+0x1170>
11047818:	a586b03a 	or	r3,r20,r22
1104781c:	d8802d15 	stw	r2,180(sp)
11047820:	183ec21e 	bne	r3,zero,1104732c <___svfprintf_internal_r+0x1180>
11047824:	0039883a 	mov	fp,zero
11047828:	0005883a 	mov	r2,zero
1104782c:	003db806 	br	11046f10 <___svfprintf_internal_r+0xd64>
11047830:	d8802d17 	ldw	r2,180(sp)
11047834:	d8c02d17 	ldw	r3,180(sp)
11047838:	d9002d17 	ldw	r4,180(sp)
1104783c:	10800017 	ldw	r2,0(r2)
11047840:	18c00117 	ldw	r3,4(r3)
11047844:	21000204 	addi	r4,r4,8
11047848:	d8803615 	stw	r2,216(sp)
1104784c:	d8c03715 	stw	r3,220(sp)
11047850:	d9002d15 	stw	r4,180(sp)
11047854:	003b8206 	br	11046660 <___svfprintf_internal_r+0x4b4>
11047858:	9080100c 	andi	r2,r18,64
1104785c:	10010726 	beq	r2,zero,11047c7c <___svfprintf_internal_r+0x1ad0>
11047860:	d8c02d17 	ldw	r3,180(sp)
11047864:	1d00000f 	ldh	r20,0(r3)
11047868:	18c00104 	addi	r3,r3,4
1104786c:	d8c02d15 	stw	r3,180(sp)
11047870:	a02dd7fa 	srai	r22,r20,31
11047874:	b005883a 	mov	r2,r22
11047878:	003ba206 	br	11046704 <___svfprintf_internal_r+0x558>
1104787c:	9080100c 	andi	r2,r18,64
11047880:	10010526 	beq	r2,zero,11047c98 <___svfprintf_internal_r+0x1aec>
11047884:	d9002d17 	ldw	r4,180(sp)
11047888:	002d883a 	mov	r22,zero
1104788c:	2500000b 	ldhu	r20,0(r4)
11047890:	21000104 	addi	r4,r4,4
11047894:	d9002d15 	stw	r4,180(sp)
11047898:	003cfe06 	br	11046c94 <___svfprintf_internal_r+0xae8>
1104789c:	bc400007 	ldb	r17,0(r23)
110478a0:	003a9606 	br	110462fc <___svfprintf_internal_r+0x150>
110478a4:	9080040c 	andi	r2,r18,16
110478a8:	10010126 	beq	r2,zero,11047cb0 <___svfprintf_internal_r+0x1b04>
110478ac:	d9402d17 	ldw	r5,180(sp)
110478b0:	d8c02f17 	ldw	r3,188(sp)
110478b4:	28800017 	ldw	r2,0(r5)
110478b8:	29400104 	addi	r5,r5,4
110478bc:	d9402d15 	stw	r5,180(sp)
110478c0:	10c00015 	stw	r3,0(r2)
110478c4:	003a6406 	br	11046258 <___svfprintf_internal_r+0xac>
110478c8:	d9002917 	ldw	r4,164(sp)
110478cc:	d8002785 	stb	zero,158(sp)
110478d0:	203d8d16 	blt	r4,zero,11046f08 <___svfprintf_internal_r+0xd5c>
110478d4:	00bfdfc4 	movi	r2,-129
110478d8:	90a4703a 	and	r18,r18,r2
110478dc:	003b0506 	br	110464f4 <___svfprintf_internal_r+0x348>
110478e0:	01444174 	movhi	r5,4357
110478e4:	295c2e84 	addi	r5,r5,28858
110478e8:	d9402b15 	stw	r5,172(sp)
110478ec:	d9402b17 	ldw	r5,172(sp)
110478f0:	1c47883a 	add	r3,r3,r17
110478f4:	10800044 	addi	r2,r2,1
110478f8:	41400015 	stw	r5,0(r8)
110478fc:	44400115 	stw	r17,4(r8)
11047900:	d8c02015 	stw	r3,128(sp)
11047904:	d8801f15 	stw	r2,124(sp)
11047908:	010001c4 	movi	r4,7
1104790c:	20bf3016 	blt	r4,r2,110475d0 <___svfprintf_internal_r+0x1424>
11047910:	42000204 	addi	r8,r8,8
11047914:	003f3506 	br	110475ec <___svfprintf_internal_r+0x1440>
11047918:	01044174 	movhi	r4,4357
1104791c:	211c2e84 	addi	r4,r4,28858
11047920:	d9002b15 	stw	r4,172(sp)
11047924:	003c5e06 	br	11046aa0 <___svfprintf_internal_r+0x8f4>
11047928:	d9402c17 	ldw	r5,176(sp)
1104792c:	d9801e04 	addi	r6,sp,120
11047930:	9809883a 	mov	r4,r19
11047934:	104f9a80 	call	1104f9a8 <__ssprint_r>
11047938:	103b011e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
1104793c:	d8c02017 	ldw	r3,128(sp)
11047940:	da000404 	addi	r8,sp,16
11047944:	003d9306 	br	11046f94 <___svfprintf_internal_r+0xde8>
11047948:	d8801f17 	ldw	r2,124(sp)
1104794c:	01444174 	movhi	r5,4357
11047950:	01000044 	movi	r4,1
11047954:	18c00044 	addi	r3,r3,1
11047958:	10800044 	addi	r2,r2,1
1104795c:	295c2e04 	addi	r5,r5,28856
11047960:	41000115 	stw	r4,4(r8)
11047964:	41400015 	stw	r5,0(r8)
11047968:	d8c02015 	stw	r3,128(sp)
1104796c:	d8801f15 	stw	r2,124(sp)
11047970:	010001c4 	movi	r4,7
11047974:	2080b516 	blt	r4,r2,11047c4c <___svfprintf_internal_r+0x1aa0>
11047978:	42000204 	addi	r8,r8,8
1104797c:	8800041e 	bne	r17,zero,11047990 <___svfprintf_internal_r+0x17e4>
11047980:	d8803317 	ldw	r2,204(sp)
11047984:	1000021e 	bne	r2,zero,11047990 <___svfprintf_internal_r+0x17e4>
11047988:	9080004c 	andi	r2,r18,1
1104798c:	103c5b26 	beq	r2,zero,11046afc <___svfprintf_internal_r+0x950>
11047990:	d9003817 	ldw	r4,224(sp)
11047994:	d8801f17 	ldw	r2,124(sp)
11047998:	d9403417 	ldw	r5,208(sp)
1104799c:	20c7883a 	add	r3,r4,r3
110479a0:	10800044 	addi	r2,r2,1
110479a4:	41000115 	stw	r4,4(r8)
110479a8:	41400015 	stw	r5,0(r8)
110479ac:	d8c02015 	stw	r3,128(sp)
110479b0:	d8801f15 	stw	r2,124(sp)
110479b4:	010001c4 	movi	r4,7
110479b8:	20818016 	blt	r4,r2,11047fbc <___svfprintf_internal_r+0x1e10>
110479bc:	42000204 	addi	r8,r8,8
110479c0:	0463c83a 	sub	r17,zero,r17
110479c4:	0440cb0e 	bge	zero,r17,11047cf4 <___svfprintf_internal_r+0x1b48>
110479c8:	05800404 	movi	r22,16
110479cc:	b440e80e 	bge	r22,r17,11047d70 <___svfprintf_internal_r+0x1bc4>
110479d0:	01444174 	movhi	r5,4357
110479d4:	295c2e84 	addi	r5,r5,28858
110479d8:	d9402b15 	stw	r5,172(sp)
110479dc:	070001c4 	movi	fp,7
110479e0:	dd002c17 	ldw	r20,176(sp)
110479e4:	00000306 	br	110479f4 <___svfprintf_internal_r+0x1848>
110479e8:	42000204 	addi	r8,r8,8
110479ec:	8c7ffc04 	addi	r17,r17,-16
110479f0:	b440e20e 	bge	r22,r17,11047d7c <___svfprintf_internal_r+0x1bd0>
110479f4:	18c00404 	addi	r3,r3,16
110479f8:	10800044 	addi	r2,r2,1
110479fc:	45400015 	stw	r21,0(r8)
11047a00:	45800115 	stw	r22,4(r8)
11047a04:	d8c02015 	stw	r3,128(sp)
11047a08:	d8801f15 	stw	r2,124(sp)
11047a0c:	e0bff60e 	bge	fp,r2,110479e8 <___svfprintf_internal_r+0x183c>
11047a10:	d9801e04 	addi	r6,sp,120
11047a14:	a00b883a 	mov	r5,r20
11047a18:	9809883a 	mov	r4,r19
11047a1c:	104f9a80 	call	1104f9a8 <__ssprint_r>
11047a20:	103ac71e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
11047a24:	d8c02017 	ldw	r3,128(sp)
11047a28:	d8801f17 	ldw	r2,124(sp)
11047a2c:	da000404 	addi	r8,sp,16
11047a30:	003fee06 	br	110479ec <___svfprintf_internal_r+0x1840>
11047a34:	d8c02d17 	ldw	r3,180(sp)
11047a38:	d9002917 	ldw	r4,164(sp)
11047a3c:	002d883a 	mov	r22,zero
11047a40:	18800104 	addi	r2,r3,4
11047a44:	1d000017 	ldw	r20,0(r3)
11047a48:	203e7d0e 	bge	r4,zero,11047440 <___svfprintf_internal_r+0x1294>
11047a4c:	003eda06 	br	110475b8 <___svfprintf_internal_r+0x140c>
11047a50:	d9402d17 	ldw	r5,180(sp)
11047a54:	d8c02917 	ldw	r3,164(sp)
11047a58:	002d883a 	mov	r22,zero
11047a5c:	28800104 	addi	r2,r5,4
11047a60:	2d000017 	ldw	r20,0(r5)
11047a64:	183e2d0e 	bge	r3,zero,1104731c <___svfprintf_internal_r+0x1170>
11047a68:	003f6b06 	br	11047818 <___svfprintf_internal_r+0x166c>
11047a6c:	d8c02d15 	stw	r3,180(sp)
11047a70:	0039883a 	mov	fp,zero
11047a74:	003ed206 	br	110475c0 <___svfprintf_internal_r+0x1414>
11047a78:	bc400043 	ldbu	r17,1(r23)
11047a7c:	94800814 	ori	r18,r18,32
11047a80:	bdc00044 	addi	r23,r23,1
11047a84:	8c403fcc 	andi	r17,r17,255
11047a88:	8c40201c 	xori	r17,r17,128
11047a8c:	8c7fe004 	addi	r17,r17,-128
11047a90:	003a1a06 	br	110462fc <___svfprintf_internal_r+0x150>
11047a94:	d9402c17 	ldw	r5,176(sp)
11047a98:	d9801e04 	addi	r6,sp,120
11047a9c:	9809883a 	mov	r4,r19
11047aa0:	104f9a80 	call	1104f9a8 <__ssprint_r>
11047aa4:	103aa61e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
11047aa8:	d8c02017 	ldw	r3,128(sp)
11047aac:	da000404 	addi	r8,sp,16
11047ab0:	003d4a06 	br	11046fdc <___svfprintf_internal_r+0xe30>
11047ab4:	d9002917 	ldw	r4,164(sp)
11047ab8:	05bff7c4 	movi	r22,-33
11047abc:	00bfffc4 	movi	r2,-1
11047ac0:	8dac703a 	and	r22,r17,r22
11047ac4:	20806a26 	beq	r4,r2,11047c70 <___svfprintf_internal_r+0x1ac4>
11047ac8:	008011c4 	movi	r2,71
11047acc:	b0813726 	beq	r22,r2,11047fac <___svfprintf_internal_r+0x1e00>
11047ad0:	d9003717 	ldw	r4,220(sp)
11047ad4:	90c04014 	ori	r3,r18,256
11047ad8:	d8c02b15 	stw	r3,172(sp)
11047adc:	20015d16 	blt	r4,zero,11048054 <___svfprintf_internal_r+0x1ea8>
11047ae0:	dd003717 	ldw	r20,220(sp)
11047ae4:	d8002a05 	stb	zero,168(sp)
11047ae8:	00801984 	movi	r2,102
11047aec:	88814026 	beq	r17,r2,11047ff0 <___svfprintf_internal_r+0x1e44>
11047af0:	00801184 	movi	r2,70
11047af4:	88817126 	beq	r17,r2,110480bc <___svfprintf_internal_r+0x1f10>
11047af8:	00801144 	movi	r2,69
11047afc:	b0816226 	beq	r22,r2,11048088 <___svfprintf_internal_r+0x1edc>
11047b00:	d8c02917 	ldw	r3,164(sp)
11047b04:	d8802104 	addi	r2,sp,132
11047b08:	d8800315 	stw	r2,12(sp)
11047b0c:	d9403617 	ldw	r5,216(sp)
11047b10:	d8802504 	addi	r2,sp,148
11047b14:	d8800215 	stw	r2,8(sp)
11047b18:	d8802604 	addi	r2,sp,152
11047b1c:	d8c00015 	stw	r3,0(sp)
11047b20:	d8800115 	stw	r2,4(sp)
11047b24:	01c00084 	movi	r7,2
11047b28:	a00d883a 	mov	r6,r20
11047b2c:	9809883a 	mov	r4,r19
11047b30:	d8c03d15 	stw	r3,244(sp)
11047b34:	da003e15 	stw	r8,248(sp)
11047b38:	104aacc0 	call	1104aacc <_dtoa_r>
11047b3c:	1021883a 	mov	r16,r2
11047b40:	008019c4 	movi	r2,103
11047b44:	d8c03d17 	ldw	r3,244(sp)
11047b48:	da003e17 	ldw	r8,248(sp)
11047b4c:	8880e726 	beq	r17,r2,11047eec <___svfprintf_internal_r+0x1d40>
11047b50:	008011c4 	movi	r2,71
11047b54:	8880d426 	beq	r17,r2,11047ea8 <___svfprintf_internal_r+0x1cfc>
11047b58:	80f9883a 	add	fp,r16,r3
11047b5c:	d9003617 	ldw	r4,216(sp)
11047b60:	000d883a 	mov	r6,zero
11047b64:	000f883a 	mov	r7,zero
11047b68:	a00b883a 	mov	r5,r20
11047b6c:	da003e15 	stw	r8,248(sp)
11047b70:	1044bd80 	call	11044bd8 <__eqdf2>
11047b74:	da003e17 	ldw	r8,248(sp)
11047b78:	1000e426 	beq	r2,zero,11047f0c <___svfprintf_internal_r+0x1d60>
11047b7c:	d8802117 	ldw	r2,132(sp)
11047b80:	1700062e 	bgeu	r2,fp,11047b9c <___svfprintf_internal_r+0x19f0>
11047b84:	01000c04 	movi	r4,48
11047b88:	10c00044 	addi	r3,r2,1
11047b8c:	d8c02115 	stw	r3,132(sp)
11047b90:	11000005 	stb	r4,0(r2)
11047b94:	d8802117 	ldw	r2,132(sp)
11047b98:	173ffb36 	bltu	r2,fp,11047b88 <___svfprintf_internal_r+0x19dc>
11047b9c:	1405c83a 	sub	r2,r2,r16
11047ba0:	d8803315 	stw	r2,204(sp)
11047ba4:	008011c4 	movi	r2,71
11047ba8:	b080c526 	beq	r22,r2,11047ec0 <___svfprintf_internal_r+0x1d14>
11047bac:	00801944 	movi	r2,101
11047bb0:	1441d90e 	bge	r2,r17,11048318 <___svfprintf_internal_r+0x216c>
11047bb4:	d8c02617 	ldw	r3,152(sp)
11047bb8:	00801984 	movi	r2,102
11047bbc:	d8c03215 	stw	r3,200(sp)
11047bc0:	88813426 	beq	r17,r2,11048094 <___svfprintf_internal_r+0x1ee8>
11047bc4:	d8c03217 	ldw	r3,200(sp)
11047bc8:	d9003317 	ldw	r4,204(sp)
11047bcc:	19012516 	blt	r3,r4,11048064 <___svfprintf_internal_r+0x1eb8>
11047bd0:	9480004c 	andi	r18,r18,1
11047bd4:	9001841e 	bne	r18,zero,110481e8 <___svfprintf_internal_r+0x203c>
11047bd8:	1805883a 	mov	r2,r3
11047bdc:	1801cc16 	blt	r3,zero,11048310 <___svfprintf_internal_r+0x2164>
11047be0:	d8c03217 	ldw	r3,200(sp)
11047be4:	044019c4 	movi	r17,103
11047be8:	d8c02e15 	stw	r3,184(sp)
11047bec:	df002a07 	ldb	fp,168(sp)
11047bf0:	e000a61e 	bne	fp,zero,11047e8c <___svfprintf_internal_r+0x1ce0>
11047bf4:	df002783 	ldbu	fp,158(sp)
11047bf8:	d8802a15 	stw	r2,168(sp)
11047bfc:	dc802b17 	ldw	r18,172(sp)
11047c00:	d8002915 	stw	zero,164(sp)
11047c04:	003b1706 	br	11046864 <___svfprintf_internal_r+0x6b8>
11047c08:	04044174 	movhi	r16,4357
11047c0c:	841c1e04 	addi	r16,r16,28792
11047c10:	003aa606 	br	110466ac <___svfprintf_internal_r+0x500>
11047c14:	d9003917 	ldw	r4,228(sp)
11047c18:	04001004 	movi	r16,64
11047c1c:	800b883a 	mov	r5,r16
11047c20:	104d4ac0 	call	1104d4ac <_malloc_r>
11047c24:	d9002c17 	ldw	r4,176(sp)
11047c28:	20800015 	stw	r2,0(r4)
11047c2c:	20800415 	stw	r2,16(r4)
11047c30:	1001cb26 	beq	r2,zero,11048360 <___svfprintf_internal_r+0x21b4>
11047c34:	d8802c17 	ldw	r2,176(sp)
11047c38:	14000515 	stw	r16,20(r2)
11047c3c:	00397606 	br	11046218 <___svfprintf_internal_r+0x6c>
11047c40:	04044174 	movhi	r16,4357
11047c44:	841c2004 	addi	r16,r16,28800
11047c48:	003ee106 	br	110477d0 <___svfprintf_internal_r+0x1624>
11047c4c:	d9402c17 	ldw	r5,176(sp)
11047c50:	d9801e04 	addi	r6,sp,120
11047c54:	9809883a 	mov	r4,r19
11047c58:	104f9a80 	call	1104f9a8 <__ssprint_r>
11047c5c:	103a381e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
11047c60:	dc402617 	ldw	r17,152(sp)
11047c64:	d8c02017 	ldw	r3,128(sp)
11047c68:	da000404 	addi	r8,sp,16
11047c6c:	003f4306 	br	1104797c <___svfprintf_internal_r+0x17d0>
11047c70:	01400184 	movi	r5,6
11047c74:	d9402915 	stw	r5,164(sp)
11047c78:	003f9506 	br	11047ad0 <___svfprintf_internal_r+0x1924>
11047c7c:	d9002d17 	ldw	r4,180(sp)
11047c80:	25000017 	ldw	r20,0(r4)
11047c84:	21000104 	addi	r4,r4,4
11047c88:	d9002d15 	stw	r4,180(sp)
11047c8c:	a02dd7fa 	srai	r22,r20,31
11047c90:	b005883a 	mov	r2,r22
11047c94:	003a9b06 	br	11046704 <___svfprintf_internal_r+0x558>
11047c98:	d9402d17 	ldw	r5,180(sp)
11047c9c:	002d883a 	mov	r22,zero
11047ca0:	2d000017 	ldw	r20,0(r5)
11047ca4:	29400104 	addi	r5,r5,4
11047ca8:	d9402d15 	stw	r5,180(sp)
11047cac:	003bf906 	br	11046c94 <___svfprintf_internal_r+0xae8>
11047cb0:	9480100c 	andi	r18,r18,64
11047cb4:	90006e26 	beq	r18,zero,11047e70 <___svfprintf_internal_r+0x1cc4>
11047cb8:	d9002d17 	ldw	r4,180(sp)
11047cbc:	d9402f17 	ldw	r5,188(sp)
11047cc0:	20800017 	ldw	r2,0(r4)
11047cc4:	21000104 	addi	r4,r4,4
11047cc8:	d9002d15 	stw	r4,180(sp)
11047ccc:	1140000d 	sth	r5,0(r2)
11047cd0:	00396106 	br	11046258 <___svfprintf_internal_r+0xac>
11047cd4:	d9402c17 	ldw	r5,176(sp)
11047cd8:	d9801e04 	addi	r6,sp,120
11047cdc:	9809883a 	mov	r4,r19
11047ce0:	104f9a80 	call	1104f9a8 <__ssprint_r>
11047ce4:	103a161e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
11047ce8:	d8c02017 	ldw	r3,128(sp)
11047cec:	d8801f17 	ldw	r2,124(sp)
11047cf0:	da000404 	addi	r8,sp,16
11047cf4:	d9403317 	ldw	r5,204(sp)
11047cf8:	10800044 	addi	r2,r2,1
11047cfc:	44000015 	stw	r16,0(r8)
11047d00:	28c7883a 	add	r3,r5,r3
11047d04:	003b7706 	br	11046ae4 <___svfprintf_internal_r+0x938>
11047d08:	8009883a 	mov	r4,r16
11047d0c:	da003e15 	stw	r8,248(sp)
11047d10:	10461140 	call	11046114 <strlen>
11047d14:	d8802e15 	stw	r2,184(sp)
11047d18:	da003e17 	ldw	r8,248(sp)
11047d1c:	103c280e 	bge	r2,zero,11046dc0 <___svfprintf_internal_r+0xc14>
11047d20:	0005883a 	mov	r2,zero
11047d24:	003c2606 	br	11046dc0 <___svfprintf_internal_r+0xc14>
11047d28:	00bfffc4 	movi	r2,-1
11047d2c:	003a0906 	br	11046554 <___svfprintf_internal_r+0x3a8>
11047d30:	01044174 	movhi	r4,4357
11047d34:	211c3284 	addi	r4,r4,28874
11047d38:	d9003515 	stw	r4,212(sp)
11047d3c:	003b0606 	br	11046958 <___svfprintf_internal_r+0x7ac>
11047d40:	013fffc4 	movi	r4,-1
11047d44:	003a2706 	br	110465e4 <___svfprintf_internal_r+0x438>
11047d48:	d9402c17 	ldw	r5,176(sp)
11047d4c:	d9801e04 	addi	r6,sp,120
11047d50:	9809883a 	mov	r4,r19
11047d54:	104f9a80 	call	1104f9a8 <__ssprint_r>
11047d58:	1039f91e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
11047d5c:	d8c02017 	ldw	r3,128(sp)
11047d60:	da000404 	addi	r8,sp,16
11047d64:	003d8406 	br	11047378 <___svfprintf_internal_r+0x11cc>
11047d68:	0023883a 	mov	r17,zero
11047d6c:	003d8306 	br	1104737c <___svfprintf_internal_r+0x11d0>
11047d70:	01044174 	movhi	r4,4357
11047d74:	211c2e84 	addi	r4,r4,28858
11047d78:	d9002b15 	stw	r4,172(sp)
11047d7c:	d9002b17 	ldw	r4,172(sp)
11047d80:	1c47883a 	add	r3,r3,r17
11047d84:	10800044 	addi	r2,r2,1
11047d88:	41000015 	stw	r4,0(r8)
11047d8c:	44400115 	stw	r17,4(r8)
11047d90:	d8c02015 	stw	r3,128(sp)
11047d94:	d8801f15 	stw	r2,124(sp)
11047d98:	010001c4 	movi	r4,7
11047d9c:	20bfcd16 	blt	r4,r2,11047cd4 <___svfprintf_internal_r+0x1b28>
11047da0:	42000204 	addi	r8,r8,8
11047da4:	003fd306 	br	11047cf4 <___svfprintf_internal_r+0x1b48>
11047da8:	d9402c17 	ldw	r5,176(sp)
11047dac:	d9801e04 	addi	r6,sp,120
11047db0:	9809883a 	mov	r4,r19
11047db4:	104f9a80 	call	1104f9a8 <__ssprint_r>
11047db8:	1039e11e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
11047dbc:	d8802617 	ldw	r2,152(sp)
11047dc0:	d8c02017 	ldw	r3,128(sp)
11047dc4:	da000404 	addi	r8,sp,16
11047dc8:	003e1c06 	br	1104763c <___svfprintf_internal_r+0x1490>
11047dcc:	d8802917 	ldw	r2,164(sp)
11047dd0:	00c00184 	movi	r3,6
11047dd4:	1880012e 	bgeu	r3,r2,11047ddc <___svfprintf_internal_r+0x1c30>
11047dd8:	1805883a 	mov	r2,r3
11047ddc:	d8802e15 	stw	r2,184(sp)
11047de0:	1000f316 	blt	r2,zero,110481b0 <___svfprintf_internal_r+0x2004>
11047de4:	04044174 	movhi	r16,4357
11047de8:	d8802a15 	stw	r2,168(sp)
11047dec:	dd002d15 	stw	r20,180(sp)
11047df0:	d8002915 	stw	zero,164(sp)
11047df4:	d8003215 	stw	zero,200(sp)
11047df8:	841c2c04 	addi	r16,r16,28848
11047dfc:	0039883a 	mov	fp,zero
11047e00:	003a9f06 	br	11046880 <___svfprintf_internal_r+0x6d4>
11047e04:	01044174 	movhi	r4,4357
11047e08:	211c3284 	addi	r4,r4,28874
11047e0c:	d9003515 	stw	r4,212(sp)
11047e10:	003b5f06 	br	11046b90 <___svfprintf_internal_r+0x9e4>
11047e14:	d9402c17 	ldw	r5,176(sp)
11047e18:	d9801e04 	addi	r6,sp,120
11047e1c:	9809883a 	mov	r4,r19
11047e20:	104f9a80 	call	1104f9a8 <__ssprint_r>
11047e24:	1039c61e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
11047e28:	d8802617 	ldw	r2,152(sp)
11047e2c:	d9403317 	ldw	r5,204(sp)
11047e30:	d8c02017 	ldw	r3,128(sp)
11047e34:	da000404 	addi	r8,sp,16
11047e38:	2885c83a 	sub	r2,r5,r2
11047e3c:	003e1006 	br	11047680 <___svfprintf_internal_r+0x14d4>
11047e40:	00800044 	movi	r2,1
11047e44:	10803fcc 	andi	r2,r2,255
11047e48:	00c00044 	movi	r3,1
11047e4c:	10fa3526 	beq	r2,r3,11046724 <___svfprintf_internal_r+0x578>
11047e50:	00c00084 	movi	r3,2
11047e54:	10fb9e26 	beq	r2,r3,11046cd0 <___svfprintf_internal_r+0xb24>
11047e58:	003a6406 	br	110467ec <___svfprintf_internal_r+0x640>
11047e5c:	0021883a 	mov	r16,zero
11047e60:	003e0806 	br	11047684 <___svfprintf_internal_r+0x14d8>
11047e64:	07000b44 	movi	fp,45
11047e68:	df002785 	stb	fp,158(sp)
11047e6c:	003a0b06 	br	1104669c <___svfprintf_internal_r+0x4f0>
11047e70:	d8c02d17 	ldw	r3,180(sp)
11047e74:	d9002f17 	ldw	r4,188(sp)
11047e78:	18800017 	ldw	r2,0(r3)
11047e7c:	18c00104 	addi	r3,r3,4
11047e80:	d8c02d15 	stw	r3,180(sp)
11047e84:	11000015 	stw	r4,0(r2)
11047e88:	0038f306 	br	11046258 <___svfprintf_internal_r+0xac>
11047e8c:	00c00b44 	movi	r3,45
11047e90:	d8c02785 	stb	r3,158(sp)
11047e94:	d8802a15 	stw	r2,168(sp)
11047e98:	dc802b17 	ldw	r18,172(sp)
11047e9c:	d8002915 	stw	zero,164(sp)
11047ea0:	07000b44 	movi	fp,45
11047ea4:	003a7306 	br	11046874 <___svfprintf_internal_r+0x6c8>
11047ea8:	9080004c 	andi	r2,r18,1
11047eac:	1000941e 	bne	r2,zero,11048100 <___svfprintf_internal_r+0x1f54>
11047eb0:	d8802117 	ldw	r2,132(sp)
11047eb4:	1405c83a 	sub	r2,r2,r16
11047eb8:	d8803315 	stw	r2,204(sp)
11047ebc:	b441161e 	bne	r22,r17,11048318 <___svfprintf_internal_r+0x216c>
11047ec0:	dd802617 	ldw	r22,152(sp)
11047ec4:	00bfff44 	movi	r2,-3
11047ec8:	b0801a16 	blt	r22,r2,11047f34 <___svfprintf_internal_r+0x1d88>
11047ecc:	d9402917 	ldw	r5,164(sp)
11047ed0:	2d801816 	blt	r5,r22,11047f34 <___svfprintf_internal_r+0x1d88>
11047ed4:	dd803215 	stw	r22,200(sp)
11047ed8:	003f3a06 	br	11047bc4 <___svfprintf_internal_r+0x1a18>
11047edc:	1025883a 	mov	r18,r2
11047ee0:	0039883a 	mov	fp,zero
11047ee4:	00800084 	movi	r2,2
11047ee8:	003fd606 	br	11047e44 <___svfprintf_internal_r+0x1c98>
11047eec:	9080004c 	andi	r2,r18,1
11047ef0:	103f191e 	bne	r2,zero,11047b58 <___svfprintf_internal_r+0x19ac>
11047ef4:	d8802117 	ldw	r2,132(sp)
11047ef8:	003f2806 	br	11047b9c <___svfprintf_internal_r+0x19f0>
11047efc:	01044174 	movhi	r4,4357
11047f00:	211c2e84 	addi	r4,r4,28858
11047f04:	d9002b15 	stw	r4,172(sp)
11047f08:	003c7c06 	br	110470fc <___svfprintf_internal_r+0xf50>
11047f0c:	e005883a 	mov	r2,fp
11047f10:	003f2206 	br	11047b9c <___svfprintf_internal_r+0x19f0>
11047f14:	d9402917 	ldw	r5,164(sp)
11047f18:	df002783 	ldbu	fp,158(sp)
11047f1c:	dd002d15 	stw	r20,180(sp)
11047f20:	d9402a15 	stw	r5,168(sp)
11047f24:	d9402e15 	stw	r5,184(sp)
11047f28:	d8002915 	stw	zero,164(sp)
11047f2c:	d8003215 	stw	zero,200(sp)
11047f30:	003a4c06 	br	11046864 <___svfprintf_internal_r+0x6b8>
11047f34:	8c7fff84 	addi	r17,r17,-2
11047f38:	b5bfffc4 	addi	r22,r22,-1
11047f3c:	dd802615 	stw	r22,152(sp)
11047f40:	dc4022c5 	stb	r17,139(sp)
11047f44:	b000c316 	blt	r22,zero,11048254 <___svfprintf_internal_r+0x20a8>
11047f48:	00800ac4 	movi	r2,43
11047f4c:	d8802305 	stb	r2,140(sp)
11047f50:	00800244 	movi	r2,9
11047f54:	15806e16 	blt	r2,r22,11048110 <___svfprintf_internal_r+0x1f64>
11047f58:	00800c04 	movi	r2,48
11047f5c:	b5800c04 	addi	r22,r22,48
11047f60:	d8802345 	stb	r2,141(sp)
11047f64:	dd802385 	stb	r22,142(sp)
11047f68:	d88023c4 	addi	r2,sp,143
11047f6c:	df0022c4 	addi	fp,sp,139
11047f70:	d8c03317 	ldw	r3,204(sp)
11047f74:	1739c83a 	sub	fp,r2,fp
11047f78:	d9003317 	ldw	r4,204(sp)
11047f7c:	e0c7883a 	add	r3,fp,r3
11047f80:	df003b15 	stw	fp,236(sp)
11047f84:	d8c02e15 	stw	r3,184(sp)
11047f88:	00800044 	movi	r2,1
11047f8c:	1100b70e 	bge	r2,r4,1104826c <___svfprintf_internal_r+0x20c0>
11047f90:	d8c02e17 	ldw	r3,184(sp)
11047f94:	18c00044 	addi	r3,r3,1
11047f98:	d8c02e15 	stw	r3,184(sp)
11047f9c:	1805883a 	mov	r2,r3
11047fa0:	1800b016 	blt	r3,zero,11048264 <___svfprintf_internal_r+0x20b8>
11047fa4:	d8003215 	stw	zero,200(sp)
11047fa8:	003f1006 	br	11047bec <___svfprintf_internal_r+0x1a40>
11047fac:	d8802917 	ldw	r2,164(sp)
11047fb0:	103ec71e 	bne	r2,zero,11047ad0 <___svfprintf_internal_r+0x1924>
11047fb4:	dc002915 	stw	r16,164(sp)
11047fb8:	003ec506 	br	11047ad0 <___svfprintf_internal_r+0x1924>
11047fbc:	d9402c17 	ldw	r5,176(sp)
11047fc0:	d9801e04 	addi	r6,sp,120
11047fc4:	9809883a 	mov	r4,r19
11047fc8:	104f9a80 	call	1104f9a8 <__ssprint_r>
11047fcc:	10395c1e 	bne	r2,zero,11046540 <___svfprintf_internal_r+0x394>
11047fd0:	dc402617 	ldw	r17,152(sp)
11047fd4:	d8c02017 	ldw	r3,128(sp)
11047fd8:	d8801f17 	ldw	r2,124(sp)
11047fdc:	da000404 	addi	r8,sp,16
11047fe0:	003e7706 	br	110479c0 <___svfprintf_internal_r+0x1814>
11047fe4:	582f883a 	mov	r23,r11
11047fe8:	d8002915 	stw	zero,164(sp)
11047fec:	0038c406 	br	11046300 <___svfprintf_internal_r+0x154>
11047ff0:	d8c02917 	ldw	r3,164(sp)
11047ff4:	d8802104 	addi	r2,sp,132
11047ff8:	d8800315 	stw	r2,12(sp)
11047ffc:	d9403617 	ldw	r5,216(sp)
11048000:	d8802504 	addi	r2,sp,148
11048004:	d8800215 	stw	r2,8(sp)
11048008:	d8802604 	addi	r2,sp,152
1104800c:	d8c00015 	stw	r3,0(sp)
11048010:	9809883a 	mov	r4,r19
11048014:	d8800115 	stw	r2,4(sp)
11048018:	01c000c4 	movi	r7,3
1104801c:	a00d883a 	mov	r6,r20
11048020:	da003e15 	stw	r8,248(sp)
11048024:	104aacc0 	call	1104aacc <_dtoa_r>
11048028:	d9002917 	ldw	r4,164(sp)
1104802c:	da003e17 	ldw	r8,248(sp)
11048030:	1021883a 	mov	r16,r2
11048034:	1139883a 	add	fp,r2,r4
11048038:	2007883a 	mov	r3,r4
1104803c:	81000007 	ldb	r4,0(r16)
11048040:	00800c04 	movi	r2,48
11048044:	20806f26 	beq	r4,r2,11048204 <___svfprintf_internal_r+0x2058>
11048048:	d8c02617 	ldw	r3,152(sp)
1104804c:	e0f9883a 	add	fp,fp,r3
11048050:	003ec206 	br	11047b5c <___svfprintf_internal_r+0x19b0>
11048054:	00c00b44 	movi	r3,45
11048058:	2520003c 	xorhi	r20,r4,32768
1104805c:	d8c02a05 	stb	r3,168(sp)
11048060:	003ea106 	br	11047ae8 <___svfprintf_internal_r+0x193c>
11048064:	d8c03217 	ldw	r3,200(sp)
11048068:	00c0890e 	bge	zero,r3,11048290 <___svfprintf_internal_r+0x20e4>
1104806c:	00800044 	movi	r2,1
11048070:	d9003317 	ldw	r4,204(sp)
11048074:	1105883a 	add	r2,r2,r4
11048078:	d8802e15 	stw	r2,184(sp)
1104807c:	10005f16 	blt	r2,zero,110481fc <___svfprintf_internal_r+0x2050>
11048080:	044019c4 	movi	r17,103
11048084:	003ed906 	br	11047bec <___svfprintf_internal_r+0x1a40>
11048088:	d9002917 	ldw	r4,164(sp)
1104808c:	20c00044 	addi	r3,r4,1
11048090:	003e9c06 	br	11047b04 <___svfprintf_internal_r+0x1958>
11048094:	d9002917 	ldw	r4,164(sp)
11048098:	00c0680e 	bge	zero,r3,1104823c <___svfprintf_internal_r+0x2090>
1104809c:	2000461e 	bne	r4,zero,110481b8 <___svfprintf_internal_r+0x200c>
110480a0:	9480004c 	andi	r18,r18,1
110480a4:	9000441e 	bne	r18,zero,110481b8 <___svfprintf_internal_r+0x200c>
110480a8:	1805883a 	mov	r2,r3
110480ac:	1800a016 	blt	r3,zero,11048330 <___svfprintf_internal_r+0x2184>
110480b0:	d8c03217 	ldw	r3,200(sp)
110480b4:	d8c02e15 	stw	r3,184(sp)
110480b8:	003ecc06 	br	11047bec <___svfprintf_internal_r+0x1a40>
110480bc:	d9402917 	ldw	r5,164(sp)
110480c0:	d8802104 	addi	r2,sp,132
110480c4:	d8800315 	stw	r2,12(sp)
110480c8:	d9400015 	stw	r5,0(sp)
110480cc:	d8802504 	addi	r2,sp,148
110480d0:	d9403617 	ldw	r5,216(sp)
110480d4:	d8800215 	stw	r2,8(sp)
110480d8:	d8802604 	addi	r2,sp,152
110480dc:	d8800115 	stw	r2,4(sp)
110480e0:	01c000c4 	movi	r7,3
110480e4:	a00d883a 	mov	r6,r20
110480e8:	9809883a 	mov	r4,r19
110480ec:	da003e15 	stw	r8,248(sp)
110480f0:	104aacc0 	call	1104aacc <_dtoa_r>
110480f4:	d8c02917 	ldw	r3,164(sp)
110480f8:	da003e17 	ldw	r8,248(sp)
110480fc:	1021883a 	mov	r16,r2
11048100:	00801184 	movi	r2,70
11048104:	80f9883a 	add	fp,r16,r3
11048108:	88bfcc26 	beq	r17,r2,1104803c <___svfprintf_internal_r+0x1e90>
1104810c:	003e9306 	br	11047b5c <___svfprintf_internal_r+0x19b0>
11048110:	df0022c4 	addi	fp,sp,139
11048114:	dc002915 	stw	r16,164(sp)
11048118:	9829883a 	mov	r20,r19
1104811c:	e021883a 	mov	r16,fp
11048120:	4027883a 	mov	r19,r8
11048124:	b009883a 	mov	r4,r22
11048128:	01400284 	movi	r5,10
1104812c:	10441fc0 	call	110441fc <__modsi3>
11048130:	10800c04 	addi	r2,r2,48
11048134:	843fffc4 	addi	r16,r16,-1
11048138:	b009883a 	mov	r4,r22
1104813c:	01400284 	movi	r5,10
11048140:	80800005 	stb	r2,0(r16)
11048144:	10441780 	call	11044178 <__divsi3>
11048148:	102d883a 	mov	r22,r2
1104814c:	00800244 	movi	r2,9
11048150:	15bff416 	blt	r2,r22,11048124 <___svfprintf_internal_r+0x1f78>
11048154:	9811883a 	mov	r8,r19
11048158:	b0800c04 	addi	r2,r22,48
1104815c:	a027883a 	mov	r19,r20
11048160:	8029883a 	mov	r20,r16
11048164:	a17fffc4 	addi	r5,r20,-1
11048168:	a0bfffc5 	stb	r2,-1(r20)
1104816c:	dc002917 	ldw	r16,164(sp)
11048170:	2f00752e 	bgeu	r5,fp,11048348 <___svfprintf_internal_r+0x219c>
11048174:	d9c02384 	addi	r7,sp,142
11048178:	3d0fc83a 	sub	r7,r7,r20
1104817c:	d9002344 	addi	r4,sp,141
11048180:	e1cf883a 	add	r7,fp,r7
11048184:	00000106 	br	1104818c <___svfprintf_internal_r+0x1fe0>
11048188:	28800003 	ldbu	r2,0(r5)
1104818c:	20800005 	stb	r2,0(r4)
11048190:	21000044 	addi	r4,r4,1
11048194:	29400044 	addi	r5,r5,1
11048198:	21fffb1e 	bne	r4,r7,11048188 <___svfprintf_internal_r+0x1fdc>
1104819c:	d8802304 	addi	r2,sp,140
110481a0:	1505c83a 	sub	r2,r2,r20
110481a4:	d8c02344 	addi	r3,sp,141
110481a8:	1885883a 	add	r2,r3,r2
110481ac:	003f7006 	br	11047f70 <___svfprintf_internal_r+0x1dc4>
110481b0:	0005883a 	mov	r2,zero
110481b4:	003f0b06 	br	11047de4 <___svfprintf_internal_r+0x1c38>
110481b8:	d9002917 	ldw	r4,164(sp)
110481bc:	d8c03217 	ldw	r3,200(sp)
110481c0:	20800044 	addi	r2,r4,1
110481c4:	1885883a 	add	r2,r3,r2
110481c8:	d8802e15 	stw	r2,184(sp)
110481cc:	103e870e 	bge	r2,zero,11047bec <___svfprintf_internal_r+0x1a40>
110481d0:	0005883a 	mov	r2,zero
110481d4:	003e8506 	br	11047bec <___svfprintf_internal_r+0x1a40>
110481d8:	01044174 	movhi	r4,4357
110481dc:	211c2e84 	addi	r4,r4,28858
110481e0:	d9002b15 	stw	r4,172(sp)
110481e4:	003cc506 	br	110474fc <___svfprintf_internal_r+0x1350>
110481e8:	d8c03217 	ldw	r3,200(sp)
110481ec:	18c00044 	addi	r3,r3,1
110481f0:	d8c02e15 	stw	r3,184(sp)
110481f4:	1805883a 	mov	r2,r3
110481f8:	183fa10e 	bge	r3,zero,11048080 <___svfprintf_internal_r+0x1ed4>
110481fc:	0005883a 	mov	r2,zero
11048200:	003f9f06 	br	11048080 <___svfprintf_internal_r+0x1ed4>
11048204:	d9003617 	ldw	r4,216(sp)
11048208:	000d883a 	mov	r6,zero
1104820c:	000f883a 	mov	r7,zero
11048210:	a00b883a 	mov	r5,r20
11048214:	d8c03d15 	stw	r3,244(sp)
11048218:	da003e15 	stw	r8,248(sp)
1104821c:	1044bd80 	call	11044bd8 <__eqdf2>
11048220:	d8c03d17 	ldw	r3,244(sp)
11048224:	da003e17 	ldw	r8,248(sp)
11048228:	103f8726 	beq	r2,zero,11048048 <___svfprintf_internal_r+0x1e9c>
1104822c:	00800044 	movi	r2,1
11048230:	10c7c83a 	sub	r3,r2,r3
11048234:	d8c02615 	stw	r3,152(sp)
11048238:	003f8406 	br	1104804c <___svfprintf_internal_r+0x1ea0>
1104823c:	20000e1e 	bne	r4,zero,11048278 <___svfprintf_internal_r+0x20cc>
11048240:	9480004c 	andi	r18,r18,1
11048244:	90000c1e 	bne	r18,zero,11048278 <___svfprintf_internal_r+0x20cc>
11048248:	00800044 	movi	r2,1
1104824c:	d8802e15 	stw	r2,184(sp)
11048250:	003e6606 	br	11047bec <___svfprintf_internal_r+0x1a40>
11048254:	00800b44 	movi	r2,45
11048258:	05adc83a 	sub	r22,zero,r22
1104825c:	d8802305 	stb	r2,140(sp)
11048260:	003f3b06 	br	11047f50 <___svfprintf_internal_r+0x1da4>
11048264:	0005883a 	mov	r2,zero
11048268:	003f4e06 	br	11047fa4 <___svfprintf_internal_r+0x1df8>
1104826c:	90a4703a 	and	r18,r18,r2
11048270:	903f4a26 	beq	r18,zero,11047f9c <___svfprintf_internal_r+0x1df0>
11048274:	003f4606 	br	11047f90 <___svfprintf_internal_r+0x1de4>
11048278:	d8c02917 	ldw	r3,164(sp)
1104827c:	18c00084 	addi	r3,r3,2
11048280:	d8c02e15 	stw	r3,184(sp)
11048284:	1805883a 	mov	r2,r3
11048288:	183e580e 	bge	r3,zero,11047bec <___svfprintf_internal_r+0x1a40>
1104828c:	003fd006 	br	110481d0 <___svfprintf_internal_r+0x2024>
11048290:	00800084 	movi	r2,2
11048294:	10c5c83a 	sub	r2,r2,r3
11048298:	003f7506 	br	11048070 <___svfprintf_internal_r+0x1ec4>
1104829c:	d8802d17 	ldw	r2,180(sp)
110482a0:	d9002d17 	ldw	r4,180(sp)
110482a4:	bc400043 	ldbu	r17,1(r23)
110482a8:	10800017 	ldw	r2,0(r2)
110482ac:	582f883a 	mov	r23,r11
110482b0:	d8802915 	stw	r2,164(sp)
110482b4:	20800104 	addi	r2,r4,4
110482b8:	d9002917 	ldw	r4,164(sp)
110482bc:	d8802d15 	stw	r2,180(sp)
110482c0:	203df00e 	bge	r4,zero,11047a84 <___svfprintf_internal_r+0x18d8>
110482c4:	8c403fcc 	andi	r17,r17,255
110482c8:	00bfffc4 	movi	r2,-1
110482cc:	8c40201c 	xori	r17,r17,128
110482d0:	d8802915 	stw	r2,164(sp)
110482d4:	8c7fe004 	addi	r17,r17,-128
110482d8:	00380806 	br	110462fc <___svfprintf_internal_r+0x150>
110482dc:	9080004c 	andi	r2,r18,1
110482e0:	0039883a 	mov	fp,zero
110482e4:	10000726 	beq	r2,zero,11048304 <___svfprintf_internal_r+0x2158>
110482e8:	d8c02817 	ldw	r3,160(sp)
110482ec:	dc001dc4 	addi	r16,sp,119
110482f0:	00800c04 	movi	r2,48
110482f4:	1c07c83a 	sub	r3,r3,r16
110482f8:	d8801dc5 	stb	r2,119(sp)
110482fc:	d8c02e15 	stw	r3,184(sp)
11048300:	00395206 	br	1104684c <___svfprintf_internal_r+0x6a0>
11048304:	d8002e15 	stw	zero,184(sp)
11048308:	dc001e04 	addi	r16,sp,120
1104830c:	00394f06 	br	1104684c <___svfprintf_internal_r+0x6a0>
11048310:	0005883a 	mov	r2,zero
11048314:	003e3206 	br	11047be0 <___svfprintf_internal_r+0x1a34>
11048318:	dd802617 	ldw	r22,152(sp)
1104831c:	003f0606 	br	11047f38 <___svfprintf_internal_r+0x1d8c>
11048320:	d9c02785 	stb	r7,158(sp)
11048324:	003a5106 	br	11046c6c <___svfprintf_internal_r+0xac0>
11048328:	d9c02785 	stb	r7,158(sp)
1104832c:	003a3706 	br	11046c0c <___svfprintf_internal_r+0xa60>
11048330:	0005883a 	mov	r2,zero
11048334:	003f5e06 	br	110480b0 <___svfprintf_internal_r+0x1f04>
11048338:	d9c02785 	stb	r7,158(sp)
1104833c:	00391706 	br	1104679c <___svfprintf_internal_r+0x5f0>
11048340:	d9c02785 	stb	r7,158(sp)
11048344:	0038e606 	br	110466e0 <___svfprintf_internal_r+0x534>
11048348:	d8802344 	addi	r2,sp,141
1104834c:	003f0806 	br	11047f70 <___svfprintf_internal_r+0x1dc4>
11048350:	d9c02785 	stb	r7,158(sp)
11048354:	0038b706 	br	11046634 <___svfprintf_internal_r+0x488>
11048358:	d9c02785 	stb	r7,158(sp)
1104835c:	003adc06 	br	11046ed0 <___svfprintf_internal_r+0xd24>
11048360:	d9403917 	ldw	r5,228(sp)
11048364:	00800304 	movi	r2,12
11048368:	28800015 	stw	r2,0(r5)
1104836c:	00bfffc4 	movi	r2,-1
11048370:	00387806 	br	11046554 <___svfprintf_internal_r+0x3a8>
11048374:	d9c02785 	stb	r7,158(sp)
11048378:	003abf06 	br	11046e78 <___svfprintf_internal_r+0xccc>
1104837c:	d9c02785 	stb	r7,158(sp)
11048380:	003a9b06 	br	11046df0 <___svfprintf_internal_r+0xc44>

11048384 <___vfprintf_internal_r>:
11048384:	deffb804 	addi	sp,sp,-288
11048388:	dfc04715 	stw	ra,284(sp)
1104838c:	ddc04515 	stw	r23,276(sp)
11048390:	dd404315 	stw	r21,268(sp)
11048394:	d9002c15 	stw	r4,176(sp)
11048398:	282f883a 	mov	r23,r5
1104839c:	302b883a 	mov	r21,r6
110483a0:	d9c02d15 	stw	r7,180(sp)
110483a4:	df004615 	stw	fp,280(sp)
110483a8:	dd804415 	stw	r22,272(sp)
110483ac:	dd004215 	stw	r20,264(sp)
110483b0:	dcc04115 	stw	r19,260(sp)
110483b4:	dc804015 	stw	r18,256(sp)
110483b8:	dc403f15 	stw	r17,252(sp)
110483bc:	dc003e15 	stw	r16,248(sp)
110483c0:	104d2c00 	call	1104d2c0 <_localeconv_r>
110483c4:	10800017 	ldw	r2,0(r2)
110483c8:	1009883a 	mov	r4,r2
110483cc:	d8803415 	stw	r2,208(sp)
110483d0:	10461140 	call	11046114 <strlen>
110483d4:	d8803715 	stw	r2,220(sp)
110483d8:	d8802c17 	ldw	r2,176(sp)
110483dc:	10000226 	beq	r2,zero,110483e8 <___vfprintf_internal_r+0x64>
110483e0:	10800e17 	ldw	r2,56(r2)
110483e4:	1000f926 	beq	r2,zero,110487cc <___vfprintf_internal_r+0x448>
110483e8:	b880030b 	ldhu	r2,12(r23)
110483ec:	10c8000c 	andi	r3,r2,8192
110483f0:	1800061e 	bne	r3,zero,1104840c <___vfprintf_internal_r+0x88>
110483f4:	b9001917 	ldw	r4,100(r23)
110483f8:	00f7ffc4 	movi	r3,-8193
110483fc:	10880014 	ori	r2,r2,8192
11048400:	20c6703a 	and	r3,r4,r3
11048404:	b880030d 	sth	r2,12(r23)
11048408:	b8c01915 	stw	r3,100(r23)
1104840c:	10c0020c 	andi	r3,r2,8
11048410:	1800c126 	beq	r3,zero,11048718 <___vfprintf_internal_r+0x394>
11048414:	b8c00417 	ldw	r3,16(r23)
11048418:	1800bf26 	beq	r3,zero,11048718 <___vfprintf_internal_r+0x394>
1104841c:	1080068c 	andi	r2,r2,26
11048420:	00c00284 	movi	r3,10
11048424:	10c0c426 	beq	r2,r3,11048738 <___vfprintf_internal_r+0x3b4>
11048428:	d8c00404 	addi	r3,sp,16
1104842c:	05044174 	movhi	r20,4357
11048430:	d9001e04 	addi	r4,sp,120
11048434:	a51c3684 	addi	r20,r20,28890
11048438:	d8c01e15 	stw	r3,120(sp)
1104843c:	d8002015 	stw	zero,128(sp)
11048440:	d8001f15 	stw	zero,124(sp)
11048444:	d8003315 	stw	zero,204(sp)
11048448:	d8003615 	stw	zero,216(sp)
1104844c:	d8003815 	stw	zero,224(sp)
11048450:	1811883a 	mov	r8,r3
11048454:	d8003915 	stw	zero,228(sp)
11048458:	d8003a15 	stw	zero,232(sp)
1104845c:	d8002f15 	stw	zero,188(sp)
11048460:	d9002815 	stw	r4,160(sp)
11048464:	a8800007 	ldb	r2,0(r21)
11048468:	10027b26 	beq	r2,zero,11048e58 <___vfprintf_internal_r+0xad4>
1104846c:	00c00944 	movi	r3,37
11048470:	a821883a 	mov	r16,r21
11048474:	10c0021e 	bne	r2,r3,11048480 <___vfprintf_internal_r+0xfc>
11048478:	00001406 	br	110484cc <___vfprintf_internal_r+0x148>
1104847c:	10c00326 	beq	r2,r3,1104848c <___vfprintf_internal_r+0x108>
11048480:	84000044 	addi	r16,r16,1
11048484:	80800007 	ldb	r2,0(r16)
11048488:	103ffc1e 	bne	r2,zero,1104847c <___vfprintf_internal_r+0xf8>
1104848c:	8563c83a 	sub	r17,r16,r21
11048490:	88000e26 	beq	r17,zero,110484cc <___vfprintf_internal_r+0x148>
11048494:	d8c02017 	ldw	r3,128(sp)
11048498:	d8801f17 	ldw	r2,124(sp)
1104849c:	45400015 	stw	r21,0(r8)
110484a0:	1c47883a 	add	r3,r3,r17
110484a4:	10800044 	addi	r2,r2,1
110484a8:	d8c02015 	stw	r3,128(sp)
110484ac:	44400115 	stw	r17,4(r8)
110484b0:	d8801f15 	stw	r2,124(sp)
110484b4:	00c001c4 	movi	r3,7
110484b8:	1880a716 	blt	r3,r2,11048758 <___vfprintf_internal_r+0x3d4>
110484bc:	42000204 	addi	r8,r8,8
110484c0:	d9402f17 	ldw	r5,188(sp)
110484c4:	2c4b883a 	add	r5,r5,r17
110484c8:	d9402f15 	stw	r5,188(sp)
110484cc:	80800007 	ldb	r2,0(r16)
110484d0:	1000a826 	beq	r2,zero,11048774 <___vfprintf_internal_r+0x3f0>
110484d4:	84400047 	ldb	r17,1(r16)
110484d8:	00bfffc4 	movi	r2,-1
110484dc:	85400044 	addi	r21,r16,1
110484e0:	d8002785 	stb	zero,158(sp)
110484e4:	0007883a 	mov	r3,zero
110484e8:	000f883a 	mov	r7,zero
110484ec:	d8802915 	stw	r2,164(sp)
110484f0:	d8003115 	stw	zero,196(sp)
110484f4:	0025883a 	mov	r18,zero
110484f8:	01401604 	movi	r5,88
110484fc:	01800244 	movi	r6,9
11048500:	02800a84 	movi	r10,42
11048504:	02401b04 	movi	r9,108
11048508:	ad400044 	addi	r21,r21,1
1104850c:	88bff804 	addi	r2,r17,-32
11048510:	28830436 	bltu	r5,r2,11049124 <___vfprintf_internal_r+0xda0>
11048514:	100490ba 	slli	r2,r2,2
11048518:	01044174 	movhi	r4,4357
1104851c:	21214b04 	addi	r4,r4,-31444
11048520:	1105883a 	add	r2,r2,r4
11048524:	10800017 	ldw	r2,0(r2)
11048528:	1000683a 	jmp	r2
1104852c:	11049044 	addi	r4,r2,4673
11048530:	11049124 	muli	r4,r2,4676
11048534:	11049124 	muli	r4,r2,4676
11048538:	11049064 	muli	r4,r2,4673
1104853c:	11049124 	muli	r4,r2,4676
11048540:	11049124 	muli	r4,r2,4676
11048544:	11049124 	muli	r4,r2,4676
11048548:	11049124 	muli	r4,r2,4676
1104854c:	11049124 	muli	r4,r2,4676
11048550:	11049124 	muli	r4,r2,4676
11048554:	110487d8 	cmpnei	r4,r2,4639
11048558:	11048f80 	call	111048f8 <__alt_data_end+0x848f8>
1104855c:	11049124 	muli	r4,r2,4676
11048560:	110486a0 	cmpeqi	r4,r2,4634
11048564:	11048800 	call	11104880 <__alt_data_end+0x84880>
11048568:	11049124 	muli	r4,r2,4676
1104856c:	11048840 	call	11104884 <__alt_data_end+0x84884>
11048570:	1104884c 	andi	r4,r2,4641
11048574:	1104884c 	andi	r4,r2,4641
11048578:	1104884c 	andi	r4,r2,4641
1104857c:	1104884c 	andi	r4,r2,4641
11048580:	1104884c 	andi	r4,r2,4641
11048584:	1104884c 	andi	r4,r2,4641
11048588:	1104884c 	andi	r4,r2,4641
1104858c:	1104884c 	andi	r4,r2,4641
11048590:	1104884c 	andi	r4,r2,4641
11048594:	11049124 	muli	r4,r2,4676
11048598:	11049124 	muli	r4,r2,4676
1104859c:	11049124 	muli	r4,r2,4676
110485a0:	11049124 	muli	r4,r2,4676
110485a4:	11049124 	muli	r4,r2,4676
110485a8:	11049124 	muli	r4,r2,4676
110485ac:	11049124 	muli	r4,r2,4676
110485b0:	11049124 	muli	r4,r2,4676
110485b4:	11049124 	muli	r4,r2,4676
110485b8:	11049124 	muli	r4,r2,4676
110485bc:	11048880 	call	11104888 <__alt_data_end+0x84888>
110485c0:	1104893c 	xorhi	r4,r2,4644
110485c4:	11049124 	muli	r4,r2,4676
110485c8:	1104893c 	xorhi	r4,r2,4644
110485cc:	11049124 	muli	r4,r2,4676
110485d0:	11049124 	muli	r4,r2,4676
110485d4:	11049124 	muli	r4,r2,4676
110485d8:	11049124 	muli	r4,r2,4676
110485dc:	110489dc 	xori	r4,r2,4647
110485e0:	11049124 	muli	r4,r2,4676
110485e4:	11049124 	muli	r4,r2,4676
110485e8:	110489e8 	cmpgeui	r4,r2,4647
110485ec:	11049124 	muli	r4,r2,4676
110485f0:	11049124 	muli	r4,r2,4676
110485f4:	11049124 	muli	r4,r2,4676
110485f8:	11049124 	muli	r4,r2,4676
110485fc:	11049124 	muli	r4,r2,4676
11048600:	11048e60 	cmpeqi	r4,r2,4665
11048604:	11049124 	muli	r4,r2,4676
11048608:	11049124 	muli	r4,r2,4676
1104860c:	11048ec0 	call	111048ec <__alt_data_end+0x848ec>
11048610:	11049124 	muli	r4,r2,4676
11048614:	11049124 	muli	r4,r2,4676
11048618:	11049124 	muli	r4,r2,4676
1104861c:	11049124 	muli	r4,r2,4676
11048620:	11049124 	muli	r4,r2,4676
11048624:	11049124 	muli	r4,r2,4676
11048628:	11049124 	muli	r4,r2,4676
1104862c:	11049124 	muli	r4,r2,4676
11048630:	11049124 	muli	r4,r2,4676
11048634:	11049124 	muli	r4,r2,4676
11048638:	110490d0 	cmplti	r4,r2,4675
1104863c:	11049070 	cmpltui	r4,r2,4673
11048640:	1104893c 	xorhi	r4,r2,4644
11048644:	1104893c 	xorhi	r4,r2,4644
11048648:	1104893c 	xorhi	r4,r2,4644
1104864c:	11049080 	call	11104908 <__alt_data_end+0x84908>
11048650:	11049070 	cmpltui	r4,r2,4673
11048654:	11049124 	muli	r4,r2,4676
11048658:	11049124 	muli	r4,r2,4676
1104865c:	1104908c 	andi	r4,r2,4674
11048660:	11049124 	muli	r4,r2,4676
11048664:	1104909c 	xori	r4,r2,4674
11048668:	11048f70 	cmpltui	r4,r2,4669
1104866c:	110486ac 	andhi	r4,r2,4634
11048670:	11048f90 	cmplti	r4,r2,4670
11048674:	11049124 	muli	r4,r2,4676
11048678:	11048f9c 	xori	r4,r2,4670
1104867c:	11049124 	muli	r4,r2,4676
11048680:	11048ff8 	rdprs	r4,r2,4671
11048684:	11049124 	muli	r4,r2,4676
11048688:	11049124 	muli	r4,r2,4676
1104868c:	11049008 	cmpgei	r4,r2,4672
11048690:	d9003117 	ldw	r4,196(sp)
11048694:	d8802d15 	stw	r2,180(sp)
11048698:	0109c83a 	sub	r4,zero,r4
1104869c:	d9003115 	stw	r4,196(sp)
110486a0:	94800114 	ori	r18,r18,4
110486a4:	ac400007 	ldb	r17,0(r21)
110486a8:	003f9706 	br	11048508 <___vfprintf_internal_r+0x184>
110486ac:	00800c04 	movi	r2,48
110486b0:	d9002d17 	ldw	r4,180(sp)
110486b4:	d9402917 	ldw	r5,164(sp)
110486b8:	d8802705 	stb	r2,156(sp)
110486bc:	00801e04 	movi	r2,120
110486c0:	d8802745 	stb	r2,157(sp)
110486c4:	d8002785 	stb	zero,158(sp)
110486c8:	20c00104 	addi	r3,r4,4
110486cc:	24c00017 	ldw	r19,0(r4)
110486d0:	002d883a 	mov	r22,zero
110486d4:	90800094 	ori	r2,r18,2
110486d8:	28029a16 	blt	r5,zero,11049144 <___vfprintf_internal_r+0xdc0>
110486dc:	00bfdfc4 	movi	r2,-129
110486e0:	90a4703a 	and	r18,r18,r2
110486e4:	d8c02d15 	stw	r3,180(sp)
110486e8:	94800094 	ori	r18,r18,2
110486ec:	9802871e 	bne	r19,zero,1104910c <___vfprintf_internal_r+0xd88>
110486f0:	00844174 	movhi	r2,4357
110486f4:	109c2704 	addi	r2,r2,28828
110486f8:	d8803915 	stw	r2,228(sp)
110486fc:	04401e04 	movi	r17,120
11048700:	d8802917 	ldw	r2,164(sp)
11048704:	0039883a 	mov	fp,zero
11048708:	1001e926 	beq	r2,zero,11048eb0 <___vfprintf_internal_r+0xb2c>
1104870c:	0027883a 	mov	r19,zero
11048710:	002d883a 	mov	r22,zero
11048714:	00020506 	br	11048f2c <___vfprintf_internal_r+0xba8>
11048718:	d9002c17 	ldw	r4,176(sp)
1104871c:	b80b883a 	mov	r5,r23
11048720:	104a7780 	call	1104a778 <__swsetup_r>
11048724:	1005ac1e 	bne	r2,zero,11049dd8 <___vfprintf_internal_r+0x1a54>
11048728:	b880030b 	ldhu	r2,12(r23)
1104872c:	00c00284 	movi	r3,10
11048730:	1080068c 	andi	r2,r2,26
11048734:	10ff3c1e 	bne	r2,r3,11048428 <___vfprintf_internal_r+0xa4>
11048738:	b880038f 	ldh	r2,14(r23)
1104873c:	103f3a16 	blt	r2,zero,11048428 <___vfprintf_internal_r+0xa4>
11048740:	d9c02d17 	ldw	r7,180(sp)
11048744:	d9002c17 	ldw	r4,176(sp)
11048748:	a80d883a 	mov	r6,r21
1104874c:	b80b883a 	mov	r5,r23
11048750:	104a5980 	call	1104a598 <__sbprintf>
11048754:	00001106 	br	1104879c <___vfprintf_internal_r+0x418>
11048758:	d9002c17 	ldw	r4,176(sp)
1104875c:	d9801e04 	addi	r6,sp,120
11048760:	b80b883a 	mov	r5,r23
11048764:	1050eb00 	call	11050eb0 <__sprint_r>
11048768:	1000081e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
1104876c:	da000404 	addi	r8,sp,16
11048770:	003f5306 	br	110484c0 <___vfprintf_internal_r+0x13c>
11048774:	d8802017 	ldw	r2,128(sp)
11048778:	10000426 	beq	r2,zero,1104878c <___vfprintf_internal_r+0x408>
1104877c:	d9002c17 	ldw	r4,176(sp)
11048780:	d9801e04 	addi	r6,sp,120
11048784:	b80b883a 	mov	r5,r23
11048788:	1050eb00 	call	11050eb0 <__sprint_r>
1104878c:	b880030b 	ldhu	r2,12(r23)
11048790:	1080100c 	andi	r2,r2,64
11048794:	1005901e 	bne	r2,zero,11049dd8 <___vfprintf_internal_r+0x1a54>
11048798:	d8802f17 	ldw	r2,188(sp)
1104879c:	dfc04717 	ldw	ra,284(sp)
110487a0:	df004617 	ldw	fp,280(sp)
110487a4:	ddc04517 	ldw	r23,276(sp)
110487a8:	dd804417 	ldw	r22,272(sp)
110487ac:	dd404317 	ldw	r21,268(sp)
110487b0:	dd004217 	ldw	r20,264(sp)
110487b4:	dcc04117 	ldw	r19,260(sp)
110487b8:	dc804017 	ldw	r18,256(sp)
110487bc:	dc403f17 	ldw	r17,252(sp)
110487c0:	dc003e17 	ldw	r16,248(sp)
110487c4:	dec04804 	addi	sp,sp,288
110487c8:	f800283a 	ret
110487cc:	d9002c17 	ldw	r4,176(sp)
110487d0:	104c74c0 	call	1104c74c <__sinit>
110487d4:	003f0406 	br	110483e8 <___vfprintf_internal_r+0x64>
110487d8:	d8802d17 	ldw	r2,180(sp)
110487dc:	d9002d17 	ldw	r4,180(sp)
110487e0:	10800017 	ldw	r2,0(r2)
110487e4:	d8803115 	stw	r2,196(sp)
110487e8:	20800104 	addi	r2,r4,4
110487ec:	d9003117 	ldw	r4,196(sp)
110487f0:	203fa716 	blt	r4,zero,11048690 <___vfprintf_internal_r+0x30c>
110487f4:	d8802d15 	stw	r2,180(sp)
110487f8:	ac400007 	ldb	r17,0(r21)
110487fc:	003f4206 	br	11048508 <___vfprintf_internal_r+0x184>
11048800:	ac400007 	ldb	r17,0(r21)
11048804:	aac00044 	addi	r11,r21,1
11048808:	8a872826 	beq	r17,r10,1104a4ac <___vfprintf_internal_r+0x2128>
1104880c:	88bff404 	addi	r2,r17,-48
11048810:	0009883a 	mov	r4,zero
11048814:	30867d36 	bltu	r6,r2,1104a20c <___vfprintf_internal_r+0x1e88>
11048818:	5c400007 	ldb	r17,0(r11)
1104881c:	210002a4 	muli	r4,r4,10
11048820:	5d400044 	addi	r21,r11,1
11048824:	a817883a 	mov	r11,r21
11048828:	2089883a 	add	r4,r4,r2
1104882c:	88bff404 	addi	r2,r17,-48
11048830:	30bff92e 	bgeu	r6,r2,11048818 <___vfprintf_internal_r+0x494>
11048834:	2005c916 	blt	r4,zero,11049f5c <___vfprintf_internal_r+0x1bd8>
11048838:	d9002915 	stw	r4,164(sp)
1104883c:	003f3306 	br	1104850c <___vfprintf_internal_r+0x188>
11048840:	94802014 	ori	r18,r18,128
11048844:	ac400007 	ldb	r17,0(r21)
11048848:	003f2f06 	br	11048508 <___vfprintf_internal_r+0x184>
1104884c:	a809883a 	mov	r4,r21
11048850:	d8003115 	stw	zero,196(sp)
11048854:	88bff404 	addi	r2,r17,-48
11048858:	0017883a 	mov	r11,zero
1104885c:	24400007 	ldb	r17,0(r4)
11048860:	5ac002a4 	muli	r11,r11,10
11048864:	ad400044 	addi	r21,r21,1
11048868:	a809883a 	mov	r4,r21
1104886c:	12d7883a 	add	r11,r2,r11
11048870:	88bff404 	addi	r2,r17,-48
11048874:	30bff92e 	bgeu	r6,r2,1104885c <___vfprintf_internal_r+0x4d8>
11048878:	dac03115 	stw	r11,196(sp)
1104887c:	003f2306 	br	1104850c <___vfprintf_internal_r+0x188>
11048880:	18c03fcc 	andi	r3,r3,255
11048884:	18072b1e 	bne	r3,zero,1104a534 <___vfprintf_internal_r+0x21b0>
11048888:	94800414 	ori	r18,r18,16
1104888c:	9080080c 	andi	r2,r18,32
11048890:	10037b26 	beq	r2,zero,11049680 <___vfprintf_internal_r+0x12fc>
11048894:	d9402d17 	ldw	r5,180(sp)
11048898:	28800117 	ldw	r2,4(r5)
1104889c:	2cc00017 	ldw	r19,0(r5)
110488a0:	29400204 	addi	r5,r5,8
110488a4:	d9402d15 	stw	r5,180(sp)
110488a8:	102d883a 	mov	r22,r2
110488ac:	10044b16 	blt	r2,zero,110499dc <___vfprintf_internal_r+0x1658>
110488b0:	d9402917 	ldw	r5,164(sp)
110488b4:	df002783 	ldbu	fp,158(sp)
110488b8:	2803bc16 	blt	r5,zero,110497ac <___vfprintf_internal_r+0x1428>
110488bc:	00ffdfc4 	movi	r3,-129
110488c0:	9d84b03a 	or	r2,r19,r22
110488c4:	90e4703a 	and	r18,r18,r3
110488c8:	10017726 	beq	r2,zero,11048ea8 <___vfprintf_internal_r+0xb24>
110488cc:	b0038326 	beq	r22,zero,110496dc <___vfprintf_internal_r+0x1358>
110488d0:	dc402a15 	stw	r17,168(sp)
110488d4:	dc001e04 	addi	r16,sp,120
110488d8:	b023883a 	mov	r17,r22
110488dc:	402d883a 	mov	r22,r8
110488e0:	9809883a 	mov	r4,r19
110488e4:	880b883a 	mov	r5,r17
110488e8:	01800284 	movi	r6,10
110488ec:	000f883a 	mov	r7,zero
110488f0:	10532a80 	call	110532a8 <__umoddi3>
110488f4:	10800c04 	addi	r2,r2,48
110488f8:	843fffc4 	addi	r16,r16,-1
110488fc:	9809883a 	mov	r4,r19
11048900:	880b883a 	mov	r5,r17
11048904:	80800005 	stb	r2,0(r16)
11048908:	01800284 	movi	r6,10
1104890c:	000f883a 	mov	r7,zero
11048910:	1052d300 	call	11052d30 <__udivdi3>
11048914:	1027883a 	mov	r19,r2
11048918:	10c4b03a 	or	r2,r2,r3
1104891c:	1823883a 	mov	r17,r3
11048920:	103fef1e 	bne	r2,zero,110488e0 <___vfprintf_internal_r+0x55c>
11048924:	d8c02817 	ldw	r3,160(sp)
11048928:	dc402a17 	ldw	r17,168(sp)
1104892c:	b011883a 	mov	r8,r22
11048930:	1c07c83a 	sub	r3,r3,r16
11048934:	d8c02e15 	stw	r3,184(sp)
11048938:	00005906 	br	11048aa0 <___vfprintf_internal_r+0x71c>
1104893c:	18c03fcc 	andi	r3,r3,255
11048940:	1806fa1e 	bne	r3,zero,1104a52c <___vfprintf_internal_r+0x21a8>
11048944:	9080020c 	andi	r2,r18,8
11048948:	10048a26 	beq	r2,zero,11049b74 <___vfprintf_internal_r+0x17f0>
1104894c:	d8c02d17 	ldw	r3,180(sp)
11048950:	d9002d17 	ldw	r4,180(sp)
11048954:	d9402d17 	ldw	r5,180(sp)
11048958:	18c00017 	ldw	r3,0(r3)
1104895c:	21000117 	ldw	r4,4(r4)
11048960:	29400204 	addi	r5,r5,8
11048964:	d8c03615 	stw	r3,216(sp)
11048968:	d9003815 	stw	r4,224(sp)
1104896c:	d9402d15 	stw	r5,180(sp)
11048970:	d9003617 	ldw	r4,216(sp)
11048974:	d9403817 	ldw	r5,224(sp)
11048978:	da003d15 	stw	r8,244(sp)
1104897c:	04000044 	movi	r16,1
11048980:	104f6c80 	call	1104f6c8 <__fpclassifyd>
11048984:	da003d17 	ldw	r8,244(sp)
11048988:	14041f1e 	bne	r2,r16,11049a08 <___vfprintf_internal_r+0x1684>
1104898c:	d9003617 	ldw	r4,216(sp)
11048990:	d9403817 	ldw	r5,224(sp)
11048994:	000d883a 	mov	r6,zero
11048998:	000f883a 	mov	r7,zero
1104899c:	10540c80 	call	110540c8 <__ledf2>
110489a0:	da003d17 	ldw	r8,244(sp)
110489a4:	1005be16 	blt	r2,zero,1104a0a0 <___vfprintf_internal_r+0x1d1c>
110489a8:	df002783 	ldbu	fp,158(sp)
110489ac:	008011c4 	movi	r2,71
110489b0:	1445330e 	bge	r2,r17,11049e80 <___vfprintf_internal_r+0x1afc>
110489b4:	04044174 	movhi	r16,4357
110489b8:	841c1f04 	addi	r16,r16,28796
110489bc:	00c000c4 	movi	r3,3
110489c0:	00bfdfc4 	movi	r2,-129
110489c4:	d8c02a15 	stw	r3,168(sp)
110489c8:	90a4703a 	and	r18,r18,r2
110489cc:	d8c02e15 	stw	r3,184(sp)
110489d0:	d8002915 	stw	zero,164(sp)
110489d4:	d8003215 	stw	zero,200(sp)
110489d8:	00003706 	br	11048ab8 <___vfprintf_internal_r+0x734>
110489dc:	94800214 	ori	r18,r18,8
110489e0:	ac400007 	ldb	r17,0(r21)
110489e4:	003ec806 	br	11048508 <___vfprintf_internal_r+0x184>
110489e8:	18c03fcc 	andi	r3,r3,255
110489ec:	1806db1e 	bne	r3,zero,1104a55c <___vfprintf_internal_r+0x21d8>
110489f0:	94800414 	ori	r18,r18,16
110489f4:	9080080c 	andi	r2,r18,32
110489f8:	1002d826 	beq	r2,zero,1104955c <___vfprintf_internal_r+0x11d8>
110489fc:	d9402d17 	ldw	r5,180(sp)
11048a00:	d8c02917 	ldw	r3,164(sp)
11048a04:	d8002785 	stb	zero,158(sp)
11048a08:	28800204 	addi	r2,r5,8
11048a0c:	2cc00017 	ldw	r19,0(r5)
11048a10:	2d800117 	ldw	r22,4(r5)
11048a14:	18048f16 	blt	r3,zero,11049c54 <___vfprintf_internal_r+0x18d0>
11048a18:	013fdfc4 	movi	r4,-129
11048a1c:	9d86b03a 	or	r3,r19,r22
11048a20:	d8802d15 	stw	r2,180(sp)
11048a24:	9124703a 	and	r18,r18,r4
11048a28:	1802d91e 	bne	r3,zero,11049590 <___vfprintf_internal_r+0x120c>
11048a2c:	d8c02917 	ldw	r3,164(sp)
11048a30:	0039883a 	mov	fp,zero
11048a34:	1805c326 	beq	r3,zero,1104a144 <___vfprintf_internal_r+0x1dc0>
11048a38:	0027883a 	mov	r19,zero
11048a3c:	002d883a 	mov	r22,zero
11048a40:	dc001e04 	addi	r16,sp,120
11048a44:	9806d0fa 	srli	r3,r19,3
11048a48:	b008977a 	slli	r4,r22,29
11048a4c:	b02cd0fa 	srli	r22,r22,3
11048a50:	9cc001cc 	andi	r19,r19,7
11048a54:	98800c04 	addi	r2,r19,48
11048a58:	843fffc4 	addi	r16,r16,-1
11048a5c:	20e6b03a 	or	r19,r4,r3
11048a60:	80800005 	stb	r2,0(r16)
11048a64:	9d86b03a 	or	r3,r19,r22
11048a68:	183ff61e 	bne	r3,zero,11048a44 <___vfprintf_internal_r+0x6c0>
11048a6c:	90c0004c 	andi	r3,r18,1
11048a70:	18013b26 	beq	r3,zero,11048f60 <___vfprintf_internal_r+0xbdc>
11048a74:	10803fcc 	andi	r2,r2,255
11048a78:	1080201c 	xori	r2,r2,128
11048a7c:	10bfe004 	addi	r2,r2,-128
11048a80:	00c00c04 	movi	r3,48
11048a84:	10c13626 	beq	r2,r3,11048f60 <___vfprintf_internal_r+0xbdc>
11048a88:	80ffffc5 	stb	r3,-1(r16)
11048a8c:	d8c02817 	ldw	r3,160(sp)
11048a90:	80bfffc4 	addi	r2,r16,-1
11048a94:	1021883a 	mov	r16,r2
11048a98:	1887c83a 	sub	r3,r3,r2
11048a9c:	d8c02e15 	stw	r3,184(sp)
11048aa0:	d8802e17 	ldw	r2,184(sp)
11048aa4:	d9002917 	ldw	r4,164(sp)
11048aa8:	1100010e 	bge	r2,r4,11048ab0 <___vfprintf_internal_r+0x72c>
11048aac:	2005883a 	mov	r2,r4
11048ab0:	d8802a15 	stw	r2,168(sp)
11048ab4:	d8003215 	stw	zero,200(sp)
11048ab8:	e7003fcc 	andi	fp,fp,255
11048abc:	e700201c 	xori	fp,fp,128
11048ac0:	e73fe004 	addi	fp,fp,-128
11048ac4:	e0000326 	beq	fp,zero,11048ad4 <___vfprintf_internal_r+0x750>
11048ac8:	d8c02a17 	ldw	r3,168(sp)
11048acc:	18c00044 	addi	r3,r3,1
11048ad0:	d8c02a15 	stw	r3,168(sp)
11048ad4:	90c0008c 	andi	r3,r18,2
11048ad8:	d8c02b15 	stw	r3,172(sp)
11048adc:	18000326 	beq	r3,zero,11048aec <___vfprintf_internal_r+0x768>
11048ae0:	d8c02a17 	ldw	r3,168(sp)
11048ae4:	18c00084 	addi	r3,r3,2
11048ae8:	d8c02a15 	stw	r3,168(sp)
11048aec:	90c0210c 	andi	r3,r18,132
11048af0:	d8c03015 	stw	r3,192(sp)
11048af4:	1801a31e 	bne	r3,zero,11049184 <___vfprintf_internal_r+0xe00>
11048af8:	d9003117 	ldw	r4,196(sp)
11048afc:	d8c02a17 	ldw	r3,168(sp)
11048b00:	20e7c83a 	sub	r19,r4,r3
11048b04:	04c19f0e 	bge	zero,r19,11049184 <___vfprintf_internal_r+0xe00>
11048b08:	02400404 	movi	r9,16
11048b0c:	d8c02017 	ldw	r3,128(sp)
11048b10:	d8801f17 	ldw	r2,124(sp)
11048b14:	4cc50d0e 	bge	r9,r19,11049f4c <___vfprintf_internal_r+0x1bc8>
11048b18:	01444174 	movhi	r5,4357
11048b1c:	295c3a84 	addi	r5,r5,28906
11048b20:	dc403b15 	stw	r17,236(sp)
11048b24:	d9403515 	stw	r5,212(sp)
11048b28:	9823883a 	mov	r17,r19
11048b2c:	482d883a 	mov	r22,r9
11048b30:	9027883a 	mov	r19,r18
11048b34:	070001c4 	movi	fp,7
11048b38:	8025883a 	mov	r18,r16
11048b3c:	dc002c17 	ldw	r16,176(sp)
11048b40:	00000306 	br	11048b50 <___vfprintf_internal_r+0x7cc>
11048b44:	8c7ffc04 	addi	r17,r17,-16
11048b48:	42000204 	addi	r8,r8,8
11048b4c:	b440130e 	bge	r22,r17,11048b9c <___vfprintf_internal_r+0x818>
11048b50:	01044174 	movhi	r4,4357
11048b54:	18c00404 	addi	r3,r3,16
11048b58:	10800044 	addi	r2,r2,1
11048b5c:	211c3a84 	addi	r4,r4,28906
11048b60:	41000015 	stw	r4,0(r8)
11048b64:	45800115 	stw	r22,4(r8)
11048b68:	d8c02015 	stw	r3,128(sp)
11048b6c:	d8801f15 	stw	r2,124(sp)
11048b70:	e0bff40e 	bge	fp,r2,11048b44 <___vfprintf_internal_r+0x7c0>
11048b74:	d9801e04 	addi	r6,sp,120
11048b78:	b80b883a 	mov	r5,r23
11048b7c:	8009883a 	mov	r4,r16
11048b80:	1050eb00 	call	11050eb0 <__sprint_r>
11048b84:	103f011e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
11048b88:	8c7ffc04 	addi	r17,r17,-16
11048b8c:	d8c02017 	ldw	r3,128(sp)
11048b90:	d8801f17 	ldw	r2,124(sp)
11048b94:	da000404 	addi	r8,sp,16
11048b98:	b47fed16 	blt	r22,r17,11048b50 <___vfprintf_internal_r+0x7cc>
11048b9c:	9021883a 	mov	r16,r18
11048ba0:	9825883a 	mov	r18,r19
11048ba4:	8827883a 	mov	r19,r17
11048ba8:	dc403b17 	ldw	r17,236(sp)
11048bac:	d9403517 	ldw	r5,212(sp)
11048bb0:	98c7883a 	add	r3,r19,r3
11048bb4:	10800044 	addi	r2,r2,1
11048bb8:	41400015 	stw	r5,0(r8)
11048bbc:	44c00115 	stw	r19,4(r8)
11048bc0:	d8c02015 	stw	r3,128(sp)
11048bc4:	d8801f15 	stw	r2,124(sp)
11048bc8:	010001c4 	movi	r4,7
11048bcc:	2082a316 	blt	r4,r2,1104965c <___vfprintf_internal_r+0x12d8>
11048bd0:	df002787 	ldb	fp,158(sp)
11048bd4:	42000204 	addi	r8,r8,8
11048bd8:	e0000c26 	beq	fp,zero,11048c0c <___vfprintf_internal_r+0x888>
11048bdc:	d8801f17 	ldw	r2,124(sp)
11048be0:	d9002784 	addi	r4,sp,158
11048be4:	18c00044 	addi	r3,r3,1
11048be8:	10800044 	addi	r2,r2,1
11048bec:	41000015 	stw	r4,0(r8)
11048bf0:	01000044 	movi	r4,1
11048bf4:	41000115 	stw	r4,4(r8)
11048bf8:	d8c02015 	stw	r3,128(sp)
11048bfc:	d8801f15 	stw	r2,124(sp)
11048c00:	010001c4 	movi	r4,7
11048c04:	20823c16 	blt	r4,r2,110494f8 <___vfprintf_internal_r+0x1174>
11048c08:	42000204 	addi	r8,r8,8
11048c0c:	d8802b17 	ldw	r2,172(sp)
11048c10:	10000c26 	beq	r2,zero,11048c44 <___vfprintf_internal_r+0x8c0>
11048c14:	d8801f17 	ldw	r2,124(sp)
11048c18:	d9002704 	addi	r4,sp,156
11048c1c:	18c00084 	addi	r3,r3,2
11048c20:	10800044 	addi	r2,r2,1
11048c24:	41000015 	stw	r4,0(r8)
11048c28:	01000084 	movi	r4,2
11048c2c:	41000115 	stw	r4,4(r8)
11048c30:	d8c02015 	stw	r3,128(sp)
11048c34:	d8801f15 	stw	r2,124(sp)
11048c38:	010001c4 	movi	r4,7
11048c3c:	20823616 	blt	r4,r2,11049518 <___vfprintf_internal_r+0x1194>
11048c40:	42000204 	addi	r8,r8,8
11048c44:	d9003017 	ldw	r4,192(sp)
11048c48:	00802004 	movi	r2,128
11048c4c:	20819926 	beq	r4,r2,110492b4 <___vfprintf_internal_r+0xf30>
11048c50:	d9402917 	ldw	r5,164(sp)
11048c54:	d8802e17 	ldw	r2,184(sp)
11048c58:	28adc83a 	sub	r22,r5,r2
11048c5c:	0580310e 	bge	zero,r22,11048d24 <___vfprintf_internal_r+0x9a0>
11048c60:	07000404 	movi	fp,16
11048c64:	d8801f17 	ldw	r2,124(sp)
11048c68:	e584140e 	bge	fp,r22,11049cbc <___vfprintf_internal_r+0x1938>
11048c6c:	01444174 	movhi	r5,4357
11048c70:	295c3684 	addi	r5,r5,28890
11048c74:	dc402915 	stw	r17,164(sp)
11048c78:	d9402b15 	stw	r5,172(sp)
11048c7c:	b023883a 	mov	r17,r22
11048c80:	04c001c4 	movi	r19,7
11048c84:	a82d883a 	mov	r22,r21
11048c88:	902b883a 	mov	r21,r18
11048c8c:	8025883a 	mov	r18,r16
11048c90:	dc002c17 	ldw	r16,176(sp)
11048c94:	00000306 	br	11048ca4 <___vfprintf_internal_r+0x920>
11048c98:	8c7ffc04 	addi	r17,r17,-16
11048c9c:	42000204 	addi	r8,r8,8
11048ca0:	e440110e 	bge	fp,r17,11048ce8 <___vfprintf_internal_r+0x964>
11048ca4:	18c00404 	addi	r3,r3,16
11048ca8:	10800044 	addi	r2,r2,1
11048cac:	45000015 	stw	r20,0(r8)
11048cb0:	47000115 	stw	fp,4(r8)
11048cb4:	d8c02015 	stw	r3,128(sp)
11048cb8:	d8801f15 	stw	r2,124(sp)
11048cbc:	98bff60e 	bge	r19,r2,11048c98 <___vfprintf_internal_r+0x914>
11048cc0:	d9801e04 	addi	r6,sp,120
11048cc4:	b80b883a 	mov	r5,r23
11048cc8:	8009883a 	mov	r4,r16
11048ccc:	1050eb00 	call	11050eb0 <__sprint_r>
11048cd0:	103eae1e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
11048cd4:	8c7ffc04 	addi	r17,r17,-16
11048cd8:	d8c02017 	ldw	r3,128(sp)
11048cdc:	d8801f17 	ldw	r2,124(sp)
11048ce0:	da000404 	addi	r8,sp,16
11048ce4:	e47fef16 	blt	fp,r17,11048ca4 <___vfprintf_internal_r+0x920>
11048ce8:	9021883a 	mov	r16,r18
11048cec:	a825883a 	mov	r18,r21
11048cf0:	b02b883a 	mov	r21,r22
11048cf4:	882d883a 	mov	r22,r17
11048cf8:	dc402917 	ldw	r17,164(sp)
11048cfc:	d9002b17 	ldw	r4,172(sp)
11048d00:	1d87883a 	add	r3,r3,r22
11048d04:	10800044 	addi	r2,r2,1
11048d08:	41000015 	stw	r4,0(r8)
11048d0c:	45800115 	stw	r22,4(r8)
11048d10:	d8c02015 	stw	r3,128(sp)
11048d14:	d8801f15 	stw	r2,124(sp)
11048d18:	010001c4 	movi	r4,7
11048d1c:	2081ee16 	blt	r4,r2,110494d8 <___vfprintf_internal_r+0x1154>
11048d20:	42000204 	addi	r8,r8,8
11048d24:	9080400c 	andi	r2,r18,256
11048d28:	1001181e 	bne	r2,zero,1104918c <___vfprintf_internal_r+0xe08>
11048d2c:	d9402e17 	ldw	r5,184(sp)
11048d30:	d8801f17 	ldw	r2,124(sp)
11048d34:	44000015 	stw	r16,0(r8)
11048d38:	1947883a 	add	r3,r3,r5
11048d3c:	10800044 	addi	r2,r2,1
11048d40:	41400115 	stw	r5,4(r8)
11048d44:	d8c02015 	stw	r3,128(sp)
11048d48:	d8801f15 	stw	r2,124(sp)
11048d4c:	010001c4 	movi	r4,7
11048d50:	2081d316 	blt	r4,r2,110494a0 <___vfprintf_internal_r+0x111c>
11048d54:	42000204 	addi	r8,r8,8
11048d58:	9480010c 	andi	r18,r18,4
11048d5c:	90003226 	beq	r18,zero,11048e28 <___vfprintf_internal_r+0xaa4>
11048d60:	d9403117 	ldw	r5,196(sp)
11048d64:	d8802a17 	ldw	r2,168(sp)
11048d68:	28a1c83a 	sub	r16,r5,r2
11048d6c:	04002e0e 	bge	zero,r16,11048e28 <___vfprintf_internal_r+0xaa4>
11048d70:	04400404 	movi	r17,16
11048d74:	d8801f17 	ldw	r2,124(sp)
11048d78:	8c04a20e 	bge	r17,r16,1104a004 <___vfprintf_internal_r+0x1c80>
11048d7c:	01444174 	movhi	r5,4357
11048d80:	295c3a84 	addi	r5,r5,28906
11048d84:	d9403515 	stw	r5,212(sp)
11048d88:	048001c4 	movi	r18,7
11048d8c:	dcc02c17 	ldw	r19,176(sp)
11048d90:	00000306 	br	11048da0 <___vfprintf_internal_r+0xa1c>
11048d94:	843ffc04 	addi	r16,r16,-16
11048d98:	42000204 	addi	r8,r8,8
11048d9c:	8c00130e 	bge	r17,r16,11048dec <___vfprintf_internal_r+0xa68>
11048da0:	01044174 	movhi	r4,4357
11048da4:	18c00404 	addi	r3,r3,16
11048da8:	10800044 	addi	r2,r2,1
11048dac:	211c3a84 	addi	r4,r4,28906
11048db0:	41000015 	stw	r4,0(r8)
11048db4:	44400115 	stw	r17,4(r8)
11048db8:	d8c02015 	stw	r3,128(sp)
11048dbc:	d8801f15 	stw	r2,124(sp)
11048dc0:	90bff40e 	bge	r18,r2,11048d94 <___vfprintf_internal_r+0xa10>
11048dc4:	d9801e04 	addi	r6,sp,120
11048dc8:	b80b883a 	mov	r5,r23
11048dcc:	9809883a 	mov	r4,r19
11048dd0:	1050eb00 	call	11050eb0 <__sprint_r>
11048dd4:	103e6d1e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
11048dd8:	843ffc04 	addi	r16,r16,-16
11048ddc:	d8c02017 	ldw	r3,128(sp)
11048de0:	d8801f17 	ldw	r2,124(sp)
11048de4:	da000404 	addi	r8,sp,16
11048de8:	8c3fed16 	blt	r17,r16,11048da0 <___vfprintf_internal_r+0xa1c>
11048dec:	d9403517 	ldw	r5,212(sp)
11048df0:	1c07883a 	add	r3,r3,r16
11048df4:	10800044 	addi	r2,r2,1
11048df8:	41400015 	stw	r5,0(r8)
11048dfc:	44000115 	stw	r16,4(r8)
11048e00:	d8c02015 	stw	r3,128(sp)
11048e04:	d8801f15 	stw	r2,124(sp)
11048e08:	010001c4 	movi	r4,7
11048e0c:	2080060e 	bge	r4,r2,11048e28 <___vfprintf_internal_r+0xaa4>
11048e10:	d9002c17 	ldw	r4,176(sp)
11048e14:	d9801e04 	addi	r6,sp,120
11048e18:	b80b883a 	mov	r5,r23
11048e1c:	1050eb00 	call	11050eb0 <__sprint_r>
11048e20:	103e5a1e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
11048e24:	d8c02017 	ldw	r3,128(sp)
11048e28:	d8803117 	ldw	r2,196(sp)
11048e2c:	d9002a17 	ldw	r4,168(sp)
11048e30:	1100010e 	bge	r2,r4,11048e38 <___vfprintf_internal_r+0xab4>
11048e34:	2005883a 	mov	r2,r4
11048e38:	d9402f17 	ldw	r5,188(sp)
11048e3c:	288b883a 	add	r5,r5,r2
11048e40:	d9402f15 	stw	r5,188(sp)
11048e44:	18019e1e 	bne	r3,zero,110494c0 <___vfprintf_internal_r+0x113c>
11048e48:	a8800007 	ldb	r2,0(r21)
11048e4c:	d8001f15 	stw	zero,124(sp)
11048e50:	da000404 	addi	r8,sp,16
11048e54:	103d851e 	bne	r2,zero,1104846c <___vfprintf_internal_r+0xe8>
11048e58:	a821883a 	mov	r16,r21
11048e5c:	003d9b06 	br	110484cc <___vfprintf_internal_r+0x148>
11048e60:	18c03fcc 	andi	r3,r3,255
11048e64:	1805c11e 	bne	r3,zero,1104a56c <___vfprintf_internal_r+0x21e8>
11048e68:	94800414 	ori	r18,r18,16
11048e6c:	9080080c 	andi	r2,r18,32
11048e70:	10020c26 	beq	r2,zero,110496a4 <___vfprintf_internal_r+0x1320>
11048e74:	d8802d17 	ldw	r2,180(sp)
11048e78:	d9002917 	ldw	r4,164(sp)
11048e7c:	d8002785 	stb	zero,158(sp)
11048e80:	10c00204 	addi	r3,r2,8
11048e84:	14c00017 	ldw	r19,0(r2)
11048e88:	15800117 	ldw	r22,4(r2)
11048e8c:	20040f16 	blt	r4,zero,11049ecc <___vfprintf_internal_r+0x1b48>
11048e90:	013fdfc4 	movi	r4,-129
11048e94:	9d84b03a 	or	r2,r19,r22
11048e98:	d8c02d15 	stw	r3,180(sp)
11048e9c:	9124703a 	and	r18,r18,r4
11048ea0:	0039883a 	mov	fp,zero
11048ea4:	103e891e 	bne	r2,zero,110488cc <___vfprintf_internal_r+0x548>
11048ea8:	d9002917 	ldw	r4,164(sp)
11048eac:	2002c11e 	bne	r4,zero,110499b4 <___vfprintf_internal_r+0x1630>
11048eb0:	d8002915 	stw	zero,164(sp)
11048eb4:	d8002e15 	stw	zero,184(sp)
11048eb8:	dc001e04 	addi	r16,sp,120
11048ebc:	003ef806 	br	11048aa0 <___vfprintf_internal_r+0x71c>
11048ec0:	18c03fcc 	andi	r3,r3,255
11048ec4:	18059d1e 	bne	r3,zero,1104a53c <___vfprintf_internal_r+0x21b8>
11048ec8:	01444174 	movhi	r5,4357
11048ecc:	295c2204 	addi	r5,r5,28808
11048ed0:	d9403915 	stw	r5,228(sp)
11048ed4:	9080080c 	andi	r2,r18,32
11048ed8:	10005226 	beq	r2,zero,11049024 <___vfprintf_internal_r+0xca0>
11048edc:	d8802d17 	ldw	r2,180(sp)
11048ee0:	14c00017 	ldw	r19,0(r2)
11048ee4:	15800117 	ldw	r22,4(r2)
11048ee8:	10800204 	addi	r2,r2,8
11048eec:	d8802d15 	stw	r2,180(sp)
11048ef0:	9080004c 	andi	r2,r18,1
11048ef4:	10019026 	beq	r2,zero,11049538 <___vfprintf_internal_r+0x11b4>
11048ef8:	9d84b03a 	or	r2,r19,r22
11048efc:	10036926 	beq	r2,zero,11049ca4 <___vfprintf_internal_r+0x1920>
11048f00:	d8c02917 	ldw	r3,164(sp)
11048f04:	00800c04 	movi	r2,48
11048f08:	d8802705 	stb	r2,156(sp)
11048f0c:	dc402745 	stb	r17,157(sp)
11048f10:	d8002785 	stb	zero,158(sp)
11048f14:	90800094 	ori	r2,r18,2
11048f18:	18045d16 	blt	r3,zero,1104a090 <___vfprintf_internal_r+0x1d0c>
11048f1c:	00bfdfc4 	movi	r2,-129
11048f20:	90a4703a 	and	r18,r18,r2
11048f24:	94800094 	ori	r18,r18,2
11048f28:	0039883a 	mov	fp,zero
11048f2c:	d9003917 	ldw	r4,228(sp)
11048f30:	dc001e04 	addi	r16,sp,120
11048f34:	988003cc 	andi	r2,r19,15
11048f38:	b006973a 	slli	r3,r22,28
11048f3c:	2085883a 	add	r2,r4,r2
11048f40:	9826d13a 	srli	r19,r19,4
11048f44:	10800003 	ldbu	r2,0(r2)
11048f48:	b02cd13a 	srli	r22,r22,4
11048f4c:	843fffc4 	addi	r16,r16,-1
11048f50:	1ce6b03a 	or	r19,r3,r19
11048f54:	80800005 	stb	r2,0(r16)
11048f58:	9d84b03a 	or	r2,r19,r22
11048f5c:	103ff51e 	bne	r2,zero,11048f34 <___vfprintf_internal_r+0xbb0>
11048f60:	d8c02817 	ldw	r3,160(sp)
11048f64:	1c07c83a 	sub	r3,r3,r16
11048f68:	d8c02e15 	stw	r3,184(sp)
11048f6c:	003ecc06 	br	11048aa0 <___vfprintf_internal_r+0x71c>
11048f70:	18c03fcc 	andi	r3,r3,255
11048f74:	183e9f26 	beq	r3,zero,110489f4 <___vfprintf_internal_r+0x670>
11048f78:	d9c02785 	stb	r7,158(sp)
11048f7c:	003e9d06 	br	110489f4 <___vfprintf_internal_r+0x670>
11048f80:	00c00044 	movi	r3,1
11048f84:	01c00ac4 	movi	r7,43
11048f88:	ac400007 	ldb	r17,0(r21)
11048f8c:	003d5e06 	br	11048508 <___vfprintf_internal_r+0x184>
11048f90:	94800814 	ori	r18,r18,32
11048f94:	ac400007 	ldb	r17,0(r21)
11048f98:	003d5b06 	br	11048508 <___vfprintf_internal_r+0x184>
11048f9c:	d8c02d17 	ldw	r3,180(sp)
11048fa0:	d8002785 	stb	zero,158(sp)
11048fa4:	1c000017 	ldw	r16,0(r3)
11048fa8:	1cc00104 	addi	r19,r3,4
11048fac:	80041926 	beq	r16,zero,1104a014 <___vfprintf_internal_r+0x1c90>
11048fb0:	d9002917 	ldw	r4,164(sp)
11048fb4:	2003d016 	blt	r4,zero,11049ef8 <___vfprintf_internal_r+0x1b74>
11048fb8:	200d883a 	mov	r6,r4
11048fbc:	000b883a 	mov	r5,zero
11048fc0:	8009883a 	mov	r4,r16
11048fc4:	da003d15 	stw	r8,244(sp)
11048fc8:	104dcb80 	call	1104dcb8 <memchr>
11048fcc:	da003d17 	ldw	r8,244(sp)
11048fd0:	10045426 	beq	r2,zero,1104a124 <___vfprintf_internal_r+0x1da0>
11048fd4:	1405c83a 	sub	r2,r2,r16
11048fd8:	d8802e15 	stw	r2,184(sp)
11048fdc:	1003cc16 	blt	r2,zero,11049f10 <___vfprintf_internal_r+0x1b8c>
11048fe0:	df002783 	ldbu	fp,158(sp)
11048fe4:	d8802a15 	stw	r2,168(sp)
11048fe8:	dcc02d15 	stw	r19,180(sp)
11048fec:	d8002915 	stw	zero,164(sp)
11048ff0:	d8003215 	stw	zero,200(sp)
11048ff4:	003eb006 	br	11048ab8 <___vfprintf_internal_r+0x734>
11048ff8:	18c03fcc 	andi	r3,r3,255
11048ffc:	183f9b26 	beq	r3,zero,11048e6c <___vfprintf_internal_r+0xae8>
11049000:	d9c02785 	stb	r7,158(sp)
11049004:	003f9906 	br	11048e6c <___vfprintf_internal_r+0xae8>
11049008:	18c03fcc 	andi	r3,r3,255
1104900c:	1805551e 	bne	r3,zero,1104a564 <___vfprintf_internal_r+0x21e0>
11049010:	01444174 	movhi	r5,4357
11049014:	295c2704 	addi	r5,r5,28828
11049018:	d9403915 	stw	r5,228(sp)
1104901c:	9080080c 	andi	r2,r18,32
11049020:	103fae1e 	bne	r2,zero,11048edc <___vfprintf_internal_r+0xb58>
11049024:	9080040c 	andi	r2,r18,16
11049028:	1002de26 	beq	r2,zero,11049ba4 <___vfprintf_internal_r+0x1820>
1104902c:	d8c02d17 	ldw	r3,180(sp)
11049030:	002d883a 	mov	r22,zero
11049034:	1cc00017 	ldw	r19,0(r3)
11049038:	18c00104 	addi	r3,r3,4
1104903c:	d8c02d15 	stw	r3,180(sp)
11049040:	003fab06 	br	11048ef0 <___vfprintf_internal_r+0xb6c>
11049044:	38803fcc 	andi	r2,r7,255
11049048:	1080201c 	xori	r2,r2,128
1104904c:	10bfe004 	addi	r2,r2,-128
11049050:	1002d21e 	bne	r2,zero,11049b9c <___vfprintf_internal_r+0x1818>
11049054:	00c00044 	movi	r3,1
11049058:	01c00804 	movi	r7,32
1104905c:	ac400007 	ldb	r17,0(r21)
11049060:	003d2906 	br	11048508 <___vfprintf_internal_r+0x184>
11049064:	94800054 	ori	r18,r18,1
11049068:	ac400007 	ldb	r17,0(r21)
1104906c:	003d2606 	br	11048508 <___vfprintf_internal_r+0x184>
11049070:	18c03fcc 	andi	r3,r3,255
11049074:	183e0526 	beq	r3,zero,1104888c <___vfprintf_internal_r+0x508>
11049078:	d9c02785 	stb	r7,158(sp)
1104907c:	003e0306 	br	1104888c <___vfprintf_internal_r+0x508>
11049080:	94801014 	ori	r18,r18,64
11049084:	ac400007 	ldb	r17,0(r21)
11049088:	003d1f06 	br	11048508 <___vfprintf_internal_r+0x184>
1104908c:	ac400007 	ldb	r17,0(r21)
11049090:	8a438726 	beq	r17,r9,11049eb0 <___vfprintf_internal_r+0x1b2c>
11049094:	94800414 	ori	r18,r18,16
11049098:	003d1b06 	br	11048508 <___vfprintf_internal_r+0x184>
1104909c:	18c03fcc 	andi	r3,r3,255
110490a0:	1805341e 	bne	r3,zero,1104a574 <___vfprintf_internal_r+0x21f0>
110490a4:	9080080c 	andi	r2,r18,32
110490a8:	1002cd26 	beq	r2,zero,11049be0 <___vfprintf_internal_r+0x185c>
110490ac:	d9402d17 	ldw	r5,180(sp)
110490b0:	d9002f17 	ldw	r4,188(sp)
110490b4:	28800017 	ldw	r2,0(r5)
110490b8:	2007d7fa 	srai	r3,r4,31
110490bc:	29400104 	addi	r5,r5,4
110490c0:	d9402d15 	stw	r5,180(sp)
110490c4:	11000015 	stw	r4,0(r2)
110490c8:	10c00115 	stw	r3,4(r2)
110490cc:	003ce506 	br	11048464 <___vfprintf_internal_r+0xe0>
110490d0:	d8c02d17 	ldw	r3,180(sp)
110490d4:	d9002d17 	ldw	r4,180(sp)
110490d8:	d8002785 	stb	zero,158(sp)
110490dc:	18800017 	ldw	r2,0(r3)
110490e0:	21000104 	addi	r4,r4,4
110490e4:	00c00044 	movi	r3,1
110490e8:	d8c02a15 	stw	r3,168(sp)
110490ec:	d8801405 	stb	r2,80(sp)
110490f0:	d9002d15 	stw	r4,180(sp)
110490f4:	d8c02e15 	stw	r3,184(sp)
110490f8:	d8002915 	stw	zero,164(sp)
110490fc:	d8003215 	stw	zero,200(sp)
11049100:	dc001404 	addi	r16,sp,80
11049104:	0039883a 	mov	fp,zero
11049108:	003e7206 	br	11048ad4 <___vfprintf_internal_r+0x750>
1104910c:	01044174 	movhi	r4,4357
11049110:	211c2704 	addi	r4,r4,28828
11049114:	0039883a 	mov	fp,zero
11049118:	d9003915 	stw	r4,228(sp)
1104911c:	04401e04 	movi	r17,120
11049120:	003f8206 	br	11048f2c <___vfprintf_internal_r+0xba8>
11049124:	18c03fcc 	andi	r3,r3,255
11049128:	1805061e 	bne	r3,zero,1104a544 <___vfprintf_internal_r+0x21c0>
1104912c:	883d9126 	beq	r17,zero,11048774 <___vfprintf_internal_r+0x3f0>
11049130:	00c00044 	movi	r3,1
11049134:	d8c02a15 	stw	r3,168(sp)
11049138:	dc401405 	stb	r17,80(sp)
1104913c:	d8002785 	stb	zero,158(sp)
11049140:	003fec06 	br	110490f4 <___vfprintf_internal_r+0xd70>
11049144:	01444174 	movhi	r5,4357
11049148:	295c2704 	addi	r5,r5,28828
1104914c:	d9403915 	stw	r5,228(sp)
11049150:	d8c02d15 	stw	r3,180(sp)
11049154:	1025883a 	mov	r18,r2
11049158:	04401e04 	movi	r17,120
1104915c:	9d84b03a 	or	r2,r19,r22
11049160:	1000fc1e 	bne	r2,zero,11049554 <___vfprintf_internal_r+0x11d0>
11049164:	0039883a 	mov	fp,zero
11049168:	00800084 	movi	r2,2
1104916c:	10803fcc 	andi	r2,r2,255
11049170:	00c00044 	movi	r3,1
11049174:	10c20f26 	beq	r2,r3,110499b4 <___vfprintf_internal_r+0x1630>
11049178:	00c00084 	movi	r3,2
1104917c:	10fd6326 	beq	r2,r3,1104870c <___vfprintf_internal_r+0x388>
11049180:	003e2d06 	br	11048a38 <___vfprintf_internal_r+0x6b4>
11049184:	d8c02017 	ldw	r3,128(sp)
11049188:	003e9306 	br	11048bd8 <___vfprintf_internal_r+0x854>
1104918c:	00801944 	movi	r2,101
11049190:	14407e0e 	bge	r2,r17,1104938c <___vfprintf_internal_r+0x1008>
11049194:	d9003617 	ldw	r4,216(sp)
11049198:	d9403817 	ldw	r5,224(sp)
1104919c:	000d883a 	mov	r6,zero
110491a0:	000f883a 	mov	r7,zero
110491a4:	d8c03c15 	stw	r3,240(sp)
110491a8:	da003d15 	stw	r8,244(sp)
110491ac:	1044bd80 	call	11044bd8 <__eqdf2>
110491b0:	d8c03c17 	ldw	r3,240(sp)
110491b4:	da003d17 	ldw	r8,244(sp)
110491b8:	1000f71e 	bne	r2,zero,11049598 <___vfprintf_internal_r+0x1214>
110491bc:	d8801f17 	ldw	r2,124(sp)
110491c0:	01044174 	movhi	r4,4357
110491c4:	211c2e04 	addi	r4,r4,28856
110491c8:	18c00044 	addi	r3,r3,1
110491cc:	10800044 	addi	r2,r2,1
110491d0:	41000015 	stw	r4,0(r8)
110491d4:	01000044 	movi	r4,1
110491d8:	41000115 	stw	r4,4(r8)
110491dc:	d8c02015 	stw	r3,128(sp)
110491e0:	d8801f15 	stw	r2,124(sp)
110491e4:	010001c4 	movi	r4,7
110491e8:	2082b816 	blt	r4,r2,11049ccc <___vfprintf_internal_r+0x1948>
110491ec:	42000204 	addi	r8,r8,8
110491f0:	d8802617 	ldw	r2,152(sp)
110491f4:	d9403317 	ldw	r5,204(sp)
110491f8:	11400216 	blt	r2,r5,11049204 <___vfprintf_internal_r+0xe80>
110491fc:	9080004c 	andi	r2,r18,1
11049200:	103ed526 	beq	r2,zero,11048d58 <___vfprintf_internal_r+0x9d4>
11049204:	d8803717 	ldw	r2,220(sp)
11049208:	d9003417 	ldw	r4,208(sp)
1104920c:	d9403717 	ldw	r5,220(sp)
11049210:	1887883a 	add	r3,r3,r2
11049214:	d8801f17 	ldw	r2,124(sp)
11049218:	41000015 	stw	r4,0(r8)
1104921c:	41400115 	stw	r5,4(r8)
11049220:	10800044 	addi	r2,r2,1
11049224:	d8c02015 	stw	r3,128(sp)
11049228:	d8801f15 	stw	r2,124(sp)
1104922c:	010001c4 	movi	r4,7
11049230:	20832916 	blt	r4,r2,11049ed8 <___vfprintf_internal_r+0x1b54>
11049234:	42000204 	addi	r8,r8,8
11049238:	d8803317 	ldw	r2,204(sp)
1104923c:	143fffc4 	addi	r16,r2,-1
11049240:	043ec50e 	bge	zero,r16,11048d58 <___vfprintf_internal_r+0x9d4>
11049244:	04400404 	movi	r17,16
11049248:	d8801f17 	ldw	r2,124(sp)
1104924c:	8c00880e 	bge	r17,r16,11049470 <___vfprintf_internal_r+0x10ec>
11049250:	01444174 	movhi	r5,4357
11049254:	295c3684 	addi	r5,r5,28890
11049258:	d9402b15 	stw	r5,172(sp)
1104925c:	058001c4 	movi	r22,7
11049260:	dcc02c17 	ldw	r19,176(sp)
11049264:	00000306 	br	11049274 <___vfprintf_internal_r+0xef0>
11049268:	42000204 	addi	r8,r8,8
1104926c:	843ffc04 	addi	r16,r16,-16
11049270:	8c00820e 	bge	r17,r16,1104947c <___vfprintf_internal_r+0x10f8>
11049274:	18c00404 	addi	r3,r3,16
11049278:	10800044 	addi	r2,r2,1
1104927c:	45000015 	stw	r20,0(r8)
11049280:	44400115 	stw	r17,4(r8)
11049284:	d8c02015 	stw	r3,128(sp)
11049288:	d8801f15 	stw	r2,124(sp)
1104928c:	b0bff60e 	bge	r22,r2,11049268 <___vfprintf_internal_r+0xee4>
11049290:	d9801e04 	addi	r6,sp,120
11049294:	b80b883a 	mov	r5,r23
11049298:	9809883a 	mov	r4,r19
1104929c:	1050eb00 	call	11050eb0 <__sprint_r>
110492a0:	103d3a1e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
110492a4:	d8c02017 	ldw	r3,128(sp)
110492a8:	d8801f17 	ldw	r2,124(sp)
110492ac:	da000404 	addi	r8,sp,16
110492b0:	003fee06 	br	1104926c <___vfprintf_internal_r+0xee8>
110492b4:	d9403117 	ldw	r5,196(sp)
110492b8:	d8802a17 	ldw	r2,168(sp)
110492bc:	28adc83a 	sub	r22,r5,r2
110492c0:	05be630e 	bge	zero,r22,11048c50 <___vfprintf_internal_r+0x8cc>
110492c4:	07000404 	movi	fp,16
110492c8:	d8801f17 	ldw	r2,124(sp)
110492cc:	e5838f0e 	bge	fp,r22,1104a10c <___vfprintf_internal_r+0x1d88>
110492d0:	01444174 	movhi	r5,4357
110492d4:	295c3684 	addi	r5,r5,28890
110492d8:	dc403015 	stw	r17,192(sp)
110492dc:	d9402b15 	stw	r5,172(sp)
110492e0:	b023883a 	mov	r17,r22
110492e4:	04c001c4 	movi	r19,7
110492e8:	a82d883a 	mov	r22,r21
110492ec:	902b883a 	mov	r21,r18
110492f0:	8025883a 	mov	r18,r16
110492f4:	dc002c17 	ldw	r16,176(sp)
110492f8:	00000306 	br	11049308 <___vfprintf_internal_r+0xf84>
110492fc:	8c7ffc04 	addi	r17,r17,-16
11049300:	42000204 	addi	r8,r8,8
11049304:	e440110e 	bge	fp,r17,1104934c <___vfprintf_internal_r+0xfc8>
11049308:	18c00404 	addi	r3,r3,16
1104930c:	10800044 	addi	r2,r2,1
11049310:	45000015 	stw	r20,0(r8)
11049314:	47000115 	stw	fp,4(r8)
11049318:	d8c02015 	stw	r3,128(sp)
1104931c:	d8801f15 	stw	r2,124(sp)
11049320:	98bff60e 	bge	r19,r2,110492fc <___vfprintf_internal_r+0xf78>
11049324:	d9801e04 	addi	r6,sp,120
11049328:	b80b883a 	mov	r5,r23
1104932c:	8009883a 	mov	r4,r16
11049330:	1050eb00 	call	11050eb0 <__sprint_r>
11049334:	103d151e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
11049338:	8c7ffc04 	addi	r17,r17,-16
1104933c:	d8c02017 	ldw	r3,128(sp)
11049340:	d8801f17 	ldw	r2,124(sp)
11049344:	da000404 	addi	r8,sp,16
11049348:	e47fef16 	blt	fp,r17,11049308 <___vfprintf_internal_r+0xf84>
1104934c:	9021883a 	mov	r16,r18
11049350:	a825883a 	mov	r18,r21
11049354:	b02b883a 	mov	r21,r22
11049358:	882d883a 	mov	r22,r17
1104935c:	dc403017 	ldw	r17,192(sp)
11049360:	d9002b17 	ldw	r4,172(sp)
11049364:	1d87883a 	add	r3,r3,r22
11049368:	10800044 	addi	r2,r2,1
1104936c:	41000015 	stw	r4,0(r8)
11049370:	45800115 	stw	r22,4(r8)
11049374:	d8c02015 	stw	r3,128(sp)
11049378:	d8801f15 	stw	r2,124(sp)
1104937c:	010001c4 	movi	r4,7
11049380:	20818e16 	blt	r4,r2,110499bc <___vfprintf_internal_r+0x1638>
11049384:	42000204 	addi	r8,r8,8
11049388:	003e3106 	br	11048c50 <___vfprintf_internal_r+0x8cc>
1104938c:	d9403317 	ldw	r5,204(sp)
11049390:	00800044 	movi	r2,1
11049394:	18c00044 	addi	r3,r3,1
11049398:	1141530e 	bge	r2,r5,110498e8 <___vfprintf_internal_r+0x1564>
1104939c:	dc401f17 	ldw	r17,124(sp)
110493a0:	00800044 	movi	r2,1
110493a4:	40800115 	stw	r2,4(r8)
110493a8:	8c400044 	addi	r17,r17,1
110493ac:	44000015 	stw	r16,0(r8)
110493b0:	d8c02015 	stw	r3,128(sp)
110493b4:	dc401f15 	stw	r17,124(sp)
110493b8:	008001c4 	movi	r2,7
110493bc:	14416b16 	blt	r2,r17,1104996c <___vfprintf_internal_r+0x15e8>
110493c0:	42000204 	addi	r8,r8,8
110493c4:	d8803717 	ldw	r2,220(sp)
110493c8:	d9003417 	ldw	r4,208(sp)
110493cc:	8c400044 	addi	r17,r17,1
110493d0:	10c7883a 	add	r3,r2,r3
110493d4:	40800115 	stw	r2,4(r8)
110493d8:	41000015 	stw	r4,0(r8)
110493dc:	d8c02015 	stw	r3,128(sp)
110493e0:	dc401f15 	stw	r17,124(sp)
110493e4:	008001c4 	movi	r2,7
110493e8:	14416916 	blt	r2,r17,11049990 <___vfprintf_internal_r+0x160c>
110493ec:	45800204 	addi	r22,r8,8
110493f0:	d9003617 	ldw	r4,216(sp)
110493f4:	d9403817 	ldw	r5,224(sp)
110493f8:	000d883a 	mov	r6,zero
110493fc:	000f883a 	mov	r7,zero
11049400:	d8c03c15 	stw	r3,240(sp)
11049404:	1044bd80 	call	11044bd8 <__eqdf2>
11049408:	d8c03c17 	ldw	r3,240(sp)
1104940c:	1000bc26 	beq	r2,zero,11049700 <___vfprintf_internal_r+0x137c>
11049410:	d9403317 	ldw	r5,204(sp)
11049414:	84000044 	addi	r16,r16,1
11049418:	8c400044 	addi	r17,r17,1
1104941c:	28bfffc4 	addi	r2,r5,-1
11049420:	1887883a 	add	r3,r3,r2
11049424:	b0800115 	stw	r2,4(r22)
11049428:	b4000015 	stw	r16,0(r22)
1104942c:	d8c02015 	stw	r3,128(sp)
11049430:	dc401f15 	stw	r17,124(sp)
11049434:	008001c4 	movi	r2,7
11049438:	14414316 	blt	r2,r17,11049948 <___vfprintf_internal_r+0x15c4>
1104943c:	b5800204 	addi	r22,r22,8
11049440:	d9003a17 	ldw	r4,232(sp)
11049444:	df0022c4 	addi	fp,sp,139
11049448:	8c400044 	addi	r17,r17,1
1104944c:	20c7883a 	add	r3,r4,r3
11049450:	b7000015 	stw	fp,0(r22)
11049454:	b1000115 	stw	r4,4(r22)
11049458:	d8c02015 	stw	r3,128(sp)
1104945c:	dc401f15 	stw	r17,124(sp)
11049460:	008001c4 	movi	r2,7
11049464:	14400e16 	blt	r2,r17,110494a0 <___vfprintf_internal_r+0x111c>
11049468:	b2000204 	addi	r8,r22,8
1104946c:	003e3a06 	br	11048d58 <___vfprintf_internal_r+0x9d4>
11049470:	01044174 	movhi	r4,4357
11049474:	211c3684 	addi	r4,r4,28890
11049478:	d9002b15 	stw	r4,172(sp)
1104947c:	d9002b17 	ldw	r4,172(sp)
11049480:	1c07883a 	add	r3,r3,r16
11049484:	44000115 	stw	r16,4(r8)
11049488:	41000015 	stw	r4,0(r8)
1104948c:	10800044 	addi	r2,r2,1
11049490:	d8c02015 	stw	r3,128(sp)
11049494:	d8801f15 	stw	r2,124(sp)
11049498:	010001c4 	movi	r4,7
1104949c:	20be2d0e 	bge	r4,r2,11048d54 <___vfprintf_internal_r+0x9d0>
110494a0:	d9002c17 	ldw	r4,176(sp)
110494a4:	d9801e04 	addi	r6,sp,120
110494a8:	b80b883a 	mov	r5,r23
110494ac:	1050eb00 	call	11050eb0 <__sprint_r>
110494b0:	103cb61e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
110494b4:	d8c02017 	ldw	r3,128(sp)
110494b8:	da000404 	addi	r8,sp,16
110494bc:	003e2606 	br	11048d58 <___vfprintf_internal_r+0x9d4>
110494c0:	d9002c17 	ldw	r4,176(sp)
110494c4:	d9801e04 	addi	r6,sp,120
110494c8:	b80b883a 	mov	r5,r23
110494cc:	1050eb00 	call	11050eb0 <__sprint_r>
110494d0:	103e5d26 	beq	r2,zero,11048e48 <___vfprintf_internal_r+0xac4>
110494d4:	003cad06 	br	1104878c <___vfprintf_internal_r+0x408>
110494d8:	d9002c17 	ldw	r4,176(sp)
110494dc:	d9801e04 	addi	r6,sp,120
110494e0:	b80b883a 	mov	r5,r23
110494e4:	1050eb00 	call	11050eb0 <__sprint_r>
110494e8:	103ca81e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
110494ec:	d8c02017 	ldw	r3,128(sp)
110494f0:	da000404 	addi	r8,sp,16
110494f4:	003e0b06 	br	11048d24 <___vfprintf_internal_r+0x9a0>
110494f8:	d9002c17 	ldw	r4,176(sp)
110494fc:	d9801e04 	addi	r6,sp,120
11049500:	b80b883a 	mov	r5,r23
11049504:	1050eb00 	call	11050eb0 <__sprint_r>
11049508:	103ca01e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
1104950c:	d8c02017 	ldw	r3,128(sp)
11049510:	da000404 	addi	r8,sp,16
11049514:	003dbd06 	br	11048c0c <___vfprintf_internal_r+0x888>
11049518:	d9002c17 	ldw	r4,176(sp)
1104951c:	d9801e04 	addi	r6,sp,120
11049520:	b80b883a 	mov	r5,r23
11049524:	1050eb00 	call	11050eb0 <__sprint_r>
11049528:	103c981e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
1104952c:	d8c02017 	ldw	r3,128(sp)
11049530:	da000404 	addi	r8,sp,16
11049534:	003dc306 	br	11048c44 <___vfprintf_internal_r+0x8c0>
11049538:	d8802917 	ldw	r2,164(sp)
1104953c:	d8002785 	stb	zero,158(sp)
11049540:	103f0616 	blt	r2,zero,1104915c <___vfprintf_internal_r+0xdd8>
11049544:	00ffdfc4 	movi	r3,-129
11049548:	9d84b03a 	or	r2,r19,r22
1104954c:	90e4703a 	and	r18,r18,r3
11049550:	103c6b26 	beq	r2,zero,11048700 <___vfprintf_internal_r+0x37c>
11049554:	0039883a 	mov	fp,zero
11049558:	003e7406 	br	11048f2c <___vfprintf_internal_r+0xba8>
1104955c:	9080040c 	andi	r2,r18,16
11049560:	1001b326 	beq	r2,zero,11049c30 <___vfprintf_internal_r+0x18ac>
11049564:	d9002d17 	ldw	r4,180(sp)
11049568:	d9402917 	ldw	r5,164(sp)
1104956c:	d8002785 	stb	zero,158(sp)
11049570:	20800104 	addi	r2,r4,4
11049574:	24c00017 	ldw	r19,0(r4)
11049578:	002d883a 	mov	r22,zero
1104957c:	2801b516 	blt	r5,zero,11049c54 <___vfprintf_internal_r+0x18d0>
11049580:	00ffdfc4 	movi	r3,-129
11049584:	d8802d15 	stw	r2,180(sp)
11049588:	90e4703a 	and	r18,r18,r3
1104958c:	983d2726 	beq	r19,zero,11048a2c <___vfprintf_internal_r+0x6a8>
11049590:	0039883a 	mov	fp,zero
11049594:	003d2a06 	br	11048a40 <___vfprintf_internal_r+0x6bc>
11049598:	dc402617 	ldw	r17,152(sp)
1104959c:	0441d30e 	bge	zero,r17,11049cec <___vfprintf_internal_r+0x1968>
110495a0:	dc403217 	ldw	r17,200(sp)
110495a4:	d8803317 	ldw	r2,204(sp)
110495a8:	1440010e 	bge	r2,r17,110495b0 <___vfprintf_internal_r+0x122c>
110495ac:	1023883a 	mov	r17,r2
110495b0:	04400a0e 	bge	zero,r17,110495dc <___vfprintf_internal_r+0x1258>
110495b4:	d8801f17 	ldw	r2,124(sp)
110495b8:	1c47883a 	add	r3,r3,r17
110495bc:	44000015 	stw	r16,0(r8)
110495c0:	10800044 	addi	r2,r2,1
110495c4:	44400115 	stw	r17,4(r8)
110495c8:	d8c02015 	stw	r3,128(sp)
110495cc:	d8801f15 	stw	r2,124(sp)
110495d0:	010001c4 	movi	r4,7
110495d4:	20826516 	blt	r4,r2,11049f6c <___vfprintf_internal_r+0x1be8>
110495d8:	42000204 	addi	r8,r8,8
110495dc:	88026116 	blt	r17,zero,11049f64 <___vfprintf_internal_r+0x1be0>
110495e0:	d9003217 	ldw	r4,200(sp)
110495e4:	2463c83a 	sub	r17,r4,r17
110495e8:	04407b0e 	bge	zero,r17,110497d8 <___vfprintf_internal_r+0x1454>
110495ec:	05800404 	movi	r22,16
110495f0:	d8801f17 	ldw	r2,124(sp)
110495f4:	b4419d0e 	bge	r22,r17,11049c6c <___vfprintf_internal_r+0x18e8>
110495f8:	01044174 	movhi	r4,4357
110495fc:	211c3684 	addi	r4,r4,28890
11049600:	d9002b15 	stw	r4,172(sp)
11049604:	070001c4 	movi	fp,7
11049608:	dcc02c17 	ldw	r19,176(sp)
1104960c:	00000306 	br	1104961c <___vfprintf_internal_r+0x1298>
11049610:	42000204 	addi	r8,r8,8
11049614:	8c7ffc04 	addi	r17,r17,-16
11049618:	b441970e 	bge	r22,r17,11049c78 <___vfprintf_internal_r+0x18f4>
1104961c:	18c00404 	addi	r3,r3,16
11049620:	10800044 	addi	r2,r2,1
11049624:	45000015 	stw	r20,0(r8)
11049628:	45800115 	stw	r22,4(r8)
1104962c:	d8c02015 	stw	r3,128(sp)
11049630:	d8801f15 	stw	r2,124(sp)
11049634:	e0bff60e 	bge	fp,r2,11049610 <___vfprintf_internal_r+0x128c>
11049638:	d9801e04 	addi	r6,sp,120
1104963c:	b80b883a 	mov	r5,r23
11049640:	9809883a 	mov	r4,r19
11049644:	1050eb00 	call	11050eb0 <__sprint_r>
11049648:	103c501e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
1104964c:	d8c02017 	ldw	r3,128(sp)
11049650:	d8801f17 	ldw	r2,124(sp)
11049654:	da000404 	addi	r8,sp,16
11049658:	003fee06 	br	11049614 <___vfprintf_internal_r+0x1290>
1104965c:	d9002c17 	ldw	r4,176(sp)
11049660:	d9801e04 	addi	r6,sp,120
11049664:	b80b883a 	mov	r5,r23
11049668:	1050eb00 	call	11050eb0 <__sprint_r>
1104966c:	103c471e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
11049670:	d8c02017 	ldw	r3,128(sp)
11049674:	df002787 	ldb	fp,158(sp)
11049678:	da000404 	addi	r8,sp,16
1104967c:	003d5606 	br	11048bd8 <___vfprintf_internal_r+0x854>
11049680:	9080040c 	andi	r2,r18,16
11049684:	10016126 	beq	r2,zero,11049c0c <___vfprintf_internal_r+0x1888>
11049688:	d8802d17 	ldw	r2,180(sp)
1104968c:	14c00017 	ldw	r19,0(r2)
11049690:	10800104 	addi	r2,r2,4
11049694:	d8802d15 	stw	r2,180(sp)
11049698:	982dd7fa 	srai	r22,r19,31
1104969c:	b005883a 	mov	r2,r22
110496a0:	003c8206 	br	110488ac <___vfprintf_internal_r+0x528>
110496a4:	9080040c 	andi	r2,r18,16
110496a8:	10003526 	beq	r2,zero,11049780 <___vfprintf_internal_r+0x13fc>
110496ac:	d9402d17 	ldw	r5,180(sp)
110496b0:	d8c02917 	ldw	r3,164(sp)
110496b4:	d8002785 	stb	zero,158(sp)
110496b8:	28800104 	addi	r2,r5,4
110496bc:	2cc00017 	ldw	r19,0(r5)
110496c0:	002d883a 	mov	r22,zero
110496c4:	18003716 	blt	r3,zero,110497a4 <___vfprintf_internal_r+0x1420>
110496c8:	00ffdfc4 	movi	r3,-129
110496cc:	d8802d15 	stw	r2,180(sp)
110496d0:	90e4703a 	and	r18,r18,r3
110496d4:	0039883a 	mov	fp,zero
110496d8:	983df326 	beq	r19,zero,11048ea8 <___vfprintf_internal_r+0xb24>
110496dc:	00800244 	movi	r2,9
110496e0:	14fc7b36 	bltu	r2,r19,110488d0 <___vfprintf_internal_r+0x54c>
110496e4:	d8c02817 	ldw	r3,160(sp)
110496e8:	dc001dc4 	addi	r16,sp,119
110496ec:	9cc00c04 	addi	r19,r19,48
110496f0:	1c07c83a 	sub	r3,r3,r16
110496f4:	dcc01dc5 	stb	r19,119(sp)
110496f8:	d8c02e15 	stw	r3,184(sp)
110496fc:	003ce806 	br	11048aa0 <___vfprintf_internal_r+0x71c>
11049700:	d8803317 	ldw	r2,204(sp)
11049704:	143fffc4 	addi	r16,r2,-1
11049708:	043f4d0e 	bge	zero,r16,11049440 <___vfprintf_internal_r+0x10bc>
1104970c:	07000404 	movi	fp,16
11049710:	e400810e 	bge	fp,r16,11049918 <___vfprintf_internal_r+0x1594>
11049714:	01444174 	movhi	r5,4357
11049718:	295c3684 	addi	r5,r5,28890
1104971c:	d9402b15 	stw	r5,172(sp)
11049720:	01c001c4 	movi	r7,7
11049724:	dcc02c17 	ldw	r19,176(sp)
11049728:	00000306 	br	11049738 <___vfprintf_internal_r+0x13b4>
1104972c:	b5800204 	addi	r22,r22,8
11049730:	843ffc04 	addi	r16,r16,-16
11049734:	e4007b0e 	bge	fp,r16,11049924 <___vfprintf_internal_r+0x15a0>
11049738:	18c00404 	addi	r3,r3,16
1104973c:	8c400044 	addi	r17,r17,1
11049740:	b5000015 	stw	r20,0(r22)
11049744:	b7000115 	stw	fp,4(r22)
11049748:	d8c02015 	stw	r3,128(sp)
1104974c:	dc401f15 	stw	r17,124(sp)
11049750:	3c7ff60e 	bge	r7,r17,1104972c <___vfprintf_internal_r+0x13a8>
11049754:	d9801e04 	addi	r6,sp,120
11049758:	b80b883a 	mov	r5,r23
1104975c:	9809883a 	mov	r4,r19
11049760:	d9c03c15 	stw	r7,240(sp)
11049764:	1050eb00 	call	11050eb0 <__sprint_r>
11049768:	d9c03c17 	ldw	r7,240(sp)
1104976c:	103c071e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
11049770:	d8c02017 	ldw	r3,128(sp)
11049774:	dc401f17 	ldw	r17,124(sp)
11049778:	dd800404 	addi	r22,sp,16
1104977c:	003fec06 	br	11049730 <___vfprintf_internal_r+0x13ac>
11049780:	9080100c 	andi	r2,r18,64
11049784:	d8002785 	stb	zero,158(sp)
11049788:	10010e26 	beq	r2,zero,11049bc4 <___vfprintf_internal_r+0x1840>
1104978c:	d9002d17 	ldw	r4,180(sp)
11049790:	d9402917 	ldw	r5,164(sp)
11049794:	002d883a 	mov	r22,zero
11049798:	20800104 	addi	r2,r4,4
1104979c:	24c0000b 	ldhu	r19,0(r4)
110497a0:	283fc90e 	bge	r5,zero,110496c8 <___vfprintf_internal_r+0x1344>
110497a4:	d8802d15 	stw	r2,180(sp)
110497a8:	0039883a 	mov	fp,zero
110497ac:	9d84b03a 	or	r2,r19,r22
110497b0:	103c461e 	bne	r2,zero,110488cc <___vfprintf_internal_r+0x548>
110497b4:	00800044 	movi	r2,1
110497b8:	003e6c06 	br	1104916c <___vfprintf_internal_r+0xde8>
110497bc:	d9002c17 	ldw	r4,176(sp)
110497c0:	d9801e04 	addi	r6,sp,120
110497c4:	b80b883a 	mov	r5,r23
110497c8:	1050eb00 	call	11050eb0 <__sprint_r>
110497cc:	103bef1e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
110497d0:	d8c02017 	ldw	r3,128(sp)
110497d4:	da000404 	addi	r8,sp,16
110497d8:	d9003217 	ldw	r4,200(sp)
110497dc:	d8802617 	ldw	r2,152(sp)
110497e0:	d9403317 	ldw	r5,204(sp)
110497e4:	8123883a 	add	r17,r16,r4
110497e8:	11400216 	blt	r2,r5,110497f4 <___vfprintf_internal_r+0x1470>
110497ec:	9100004c 	andi	r4,r18,1
110497f0:	20000d26 	beq	r4,zero,11049828 <___vfprintf_internal_r+0x14a4>
110497f4:	d9003717 	ldw	r4,220(sp)
110497f8:	d9403417 	ldw	r5,208(sp)
110497fc:	1907883a 	add	r3,r3,r4
11049800:	d9001f17 	ldw	r4,124(sp)
11049804:	41400015 	stw	r5,0(r8)
11049808:	d9403717 	ldw	r5,220(sp)
1104980c:	21000044 	addi	r4,r4,1
11049810:	d8c02015 	stw	r3,128(sp)
11049814:	41400115 	stw	r5,4(r8)
11049818:	d9001f15 	stw	r4,124(sp)
1104981c:	014001c4 	movi	r5,7
11049820:	2901e816 	blt	r5,r4,11049fc4 <___vfprintf_internal_r+0x1c40>
11049824:	42000204 	addi	r8,r8,8
11049828:	d9003317 	ldw	r4,204(sp)
1104982c:	8121883a 	add	r16,r16,r4
11049830:	2085c83a 	sub	r2,r4,r2
11049834:	8461c83a 	sub	r16,r16,r17
11049838:	1400010e 	bge	r2,r16,11049840 <___vfprintf_internal_r+0x14bc>
1104983c:	1021883a 	mov	r16,r2
11049840:	04000a0e 	bge	zero,r16,1104986c <___vfprintf_internal_r+0x14e8>
11049844:	d9001f17 	ldw	r4,124(sp)
11049848:	1c07883a 	add	r3,r3,r16
1104984c:	44400015 	stw	r17,0(r8)
11049850:	21000044 	addi	r4,r4,1
11049854:	44000115 	stw	r16,4(r8)
11049858:	d8c02015 	stw	r3,128(sp)
1104985c:	d9001f15 	stw	r4,124(sp)
11049860:	014001c4 	movi	r5,7
11049864:	2901fb16 	blt	r5,r4,1104a054 <___vfprintf_internal_r+0x1cd0>
11049868:	42000204 	addi	r8,r8,8
1104986c:	8001f716 	blt	r16,zero,1104a04c <___vfprintf_internal_r+0x1cc8>
11049870:	1421c83a 	sub	r16,r2,r16
11049874:	043d380e 	bge	zero,r16,11048d58 <___vfprintf_internal_r+0x9d4>
11049878:	04400404 	movi	r17,16
1104987c:	d8801f17 	ldw	r2,124(sp)
11049880:	8c3efb0e 	bge	r17,r16,11049470 <___vfprintf_internal_r+0x10ec>
11049884:	01444174 	movhi	r5,4357
11049888:	295c3684 	addi	r5,r5,28890
1104988c:	d9402b15 	stw	r5,172(sp)
11049890:	058001c4 	movi	r22,7
11049894:	dcc02c17 	ldw	r19,176(sp)
11049898:	00000306 	br	110498a8 <___vfprintf_internal_r+0x1524>
1104989c:	42000204 	addi	r8,r8,8
110498a0:	843ffc04 	addi	r16,r16,-16
110498a4:	8c3ef50e 	bge	r17,r16,1104947c <___vfprintf_internal_r+0x10f8>
110498a8:	18c00404 	addi	r3,r3,16
110498ac:	10800044 	addi	r2,r2,1
110498b0:	45000015 	stw	r20,0(r8)
110498b4:	44400115 	stw	r17,4(r8)
110498b8:	d8c02015 	stw	r3,128(sp)
110498bc:	d8801f15 	stw	r2,124(sp)
110498c0:	b0bff60e 	bge	r22,r2,1104989c <___vfprintf_internal_r+0x1518>
110498c4:	d9801e04 	addi	r6,sp,120
110498c8:	b80b883a 	mov	r5,r23
110498cc:	9809883a 	mov	r4,r19
110498d0:	1050eb00 	call	11050eb0 <__sprint_r>
110498d4:	103bad1e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
110498d8:	d8c02017 	ldw	r3,128(sp)
110498dc:	d8801f17 	ldw	r2,124(sp)
110498e0:	da000404 	addi	r8,sp,16
110498e4:	003fee06 	br	110498a0 <___vfprintf_internal_r+0x151c>
110498e8:	9088703a 	and	r4,r18,r2
110498ec:	203eab1e 	bne	r4,zero,1104939c <___vfprintf_internal_r+0x1018>
110498f0:	dc401f17 	ldw	r17,124(sp)
110498f4:	40800115 	stw	r2,4(r8)
110498f8:	44000015 	stw	r16,0(r8)
110498fc:	8c400044 	addi	r17,r17,1
11049900:	d8c02015 	stw	r3,128(sp)
11049904:	dc401f15 	stw	r17,124(sp)
11049908:	008001c4 	movi	r2,7
1104990c:	14400e16 	blt	r2,r17,11049948 <___vfprintf_internal_r+0x15c4>
11049910:	45800204 	addi	r22,r8,8
11049914:	003eca06 	br	11049440 <___vfprintf_internal_r+0x10bc>
11049918:	01044174 	movhi	r4,4357
1104991c:	211c3684 	addi	r4,r4,28890
11049920:	d9002b15 	stw	r4,172(sp)
11049924:	d8802b17 	ldw	r2,172(sp)
11049928:	1c07883a 	add	r3,r3,r16
1104992c:	8c400044 	addi	r17,r17,1
11049930:	b0800015 	stw	r2,0(r22)
11049934:	b4000115 	stw	r16,4(r22)
11049938:	d8c02015 	stw	r3,128(sp)
1104993c:	dc401f15 	stw	r17,124(sp)
11049940:	008001c4 	movi	r2,7
11049944:	147ebd0e 	bge	r2,r17,1104943c <___vfprintf_internal_r+0x10b8>
11049948:	d9002c17 	ldw	r4,176(sp)
1104994c:	d9801e04 	addi	r6,sp,120
11049950:	b80b883a 	mov	r5,r23
11049954:	1050eb00 	call	11050eb0 <__sprint_r>
11049958:	103b8c1e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
1104995c:	d8c02017 	ldw	r3,128(sp)
11049960:	dc401f17 	ldw	r17,124(sp)
11049964:	dd800404 	addi	r22,sp,16
11049968:	003eb506 	br	11049440 <___vfprintf_internal_r+0x10bc>
1104996c:	d9002c17 	ldw	r4,176(sp)
11049970:	d9801e04 	addi	r6,sp,120
11049974:	b80b883a 	mov	r5,r23
11049978:	1050eb00 	call	11050eb0 <__sprint_r>
1104997c:	103b831e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
11049980:	d8c02017 	ldw	r3,128(sp)
11049984:	dc401f17 	ldw	r17,124(sp)
11049988:	da000404 	addi	r8,sp,16
1104998c:	003e8d06 	br	110493c4 <___vfprintf_internal_r+0x1040>
11049990:	d9002c17 	ldw	r4,176(sp)
11049994:	d9801e04 	addi	r6,sp,120
11049998:	b80b883a 	mov	r5,r23
1104999c:	1050eb00 	call	11050eb0 <__sprint_r>
110499a0:	103b7a1e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
110499a4:	d8c02017 	ldw	r3,128(sp)
110499a8:	dc401f17 	ldw	r17,124(sp)
110499ac:	dd800404 	addi	r22,sp,16
110499b0:	003e8f06 	br	110493f0 <___vfprintf_internal_r+0x106c>
110499b4:	0027883a 	mov	r19,zero
110499b8:	003f4a06 	br	110496e4 <___vfprintf_internal_r+0x1360>
110499bc:	d9002c17 	ldw	r4,176(sp)
110499c0:	d9801e04 	addi	r6,sp,120
110499c4:	b80b883a 	mov	r5,r23
110499c8:	1050eb00 	call	11050eb0 <__sprint_r>
110499cc:	103b6f1e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
110499d0:	d8c02017 	ldw	r3,128(sp)
110499d4:	da000404 	addi	r8,sp,16
110499d8:	003c9d06 	br	11048c50 <___vfprintf_internal_r+0x8cc>
110499dc:	04e7c83a 	sub	r19,zero,r19
110499e0:	9804c03a 	cmpne	r2,r19,zero
110499e4:	05adc83a 	sub	r22,zero,r22
110499e8:	b0adc83a 	sub	r22,r22,r2
110499ec:	d8802917 	ldw	r2,164(sp)
110499f0:	07000b44 	movi	fp,45
110499f4:	df002785 	stb	fp,158(sp)
110499f8:	10017b16 	blt	r2,zero,11049fe8 <___vfprintf_internal_r+0x1c64>
110499fc:	00bfdfc4 	movi	r2,-129
11049a00:	90a4703a 	and	r18,r18,r2
11049a04:	003bb106 	br	110488cc <___vfprintf_internal_r+0x548>
11049a08:	d9003617 	ldw	r4,216(sp)
11049a0c:	d9403817 	ldw	r5,224(sp)
11049a10:	da003d15 	stw	r8,244(sp)
11049a14:	104f6c80 	call	1104f6c8 <__fpclassifyd>
11049a18:	da003d17 	ldw	r8,244(sp)
11049a1c:	1000f026 	beq	r2,zero,11049de0 <___vfprintf_internal_r+0x1a5c>
11049a20:	d9002917 	ldw	r4,164(sp)
11049a24:	05bff7c4 	movi	r22,-33
11049a28:	00bfffc4 	movi	r2,-1
11049a2c:	8dac703a 	and	r22,r17,r22
11049a30:	20820026 	beq	r4,r2,1104a234 <___vfprintf_internal_r+0x1eb0>
11049a34:	008011c4 	movi	r2,71
11049a38:	b081f726 	beq	r22,r2,1104a218 <___vfprintf_internal_r+0x1e94>
11049a3c:	d9003817 	ldw	r4,224(sp)
11049a40:	90c04014 	ori	r3,r18,256
11049a44:	d8c02b15 	stw	r3,172(sp)
11049a48:	20021516 	blt	r4,zero,1104a2a0 <___vfprintf_internal_r+0x1f1c>
11049a4c:	dcc03817 	ldw	r19,224(sp)
11049a50:	d8002a05 	stb	zero,168(sp)
11049a54:	00801984 	movi	r2,102
11049a58:	8881f926 	beq	r17,r2,1104a240 <___vfprintf_internal_r+0x1ebc>
11049a5c:	00801184 	movi	r2,70
11049a60:	88821c26 	beq	r17,r2,1104a2d4 <___vfprintf_internal_r+0x1f50>
11049a64:	00801144 	movi	r2,69
11049a68:	b081ef26 	beq	r22,r2,1104a228 <___vfprintf_internal_r+0x1ea4>
11049a6c:	d8c02917 	ldw	r3,164(sp)
11049a70:	d8802104 	addi	r2,sp,132
11049a74:	d8800315 	stw	r2,12(sp)
11049a78:	d9403617 	ldw	r5,216(sp)
11049a7c:	d8802504 	addi	r2,sp,148
11049a80:	d9002c17 	ldw	r4,176(sp)
11049a84:	d8800215 	stw	r2,8(sp)
11049a88:	d8802604 	addi	r2,sp,152
11049a8c:	d8c00015 	stw	r3,0(sp)
11049a90:	d8800115 	stw	r2,4(sp)
11049a94:	01c00084 	movi	r7,2
11049a98:	980d883a 	mov	r6,r19
11049a9c:	d8c03c15 	stw	r3,240(sp)
11049aa0:	da003d15 	stw	r8,244(sp)
11049aa4:	104aacc0 	call	1104aacc <_dtoa_r>
11049aa8:	1021883a 	mov	r16,r2
11049aac:	008019c4 	movi	r2,103
11049ab0:	d8c03c17 	ldw	r3,240(sp)
11049ab4:	da003d17 	ldw	r8,244(sp)
11049ab8:	88817126 	beq	r17,r2,1104a080 <___vfprintf_internal_r+0x1cfc>
11049abc:	008011c4 	movi	r2,71
11049ac0:	88829226 	beq	r17,r2,1104a50c <___vfprintf_internal_r+0x2188>
11049ac4:	80f9883a 	add	fp,r16,r3
11049ac8:	d9003617 	ldw	r4,216(sp)
11049acc:	000d883a 	mov	r6,zero
11049ad0:	000f883a 	mov	r7,zero
11049ad4:	980b883a 	mov	r5,r19
11049ad8:	da003d15 	stw	r8,244(sp)
11049adc:	1044bd80 	call	11044bd8 <__eqdf2>
11049ae0:	da003d17 	ldw	r8,244(sp)
11049ae4:	10018d26 	beq	r2,zero,1104a11c <___vfprintf_internal_r+0x1d98>
11049ae8:	d8802117 	ldw	r2,132(sp)
11049aec:	1700062e 	bgeu	r2,fp,11049b08 <___vfprintf_internal_r+0x1784>
11049af0:	01000c04 	movi	r4,48
11049af4:	10c00044 	addi	r3,r2,1
11049af8:	d8c02115 	stw	r3,132(sp)
11049afc:	11000005 	stb	r4,0(r2)
11049b00:	d8802117 	ldw	r2,132(sp)
11049b04:	173ffb36 	bltu	r2,fp,11049af4 <___vfprintf_internal_r+0x1770>
11049b08:	1405c83a 	sub	r2,r2,r16
11049b0c:	d8803315 	stw	r2,204(sp)
11049b10:	008011c4 	movi	r2,71
11049b14:	b0817626 	beq	r22,r2,1104a0f0 <___vfprintf_internal_r+0x1d6c>
11049b18:	00801944 	movi	r2,101
11049b1c:	1442810e 	bge	r2,r17,1104a524 <___vfprintf_internal_r+0x21a0>
11049b20:	d8c02617 	ldw	r3,152(sp)
11049b24:	00801984 	movi	r2,102
11049b28:	d8c03215 	stw	r3,200(sp)
11049b2c:	8881fe26 	beq	r17,r2,1104a328 <___vfprintf_internal_r+0x1fa4>
11049b30:	d8c03217 	ldw	r3,200(sp)
11049b34:	d9003317 	ldw	r4,204(sp)
11049b38:	1901dd16 	blt	r3,r4,1104a2b0 <___vfprintf_internal_r+0x1f2c>
11049b3c:	9480004c 	andi	r18,r18,1
11049b40:	90022b1e 	bne	r18,zero,1104a3f0 <___vfprintf_internal_r+0x206c>
11049b44:	1805883a 	mov	r2,r3
11049b48:	18028016 	blt	r3,zero,1104a54c <___vfprintf_internal_r+0x21c8>
11049b4c:	d8c03217 	ldw	r3,200(sp)
11049b50:	044019c4 	movi	r17,103
11049b54:	d8c02e15 	stw	r3,184(sp)
11049b58:	df002a07 	ldb	fp,168(sp)
11049b5c:	e001531e 	bne	fp,zero,1104a0ac <___vfprintf_internal_r+0x1d28>
11049b60:	df002783 	ldbu	fp,158(sp)
11049b64:	d8802a15 	stw	r2,168(sp)
11049b68:	dc802b17 	ldw	r18,172(sp)
11049b6c:	d8002915 	stw	zero,164(sp)
11049b70:	003bd106 	br	11048ab8 <___vfprintf_internal_r+0x734>
11049b74:	d8802d17 	ldw	r2,180(sp)
11049b78:	d8c02d17 	ldw	r3,180(sp)
11049b7c:	d9002d17 	ldw	r4,180(sp)
11049b80:	10800017 	ldw	r2,0(r2)
11049b84:	18c00117 	ldw	r3,4(r3)
11049b88:	21000204 	addi	r4,r4,8
11049b8c:	d8803615 	stw	r2,216(sp)
11049b90:	d8c03815 	stw	r3,224(sp)
11049b94:	d9002d15 	stw	r4,180(sp)
11049b98:	003b7506 	br	11048970 <___vfprintf_internal_r+0x5ec>
11049b9c:	ac400007 	ldb	r17,0(r21)
11049ba0:	003a5906 	br	11048508 <___vfprintf_internal_r+0x184>
11049ba4:	9080100c 	andi	r2,r18,64
11049ba8:	1000a826 	beq	r2,zero,11049e4c <___vfprintf_internal_r+0x1ac8>
11049bac:	d9002d17 	ldw	r4,180(sp)
11049bb0:	002d883a 	mov	r22,zero
11049bb4:	24c0000b 	ldhu	r19,0(r4)
11049bb8:	21000104 	addi	r4,r4,4
11049bbc:	d9002d15 	stw	r4,180(sp)
11049bc0:	003ccb06 	br	11048ef0 <___vfprintf_internal_r+0xb6c>
11049bc4:	d8c02d17 	ldw	r3,180(sp)
11049bc8:	d9002917 	ldw	r4,164(sp)
11049bcc:	002d883a 	mov	r22,zero
11049bd0:	18800104 	addi	r2,r3,4
11049bd4:	1cc00017 	ldw	r19,0(r3)
11049bd8:	203ebb0e 	bge	r4,zero,110496c8 <___vfprintf_internal_r+0x1344>
11049bdc:	003ef106 	br	110497a4 <___vfprintf_internal_r+0x1420>
11049be0:	9080040c 	andi	r2,r18,16
11049be4:	1000921e 	bne	r2,zero,11049e30 <___vfprintf_internal_r+0x1aac>
11049be8:	9480100c 	andi	r18,r18,64
11049bec:	90013926 	beq	r18,zero,1104a0d4 <___vfprintf_internal_r+0x1d50>
11049bf0:	d9002d17 	ldw	r4,180(sp)
11049bf4:	d9402f17 	ldw	r5,188(sp)
11049bf8:	20800017 	ldw	r2,0(r4)
11049bfc:	21000104 	addi	r4,r4,4
11049c00:	d9002d15 	stw	r4,180(sp)
11049c04:	1140000d 	sth	r5,0(r2)
11049c08:	003a1606 	br	11048464 <___vfprintf_internal_r+0xe0>
11049c0c:	9080100c 	andi	r2,r18,64
11049c10:	10008026 	beq	r2,zero,11049e14 <___vfprintf_internal_r+0x1a90>
11049c14:	d8c02d17 	ldw	r3,180(sp)
11049c18:	1cc0000f 	ldh	r19,0(r3)
11049c1c:	18c00104 	addi	r3,r3,4
11049c20:	d8c02d15 	stw	r3,180(sp)
11049c24:	982dd7fa 	srai	r22,r19,31
11049c28:	b005883a 	mov	r2,r22
11049c2c:	003b1f06 	br	110488ac <___vfprintf_internal_r+0x528>
11049c30:	9080100c 	andi	r2,r18,64
11049c34:	d8002785 	stb	zero,158(sp)
11049c38:	10008a1e 	bne	r2,zero,11049e64 <___vfprintf_internal_r+0x1ae0>
11049c3c:	d9402d17 	ldw	r5,180(sp)
11049c40:	d8c02917 	ldw	r3,164(sp)
11049c44:	002d883a 	mov	r22,zero
11049c48:	28800104 	addi	r2,r5,4
11049c4c:	2cc00017 	ldw	r19,0(r5)
11049c50:	183e4b0e 	bge	r3,zero,11049580 <___vfprintf_internal_r+0x11fc>
11049c54:	9d86b03a 	or	r3,r19,r22
11049c58:	d8802d15 	stw	r2,180(sp)
11049c5c:	183e4c1e 	bne	r3,zero,11049590 <___vfprintf_internal_r+0x120c>
11049c60:	0039883a 	mov	fp,zero
11049c64:	0005883a 	mov	r2,zero
11049c68:	003d4006 	br	1104916c <___vfprintf_internal_r+0xde8>
11049c6c:	01444174 	movhi	r5,4357
11049c70:	295c3684 	addi	r5,r5,28890
11049c74:	d9402b15 	stw	r5,172(sp)
11049c78:	d9402b17 	ldw	r5,172(sp)
11049c7c:	1c47883a 	add	r3,r3,r17
11049c80:	10800044 	addi	r2,r2,1
11049c84:	41400015 	stw	r5,0(r8)
11049c88:	44400115 	stw	r17,4(r8)
11049c8c:	d8c02015 	stw	r3,128(sp)
11049c90:	d8801f15 	stw	r2,124(sp)
11049c94:	010001c4 	movi	r4,7
11049c98:	20bec816 	blt	r4,r2,110497bc <___vfprintf_internal_r+0x1438>
11049c9c:	42000204 	addi	r8,r8,8
11049ca0:	003ecd06 	br	110497d8 <___vfprintf_internal_r+0x1454>
11049ca4:	d9002917 	ldw	r4,164(sp)
11049ca8:	d8002785 	stb	zero,158(sp)
11049cac:	203d2d16 	blt	r4,zero,11049164 <___vfprintf_internal_r+0xde0>
11049cb0:	00bfdfc4 	movi	r2,-129
11049cb4:	90a4703a 	and	r18,r18,r2
11049cb8:	003a9106 	br	11048700 <___vfprintf_internal_r+0x37c>
11049cbc:	01044174 	movhi	r4,4357
11049cc0:	211c3684 	addi	r4,r4,28890
11049cc4:	d9002b15 	stw	r4,172(sp)
11049cc8:	003c0c06 	br	11048cfc <___vfprintf_internal_r+0x978>
11049ccc:	d9002c17 	ldw	r4,176(sp)
11049cd0:	d9801e04 	addi	r6,sp,120
11049cd4:	b80b883a 	mov	r5,r23
11049cd8:	1050eb00 	call	11050eb0 <__sprint_r>
11049cdc:	103aab1e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
11049ce0:	d8c02017 	ldw	r3,128(sp)
11049ce4:	da000404 	addi	r8,sp,16
11049ce8:	003d4106 	br	110491f0 <___vfprintf_internal_r+0xe6c>
11049cec:	d8801f17 	ldw	r2,124(sp)
11049cf0:	01444174 	movhi	r5,4357
11049cf4:	01000044 	movi	r4,1
11049cf8:	18c00044 	addi	r3,r3,1
11049cfc:	10800044 	addi	r2,r2,1
11049d00:	295c2e04 	addi	r5,r5,28856
11049d04:	41000115 	stw	r4,4(r8)
11049d08:	41400015 	stw	r5,0(r8)
11049d0c:	d8c02015 	stw	r3,128(sp)
11049d10:	d8801f15 	stw	r2,124(sp)
11049d14:	010001c4 	movi	r4,7
11049d18:	20805c16 	blt	r4,r2,11049e8c <___vfprintf_internal_r+0x1b08>
11049d1c:	42000204 	addi	r8,r8,8
11049d20:	8800041e 	bne	r17,zero,11049d34 <___vfprintf_internal_r+0x19b0>
11049d24:	d8803317 	ldw	r2,204(sp)
11049d28:	1000021e 	bne	r2,zero,11049d34 <___vfprintf_internal_r+0x19b0>
11049d2c:	9080004c 	andi	r2,r18,1
11049d30:	103c0926 	beq	r2,zero,11048d58 <___vfprintf_internal_r+0x9d4>
11049d34:	d9003717 	ldw	r4,220(sp)
11049d38:	d8801f17 	ldw	r2,124(sp)
11049d3c:	d9403417 	ldw	r5,208(sp)
11049d40:	20c7883a 	add	r3,r4,r3
11049d44:	10800044 	addi	r2,r2,1
11049d48:	41000115 	stw	r4,4(r8)
11049d4c:	41400015 	stw	r5,0(r8)
11049d50:	d8c02015 	stw	r3,128(sp)
11049d54:	d8801f15 	stw	r2,124(sp)
11049d58:	010001c4 	movi	r4,7
11049d5c:	20812116 	blt	r4,r2,1104a1e4 <___vfprintf_internal_r+0x1e60>
11049d60:	42000204 	addi	r8,r8,8
11049d64:	0463c83a 	sub	r17,zero,r17
11049d68:	0440730e 	bge	zero,r17,11049f38 <___vfprintf_internal_r+0x1bb4>
11049d6c:	05800404 	movi	r22,16
11049d70:	b440860e 	bge	r22,r17,11049f8c <___vfprintf_internal_r+0x1c08>
11049d74:	01444174 	movhi	r5,4357
11049d78:	295c3684 	addi	r5,r5,28890
11049d7c:	d9402b15 	stw	r5,172(sp)
11049d80:	070001c4 	movi	fp,7
11049d84:	dcc02c17 	ldw	r19,176(sp)
11049d88:	00000306 	br	11049d98 <___vfprintf_internal_r+0x1a14>
11049d8c:	42000204 	addi	r8,r8,8
11049d90:	8c7ffc04 	addi	r17,r17,-16
11049d94:	b440800e 	bge	r22,r17,11049f98 <___vfprintf_internal_r+0x1c14>
11049d98:	18c00404 	addi	r3,r3,16
11049d9c:	10800044 	addi	r2,r2,1
11049da0:	45000015 	stw	r20,0(r8)
11049da4:	45800115 	stw	r22,4(r8)
11049da8:	d8c02015 	stw	r3,128(sp)
11049dac:	d8801f15 	stw	r2,124(sp)
11049db0:	e0bff60e 	bge	fp,r2,11049d8c <___vfprintf_internal_r+0x1a08>
11049db4:	d9801e04 	addi	r6,sp,120
11049db8:	b80b883a 	mov	r5,r23
11049dbc:	9809883a 	mov	r4,r19
11049dc0:	1050eb00 	call	11050eb0 <__sprint_r>
11049dc4:	103a711e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
11049dc8:	d8c02017 	ldw	r3,128(sp)
11049dcc:	d8801f17 	ldw	r2,124(sp)
11049dd0:	da000404 	addi	r8,sp,16
11049dd4:	003fee06 	br	11049d90 <___vfprintf_internal_r+0x1a0c>
11049dd8:	00bfffc4 	movi	r2,-1
11049ddc:	003a6f06 	br	1104879c <___vfprintf_internal_r+0x418>
11049de0:	008011c4 	movi	r2,71
11049de4:	1440b816 	blt	r2,r17,1104a0c8 <___vfprintf_internal_r+0x1d44>
11049de8:	04044174 	movhi	r16,4357
11049dec:	841c2004 	addi	r16,r16,28800
11049df0:	00c000c4 	movi	r3,3
11049df4:	00bfdfc4 	movi	r2,-129
11049df8:	d8c02a15 	stw	r3,168(sp)
11049dfc:	90a4703a 	and	r18,r18,r2
11049e00:	df002783 	ldbu	fp,158(sp)
11049e04:	d8c02e15 	stw	r3,184(sp)
11049e08:	d8002915 	stw	zero,164(sp)
11049e0c:	d8003215 	stw	zero,200(sp)
11049e10:	003b2906 	br	11048ab8 <___vfprintf_internal_r+0x734>
11049e14:	d9002d17 	ldw	r4,180(sp)
11049e18:	24c00017 	ldw	r19,0(r4)
11049e1c:	21000104 	addi	r4,r4,4
11049e20:	d9002d15 	stw	r4,180(sp)
11049e24:	982dd7fa 	srai	r22,r19,31
11049e28:	b005883a 	mov	r2,r22
11049e2c:	003a9f06 	br	110488ac <___vfprintf_internal_r+0x528>
11049e30:	d9402d17 	ldw	r5,180(sp)
11049e34:	d8c02f17 	ldw	r3,188(sp)
11049e38:	28800017 	ldw	r2,0(r5)
11049e3c:	29400104 	addi	r5,r5,4
11049e40:	d9402d15 	stw	r5,180(sp)
11049e44:	10c00015 	stw	r3,0(r2)
11049e48:	00398606 	br	11048464 <___vfprintf_internal_r+0xe0>
11049e4c:	d9402d17 	ldw	r5,180(sp)
11049e50:	002d883a 	mov	r22,zero
11049e54:	2cc00017 	ldw	r19,0(r5)
11049e58:	29400104 	addi	r5,r5,4
11049e5c:	d9402d15 	stw	r5,180(sp)
11049e60:	003c2306 	br	11048ef0 <___vfprintf_internal_r+0xb6c>
11049e64:	d8c02d17 	ldw	r3,180(sp)
11049e68:	d9002917 	ldw	r4,164(sp)
11049e6c:	002d883a 	mov	r22,zero
11049e70:	18800104 	addi	r2,r3,4
11049e74:	1cc0000b 	ldhu	r19,0(r3)
11049e78:	203dc10e 	bge	r4,zero,11049580 <___vfprintf_internal_r+0x11fc>
11049e7c:	003f7506 	br	11049c54 <___vfprintf_internal_r+0x18d0>
11049e80:	04044174 	movhi	r16,4357
11049e84:	841c1e04 	addi	r16,r16,28792
11049e88:	003acc06 	br	110489bc <___vfprintf_internal_r+0x638>
11049e8c:	d9002c17 	ldw	r4,176(sp)
11049e90:	d9801e04 	addi	r6,sp,120
11049e94:	b80b883a 	mov	r5,r23
11049e98:	1050eb00 	call	11050eb0 <__sprint_r>
11049e9c:	103a3b1e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
11049ea0:	dc402617 	ldw	r17,152(sp)
11049ea4:	d8c02017 	ldw	r3,128(sp)
11049ea8:	da000404 	addi	r8,sp,16
11049eac:	003f9c06 	br	11049d20 <___vfprintf_internal_r+0x199c>
11049eb0:	ac400043 	ldbu	r17,1(r21)
11049eb4:	94800814 	ori	r18,r18,32
11049eb8:	ad400044 	addi	r21,r21,1
11049ebc:	8c403fcc 	andi	r17,r17,255
11049ec0:	8c40201c 	xori	r17,r17,128
11049ec4:	8c7fe004 	addi	r17,r17,-128
11049ec8:	00398f06 	br	11048508 <___vfprintf_internal_r+0x184>
11049ecc:	d8c02d15 	stw	r3,180(sp)
11049ed0:	0039883a 	mov	fp,zero
11049ed4:	003e3506 	br	110497ac <___vfprintf_internal_r+0x1428>
11049ed8:	d9002c17 	ldw	r4,176(sp)
11049edc:	d9801e04 	addi	r6,sp,120
11049ee0:	b80b883a 	mov	r5,r23
11049ee4:	1050eb00 	call	11050eb0 <__sprint_r>
11049ee8:	103a281e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
11049eec:	d8c02017 	ldw	r3,128(sp)
11049ef0:	da000404 	addi	r8,sp,16
11049ef4:	003cd006 	br	11049238 <___vfprintf_internal_r+0xeb4>
11049ef8:	8009883a 	mov	r4,r16
11049efc:	da003d15 	stw	r8,244(sp)
11049f00:	10461140 	call	11046114 <strlen>
11049f04:	d8802e15 	stw	r2,184(sp)
11049f08:	da003d17 	ldw	r8,244(sp)
11049f0c:	103c340e 	bge	r2,zero,11048fe0 <___vfprintf_internal_r+0xc5c>
11049f10:	0005883a 	mov	r2,zero
11049f14:	003c3206 	br	11048fe0 <___vfprintf_internal_r+0xc5c>
11049f18:	d9002c17 	ldw	r4,176(sp)
11049f1c:	d9801e04 	addi	r6,sp,120
11049f20:	b80b883a 	mov	r5,r23
11049f24:	1050eb00 	call	11050eb0 <__sprint_r>
11049f28:	103a181e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
11049f2c:	d8c02017 	ldw	r3,128(sp)
11049f30:	d8801f17 	ldw	r2,124(sp)
11049f34:	da000404 	addi	r8,sp,16
11049f38:	d9403317 	ldw	r5,204(sp)
11049f3c:	10800044 	addi	r2,r2,1
11049f40:	44000015 	stw	r16,0(r8)
11049f44:	28c7883a 	add	r3,r5,r3
11049f48:	003b7d06 	br	11048d40 <___vfprintf_internal_r+0x9bc>
11049f4c:	01044174 	movhi	r4,4357
11049f50:	211c3a84 	addi	r4,r4,28906
11049f54:	d9003515 	stw	r4,212(sp)
11049f58:	003b1406 	br	11048bac <___vfprintf_internal_r+0x828>
11049f5c:	013fffc4 	movi	r4,-1
11049f60:	003a3506 	br	11048838 <___vfprintf_internal_r+0x4b4>
11049f64:	0023883a 	mov	r17,zero
11049f68:	003d9d06 	br	110495e0 <___vfprintf_internal_r+0x125c>
11049f6c:	d9002c17 	ldw	r4,176(sp)
11049f70:	d9801e04 	addi	r6,sp,120
11049f74:	b80b883a 	mov	r5,r23
11049f78:	1050eb00 	call	11050eb0 <__sprint_r>
11049f7c:	103a031e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
11049f80:	d8c02017 	ldw	r3,128(sp)
11049f84:	da000404 	addi	r8,sp,16
11049f88:	003d9406 	br	110495dc <___vfprintf_internal_r+0x1258>
11049f8c:	01044174 	movhi	r4,4357
11049f90:	211c3684 	addi	r4,r4,28890
11049f94:	d9002b15 	stw	r4,172(sp)
11049f98:	d9002b17 	ldw	r4,172(sp)
11049f9c:	1c47883a 	add	r3,r3,r17
11049fa0:	10800044 	addi	r2,r2,1
11049fa4:	41000015 	stw	r4,0(r8)
11049fa8:	44400115 	stw	r17,4(r8)
11049fac:	d8c02015 	stw	r3,128(sp)
11049fb0:	d8801f15 	stw	r2,124(sp)
11049fb4:	010001c4 	movi	r4,7
11049fb8:	20bfd716 	blt	r4,r2,11049f18 <___vfprintf_internal_r+0x1b94>
11049fbc:	42000204 	addi	r8,r8,8
11049fc0:	003fdd06 	br	11049f38 <___vfprintf_internal_r+0x1bb4>
11049fc4:	d9002c17 	ldw	r4,176(sp)
11049fc8:	d9801e04 	addi	r6,sp,120
11049fcc:	b80b883a 	mov	r5,r23
11049fd0:	1050eb00 	call	11050eb0 <__sprint_r>
11049fd4:	1039ed1e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
11049fd8:	d8802617 	ldw	r2,152(sp)
11049fdc:	d8c02017 	ldw	r3,128(sp)
11049fe0:	da000404 	addi	r8,sp,16
11049fe4:	003e1006 	br	11049828 <___vfprintf_internal_r+0x14a4>
11049fe8:	00800044 	movi	r2,1
11049fec:	10803fcc 	andi	r2,r2,255
11049ff0:	00c00044 	movi	r3,1
11049ff4:	10fa3526 	beq	r2,r3,110488cc <___vfprintf_internal_r+0x548>
11049ff8:	00c00084 	movi	r3,2
11049ffc:	10fbcb26 	beq	r2,r3,11048f2c <___vfprintf_internal_r+0xba8>
1104a000:	003a8f06 	br	11048a40 <___vfprintf_internal_r+0x6bc>
1104a004:	01044174 	movhi	r4,4357
1104a008:	211c3a84 	addi	r4,r4,28906
1104a00c:	d9003515 	stw	r4,212(sp)
1104a010:	003b7606 	br	11048dec <___vfprintf_internal_r+0xa68>
1104a014:	d8802917 	ldw	r2,164(sp)
1104a018:	00c00184 	movi	r3,6
1104a01c:	1880012e 	bgeu	r3,r2,1104a024 <___vfprintf_internal_r+0x1ca0>
1104a020:	1805883a 	mov	r2,r3
1104a024:	d8802e15 	stw	r2,184(sp)
1104a028:	1000ef16 	blt	r2,zero,1104a3e8 <___vfprintf_internal_r+0x2064>
1104a02c:	04044174 	movhi	r16,4357
1104a030:	d8802a15 	stw	r2,168(sp)
1104a034:	dcc02d15 	stw	r19,180(sp)
1104a038:	d8002915 	stw	zero,164(sp)
1104a03c:	d8003215 	stw	zero,200(sp)
1104a040:	841c2c04 	addi	r16,r16,28848
1104a044:	0039883a 	mov	fp,zero
1104a048:	003aa206 	br	11048ad4 <___vfprintf_internal_r+0x750>
1104a04c:	0021883a 	mov	r16,zero
1104a050:	003e0706 	br	11049870 <___vfprintf_internal_r+0x14ec>
1104a054:	d9002c17 	ldw	r4,176(sp)
1104a058:	d9801e04 	addi	r6,sp,120
1104a05c:	b80b883a 	mov	r5,r23
1104a060:	1050eb00 	call	11050eb0 <__sprint_r>
1104a064:	1039c91e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
1104a068:	d8802617 	ldw	r2,152(sp)
1104a06c:	d9403317 	ldw	r5,204(sp)
1104a070:	d8c02017 	ldw	r3,128(sp)
1104a074:	da000404 	addi	r8,sp,16
1104a078:	2885c83a 	sub	r2,r5,r2
1104a07c:	003dfb06 	br	1104986c <___vfprintf_internal_r+0x14e8>
1104a080:	9080004c 	andi	r2,r18,1
1104a084:	103e8f1e 	bne	r2,zero,11049ac4 <___vfprintf_internal_r+0x1740>
1104a088:	d8802117 	ldw	r2,132(sp)
1104a08c:	003e9e06 	br	11049b08 <___vfprintf_internal_r+0x1784>
1104a090:	1025883a 	mov	r18,r2
1104a094:	0039883a 	mov	fp,zero
1104a098:	00800084 	movi	r2,2
1104a09c:	003fd306 	br	11049fec <___vfprintf_internal_r+0x1c68>
1104a0a0:	07000b44 	movi	fp,45
1104a0a4:	df002785 	stb	fp,158(sp)
1104a0a8:	003a4006 	br	110489ac <___vfprintf_internal_r+0x628>
1104a0ac:	00c00b44 	movi	r3,45
1104a0b0:	d8c02785 	stb	r3,158(sp)
1104a0b4:	d8802a15 	stw	r2,168(sp)
1104a0b8:	dc802b17 	ldw	r18,172(sp)
1104a0bc:	d8002915 	stw	zero,164(sp)
1104a0c0:	07000b44 	movi	fp,45
1104a0c4:	003a8006 	br	11048ac8 <___vfprintf_internal_r+0x744>
1104a0c8:	04044174 	movhi	r16,4357
1104a0cc:	841c2104 	addi	r16,r16,28804
1104a0d0:	003f4706 	br	11049df0 <___vfprintf_internal_r+0x1a6c>
1104a0d4:	d8c02d17 	ldw	r3,180(sp)
1104a0d8:	d9002f17 	ldw	r4,188(sp)
1104a0dc:	18800017 	ldw	r2,0(r3)
1104a0e0:	18c00104 	addi	r3,r3,4
1104a0e4:	d8c02d15 	stw	r3,180(sp)
1104a0e8:	11000015 	stw	r4,0(r2)
1104a0ec:	0038dd06 	br	11048464 <___vfprintf_internal_r+0xe0>
1104a0f0:	dd802617 	ldw	r22,152(sp)
1104a0f4:	00bfff44 	movi	r2,-3
1104a0f8:	b0801c16 	blt	r22,r2,1104a16c <___vfprintf_internal_r+0x1de8>
1104a0fc:	d9402917 	ldw	r5,164(sp)
1104a100:	2d801a16 	blt	r5,r22,1104a16c <___vfprintf_internal_r+0x1de8>
1104a104:	dd803215 	stw	r22,200(sp)
1104a108:	003e8906 	br	11049b30 <___vfprintf_internal_r+0x17ac>
1104a10c:	01044174 	movhi	r4,4357
1104a110:	211c3684 	addi	r4,r4,28890
1104a114:	d9002b15 	stw	r4,172(sp)
1104a118:	003c9106 	br	11049360 <___vfprintf_internal_r+0xfdc>
1104a11c:	e005883a 	mov	r2,fp
1104a120:	003e7906 	br	11049b08 <___vfprintf_internal_r+0x1784>
1104a124:	d9402917 	ldw	r5,164(sp)
1104a128:	df002783 	ldbu	fp,158(sp)
1104a12c:	dcc02d15 	stw	r19,180(sp)
1104a130:	d9402a15 	stw	r5,168(sp)
1104a134:	d9402e15 	stw	r5,184(sp)
1104a138:	d8002915 	stw	zero,164(sp)
1104a13c:	d8003215 	stw	zero,200(sp)
1104a140:	003a5d06 	br	11048ab8 <___vfprintf_internal_r+0x734>
1104a144:	9080004c 	andi	r2,r18,1
1104a148:	0039883a 	mov	fp,zero
1104a14c:	10000426 	beq	r2,zero,1104a160 <___vfprintf_internal_r+0x1ddc>
1104a150:	00800c04 	movi	r2,48
1104a154:	dc001dc4 	addi	r16,sp,119
1104a158:	d8801dc5 	stb	r2,119(sp)
1104a15c:	003b8006 	br	11048f60 <___vfprintf_internal_r+0xbdc>
1104a160:	d8002e15 	stw	zero,184(sp)
1104a164:	dc001e04 	addi	r16,sp,120
1104a168:	003a4d06 	br	11048aa0 <___vfprintf_internal_r+0x71c>
1104a16c:	8c7fff84 	addi	r17,r17,-2
1104a170:	b5bfffc4 	addi	r22,r22,-1
1104a174:	dd802615 	stw	r22,152(sp)
1104a178:	dc4022c5 	stb	r17,139(sp)
1104a17c:	b000bf16 	blt	r22,zero,1104a47c <___vfprintf_internal_r+0x20f8>
1104a180:	00800ac4 	movi	r2,43
1104a184:	d8802305 	stb	r2,140(sp)
1104a188:	00800244 	movi	r2,9
1104a18c:	15807016 	blt	r2,r22,1104a350 <___vfprintf_internal_r+0x1fcc>
1104a190:	00800c04 	movi	r2,48
1104a194:	b5800c04 	addi	r22,r22,48
1104a198:	d8802345 	stb	r2,141(sp)
1104a19c:	dd802385 	stb	r22,142(sp)
1104a1a0:	d88023c4 	addi	r2,sp,143
1104a1a4:	df0022c4 	addi	fp,sp,139
1104a1a8:	d8c03317 	ldw	r3,204(sp)
1104a1ac:	1739c83a 	sub	fp,r2,fp
1104a1b0:	d9003317 	ldw	r4,204(sp)
1104a1b4:	e0c7883a 	add	r3,fp,r3
1104a1b8:	df003a15 	stw	fp,232(sp)
1104a1bc:	d8c02e15 	stw	r3,184(sp)
1104a1c0:	00800044 	movi	r2,1
1104a1c4:	1100b30e 	bge	r2,r4,1104a494 <___vfprintf_internal_r+0x2110>
1104a1c8:	d8c02e17 	ldw	r3,184(sp)
1104a1cc:	18c00044 	addi	r3,r3,1
1104a1d0:	d8c02e15 	stw	r3,184(sp)
1104a1d4:	1805883a 	mov	r2,r3
1104a1d8:	1800ac16 	blt	r3,zero,1104a48c <___vfprintf_internal_r+0x2108>
1104a1dc:	d8003215 	stw	zero,200(sp)
1104a1e0:	003e5d06 	br	11049b58 <___vfprintf_internal_r+0x17d4>
1104a1e4:	d9002c17 	ldw	r4,176(sp)
1104a1e8:	d9801e04 	addi	r6,sp,120
1104a1ec:	b80b883a 	mov	r5,r23
1104a1f0:	1050eb00 	call	11050eb0 <__sprint_r>
1104a1f4:	1039651e 	bne	r2,zero,1104878c <___vfprintf_internal_r+0x408>
1104a1f8:	dc402617 	ldw	r17,152(sp)
1104a1fc:	d8c02017 	ldw	r3,128(sp)
1104a200:	d8801f17 	ldw	r2,124(sp)
1104a204:	da000404 	addi	r8,sp,16
1104a208:	003ed606 	br	11049d64 <___vfprintf_internal_r+0x19e0>
1104a20c:	582b883a 	mov	r21,r11
1104a210:	d8002915 	stw	zero,164(sp)
1104a214:	0038bd06 	br	1104850c <___vfprintf_internal_r+0x188>
1104a218:	d8802917 	ldw	r2,164(sp)
1104a21c:	103e071e 	bne	r2,zero,11049a3c <___vfprintf_internal_r+0x16b8>
1104a220:	dc002915 	stw	r16,164(sp)
1104a224:	003e0506 	br	11049a3c <___vfprintf_internal_r+0x16b8>
1104a228:	d9002917 	ldw	r4,164(sp)
1104a22c:	20c00044 	addi	r3,r4,1
1104a230:	003e0f06 	br	11049a70 <___vfprintf_internal_r+0x16ec>
1104a234:	01400184 	movi	r5,6
1104a238:	d9402915 	stw	r5,164(sp)
1104a23c:	003dff06 	br	11049a3c <___vfprintf_internal_r+0x16b8>
1104a240:	d8802104 	addi	r2,sp,132
1104a244:	d8800315 	stw	r2,12(sp)
1104a248:	d8802504 	addi	r2,sp,148
1104a24c:	d8800215 	stw	r2,8(sp)
1104a250:	d8802604 	addi	r2,sp,152
1104a254:	d8800115 	stw	r2,4(sp)
1104a258:	d8802917 	ldw	r2,164(sp)
1104a25c:	d9403617 	ldw	r5,216(sp)
1104a260:	d9002c17 	ldw	r4,176(sp)
1104a264:	d8800015 	stw	r2,0(sp)
1104a268:	01c000c4 	movi	r7,3
1104a26c:	980d883a 	mov	r6,r19
1104a270:	da003d15 	stw	r8,244(sp)
1104a274:	104aacc0 	call	1104aacc <_dtoa_r>
1104a278:	d8c02917 	ldw	r3,164(sp)
1104a27c:	da003d17 	ldw	r8,244(sp)
1104a280:	1021883a 	mov	r16,r2
1104a284:	10f9883a 	add	fp,r2,r3
1104a288:	81000007 	ldb	r4,0(r16)
1104a28c:	00800c04 	movi	r2,48
1104a290:	20805e26 	beq	r4,r2,1104a40c <___vfprintf_internal_r+0x2088>
1104a294:	d8c02617 	ldw	r3,152(sp)
1104a298:	e0f9883a 	add	fp,fp,r3
1104a29c:	003e0a06 	br	11049ac8 <___vfprintf_internal_r+0x1744>
1104a2a0:	00c00b44 	movi	r3,45
1104a2a4:	24e0003c 	xorhi	r19,r4,32768
1104a2a8:	d8c02a05 	stb	r3,168(sp)
1104a2ac:	003de906 	br	11049a54 <___vfprintf_internal_r+0x16d0>
1104a2b0:	d8c03217 	ldw	r3,200(sp)
1104a2b4:	00c07a0e 	bge	zero,r3,1104a4a0 <___vfprintf_internal_r+0x211c>
1104a2b8:	00800044 	movi	r2,1
1104a2bc:	d9003317 	ldw	r4,204(sp)
1104a2c0:	1105883a 	add	r2,r2,r4
1104a2c4:	d8802e15 	stw	r2,184(sp)
1104a2c8:	10004e16 	blt	r2,zero,1104a404 <___vfprintf_internal_r+0x2080>
1104a2cc:	044019c4 	movi	r17,103
1104a2d0:	003e2106 	br	11049b58 <___vfprintf_internal_r+0x17d4>
1104a2d4:	d9002917 	ldw	r4,164(sp)
1104a2d8:	d8802104 	addi	r2,sp,132
1104a2dc:	d8800315 	stw	r2,12(sp)
1104a2e0:	d9000015 	stw	r4,0(sp)
1104a2e4:	d8802504 	addi	r2,sp,148
1104a2e8:	d9403617 	ldw	r5,216(sp)
1104a2ec:	d9002c17 	ldw	r4,176(sp)
1104a2f0:	d8800215 	stw	r2,8(sp)
1104a2f4:	d8802604 	addi	r2,sp,152
1104a2f8:	d8800115 	stw	r2,4(sp)
1104a2fc:	01c000c4 	movi	r7,3
1104a300:	980d883a 	mov	r6,r19
1104a304:	da003d15 	stw	r8,244(sp)
1104a308:	104aacc0 	call	1104aacc <_dtoa_r>
1104a30c:	d8c02917 	ldw	r3,164(sp)
1104a310:	da003d17 	ldw	r8,244(sp)
1104a314:	1021883a 	mov	r16,r2
1104a318:	00801184 	movi	r2,70
1104a31c:	80f9883a 	add	fp,r16,r3
1104a320:	88bfd926 	beq	r17,r2,1104a288 <___vfprintf_internal_r+0x1f04>
1104a324:	003de806 	br	11049ac8 <___vfprintf_internal_r+0x1744>
1104a328:	d9002917 	ldw	r4,164(sp)
1104a32c:	00c04d0e 	bge	zero,r3,1104a464 <___vfprintf_internal_r+0x20e0>
1104a330:	2000441e 	bne	r4,zero,1104a444 <___vfprintf_internal_r+0x20c0>
1104a334:	9480004c 	andi	r18,r18,1
1104a338:	9000421e 	bne	r18,zero,1104a444 <___vfprintf_internal_r+0x20c0>
1104a33c:	1805883a 	mov	r2,r3
1104a340:	18007016 	blt	r3,zero,1104a504 <___vfprintf_internal_r+0x2180>
1104a344:	d8c03217 	ldw	r3,200(sp)
1104a348:	d8c02e15 	stw	r3,184(sp)
1104a34c:	003e0206 	br	11049b58 <___vfprintf_internal_r+0x17d4>
1104a350:	df0022c4 	addi	fp,sp,139
1104a354:	dc002915 	stw	r16,164(sp)
1104a358:	4027883a 	mov	r19,r8
1104a35c:	e021883a 	mov	r16,fp
1104a360:	b009883a 	mov	r4,r22
1104a364:	01400284 	movi	r5,10
1104a368:	10441fc0 	call	110441fc <__modsi3>
1104a36c:	10800c04 	addi	r2,r2,48
1104a370:	843fffc4 	addi	r16,r16,-1
1104a374:	b009883a 	mov	r4,r22
1104a378:	01400284 	movi	r5,10
1104a37c:	80800005 	stb	r2,0(r16)
1104a380:	10441780 	call	11044178 <__divsi3>
1104a384:	102d883a 	mov	r22,r2
1104a388:	00800244 	movi	r2,9
1104a38c:	15bff416 	blt	r2,r22,1104a360 <___vfprintf_internal_r+0x1fdc>
1104a390:	9811883a 	mov	r8,r19
1104a394:	b0800c04 	addi	r2,r22,48
1104a398:	8027883a 	mov	r19,r16
1104a39c:	997fffc4 	addi	r5,r19,-1
1104a3a0:	98bfffc5 	stb	r2,-1(r19)
1104a3a4:	dc002917 	ldw	r16,164(sp)
1104a3a8:	2f006a2e 	bgeu	r5,fp,1104a554 <___vfprintf_internal_r+0x21d0>
1104a3ac:	d9c02384 	addi	r7,sp,142
1104a3b0:	3ccfc83a 	sub	r7,r7,r19
1104a3b4:	d9002344 	addi	r4,sp,141
1104a3b8:	e1cf883a 	add	r7,fp,r7
1104a3bc:	00000106 	br	1104a3c4 <___vfprintf_internal_r+0x2040>
1104a3c0:	28800003 	ldbu	r2,0(r5)
1104a3c4:	20800005 	stb	r2,0(r4)
1104a3c8:	21000044 	addi	r4,r4,1
1104a3cc:	29400044 	addi	r5,r5,1
1104a3d0:	393ffb1e 	bne	r7,r4,1104a3c0 <___vfprintf_internal_r+0x203c>
1104a3d4:	d8802304 	addi	r2,sp,140
1104a3d8:	14c5c83a 	sub	r2,r2,r19
1104a3dc:	d8c02344 	addi	r3,sp,141
1104a3e0:	1885883a 	add	r2,r3,r2
1104a3e4:	003f7006 	br	1104a1a8 <___vfprintf_internal_r+0x1e24>
1104a3e8:	0005883a 	mov	r2,zero
1104a3ec:	003f0f06 	br	1104a02c <___vfprintf_internal_r+0x1ca8>
1104a3f0:	d8c03217 	ldw	r3,200(sp)
1104a3f4:	18c00044 	addi	r3,r3,1
1104a3f8:	d8c02e15 	stw	r3,184(sp)
1104a3fc:	1805883a 	mov	r2,r3
1104a400:	183fb20e 	bge	r3,zero,1104a2cc <___vfprintf_internal_r+0x1f48>
1104a404:	0005883a 	mov	r2,zero
1104a408:	003fb006 	br	1104a2cc <___vfprintf_internal_r+0x1f48>
1104a40c:	d9003617 	ldw	r4,216(sp)
1104a410:	000d883a 	mov	r6,zero
1104a414:	000f883a 	mov	r7,zero
1104a418:	980b883a 	mov	r5,r19
1104a41c:	d8c03c15 	stw	r3,240(sp)
1104a420:	da003d15 	stw	r8,244(sp)
1104a424:	1044bd80 	call	11044bd8 <__eqdf2>
1104a428:	d8c03c17 	ldw	r3,240(sp)
1104a42c:	da003d17 	ldw	r8,244(sp)
1104a430:	103f9826 	beq	r2,zero,1104a294 <___vfprintf_internal_r+0x1f10>
1104a434:	00800044 	movi	r2,1
1104a438:	10c7c83a 	sub	r3,r2,r3
1104a43c:	d8c02615 	stw	r3,152(sp)
1104a440:	003f9506 	br	1104a298 <___vfprintf_internal_r+0x1f14>
1104a444:	d9002917 	ldw	r4,164(sp)
1104a448:	d8c03217 	ldw	r3,200(sp)
1104a44c:	20800044 	addi	r2,r4,1
1104a450:	1885883a 	add	r2,r3,r2
1104a454:	d8802e15 	stw	r2,184(sp)
1104a458:	103dbf0e 	bge	r2,zero,11049b58 <___vfprintf_internal_r+0x17d4>
1104a45c:	0005883a 	mov	r2,zero
1104a460:	003dbd06 	br	11049b58 <___vfprintf_internal_r+0x17d4>
1104a464:	2000211e 	bne	r4,zero,1104a4ec <___vfprintf_internal_r+0x2168>
1104a468:	9480004c 	andi	r18,r18,1
1104a46c:	90001f1e 	bne	r18,zero,1104a4ec <___vfprintf_internal_r+0x2168>
1104a470:	00800044 	movi	r2,1
1104a474:	d8802e15 	stw	r2,184(sp)
1104a478:	003db706 	br	11049b58 <___vfprintf_internal_r+0x17d4>
1104a47c:	00800b44 	movi	r2,45
1104a480:	05adc83a 	sub	r22,zero,r22
1104a484:	d8802305 	stb	r2,140(sp)
1104a488:	003f3f06 	br	1104a188 <___vfprintf_internal_r+0x1e04>
1104a48c:	0005883a 	mov	r2,zero
1104a490:	003f5206 	br	1104a1dc <___vfprintf_internal_r+0x1e58>
1104a494:	90a4703a 	and	r18,r18,r2
1104a498:	903f4e26 	beq	r18,zero,1104a1d4 <___vfprintf_internal_r+0x1e50>
1104a49c:	003f4a06 	br	1104a1c8 <___vfprintf_internal_r+0x1e44>
1104a4a0:	00800084 	movi	r2,2
1104a4a4:	10c5c83a 	sub	r2,r2,r3
1104a4a8:	003f8406 	br	1104a2bc <___vfprintf_internal_r+0x1f38>
1104a4ac:	d8802d17 	ldw	r2,180(sp)
1104a4b0:	d9002d17 	ldw	r4,180(sp)
1104a4b4:	ac400043 	ldbu	r17,1(r21)
1104a4b8:	10800017 	ldw	r2,0(r2)
1104a4bc:	582b883a 	mov	r21,r11
1104a4c0:	d8802915 	stw	r2,164(sp)
1104a4c4:	20800104 	addi	r2,r4,4
1104a4c8:	d9002917 	ldw	r4,164(sp)
1104a4cc:	d8802d15 	stw	r2,180(sp)
1104a4d0:	203e7a0e 	bge	r4,zero,11049ebc <___vfprintf_internal_r+0x1b38>
1104a4d4:	8c403fcc 	andi	r17,r17,255
1104a4d8:	00bfffc4 	movi	r2,-1
1104a4dc:	8c40201c 	xori	r17,r17,128
1104a4e0:	d8802915 	stw	r2,164(sp)
1104a4e4:	8c7fe004 	addi	r17,r17,-128
1104a4e8:	00380706 	br	11048508 <___vfprintf_internal_r+0x184>
1104a4ec:	d8c02917 	ldw	r3,164(sp)
1104a4f0:	18c00084 	addi	r3,r3,2
1104a4f4:	d8c02e15 	stw	r3,184(sp)
1104a4f8:	1805883a 	mov	r2,r3
1104a4fc:	183d960e 	bge	r3,zero,11049b58 <___vfprintf_internal_r+0x17d4>
1104a500:	003fd606 	br	1104a45c <___vfprintf_internal_r+0x20d8>
1104a504:	0005883a 	mov	r2,zero
1104a508:	003f8e06 	br	1104a344 <___vfprintf_internal_r+0x1fc0>
1104a50c:	9080004c 	andi	r2,r18,1
1104a510:	103f811e 	bne	r2,zero,1104a318 <___vfprintf_internal_r+0x1f94>
1104a514:	d8802117 	ldw	r2,132(sp)
1104a518:	1405c83a 	sub	r2,r2,r16
1104a51c:	d8803315 	stw	r2,204(sp)
1104a520:	b47ef326 	beq	r22,r17,1104a0f0 <___vfprintf_internal_r+0x1d6c>
1104a524:	dd802617 	ldw	r22,152(sp)
1104a528:	003f1106 	br	1104a170 <___vfprintf_internal_r+0x1dec>
1104a52c:	d9c02785 	stb	r7,158(sp)
1104a530:	00390406 	br	11048944 <___vfprintf_internal_r+0x5c0>
1104a534:	d9c02785 	stb	r7,158(sp)
1104a538:	0038d306 	br	11048888 <___vfprintf_internal_r+0x504>
1104a53c:	d9c02785 	stb	r7,158(sp)
1104a540:	003a6106 	br	11048ec8 <___vfprintf_internal_r+0xb44>
1104a544:	d9c02785 	stb	r7,158(sp)
1104a548:	003af806 	br	1104912c <___vfprintf_internal_r+0xda8>
1104a54c:	0005883a 	mov	r2,zero
1104a550:	003d7e06 	br	11049b4c <___vfprintf_internal_r+0x17c8>
1104a554:	d8802344 	addi	r2,sp,141
1104a558:	003f1306 	br	1104a1a8 <___vfprintf_internal_r+0x1e24>
1104a55c:	d9c02785 	stb	r7,158(sp)
1104a560:	00392306 	br	110489f0 <___vfprintf_internal_r+0x66c>
1104a564:	d9c02785 	stb	r7,158(sp)
1104a568:	003aa906 	br	11049010 <___vfprintf_internal_r+0xc8c>
1104a56c:	d9c02785 	stb	r7,158(sp)
1104a570:	003a3d06 	br	11048e68 <___vfprintf_internal_r+0xae4>
1104a574:	d9c02785 	stb	r7,158(sp)
1104a578:	003aca06 	br	110490a4 <___vfprintf_internal_r+0xd20>

1104a57c <__vfprintf_internal>:
1104a57c:	008441b4 	movhi	r2,4358
1104a580:	10a35704 	addi	r2,r2,-29348
1104a584:	300f883a 	mov	r7,r6
1104a588:	280d883a 	mov	r6,r5
1104a58c:	200b883a 	mov	r5,r4
1104a590:	11000017 	ldw	r4,0(r2)
1104a594:	10483841 	jmpi	11048384 <___vfprintf_internal_r>

1104a598 <__sbprintf>:
1104a598:	2880030b 	ldhu	r2,12(r5)
1104a59c:	2ac01917 	ldw	r11,100(r5)
1104a5a0:	2a80038b 	ldhu	r10,14(r5)
1104a5a4:	2a400717 	ldw	r9,28(r5)
1104a5a8:	2a000917 	ldw	r8,36(r5)
1104a5ac:	defee204 	addi	sp,sp,-1144
1104a5b0:	00c10004 	movi	r3,1024
1104a5b4:	dc011a15 	stw	r16,1128(sp)
1104a5b8:	10bfff4c 	andi	r2,r2,65533
1104a5bc:	2821883a 	mov	r16,r5
1104a5c0:	d8cb883a 	add	r5,sp,r3
1104a5c4:	dc811c15 	stw	r18,1136(sp)
1104a5c8:	dc411b15 	stw	r17,1132(sp)
1104a5cc:	dfc11d15 	stw	ra,1140(sp)
1104a5d0:	2025883a 	mov	r18,r4
1104a5d4:	d881030d 	sth	r2,1036(sp)
1104a5d8:	dac11915 	stw	r11,1124(sp)
1104a5dc:	da81038d 	sth	r10,1038(sp)
1104a5e0:	da410715 	stw	r9,1052(sp)
1104a5e4:	da010915 	stw	r8,1060(sp)
1104a5e8:	dec10015 	stw	sp,1024(sp)
1104a5ec:	dec10415 	stw	sp,1040(sp)
1104a5f0:	d8c10215 	stw	r3,1032(sp)
1104a5f4:	d8c10515 	stw	r3,1044(sp)
1104a5f8:	d8010615 	stw	zero,1048(sp)
1104a5fc:	10483840 	call	11048384 <___vfprintf_internal_r>
1104a600:	1023883a 	mov	r17,r2
1104a604:	10000416 	blt	r2,zero,1104a618 <__sbprintf+0x80>
1104a608:	d9410004 	addi	r5,sp,1024
1104a60c:	9009883a 	mov	r4,r18
1104a610:	104c3700 	call	1104c370 <_fflush_r>
1104a614:	10000d1e 	bne	r2,zero,1104a64c <__sbprintf+0xb4>
1104a618:	d881030b 	ldhu	r2,1036(sp)
1104a61c:	1080100c 	andi	r2,r2,64
1104a620:	10000326 	beq	r2,zero,1104a630 <__sbprintf+0x98>
1104a624:	8080030b 	ldhu	r2,12(r16)
1104a628:	10801014 	ori	r2,r2,64
1104a62c:	8080030d 	sth	r2,12(r16)
1104a630:	8805883a 	mov	r2,r17
1104a634:	dfc11d17 	ldw	ra,1140(sp)
1104a638:	dc811c17 	ldw	r18,1136(sp)
1104a63c:	dc411b17 	ldw	r17,1132(sp)
1104a640:	dc011a17 	ldw	r16,1128(sp)
1104a644:	dec11e04 	addi	sp,sp,1144
1104a648:	f800283a 	ret
1104a64c:	047fffc4 	movi	r17,-1
1104a650:	003ff106 	br	1104a618 <__sbprintf+0x80>

1104a654 <_vsnprintf_r>:
1104a654:	30003716 	blt	r6,zero,1104a734 <_vsnprintf_r+0xe0>
1104a658:	deffe404 	addi	sp,sp,-112
1104a65c:	00c08204 	movi	r3,520
1104a660:	dc001a15 	stw	r16,104(sp)
1104a664:	3005883a 	mov	r2,r6
1104a668:	dfc01b15 	stw	ra,108(sp)
1104a66c:	d8c0030d 	sth	r3,12(sp)
1104a670:	d9400015 	stw	r5,0(sp)
1104a674:	d9400415 	stw	r5,16(sp)
1104a678:	380d883a 	mov	r6,r7
1104a67c:	2021883a 	mov	r16,r4
1104a680:	10001326 	beq	r2,zero,1104a6d0 <_vsnprintf_r+0x7c>
1104a684:	00c441b4 	movhi	r3,4358
1104a688:	18e35704 	addi	r3,r3,-29348
1104a68c:	19000017 	ldw	r4,0(r3)
1104a690:	d9c01c17 	ldw	r7,112(sp)
1104a694:	10bfffc4 	addi	r2,r2,-1
1104a698:	d8800215 	stw	r2,8(sp)
1104a69c:	d8800515 	stw	r2,20(sp)
1104a6a0:	d80b883a 	mov	r5,sp
1104a6a4:	00bfffc4 	movi	r2,-1
1104a6a8:	d880038d 	sth	r2,14(sp)
1104a6ac:	10461ac0 	call	110461ac <___svfprintf_internal_r>
1104a6b0:	00ffffc4 	movi	r3,-1
1104a6b4:	10c01616 	blt	r2,r3,1104a710 <_vsnprintf_r+0xbc>
1104a6b8:	d8c00017 	ldw	r3,0(sp)
1104a6bc:	18000005 	stb	zero,0(r3)
1104a6c0:	dfc01b17 	ldw	ra,108(sp)
1104a6c4:	dc001a17 	ldw	r16,104(sp)
1104a6c8:	dec01c04 	addi	sp,sp,112
1104a6cc:	f800283a 	ret
1104a6d0:	008441b4 	movhi	r2,4358
1104a6d4:	10a35704 	addi	r2,r2,-29348
1104a6d8:	11000017 	ldw	r4,0(r2)
1104a6dc:	d9c01c17 	ldw	r7,112(sp)
1104a6e0:	00bfffc4 	movi	r2,-1
1104a6e4:	d80b883a 	mov	r5,sp
1104a6e8:	d8000215 	stw	zero,8(sp)
1104a6ec:	d8000515 	stw	zero,20(sp)
1104a6f0:	d880038d 	sth	r2,14(sp)
1104a6f4:	10461ac0 	call	110461ac <___svfprintf_internal_r>
1104a6f8:	00ffffc4 	movi	r3,-1
1104a6fc:	10c00716 	blt	r2,r3,1104a71c <_vsnprintf_r+0xc8>
1104a700:	dfc01b17 	ldw	ra,108(sp)
1104a704:	dc001a17 	ldw	r16,104(sp)
1104a708:	dec01c04 	addi	sp,sp,112
1104a70c:	f800283a 	ret
1104a710:	00c022c4 	movi	r3,139
1104a714:	80c00015 	stw	r3,0(r16)
1104a718:	003fe706 	br	1104a6b8 <_vsnprintf_r+0x64>
1104a71c:	00c022c4 	movi	r3,139
1104a720:	80c00015 	stw	r3,0(r16)
1104a724:	dfc01b17 	ldw	ra,108(sp)
1104a728:	dc001a17 	ldw	r16,104(sp)
1104a72c:	dec01c04 	addi	sp,sp,112
1104a730:	f800283a 	ret
1104a734:	008022c4 	movi	r2,139
1104a738:	20800015 	stw	r2,0(r4)
1104a73c:	00bfffc4 	movi	r2,-1
1104a740:	f800283a 	ret

1104a744 <vsnprintf>:
1104a744:	defffe04 	addi	sp,sp,-8
1104a748:	008441b4 	movhi	r2,4358
1104a74c:	d9c00015 	stw	r7,0(sp)
1104a750:	10a35704 	addi	r2,r2,-29348
1104a754:	300f883a 	mov	r7,r6
1104a758:	280d883a 	mov	r6,r5
1104a75c:	200b883a 	mov	r5,r4
1104a760:	11000017 	ldw	r4,0(r2)
1104a764:	dfc00115 	stw	ra,4(sp)
1104a768:	104a6540 	call	1104a654 <_vsnprintf_r>
1104a76c:	dfc00117 	ldw	ra,4(sp)
1104a770:	dec00204 	addi	sp,sp,8
1104a774:	f800283a 	ret

1104a778 <__swsetup_r>:
1104a778:	008441b4 	movhi	r2,4358
1104a77c:	defffd04 	addi	sp,sp,-12
1104a780:	10a35704 	addi	r2,r2,-29348
1104a784:	dc400115 	stw	r17,4(sp)
1104a788:	2023883a 	mov	r17,r4
1104a78c:	11000017 	ldw	r4,0(r2)
1104a790:	dc000015 	stw	r16,0(sp)
1104a794:	dfc00215 	stw	ra,8(sp)
1104a798:	2821883a 	mov	r16,r5
1104a79c:	20000226 	beq	r4,zero,1104a7a8 <__swsetup_r+0x30>
1104a7a0:	20800e17 	ldw	r2,56(r4)
1104a7a4:	10003126 	beq	r2,zero,1104a86c <__swsetup_r+0xf4>
1104a7a8:	8080030b 	ldhu	r2,12(r16)
1104a7ac:	10c0020c 	andi	r3,r2,8
1104a7b0:	1009883a 	mov	r4,r2
1104a7b4:	18000f26 	beq	r3,zero,1104a7f4 <__swsetup_r+0x7c>
1104a7b8:	80c00417 	ldw	r3,16(r16)
1104a7bc:	18001526 	beq	r3,zero,1104a814 <__swsetup_r+0x9c>
1104a7c0:	1100004c 	andi	r4,r2,1
1104a7c4:	20001c1e 	bne	r4,zero,1104a838 <__swsetup_r+0xc0>
1104a7c8:	1080008c 	andi	r2,r2,2
1104a7cc:	1000291e 	bne	r2,zero,1104a874 <__swsetup_r+0xfc>
1104a7d0:	80800517 	ldw	r2,20(r16)
1104a7d4:	80800215 	stw	r2,8(r16)
1104a7d8:	18001c26 	beq	r3,zero,1104a84c <__swsetup_r+0xd4>
1104a7dc:	0005883a 	mov	r2,zero
1104a7e0:	dfc00217 	ldw	ra,8(sp)
1104a7e4:	dc400117 	ldw	r17,4(sp)
1104a7e8:	dc000017 	ldw	r16,0(sp)
1104a7ec:	dec00304 	addi	sp,sp,12
1104a7f0:	f800283a 	ret
1104a7f4:	2080040c 	andi	r2,r4,16
1104a7f8:	10002e26 	beq	r2,zero,1104a8b4 <__swsetup_r+0x13c>
1104a7fc:	2080010c 	andi	r2,r4,4
1104a800:	10001e1e 	bne	r2,zero,1104a87c <__swsetup_r+0x104>
1104a804:	80c00417 	ldw	r3,16(r16)
1104a808:	20800214 	ori	r2,r4,8
1104a80c:	8080030d 	sth	r2,12(r16)
1104a810:	183feb1e 	bne	r3,zero,1104a7c0 <__swsetup_r+0x48>
1104a814:	1100a00c 	andi	r4,r2,640
1104a818:	01408004 	movi	r5,512
1104a81c:	217fe826 	beq	r4,r5,1104a7c0 <__swsetup_r+0x48>
1104a820:	800b883a 	mov	r5,r16
1104a824:	8809883a 	mov	r4,r17
1104a828:	104d2f00 	call	1104d2f0 <__smakebuf_r>
1104a82c:	8080030b 	ldhu	r2,12(r16)
1104a830:	80c00417 	ldw	r3,16(r16)
1104a834:	003fe206 	br	1104a7c0 <__swsetup_r+0x48>
1104a838:	80800517 	ldw	r2,20(r16)
1104a83c:	80000215 	stw	zero,8(r16)
1104a840:	0085c83a 	sub	r2,zero,r2
1104a844:	80800615 	stw	r2,24(r16)
1104a848:	183fe41e 	bne	r3,zero,1104a7dc <__swsetup_r+0x64>
1104a84c:	80c0030b 	ldhu	r3,12(r16)
1104a850:	0005883a 	mov	r2,zero
1104a854:	1900200c 	andi	r4,r3,128
1104a858:	203fe126 	beq	r4,zero,1104a7e0 <__swsetup_r+0x68>
1104a85c:	18c01014 	ori	r3,r3,64
1104a860:	80c0030d 	sth	r3,12(r16)
1104a864:	00bfffc4 	movi	r2,-1
1104a868:	003fdd06 	br	1104a7e0 <__swsetup_r+0x68>
1104a86c:	104c74c0 	call	1104c74c <__sinit>
1104a870:	003fcd06 	br	1104a7a8 <__swsetup_r+0x30>
1104a874:	0005883a 	mov	r2,zero
1104a878:	003fd606 	br	1104a7d4 <__swsetup_r+0x5c>
1104a87c:	81400c17 	ldw	r5,48(r16)
1104a880:	28000626 	beq	r5,zero,1104a89c <__swsetup_r+0x124>
1104a884:	80801004 	addi	r2,r16,64
1104a888:	28800326 	beq	r5,r2,1104a898 <__swsetup_r+0x120>
1104a88c:	8809883a 	mov	r4,r17
1104a890:	104c8c00 	call	1104c8c0 <_free_r>
1104a894:	8100030b 	ldhu	r4,12(r16)
1104a898:	80000c15 	stw	zero,48(r16)
1104a89c:	80c00417 	ldw	r3,16(r16)
1104a8a0:	00bff6c4 	movi	r2,-37
1104a8a4:	1108703a 	and	r4,r2,r4
1104a8a8:	80000115 	stw	zero,4(r16)
1104a8ac:	80c00015 	stw	r3,0(r16)
1104a8b0:	003fd506 	br	1104a808 <__swsetup_r+0x90>
1104a8b4:	00800244 	movi	r2,9
1104a8b8:	88800015 	stw	r2,0(r17)
1104a8bc:	20801014 	ori	r2,r4,64
1104a8c0:	8080030d 	sth	r2,12(r16)
1104a8c4:	00bfffc4 	movi	r2,-1
1104a8c8:	003fc506 	br	1104a7e0 <__swsetup_r+0x68>

1104a8cc <quorem>:
1104a8cc:	defff704 	addi	sp,sp,-36
1104a8d0:	dc800215 	stw	r18,8(sp)
1104a8d4:	20800417 	ldw	r2,16(r4)
1104a8d8:	2c800417 	ldw	r18,16(r5)
1104a8dc:	dfc00815 	stw	ra,32(sp)
1104a8e0:	ddc00715 	stw	r23,28(sp)
1104a8e4:	dd800615 	stw	r22,24(sp)
1104a8e8:	dd400515 	stw	r21,20(sp)
1104a8ec:	dd000415 	stw	r20,16(sp)
1104a8f0:	dcc00315 	stw	r19,12(sp)
1104a8f4:	dc400115 	stw	r17,4(sp)
1104a8f8:	dc000015 	stw	r16,0(sp)
1104a8fc:	14807116 	blt	r2,r18,1104aac4 <quorem+0x1f8>
1104a900:	94bfffc4 	addi	r18,r18,-1
1104a904:	94ad883a 	add	r22,r18,r18
1104a908:	b5ad883a 	add	r22,r22,r22
1104a90c:	2c400504 	addi	r17,r5,20
1104a910:	8da9883a 	add	r20,r17,r22
1104a914:	25400504 	addi	r21,r4,20
1104a918:	282f883a 	mov	r23,r5
1104a91c:	adad883a 	add	r22,r21,r22
1104a920:	a1400017 	ldw	r5,0(r20)
1104a924:	2021883a 	mov	r16,r4
1104a928:	b1000017 	ldw	r4,0(r22)
1104a92c:	29400044 	addi	r5,r5,1
1104a930:	10442700 	call	11044270 <__udivsi3>
1104a934:	1027883a 	mov	r19,r2
1104a938:	10002c26 	beq	r2,zero,1104a9ec <quorem+0x120>
1104a93c:	a813883a 	mov	r9,r21
1104a940:	880b883a 	mov	r5,r17
1104a944:	0009883a 	mov	r4,zero
1104a948:	000d883a 	mov	r6,zero
1104a94c:	2a000017 	ldw	r8,0(r5)
1104a950:	49c00017 	ldw	r7,0(r9)
1104a954:	29400104 	addi	r5,r5,4
1104a958:	40bfffcc 	andi	r2,r8,65535
1104a95c:	14c5383a 	mul	r2,r2,r19
1104a960:	4010d43a 	srli	r8,r8,16
1104a964:	38ffffcc 	andi	r3,r7,65535
1104a968:	1105883a 	add	r2,r2,r4
1104a96c:	1008d43a 	srli	r4,r2,16
1104a970:	44d1383a 	mul	r8,r8,r19
1104a974:	198d883a 	add	r6,r3,r6
1104a978:	10ffffcc 	andi	r3,r2,65535
1104a97c:	30c7c83a 	sub	r3,r6,r3
1104a980:	380ed43a 	srli	r7,r7,16
1104a984:	4105883a 	add	r2,r8,r4
1104a988:	180dd43a 	srai	r6,r3,16
1104a98c:	113fffcc 	andi	r4,r2,65535
1104a990:	390fc83a 	sub	r7,r7,r4
1104a994:	398d883a 	add	r6,r7,r6
1104a998:	300e943a 	slli	r7,r6,16
1104a99c:	18ffffcc 	andi	r3,r3,65535
1104a9a0:	1008d43a 	srli	r4,r2,16
1104a9a4:	38ceb03a 	or	r7,r7,r3
1104a9a8:	49c00015 	stw	r7,0(r9)
1104a9ac:	300dd43a 	srai	r6,r6,16
1104a9b0:	4a400104 	addi	r9,r9,4
1104a9b4:	a17fe52e 	bgeu	r20,r5,1104a94c <quorem+0x80>
1104a9b8:	b0800017 	ldw	r2,0(r22)
1104a9bc:	10000b1e 	bne	r2,zero,1104a9ec <quorem+0x120>
1104a9c0:	b0bfff04 	addi	r2,r22,-4
1104a9c4:	a880082e 	bgeu	r21,r2,1104a9e8 <quorem+0x11c>
1104a9c8:	b0ffff17 	ldw	r3,-4(r22)
1104a9cc:	18000326 	beq	r3,zero,1104a9dc <quorem+0x110>
1104a9d0:	00000506 	br	1104a9e8 <quorem+0x11c>
1104a9d4:	10c00017 	ldw	r3,0(r2)
1104a9d8:	1800031e 	bne	r3,zero,1104a9e8 <quorem+0x11c>
1104a9dc:	10bfff04 	addi	r2,r2,-4
1104a9e0:	94bfffc4 	addi	r18,r18,-1
1104a9e4:	a8bffb36 	bltu	r21,r2,1104a9d4 <quorem+0x108>
1104a9e8:	84800415 	stw	r18,16(r16)
1104a9ec:	b80b883a 	mov	r5,r23
1104a9f0:	8009883a 	mov	r4,r16
1104a9f4:	104ea300 	call	1104ea30 <__mcmp>
1104a9f8:	10002616 	blt	r2,zero,1104aa94 <quorem+0x1c8>
1104a9fc:	9cc00044 	addi	r19,r19,1
1104aa00:	a805883a 	mov	r2,r21
1104aa04:	000b883a 	mov	r5,zero
1104aa08:	11000017 	ldw	r4,0(r2)
1104aa0c:	89800017 	ldw	r6,0(r17)
1104aa10:	10800104 	addi	r2,r2,4
1104aa14:	20ffffcc 	andi	r3,r4,65535
1104aa18:	194b883a 	add	r5,r3,r5
1104aa1c:	30ffffcc 	andi	r3,r6,65535
1104aa20:	28c7c83a 	sub	r3,r5,r3
1104aa24:	300cd43a 	srli	r6,r6,16
1104aa28:	2008d43a 	srli	r4,r4,16
1104aa2c:	180bd43a 	srai	r5,r3,16
1104aa30:	18ffffcc 	andi	r3,r3,65535
1104aa34:	2189c83a 	sub	r4,r4,r6
1104aa38:	2149883a 	add	r4,r4,r5
1104aa3c:	200c943a 	slli	r6,r4,16
1104aa40:	8c400104 	addi	r17,r17,4
1104aa44:	200bd43a 	srai	r5,r4,16
1104aa48:	30c6b03a 	or	r3,r6,r3
1104aa4c:	10ffff15 	stw	r3,-4(r2)
1104aa50:	a47fed2e 	bgeu	r20,r17,1104aa08 <quorem+0x13c>
1104aa54:	9485883a 	add	r2,r18,r18
1104aa58:	1085883a 	add	r2,r2,r2
1104aa5c:	a887883a 	add	r3,r21,r2
1104aa60:	18800017 	ldw	r2,0(r3)
1104aa64:	10000b1e 	bne	r2,zero,1104aa94 <quorem+0x1c8>
1104aa68:	18bfff04 	addi	r2,r3,-4
1104aa6c:	a880082e 	bgeu	r21,r2,1104aa90 <quorem+0x1c4>
1104aa70:	18ffff17 	ldw	r3,-4(r3)
1104aa74:	18000326 	beq	r3,zero,1104aa84 <quorem+0x1b8>
1104aa78:	00000506 	br	1104aa90 <quorem+0x1c4>
1104aa7c:	10c00017 	ldw	r3,0(r2)
1104aa80:	1800031e 	bne	r3,zero,1104aa90 <quorem+0x1c4>
1104aa84:	10bfff04 	addi	r2,r2,-4
1104aa88:	94bfffc4 	addi	r18,r18,-1
1104aa8c:	a8bffb36 	bltu	r21,r2,1104aa7c <quorem+0x1b0>
1104aa90:	84800415 	stw	r18,16(r16)
1104aa94:	9805883a 	mov	r2,r19
1104aa98:	dfc00817 	ldw	ra,32(sp)
1104aa9c:	ddc00717 	ldw	r23,28(sp)
1104aaa0:	dd800617 	ldw	r22,24(sp)
1104aaa4:	dd400517 	ldw	r21,20(sp)
1104aaa8:	dd000417 	ldw	r20,16(sp)
1104aaac:	dcc00317 	ldw	r19,12(sp)
1104aab0:	dc800217 	ldw	r18,8(sp)
1104aab4:	dc400117 	ldw	r17,4(sp)
1104aab8:	dc000017 	ldw	r16,0(sp)
1104aabc:	dec00904 	addi	sp,sp,36
1104aac0:	f800283a 	ret
1104aac4:	0005883a 	mov	r2,zero
1104aac8:	003ff306 	br	1104aa98 <quorem+0x1cc>

1104aacc <_dtoa_r>:
1104aacc:	20801017 	ldw	r2,64(r4)
1104aad0:	deffde04 	addi	sp,sp,-136
1104aad4:	df002015 	stw	fp,128(sp)
1104aad8:	dcc01b15 	stw	r19,108(sp)
1104aadc:	dc801a15 	stw	r18,104(sp)
1104aae0:	dc401915 	stw	r17,100(sp)
1104aae4:	dc001815 	stw	r16,96(sp)
1104aae8:	dfc02115 	stw	ra,132(sp)
1104aaec:	ddc01f15 	stw	r23,124(sp)
1104aaf0:	dd801e15 	stw	r22,120(sp)
1104aaf4:	dd401d15 	stw	r21,116(sp)
1104aaf8:	dd001c15 	stw	r20,112(sp)
1104aafc:	d9c00315 	stw	r7,12(sp)
1104ab00:	2039883a 	mov	fp,r4
1104ab04:	3023883a 	mov	r17,r6
1104ab08:	2825883a 	mov	r18,r5
1104ab0c:	dc002417 	ldw	r16,144(sp)
1104ab10:	3027883a 	mov	r19,r6
1104ab14:	10000826 	beq	r2,zero,1104ab38 <_dtoa_r+0x6c>
1104ab18:	21801117 	ldw	r6,68(r4)
1104ab1c:	00c00044 	movi	r3,1
1104ab20:	100b883a 	mov	r5,r2
1104ab24:	1986983a 	sll	r3,r3,r6
1104ab28:	11800115 	stw	r6,4(r2)
1104ab2c:	10c00215 	stw	r3,8(r2)
1104ab30:	104e2100 	call	1104e210 <_Bfree>
1104ab34:	e0001015 	stw	zero,64(fp)
1104ab38:	88002e16 	blt	r17,zero,1104abf4 <_dtoa_r+0x128>
1104ab3c:	80000015 	stw	zero,0(r16)
1104ab40:	889ffc2c 	andhi	r2,r17,32752
1104ab44:	00dffc34 	movhi	r3,32752
1104ab48:	10c01c26 	beq	r2,r3,1104abbc <_dtoa_r+0xf0>
1104ab4c:	000d883a 	mov	r6,zero
1104ab50:	000f883a 	mov	r7,zero
1104ab54:	9009883a 	mov	r4,r18
1104ab58:	980b883a 	mov	r5,r19
1104ab5c:	1044bd80 	call	11044bd8 <__eqdf2>
1104ab60:	10002b1e 	bne	r2,zero,1104ac10 <_dtoa_r+0x144>
1104ab64:	d9c02317 	ldw	r7,140(sp)
1104ab68:	00800044 	movi	r2,1
1104ab6c:	38800015 	stw	r2,0(r7)
1104ab70:	d8802517 	ldw	r2,148(sp)
1104ab74:	10019e26 	beq	r2,zero,1104b1f0 <_dtoa_r+0x724>
1104ab78:	d8c02517 	ldw	r3,148(sp)
1104ab7c:	00844174 	movhi	r2,4357
1104ab80:	109c2e44 	addi	r2,r2,28857
1104ab84:	18800015 	stw	r2,0(r3)
1104ab88:	10bfffc4 	addi	r2,r2,-1
1104ab8c:	dfc02117 	ldw	ra,132(sp)
1104ab90:	df002017 	ldw	fp,128(sp)
1104ab94:	ddc01f17 	ldw	r23,124(sp)
1104ab98:	dd801e17 	ldw	r22,120(sp)
1104ab9c:	dd401d17 	ldw	r21,116(sp)
1104aba0:	dd001c17 	ldw	r20,112(sp)
1104aba4:	dcc01b17 	ldw	r19,108(sp)
1104aba8:	dc801a17 	ldw	r18,104(sp)
1104abac:	dc401917 	ldw	r17,100(sp)
1104abb0:	dc001817 	ldw	r16,96(sp)
1104abb4:	dec02204 	addi	sp,sp,136
1104abb8:	f800283a 	ret
1104abbc:	d8c02317 	ldw	r3,140(sp)
1104abc0:	0089c3c4 	movi	r2,9999
1104abc4:	18800015 	stw	r2,0(r3)
1104abc8:	90017726 	beq	r18,zero,1104b1a8 <_dtoa_r+0x6dc>
1104abcc:	00844174 	movhi	r2,4357
1104abd0:	109c4204 	addi	r2,r2,28936
1104abd4:	d9002517 	ldw	r4,148(sp)
1104abd8:	203fec26 	beq	r4,zero,1104ab8c <_dtoa_r+0xc0>
1104abdc:	10c000c7 	ldb	r3,3(r2)
1104abe0:	1801781e 	bne	r3,zero,1104b1c4 <_dtoa_r+0x6f8>
1104abe4:	10c000c4 	addi	r3,r2,3
1104abe8:	d9802517 	ldw	r6,148(sp)
1104abec:	30c00015 	stw	r3,0(r6)
1104abf0:	003fe606 	br	1104ab8c <_dtoa_r+0xc0>
1104abf4:	04e00034 	movhi	r19,32768
1104abf8:	9cffffc4 	addi	r19,r19,-1
1104abfc:	00800044 	movi	r2,1
1104ac00:	8ce6703a 	and	r19,r17,r19
1104ac04:	80800015 	stw	r2,0(r16)
1104ac08:	9823883a 	mov	r17,r19
1104ac0c:	003fcc06 	br	1104ab40 <_dtoa_r+0x74>
1104ac10:	d8800204 	addi	r2,sp,8
1104ac14:	d8800015 	stw	r2,0(sp)
1104ac18:	d9c00104 	addi	r7,sp,4
1104ac1c:	900b883a 	mov	r5,r18
1104ac20:	980d883a 	mov	r6,r19
1104ac24:	e009883a 	mov	r4,fp
1104ac28:	8820d53a 	srli	r16,r17,20
1104ac2c:	104edfc0 	call	1104edfc <__d2b>
1104ac30:	d8800915 	stw	r2,36(sp)
1104ac34:	8001651e 	bne	r16,zero,1104b1cc <_dtoa_r+0x700>
1104ac38:	dd800217 	ldw	r22,8(sp)
1104ac3c:	dc000117 	ldw	r16,4(sp)
1104ac40:	00800804 	movi	r2,32
1104ac44:	b421883a 	add	r16,r22,r16
1104ac48:	80c10c84 	addi	r3,r16,1074
1104ac4c:	10c2d10e 	bge	r2,r3,1104b794 <_dtoa_r+0xcc8>
1104ac50:	00801004 	movi	r2,64
1104ac54:	81010484 	addi	r4,r16,1042
1104ac58:	10c7c83a 	sub	r3,r2,r3
1104ac5c:	9108d83a 	srl	r4,r18,r4
1104ac60:	88e2983a 	sll	r17,r17,r3
1104ac64:	2448b03a 	or	r4,r4,r17
1104ac68:	10541bc0 	call	110541bc <__floatunsidf>
1104ac6c:	017f8434 	movhi	r5,65040
1104ac70:	01800044 	movi	r6,1
1104ac74:	1009883a 	mov	r4,r2
1104ac78:	194b883a 	add	r5,r3,r5
1104ac7c:	843fffc4 	addi	r16,r16,-1
1104ac80:	d9801115 	stw	r6,68(sp)
1104ac84:	000d883a 	mov	r6,zero
1104ac88:	01cffe34 	movhi	r7,16376
1104ac8c:	10454540 	call	11045454 <__subdf3>
1104ac90:	0198dbf4 	movhi	r6,25455
1104ac94:	01cff4f4 	movhi	r7,16339
1104ac98:	3190d844 	addi	r6,r6,17249
1104ac9c:	39e1e9c4 	addi	r7,r7,-30809
1104aca0:	1009883a 	mov	r4,r2
1104aca4:	180b883a 	mov	r5,r3
1104aca8:	1044d3c0 	call	11044d3c <__muldf3>
1104acac:	01a2d874 	movhi	r6,35681
1104acb0:	01cff1f4 	movhi	r7,16327
1104acb4:	31b22cc4 	addi	r6,r6,-14157
1104acb8:	39e28a04 	addi	r7,r7,-30168
1104acbc:	180b883a 	mov	r5,r3
1104acc0:	1009883a 	mov	r4,r2
1104acc4:	104432c0 	call	1104432c <__adddf3>
1104acc8:	8009883a 	mov	r4,r16
1104accc:	1029883a 	mov	r20,r2
1104acd0:	1823883a 	mov	r17,r3
1104acd4:	1045dd00 	call	11045dd0 <__floatsidf>
1104acd8:	019427f4 	movhi	r6,20639
1104acdc:	01cff4f4 	movhi	r7,16339
1104ace0:	319e7ec4 	addi	r6,r6,31227
1104ace4:	39d104c4 	addi	r7,r7,17427
1104ace8:	1009883a 	mov	r4,r2
1104acec:	180b883a 	mov	r5,r3
1104acf0:	1044d3c0 	call	11044d3c <__muldf3>
1104acf4:	100d883a 	mov	r6,r2
1104acf8:	180f883a 	mov	r7,r3
1104acfc:	a009883a 	mov	r4,r20
1104ad00:	880b883a 	mov	r5,r17
1104ad04:	104432c0 	call	1104432c <__adddf3>
1104ad08:	1009883a 	mov	r4,r2
1104ad0c:	180b883a 	mov	r5,r3
1104ad10:	1029883a 	mov	r20,r2
1104ad14:	1823883a 	mov	r17,r3
1104ad18:	1045d500 	call	11045d50 <__fixdfsi>
1104ad1c:	000d883a 	mov	r6,zero
1104ad20:	000f883a 	mov	r7,zero
1104ad24:	a009883a 	mov	r4,r20
1104ad28:	880b883a 	mov	r5,r17
1104ad2c:	d8800515 	stw	r2,20(sp)
1104ad30:	10540c80 	call	110540c8 <__ledf2>
1104ad34:	10028716 	blt	r2,zero,1104b754 <_dtoa_r+0xc88>
1104ad38:	d8c00517 	ldw	r3,20(sp)
1104ad3c:	00800584 	movi	r2,22
1104ad40:	10c27536 	bltu	r2,r3,1104b718 <_dtoa_r+0xc4c>
1104ad44:	180490fa 	slli	r2,r3,3
1104ad48:	00c44174 	movhi	r3,4357
1104ad4c:	18dc5e04 	addi	r3,r3,29048
1104ad50:	1885883a 	add	r2,r3,r2
1104ad54:	11000017 	ldw	r4,0(r2)
1104ad58:	11400117 	ldw	r5,4(r2)
1104ad5c:	900d883a 	mov	r6,r18
1104ad60:	980f883a 	mov	r7,r19
1104ad64:	1044c600 	call	11044c60 <__gedf2>
1104ad68:	00828d0e 	bge	zero,r2,1104b7a0 <_dtoa_r+0xcd4>
1104ad6c:	d9000517 	ldw	r4,20(sp)
1104ad70:	d8000e15 	stw	zero,56(sp)
1104ad74:	213fffc4 	addi	r4,r4,-1
1104ad78:	d9000515 	stw	r4,20(sp)
1104ad7c:	b42dc83a 	sub	r22,r22,r16
1104ad80:	b5bfffc4 	addi	r22,r22,-1
1104ad84:	b0026f16 	blt	r22,zero,1104b744 <_dtoa_r+0xc78>
1104ad88:	d8000815 	stw	zero,32(sp)
1104ad8c:	d9c00517 	ldw	r7,20(sp)
1104ad90:	38026416 	blt	r7,zero,1104b724 <_dtoa_r+0xc58>
1104ad94:	b1ed883a 	add	r22,r22,r7
1104ad98:	d9c00d15 	stw	r7,52(sp)
1104ad9c:	d8000a15 	stw	zero,40(sp)
1104ada0:	d9800317 	ldw	r6,12(sp)
1104ada4:	00800244 	movi	r2,9
1104ada8:	11811436 	bltu	r2,r6,1104b1fc <_dtoa_r+0x730>
1104adac:	00800144 	movi	r2,5
1104adb0:	1184e10e 	bge	r2,r6,1104c138 <_dtoa_r+0x166c>
1104adb4:	31bfff04 	addi	r6,r6,-4
1104adb8:	d9800315 	stw	r6,12(sp)
1104adbc:	0023883a 	mov	r17,zero
1104adc0:	d9800317 	ldw	r6,12(sp)
1104adc4:	008000c4 	movi	r2,3
1104adc8:	30836726 	beq	r6,r2,1104bb68 <_dtoa_r+0x109c>
1104adcc:	1183410e 	bge	r2,r6,1104bad4 <_dtoa_r+0x1008>
1104add0:	d9c00317 	ldw	r7,12(sp)
1104add4:	00800104 	movi	r2,4
1104add8:	38827c26 	beq	r7,r2,1104b7cc <_dtoa_r+0xd00>
1104addc:	00800144 	movi	r2,5
1104ade0:	3884c41e 	bne	r7,r2,1104c0f4 <_dtoa_r+0x1628>
1104ade4:	00800044 	movi	r2,1
1104ade8:	d8800b15 	stw	r2,44(sp)
1104adec:	d8c00517 	ldw	r3,20(sp)
1104adf0:	d9002217 	ldw	r4,136(sp)
1104adf4:	1907883a 	add	r3,r3,r4
1104adf8:	19800044 	addi	r6,r3,1
1104adfc:	d8c00c15 	stw	r3,48(sp)
1104ae00:	d9800615 	stw	r6,24(sp)
1104ae04:	0183a40e 	bge	zero,r6,1104bc98 <_dtoa_r+0x11cc>
1104ae08:	d9800617 	ldw	r6,24(sp)
1104ae0c:	3021883a 	mov	r16,r6
1104ae10:	e0001115 	stw	zero,68(fp)
1104ae14:	008005c4 	movi	r2,23
1104ae18:	1184c92e 	bgeu	r2,r6,1104c140 <_dtoa_r+0x1674>
1104ae1c:	00c00044 	movi	r3,1
1104ae20:	00800104 	movi	r2,4
1104ae24:	1085883a 	add	r2,r2,r2
1104ae28:	11000504 	addi	r4,r2,20
1104ae2c:	180b883a 	mov	r5,r3
1104ae30:	18c00044 	addi	r3,r3,1
1104ae34:	313ffb2e 	bgeu	r6,r4,1104ae24 <_dtoa_r+0x358>
1104ae38:	e1401115 	stw	r5,68(fp)
1104ae3c:	e009883a 	mov	r4,fp
1104ae40:	104e1680 	call	1104e168 <_Balloc>
1104ae44:	d8800715 	stw	r2,28(sp)
1104ae48:	e0801015 	stw	r2,64(fp)
1104ae4c:	00800384 	movi	r2,14
1104ae50:	1400f736 	bltu	r2,r16,1104b230 <_dtoa_r+0x764>
1104ae54:	8800f626 	beq	r17,zero,1104b230 <_dtoa_r+0x764>
1104ae58:	d9c00517 	ldw	r7,20(sp)
1104ae5c:	01c39a0e 	bge	zero,r7,1104bcc8 <_dtoa_r+0x11fc>
1104ae60:	388003cc 	andi	r2,r7,15
1104ae64:	100490fa 	slli	r2,r2,3
1104ae68:	382bd13a 	srai	r21,r7,4
1104ae6c:	00c44174 	movhi	r3,4357
1104ae70:	18dc5e04 	addi	r3,r3,29048
1104ae74:	1885883a 	add	r2,r3,r2
1104ae78:	a8c0040c 	andi	r3,r21,16
1104ae7c:	12400017 	ldw	r9,0(r2)
1104ae80:	12000117 	ldw	r8,4(r2)
1104ae84:	18037926 	beq	r3,zero,1104bc6c <_dtoa_r+0x11a0>
1104ae88:	00844174 	movhi	r2,4357
1104ae8c:	109c5404 	addi	r2,r2,29008
1104ae90:	11800817 	ldw	r6,32(r2)
1104ae94:	11c00917 	ldw	r7,36(r2)
1104ae98:	9009883a 	mov	r4,r18
1104ae9c:	980b883a 	mov	r5,r19
1104aea0:	da001715 	stw	r8,92(sp)
1104aea4:	da401615 	stw	r9,88(sp)
1104aea8:	10537e00 	call	110537e0 <__divdf3>
1104aeac:	da001717 	ldw	r8,92(sp)
1104aeb0:	da401617 	ldw	r9,88(sp)
1104aeb4:	ad4003cc 	andi	r21,r21,15
1104aeb8:	040000c4 	movi	r16,3
1104aebc:	1023883a 	mov	r17,r2
1104aec0:	1829883a 	mov	r20,r3
1104aec4:	a8001126 	beq	r21,zero,1104af0c <_dtoa_r+0x440>
1104aec8:	05c44174 	movhi	r23,4357
1104aecc:	bddc5404 	addi	r23,r23,29008
1104aed0:	4805883a 	mov	r2,r9
1104aed4:	4007883a 	mov	r3,r8
1104aed8:	a980004c 	andi	r6,r21,1
1104aedc:	1009883a 	mov	r4,r2
1104aee0:	a82bd07a 	srai	r21,r21,1
1104aee4:	180b883a 	mov	r5,r3
1104aee8:	30000426 	beq	r6,zero,1104aefc <_dtoa_r+0x430>
1104aeec:	b9800017 	ldw	r6,0(r23)
1104aef0:	b9c00117 	ldw	r7,4(r23)
1104aef4:	84000044 	addi	r16,r16,1
1104aef8:	1044d3c0 	call	11044d3c <__muldf3>
1104aefc:	bdc00204 	addi	r23,r23,8
1104af00:	a83ff51e 	bne	r21,zero,1104aed8 <_dtoa_r+0x40c>
1104af04:	1013883a 	mov	r9,r2
1104af08:	1811883a 	mov	r8,r3
1104af0c:	480d883a 	mov	r6,r9
1104af10:	400f883a 	mov	r7,r8
1104af14:	8809883a 	mov	r4,r17
1104af18:	a00b883a 	mov	r5,r20
1104af1c:	10537e00 	call	110537e0 <__divdf3>
1104af20:	d8800f15 	stw	r2,60(sp)
1104af24:	d8c01015 	stw	r3,64(sp)
1104af28:	d8c00e17 	ldw	r3,56(sp)
1104af2c:	18000626 	beq	r3,zero,1104af48 <_dtoa_r+0x47c>
1104af30:	d9000f17 	ldw	r4,60(sp)
1104af34:	d9401017 	ldw	r5,64(sp)
1104af38:	000d883a 	mov	r6,zero
1104af3c:	01cffc34 	movhi	r7,16368
1104af40:	10540c80 	call	110540c8 <__ledf2>
1104af44:	10040b16 	blt	r2,zero,1104bf74 <_dtoa_r+0x14a8>
1104af48:	8009883a 	mov	r4,r16
1104af4c:	1045dd00 	call	11045dd0 <__floatsidf>
1104af50:	d9800f17 	ldw	r6,60(sp)
1104af54:	d9c01017 	ldw	r7,64(sp)
1104af58:	1009883a 	mov	r4,r2
1104af5c:	180b883a 	mov	r5,r3
1104af60:	1044d3c0 	call	11044d3c <__muldf3>
1104af64:	000d883a 	mov	r6,zero
1104af68:	01d00734 	movhi	r7,16412
1104af6c:	1009883a 	mov	r4,r2
1104af70:	180b883a 	mov	r5,r3
1104af74:	104432c0 	call	1104432c <__adddf3>
1104af78:	1021883a 	mov	r16,r2
1104af7c:	d8800617 	ldw	r2,24(sp)
1104af80:	047f3034 	movhi	r17,64704
1104af84:	1c63883a 	add	r17,r3,r17
1104af88:	10031826 	beq	r2,zero,1104bbec <_dtoa_r+0x1120>
1104af8c:	d8c00517 	ldw	r3,20(sp)
1104af90:	db000617 	ldw	r12,24(sp)
1104af94:	d8c01315 	stw	r3,76(sp)
1104af98:	d9000b17 	ldw	r4,44(sp)
1104af9c:	20038f26 	beq	r4,zero,1104bddc <_dtoa_r+0x1310>
1104afa0:	60bfffc4 	addi	r2,r12,-1
1104afa4:	100490fa 	slli	r2,r2,3
1104afa8:	00c44174 	movhi	r3,4357
1104afac:	18dc5e04 	addi	r3,r3,29048
1104afb0:	1885883a 	add	r2,r3,r2
1104afb4:	11800017 	ldw	r6,0(r2)
1104afb8:	11c00117 	ldw	r7,4(r2)
1104afbc:	d8800717 	ldw	r2,28(sp)
1104afc0:	0009883a 	mov	r4,zero
1104afc4:	014ff834 	movhi	r5,16352
1104afc8:	db001615 	stw	r12,88(sp)
1104afcc:	15c00044 	addi	r23,r2,1
1104afd0:	10537e00 	call	110537e0 <__divdf3>
1104afd4:	800d883a 	mov	r6,r16
1104afd8:	880f883a 	mov	r7,r17
1104afdc:	1009883a 	mov	r4,r2
1104afe0:	180b883a 	mov	r5,r3
1104afe4:	10454540 	call	11045454 <__subdf3>
1104afe8:	d9401017 	ldw	r5,64(sp)
1104afec:	d9000f17 	ldw	r4,60(sp)
1104aff0:	102b883a 	mov	r21,r2
1104aff4:	d8c01215 	stw	r3,72(sp)
1104aff8:	1045d500 	call	11045d50 <__fixdfsi>
1104affc:	1009883a 	mov	r4,r2
1104b000:	1029883a 	mov	r20,r2
1104b004:	1045dd00 	call	11045dd0 <__floatsidf>
1104b008:	d9000f17 	ldw	r4,60(sp)
1104b00c:	d9401017 	ldw	r5,64(sp)
1104b010:	100d883a 	mov	r6,r2
1104b014:	180f883a 	mov	r7,r3
1104b018:	10454540 	call	11045454 <__subdf3>
1104b01c:	1823883a 	mov	r17,r3
1104b020:	d8c00717 	ldw	r3,28(sp)
1104b024:	d9401217 	ldw	r5,72(sp)
1104b028:	a2000c04 	addi	r8,r20,48
1104b02c:	1021883a 	mov	r16,r2
1104b030:	1a000005 	stb	r8,0(r3)
1104b034:	800d883a 	mov	r6,r16
1104b038:	880f883a 	mov	r7,r17
1104b03c:	a809883a 	mov	r4,r21
1104b040:	4029883a 	mov	r20,r8
1104b044:	1044c600 	call	11044c60 <__gedf2>
1104b048:	00841d16 	blt	zero,r2,1104c0c0 <_dtoa_r+0x15f4>
1104b04c:	800d883a 	mov	r6,r16
1104b050:	880f883a 	mov	r7,r17
1104b054:	0009883a 	mov	r4,zero
1104b058:	014ffc34 	movhi	r5,16368
1104b05c:	10454540 	call	11045454 <__subdf3>
1104b060:	d9401217 	ldw	r5,72(sp)
1104b064:	100d883a 	mov	r6,r2
1104b068:	180f883a 	mov	r7,r3
1104b06c:	a809883a 	mov	r4,r21
1104b070:	1044c600 	call	11044c60 <__gedf2>
1104b074:	db001617 	ldw	r12,88(sp)
1104b078:	00840e16 	blt	zero,r2,1104c0b4 <_dtoa_r+0x15e8>
1104b07c:	00800044 	movi	r2,1
1104b080:	13006b0e 	bge	r2,r12,1104b230 <_dtoa_r+0x764>
1104b084:	d9000717 	ldw	r4,28(sp)
1104b088:	dd800f15 	stw	r22,60(sp)
1104b08c:	dcc01015 	stw	r19,64(sp)
1104b090:	2319883a 	add	r12,r4,r12
1104b094:	dcc01217 	ldw	r19,72(sp)
1104b098:	602d883a 	mov	r22,r12
1104b09c:	dc801215 	stw	r18,72(sp)
1104b0a0:	b825883a 	mov	r18,r23
1104b0a4:	00000906 	br	1104b0cc <_dtoa_r+0x600>
1104b0a8:	10454540 	call	11045454 <__subdf3>
1104b0ac:	a80d883a 	mov	r6,r21
1104b0b0:	980f883a 	mov	r7,r19
1104b0b4:	1009883a 	mov	r4,r2
1104b0b8:	180b883a 	mov	r5,r3
1104b0bc:	10540c80 	call	110540c8 <__ledf2>
1104b0c0:	1003e816 	blt	r2,zero,1104c064 <_dtoa_r+0x1598>
1104b0c4:	b825883a 	mov	r18,r23
1104b0c8:	bd83e926 	beq	r23,r22,1104c070 <_dtoa_r+0x15a4>
1104b0cc:	a809883a 	mov	r4,r21
1104b0d0:	980b883a 	mov	r5,r19
1104b0d4:	000d883a 	mov	r6,zero
1104b0d8:	01d00934 	movhi	r7,16420
1104b0dc:	1044d3c0 	call	11044d3c <__muldf3>
1104b0e0:	000d883a 	mov	r6,zero
1104b0e4:	01d00934 	movhi	r7,16420
1104b0e8:	8009883a 	mov	r4,r16
1104b0ec:	880b883a 	mov	r5,r17
1104b0f0:	102b883a 	mov	r21,r2
1104b0f4:	1827883a 	mov	r19,r3
1104b0f8:	1044d3c0 	call	11044d3c <__muldf3>
1104b0fc:	180b883a 	mov	r5,r3
1104b100:	1009883a 	mov	r4,r2
1104b104:	1821883a 	mov	r16,r3
1104b108:	1023883a 	mov	r17,r2
1104b10c:	1045d500 	call	11045d50 <__fixdfsi>
1104b110:	1009883a 	mov	r4,r2
1104b114:	1029883a 	mov	r20,r2
1104b118:	1045dd00 	call	11045dd0 <__floatsidf>
1104b11c:	8809883a 	mov	r4,r17
1104b120:	800b883a 	mov	r5,r16
1104b124:	100d883a 	mov	r6,r2
1104b128:	180f883a 	mov	r7,r3
1104b12c:	10454540 	call	11045454 <__subdf3>
1104b130:	a5000c04 	addi	r20,r20,48
1104b134:	a80d883a 	mov	r6,r21
1104b138:	980f883a 	mov	r7,r19
1104b13c:	1009883a 	mov	r4,r2
1104b140:	180b883a 	mov	r5,r3
1104b144:	95000005 	stb	r20,0(r18)
1104b148:	1021883a 	mov	r16,r2
1104b14c:	1823883a 	mov	r17,r3
1104b150:	10540c80 	call	110540c8 <__ledf2>
1104b154:	bdc00044 	addi	r23,r23,1
1104b158:	800d883a 	mov	r6,r16
1104b15c:	880f883a 	mov	r7,r17
1104b160:	0009883a 	mov	r4,zero
1104b164:	014ffc34 	movhi	r5,16368
1104b168:	103fcf0e 	bge	r2,zero,1104b0a8 <_dtoa_r+0x5dc>
1104b16c:	d8c01317 	ldw	r3,76(sp)
1104b170:	d8c00515 	stw	r3,20(sp)
1104b174:	d9400917 	ldw	r5,36(sp)
1104b178:	e009883a 	mov	r4,fp
1104b17c:	104e2100 	call	1104e210 <_Bfree>
1104b180:	d9000517 	ldw	r4,20(sp)
1104b184:	d9802317 	ldw	r6,140(sp)
1104b188:	d9c02517 	ldw	r7,148(sp)
1104b18c:	b8000005 	stb	zero,0(r23)
1104b190:	20800044 	addi	r2,r4,1
1104b194:	30800015 	stw	r2,0(r6)
1104b198:	3802aa26 	beq	r7,zero,1104bc44 <_dtoa_r+0x1178>
1104b19c:	3dc00015 	stw	r23,0(r7)
1104b1a0:	d8800717 	ldw	r2,28(sp)
1104b1a4:	003e7906 	br	1104ab8c <_dtoa_r+0xc0>
1104b1a8:	00800434 	movhi	r2,16
1104b1ac:	10bfffc4 	addi	r2,r2,-1
1104b1b0:	88a2703a 	and	r17,r17,r2
1104b1b4:	883e851e 	bne	r17,zero,1104abcc <_dtoa_r+0x100>
1104b1b8:	00844174 	movhi	r2,4357
1104b1bc:	109c3f04 	addi	r2,r2,28924
1104b1c0:	003e8406 	br	1104abd4 <_dtoa_r+0x108>
1104b1c4:	10c00204 	addi	r3,r2,8
1104b1c8:	003e8706 	br	1104abe8 <_dtoa_r+0x11c>
1104b1cc:	01400434 	movhi	r5,16
1104b1d0:	297fffc4 	addi	r5,r5,-1
1104b1d4:	994a703a 	and	r5,r19,r5
1104b1d8:	9009883a 	mov	r4,r18
1104b1dc:	843f0044 	addi	r16,r16,-1023
1104b1e0:	294ffc34 	orhi	r5,r5,16368
1104b1e4:	dd800217 	ldw	r22,8(sp)
1104b1e8:	d8001115 	stw	zero,68(sp)
1104b1ec:	003ea506 	br	1104ac84 <_dtoa_r+0x1b8>
1104b1f0:	00844174 	movhi	r2,4357
1104b1f4:	109c2e04 	addi	r2,r2,28856
1104b1f8:	003e6406 	br	1104ab8c <_dtoa_r+0xc0>
1104b1fc:	e0001115 	stw	zero,68(fp)
1104b200:	000b883a 	mov	r5,zero
1104b204:	e009883a 	mov	r4,fp
1104b208:	104e1680 	call	1104e168 <_Balloc>
1104b20c:	01bfffc4 	movi	r6,-1
1104b210:	01c00044 	movi	r7,1
1104b214:	d8800715 	stw	r2,28(sp)
1104b218:	d9800c15 	stw	r6,48(sp)
1104b21c:	e0801015 	stw	r2,64(fp)
1104b220:	d8000315 	stw	zero,12(sp)
1104b224:	d9c00b15 	stw	r7,44(sp)
1104b228:	d9800615 	stw	r6,24(sp)
1104b22c:	d8002215 	stw	zero,136(sp)
1104b230:	d8800117 	ldw	r2,4(sp)
1104b234:	10008916 	blt	r2,zero,1104b45c <_dtoa_r+0x990>
1104b238:	d9000517 	ldw	r4,20(sp)
1104b23c:	00c00384 	movi	r3,14
1104b240:	19008616 	blt	r3,r4,1104b45c <_dtoa_r+0x990>
1104b244:	200490fa 	slli	r2,r4,3
1104b248:	00c44174 	movhi	r3,4357
1104b24c:	d9802217 	ldw	r6,136(sp)
1104b250:	18dc5e04 	addi	r3,r3,29048
1104b254:	1885883a 	add	r2,r3,r2
1104b258:	14000017 	ldw	r16,0(r2)
1104b25c:	14400117 	ldw	r17,4(r2)
1104b260:	30016316 	blt	r6,zero,1104b7f0 <_dtoa_r+0xd24>
1104b264:	800d883a 	mov	r6,r16
1104b268:	880f883a 	mov	r7,r17
1104b26c:	9009883a 	mov	r4,r18
1104b270:	980b883a 	mov	r5,r19
1104b274:	10537e00 	call	110537e0 <__divdf3>
1104b278:	180b883a 	mov	r5,r3
1104b27c:	1009883a 	mov	r4,r2
1104b280:	1045d500 	call	11045d50 <__fixdfsi>
1104b284:	1009883a 	mov	r4,r2
1104b288:	102b883a 	mov	r21,r2
1104b28c:	1045dd00 	call	11045dd0 <__floatsidf>
1104b290:	800d883a 	mov	r6,r16
1104b294:	880f883a 	mov	r7,r17
1104b298:	1009883a 	mov	r4,r2
1104b29c:	180b883a 	mov	r5,r3
1104b2a0:	1044d3c0 	call	11044d3c <__muldf3>
1104b2a4:	100d883a 	mov	r6,r2
1104b2a8:	180f883a 	mov	r7,r3
1104b2ac:	9009883a 	mov	r4,r18
1104b2b0:	980b883a 	mov	r5,r19
1104b2b4:	10454540 	call	11045454 <__subdf3>
1104b2b8:	d9c00717 	ldw	r7,28(sp)
1104b2bc:	1009883a 	mov	r4,r2
1104b2c0:	a8800c04 	addi	r2,r21,48
1104b2c4:	38800005 	stb	r2,0(r7)
1104b2c8:	3dc00044 	addi	r23,r7,1
1104b2cc:	d9c00617 	ldw	r7,24(sp)
1104b2d0:	01800044 	movi	r6,1
1104b2d4:	180b883a 	mov	r5,r3
1104b2d8:	2005883a 	mov	r2,r4
1104b2dc:	39803826 	beq	r7,r6,1104b3c0 <_dtoa_r+0x8f4>
1104b2e0:	000d883a 	mov	r6,zero
1104b2e4:	01d00934 	movhi	r7,16420
1104b2e8:	1044d3c0 	call	11044d3c <__muldf3>
1104b2ec:	000d883a 	mov	r6,zero
1104b2f0:	000f883a 	mov	r7,zero
1104b2f4:	1009883a 	mov	r4,r2
1104b2f8:	180b883a 	mov	r5,r3
1104b2fc:	1025883a 	mov	r18,r2
1104b300:	1827883a 	mov	r19,r3
1104b304:	1044bd80 	call	11044bd8 <__eqdf2>
1104b308:	103f9a26 	beq	r2,zero,1104b174 <_dtoa_r+0x6a8>
1104b30c:	d9c00617 	ldw	r7,24(sp)
1104b310:	d8c00717 	ldw	r3,28(sp)
1104b314:	b829883a 	mov	r20,r23
1104b318:	38bfffc4 	addi	r2,r7,-1
1104b31c:	18ad883a 	add	r22,r3,r2
1104b320:	00000a06 	br	1104b34c <_dtoa_r+0x880>
1104b324:	1044d3c0 	call	11044d3c <__muldf3>
1104b328:	000d883a 	mov	r6,zero
1104b32c:	000f883a 	mov	r7,zero
1104b330:	1009883a 	mov	r4,r2
1104b334:	180b883a 	mov	r5,r3
1104b338:	1025883a 	mov	r18,r2
1104b33c:	1827883a 	mov	r19,r3
1104b340:	b829883a 	mov	r20,r23
1104b344:	1044bd80 	call	11044bd8 <__eqdf2>
1104b348:	103f8a26 	beq	r2,zero,1104b174 <_dtoa_r+0x6a8>
1104b34c:	800d883a 	mov	r6,r16
1104b350:	880f883a 	mov	r7,r17
1104b354:	9009883a 	mov	r4,r18
1104b358:	980b883a 	mov	r5,r19
1104b35c:	10537e00 	call	110537e0 <__divdf3>
1104b360:	180b883a 	mov	r5,r3
1104b364:	1009883a 	mov	r4,r2
1104b368:	1045d500 	call	11045d50 <__fixdfsi>
1104b36c:	1009883a 	mov	r4,r2
1104b370:	102b883a 	mov	r21,r2
1104b374:	1045dd00 	call	11045dd0 <__floatsidf>
1104b378:	800d883a 	mov	r6,r16
1104b37c:	880f883a 	mov	r7,r17
1104b380:	1009883a 	mov	r4,r2
1104b384:	180b883a 	mov	r5,r3
1104b388:	1044d3c0 	call	11044d3c <__muldf3>
1104b38c:	100d883a 	mov	r6,r2
1104b390:	180f883a 	mov	r7,r3
1104b394:	9009883a 	mov	r4,r18
1104b398:	980b883a 	mov	r5,r19
1104b39c:	10454540 	call	11045454 <__subdf3>
1104b3a0:	aa000c04 	addi	r8,r21,48
1104b3a4:	a2000005 	stb	r8,0(r20)
1104b3a8:	000d883a 	mov	r6,zero
1104b3ac:	01d00934 	movhi	r7,16420
1104b3b0:	1009883a 	mov	r4,r2
1104b3b4:	180b883a 	mov	r5,r3
1104b3b8:	a5c00044 	addi	r23,r20,1
1104b3bc:	b53fd91e 	bne	r22,r20,1104b324 <_dtoa_r+0x858>
1104b3c0:	100d883a 	mov	r6,r2
1104b3c4:	180f883a 	mov	r7,r3
1104b3c8:	1009883a 	mov	r4,r2
1104b3cc:	180b883a 	mov	r5,r3
1104b3d0:	104432c0 	call	1104432c <__adddf3>
1104b3d4:	100d883a 	mov	r6,r2
1104b3d8:	180f883a 	mov	r7,r3
1104b3dc:	8009883a 	mov	r4,r16
1104b3e0:	880b883a 	mov	r5,r17
1104b3e4:	1027883a 	mov	r19,r2
1104b3e8:	1825883a 	mov	r18,r3
1104b3ec:	10540c80 	call	110540c8 <__ledf2>
1104b3f0:	10000816 	blt	r2,zero,1104b414 <_dtoa_r+0x948>
1104b3f4:	980d883a 	mov	r6,r19
1104b3f8:	900f883a 	mov	r7,r18
1104b3fc:	8009883a 	mov	r4,r16
1104b400:	880b883a 	mov	r5,r17
1104b404:	1044bd80 	call	11044bd8 <__eqdf2>
1104b408:	103f5a1e 	bne	r2,zero,1104b174 <_dtoa_r+0x6a8>
1104b40c:	ad40004c 	andi	r21,r21,1
1104b410:	a83f5826 	beq	r21,zero,1104b174 <_dtoa_r+0x6a8>
1104b414:	bd3fffc3 	ldbu	r20,-1(r23)
1104b418:	b8bfffc4 	addi	r2,r23,-1
1104b41c:	1007883a 	mov	r3,r2
1104b420:	01400e44 	movi	r5,57
1104b424:	d9800717 	ldw	r6,28(sp)
1104b428:	00000506 	br	1104b440 <_dtoa_r+0x974>
1104b42c:	18ffffc4 	addi	r3,r3,-1
1104b430:	11824726 	beq	r2,r6,1104bd50 <_dtoa_r+0x1284>
1104b434:	1d000003 	ldbu	r20,0(r3)
1104b438:	102f883a 	mov	r23,r2
1104b43c:	10bfffc4 	addi	r2,r2,-1
1104b440:	a1003fcc 	andi	r4,r20,255
1104b444:	2100201c 	xori	r4,r4,128
1104b448:	213fe004 	addi	r4,r4,-128
1104b44c:	217ff726 	beq	r4,r5,1104b42c <_dtoa_r+0x960>
1104b450:	a2000044 	addi	r8,r20,1
1104b454:	12000005 	stb	r8,0(r2)
1104b458:	003f4606 	br	1104b174 <_dtoa_r+0x6a8>
1104b45c:	d9000b17 	ldw	r4,44(sp)
1104b460:	2000c826 	beq	r4,zero,1104b784 <_dtoa_r+0xcb8>
1104b464:	d9800317 	ldw	r6,12(sp)
1104b468:	00c00044 	movi	r3,1
1104b46c:	1980f90e 	bge	r3,r6,1104b854 <_dtoa_r+0xd88>
1104b470:	d8800617 	ldw	r2,24(sp)
1104b474:	d8c00a17 	ldw	r3,40(sp)
1104b478:	157fffc4 	addi	r21,r2,-1
1104b47c:	1d41f316 	blt	r3,r21,1104bc4c <_dtoa_r+0x1180>
1104b480:	1d6bc83a 	sub	r21,r3,r21
1104b484:	d9c00617 	ldw	r7,24(sp)
1104b488:	3802aa16 	blt	r7,zero,1104bf34 <_dtoa_r+0x1468>
1104b48c:	dd000817 	ldw	r20,32(sp)
1104b490:	d8800617 	ldw	r2,24(sp)
1104b494:	d8c00817 	ldw	r3,32(sp)
1104b498:	01400044 	movi	r5,1
1104b49c:	e009883a 	mov	r4,fp
1104b4a0:	1887883a 	add	r3,r3,r2
1104b4a4:	d8c00815 	stw	r3,32(sp)
1104b4a8:	b0ad883a 	add	r22,r22,r2
1104b4ac:	104e5740 	call	1104e574 <__i2b>
1104b4b0:	1023883a 	mov	r17,r2
1104b4b4:	a0000826 	beq	r20,zero,1104b4d8 <_dtoa_r+0xa0c>
1104b4b8:	0580070e 	bge	zero,r22,1104b4d8 <_dtoa_r+0xa0c>
1104b4bc:	a005883a 	mov	r2,r20
1104b4c0:	b500b916 	blt	r22,r20,1104b7a8 <_dtoa_r+0xcdc>
1104b4c4:	d9000817 	ldw	r4,32(sp)
1104b4c8:	a0a9c83a 	sub	r20,r20,r2
1104b4cc:	b0adc83a 	sub	r22,r22,r2
1104b4d0:	2089c83a 	sub	r4,r4,r2
1104b4d4:	d9000815 	stw	r4,32(sp)
1104b4d8:	d9800a17 	ldw	r6,40(sp)
1104b4dc:	0181810e 	bge	zero,r6,1104bae4 <_dtoa_r+0x1018>
1104b4e0:	d9c00b17 	ldw	r7,44(sp)
1104b4e4:	3800b326 	beq	r7,zero,1104b7b4 <_dtoa_r+0xce8>
1104b4e8:	a800b226 	beq	r21,zero,1104b7b4 <_dtoa_r+0xce8>
1104b4ec:	880b883a 	mov	r5,r17
1104b4f0:	a80d883a 	mov	r6,r21
1104b4f4:	e009883a 	mov	r4,fp
1104b4f8:	104e7a80 	call	1104e7a8 <__pow5mult>
1104b4fc:	d9800917 	ldw	r6,36(sp)
1104b500:	100b883a 	mov	r5,r2
1104b504:	e009883a 	mov	r4,fp
1104b508:	1023883a 	mov	r17,r2
1104b50c:	104e5b00 	call	1104e5b0 <__multiply>
1104b510:	1021883a 	mov	r16,r2
1104b514:	d8800a17 	ldw	r2,40(sp)
1104b518:	d9400917 	ldw	r5,36(sp)
1104b51c:	e009883a 	mov	r4,fp
1104b520:	1545c83a 	sub	r2,r2,r21
1104b524:	d8800a15 	stw	r2,40(sp)
1104b528:	104e2100 	call	1104e210 <_Bfree>
1104b52c:	d8c00a17 	ldw	r3,40(sp)
1104b530:	18009f1e 	bne	r3,zero,1104b7b0 <_dtoa_r+0xce4>
1104b534:	05c00044 	movi	r23,1
1104b538:	e009883a 	mov	r4,fp
1104b53c:	b80b883a 	mov	r5,r23
1104b540:	104e5740 	call	1104e574 <__i2b>
1104b544:	d9000d17 	ldw	r4,52(sp)
1104b548:	102b883a 	mov	r21,r2
1104b54c:	2000ce26 	beq	r4,zero,1104b888 <_dtoa_r+0xdbc>
1104b550:	200d883a 	mov	r6,r4
1104b554:	100b883a 	mov	r5,r2
1104b558:	e009883a 	mov	r4,fp
1104b55c:	104e7a80 	call	1104e7a8 <__pow5mult>
1104b560:	d9800317 	ldw	r6,12(sp)
1104b564:	102b883a 	mov	r21,r2
1104b568:	b981810e 	bge	r23,r6,1104bb70 <_dtoa_r+0x10a4>
1104b56c:	0027883a 	mov	r19,zero
1104b570:	a8800417 	ldw	r2,16(r21)
1104b574:	05c00804 	movi	r23,32
1104b578:	10800104 	addi	r2,r2,4
1104b57c:	1085883a 	add	r2,r2,r2
1104b580:	1085883a 	add	r2,r2,r2
1104b584:	a885883a 	add	r2,r21,r2
1104b588:	11000017 	ldw	r4,0(r2)
1104b58c:	104e45c0 	call	1104e45c <__hi0bits>
1104b590:	b885c83a 	sub	r2,r23,r2
1104b594:	1585883a 	add	r2,r2,r22
1104b598:	108007cc 	andi	r2,r2,31
1104b59c:	1000b326 	beq	r2,zero,1104b86c <_dtoa_r+0xda0>
1104b5a0:	00c00804 	movi	r3,32
1104b5a4:	1887c83a 	sub	r3,r3,r2
1104b5a8:	01000104 	movi	r4,4
1104b5ac:	20c2cd0e 	bge	r4,r3,1104c0e4 <_dtoa_r+0x1618>
1104b5b0:	00c00704 	movi	r3,28
1104b5b4:	1885c83a 	sub	r2,r3,r2
1104b5b8:	d8c00817 	ldw	r3,32(sp)
1104b5bc:	a0a9883a 	add	r20,r20,r2
1104b5c0:	b0ad883a 	add	r22,r22,r2
1104b5c4:	1887883a 	add	r3,r3,r2
1104b5c8:	d8c00815 	stw	r3,32(sp)
1104b5cc:	d9800817 	ldw	r6,32(sp)
1104b5d0:	0180040e 	bge	zero,r6,1104b5e4 <_dtoa_r+0xb18>
1104b5d4:	800b883a 	mov	r5,r16
1104b5d8:	e009883a 	mov	r4,fp
1104b5dc:	104e8e80 	call	1104e8e8 <__lshift>
1104b5e0:	1021883a 	mov	r16,r2
1104b5e4:	0580050e 	bge	zero,r22,1104b5fc <_dtoa_r+0xb30>
1104b5e8:	a80b883a 	mov	r5,r21
1104b5ec:	b00d883a 	mov	r6,r22
1104b5f0:	e009883a 	mov	r4,fp
1104b5f4:	104e8e80 	call	1104e8e8 <__lshift>
1104b5f8:	102b883a 	mov	r21,r2
1104b5fc:	d9c00e17 	ldw	r7,56(sp)
1104b600:	3801211e 	bne	r7,zero,1104ba88 <_dtoa_r+0xfbc>
1104b604:	d9800617 	ldw	r6,24(sp)
1104b608:	0181380e 	bge	zero,r6,1104baec <_dtoa_r+0x1020>
1104b60c:	d8c00b17 	ldw	r3,44(sp)
1104b610:	1800ab1e 	bne	r3,zero,1104b8c0 <_dtoa_r+0xdf4>
1104b614:	dc800717 	ldw	r18,28(sp)
1104b618:	dcc00617 	ldw	r19,24(sp)
1104b61c:	9029883a 	mov	r20,r18
1104b620:	00000206 	br	1104b62c <_dtoa_r+0xb60>
1104b624:	104e2380 	call	1104e238 <__multadd>
1104b628:	1021883a 	mov	r16,r2
1104b62c:	a80b883a 	mov	r5,r21
1104b630:	8009883a 	mov	r4,r16
1104b634:	104a8cc0 	call	1104a8cc <quorem>
1104b638:	10800c04 	addi	r2,r2,48
1104b63c:	90800005 	stb	r2,0(r18)
1104b640:	94800044 	addi	r18,r18,1
1104b644:	9507c83a 	sub	r3,r18,r20
1104b648:	000f883a 	mov	r7,zero
1104b64c:	01800284 	movi	r6,10
1104b650:	800b883a 	mov	r5,r16
1104b654:	e009883a 	mov	r4,fp
1104b658:	1cfff216 	blt	r3,r19,1104b624 <_dtoa_r+0xb58>
1104b65c:	1011883a 	mov	r8,r2
1104b660:	d8800617 	ldw	r2,24(sp)
1104b664:	0082370e 	bge	zero,r2,1104bf44 <_dtoa_r+0x1478>
1104b668:	d9000717 	ldw	r4,28(sp)
1104b66c:	0025883a 	mov	r18,zero
1104b670:	20af883a 	add	r23,r4,r2
1104b674:	01800044 	movi	r6,1
1104b678:	800b883a 	mov	r5,r16
1104b67c:	e009883a 	mov	r4,fp
1104b680:	da001715 	stw	r8,92(sp)
1104b684:	104e8e80 	call	1104e8e8 <__lshift>
1104b688:	a80b883a 	mov	r5,r21
1104b68c:	1009883a 	mov	r4,r2
1104b690:	d8800915 	stw	r2,36(sp)
1104b694:	104ea300 	call	1104ea30 <__mcmp>
1104b698:	da001717 	ldw	r8,92(sp)
1104b69c:	0081800e 	bge	zero,r2,1104bca0 <_dtoa_r+0x11d4>
1104b6a0:	b93fffc3 	ldbu	r4,-1(r23)
1104b6a4:	b8bfffc4 	addi	r2,r23,-1
1104b6a8:	1007883a 	mov	r3,r2
1104b6ac:	01800e44 	movi	r6,57
1104b6b0:	d9c00717 	ldw	r7,28(sp)
1104b6b4:	00000506 	br	1104b6cc <_dtoa_r+0xc00>
1104b6b8:	18ffffc4 	addi	r3,r3,-1
1104b6bc:	11c12326 	beq	r2,r7,1104bb4c <_dtoa_r+0x1080>
1104b6c0:	19000003 	ldbu	r4,0(r3)
1104b6c4:	102f883a 	mov	r23,r2
1104b6c8:	10bfffc4 	addi	r2,r2,-1
1104b6cc:	21403fcc 	andi	r5,r4,255
1104b6d0:	2940201c 	xori	r5,r5,128
1104b6d4:	297fe004 	addi	r5,r5,-128
1104b6d8:	29bff726 	beq	r5,r6,1104b6b8 <_dtoa_r+0xbec>
1104b6dc:	21000044 	addi	r4,r4,1
1104b6e0:	11000005 	stb	r4,0(r2)
1104b6e4:	a80b883a 	mov	r5,r21
1104b6e8:	e009883a 	mov	r4,fp
1104b6ec:	104e2100 	call	1104e210 <_Bfree>
1104b6f0:	883ea026 	beq	r17,zero,1104b174 <_dtoa_r+0x6a8>
1104b6f4:	90000426 	beq	r18,zero,1104b708 <_dtoa_r+0xc3c>
1104b6f8:	94400326 	beq	r18,r17,1104b708 <_dtoa_r+0xc3c>
1104b6fc:	900b883a 	mov	r5,r18
1104b700:	e009883a 	mov	r4,fp
1104b704:	104e2100 	call	1104e210 <_Bfree>
1104b708:	880b883a 	mov	r5,r17
1104b70c:	e009883a 	mov	r4,fp
1104b710:	104e2100 	call	1104e210 <_Bfree>
1104b714:	003e9706 	br	1104b174 <_dtoa_r+0x6a8>
1104b718:	01800044 	movi	r6,1
1104b71c:	d9800e15 	stw	r6,56(sp)
1104b720:	003d9606 	br	1104ad7c <_dtoa_r+0x2b0>
1104b724:	d8800817 	ldw	r2,32(sp)
1104b728:	d8c00517 	ldw	r3,20(sp)
1104b72c:	d8000d15 	stw	zero,52(sp)
1104b730:	10c5c83a 	sub	r2,r2,r3
1104b734:	00c9c83a 	sub	r4,zero,r3
1104b738:	d8800815 	stw	r2,32(sp)
1104b73c:	d9000a15 	stw	r4,40(sp)
1104b740:	003d9706 	br	1104ada0 <_dtoa_r+0x2d4>
1104b744:	05adc83a 	sub	r22,zero,r22
1104b748:	dd800815 	stw	r22,32(sp)
1104b74c:	002d883a 	mov	r22,zero
1104b750:	003d8e06 	br	1104ad8c <_dtoa_r+0x2c0>
1104b754:	d9000517 	ldw	r4,20(sp)
1104b758:	1045dd00 	call	11045dd0 <__floatsidf>
1104b75c:	100d883a 	mov	r6,r2
1104b760:	180f883a 	mov	r7,r3
1104b764:	a009883a 	mov	r4,r20
1104b768:	880b883a 	mov	r5,r17
1104b76c:	1044bd80 	call	11044bd8 <__eqdf2>
1104b770:	103d7126 	beq	r2,zero,1104ad38 <_dtoa_r+0x26c>
1104b774:	d9c00517 	ldw	r7,20(sp)
1104b778:	39ffffc4 	addi	r7,r7,-1
1104b77c:	d9c00515 	stw	r7,20(sp)
1104b780:	003d6d06 	br	1104ad38 <_dtoa_r+0x26c>
1104b784:	dd400a17 	ldw	r21,40(sp)
1104b788:	dd000817 	ldw	r20,32(sp)
1104b78c:	0023883a 	mov	r17,zero
1104b790:	003f4806 	br	1104b4b4 <_dtoa_r+0x9e8>
1104b794:	10e3c83a 	sub	r17,r2,r3
1104b798:	9448983a 	sll	r4,r18,r17
1104b79c:	003d3206 	br	1104ac68 <_dtoa_r+0x19c>
1104b7a0:	d8000e15 	stw	zero,56(sp)
1104b7a4:	003d7506 	br	1104ad7c <_dtoa_r+0x2b0>
1104b7a8:	b005883a 	mov	r2,r22
1104b7ac:	003f4506 	br	1104b4c4 <_dtoa_r+0x9f8>
1104b7b0:	dc000915 	stw	r16,36(sp)
1104b7b4:	d9800a17 	ldw	r6,40(sp)
1104b7b8:	d9400917 	ldw	r5,36(sp)
1104b7bc:	e009883a 	mov	r4,fp
1104b7c0:	104e7a80 	call	1104e7a8 <__pow5mult>
1104b7c4:	1021883a 	mov	r16,r2
1104b7c8:	003f5a06 	br	1104b534 <_dtoa_r+0xa68>
1104b7cc:	01c00044 	movi	r7,1
1104b7d0:	d9c00b15 	stw	r7,44(sp)
1104b7d4:	d8802217 	ldw	r2,136(sp)
1104b7d8:	0081280e 	bge	zero,r2,1104bc7c <_dtoa_r+0x11b0>
1104b7dc:	100d883a 	mov	r6,r2
1104b7e0:	1021883a 	mov	r16,r2
1104b7e4:	d8800c15 	stw	r2,48(sp)
1104b7e8:	d8800615 	stw	r2,24(sp)
1104b7ec:	003d8806 	br	1104ae10 <_dtoa_r+0x344>
1104b7f0:	d8800617 	ldw	r2,24(sp)
1104b7f4:	00be9b16 	blt	zero,r2,1104b264 <_dtoa_r+0x798>
1104b7f8:	10010f1e 	bne	r2,zero,1104bc38 <_dtoa_r+0x116c>
1104b7fc:	880b883a 	mov	r5,r17
1104b800:	000d883a 	mov	r6,zero
1104b804:	01d00534 	movhi	r7,16404
1104b808:	8009883a 	mov	r4,r16
1104b80c:	1044d3c0 	call	11044d3c <__muldf3>
1104b810:	900d883a 	mov	r6,r18
1104b814:	980f883a 	mov	r7,r19
1104b818:	1009883a 	mov	r4,r2
1104b81c:	180b883a 	mov	r5,r3
1104b820:	1044c600 	call	11044c60 <__gedf2>
1104b824:	002b883a 	mov	r21,zero
1104b828:	0023883a 	mov	r17,zero
1104b82c:	1000bf16 	blt	r2,zero,1104bb2c <_dtoa_r+0x1060>
1104b830:	d9802217 	ldw	r6,136(sp)
1104b834:	ddc00717 	ldw	r23,28(sp)
1104b838:	018c303a 	nor	r6,zero,r6
1104b83c:	d9800515 	stw	r6,20(sp)
1104b840:	a80b883a 	mov	r5,r21
1104b844:	e009883a 	mov	r4,fp
1104b848:	104e2100 	call	1104e210 <_Bfree>
1104b84c:	883e4926 	beq	r17,zero,1104b174 <_dtoa_r+0x6a8>
1104b850:	003fad06 	br	1104b708 <_dtoa_r+0xc3c>
1104b854:	d9c01117 	ldw	r7,68(sp)
1104b858:	3801bc26 	beq	r7,zero,1104bf4c <_dtoa_r+0x1480>
1104b85c:	10810cc4 	addi	r2,r2,1075
1104b860:	dd400a17 	ldw	r21,40(sp)
1104b864:	dd000817 	ldw	r20,32(sp)
1104b868:	003f0a06 	br	1104b494 <_dtoa_r+0x9c8>
1104b86c:	00800704 	movi	r2,28
1104b870:	d9000817 	ldw	r4,32(sp)
1104b874:	a0a9883a 	add	r20,r20,r2
1104b878:	b0ad883a 	add	r22,r22,r2
1104b87c:	2089883a 	add	r4,r4,r2
1104b880:	d9000815 	stw	r4,32(sp)
1104b884:	003f5106 	br	1104b5cc <_dtoa_r+0xb00>
1104b888:	d8c00317 	ldw	r3,12(sp)
1104b88c:	b8c1fc0e 	bge	r23,r3,1104c080 <_dtoa_r+0x15b4>
1104b890:	0027883a 	mov	r19,zero
1104b894:	b805883a 	mov	r2,r23
1104b898:	003f3e06 	br	1104b594 <_dtoa_r+0xac8>
1104b89c:	880b883a 	mov	r5,r17
1104b8a0:	e009883a 	mov	r4,fp
1104b8a4:	000f883a 	mov	r7,zero
1104b8a8:	01800284 	movi	r6,10
1104b8ac:	104e2380 	call	1104e238 <__multadd>
1104b8b0:	d9000c17 	ldw	r4,48(sp)
1104b8b4:	1023883a 	mov	r17,r2
1104b8b8:	0102040e 	bge	zero,r4,1104c0cc <_dtoa_r+0x1600>
1104b8bc:	d9000615 	stw	r4,24(sp)
1104b8c0:	0500050e 	bge	zero,r20,1104b8d8 <_dtoa_r+0xe0c>
1104b8c4:	880b883a 	mov	r5,r17
1104b8c8:	a00d883a 	mov	r6,r20
1104b8cc:	e009883a 	mov	r4,fp
1104b8d0:	104e8e80 	call	1104e8e8 <__lshift>
1104b8d4:	1023883a 	mov	r17,r2
1104b8d8:	9801241e 	bne	r19,zero,1104bd6c <_dtoa_r+0x12a0>
1104b8dc:	8829883a 	mov	r20,r17
1104b8e0:	d9000617 	ldw	r4,24(sp)
1104b8e4:	dcc00717 	ldw	r19,28(sp)
1104b8e8:	9480004c 	andi	r18,r18,1
1104b8ec:	20bfffc4 	addi	r2,r4,-1
1104b8f0:	9885883a 	add	r2,r19,r2
1104b8f4:	d8800415 	stw	r2,16(sp)
1104b8f8:	dc800615 	stw	r18,24(sp)
1104b8fc:	a80b883a 	mov	r5,r21
1104b900:	8009883a 	mov	r4,r16
1104b904:	104a8cc0 	call	1104a8cc <quorem>
1104b908:	880b883a 	mov	r5,r17
1104b90c:	8009883a 	mov	r4,r16
1104b910:	102f883a 	mov	r23,r2
1104b914:	104ea300 	call	1104ea30 <__mcmp>
1104b918:	a80b883a 	mov	r5,r21
1104b91c:	a00d883a 	mov	r6,r20
1104b920:	e009883a 	mov	r4,fp
1104b924:	102d883a 	mov	r22,r2
1104b928:	104ea900 	call	1104ea90 <__mdiff>
1104b92c:	1007883a 	mov	r3,r2
1104b930:	10800317 	ldw	r2,12(r2)
1104b934:	bc800c04 	addi	r18,r23,48
1104b938:	180b883a 	mov	r5,r3
1104b93c:	10004e1e 	bne	r2,zero,1104ba78 <_dtoa_r+0xfac>
1104b940:	8009883a 	mov	r4,r16
1104b944:	d8c01615 	stw	r3,88(sp)
1104b948:	104ea300 	call	1104ea30 <__mcmp>
1104b94c:	d8c01617 	ldw	r3,88(sp)
1104b950:	e009883a 	mov	r4,fp
1104b954:	d8801615 	stw	r2,88(sp)
1104b958:	180b883a 	mov	r5,r3
1104b95c:	104e2100 	call	1104e210 <_Bfree>
1104b960:	d8801617 	ldw	r2,88(sp)
1104b964:	1000041e 	bne	r2,zero,1104b978 <_dtoa_r+0xeac>
1104b968:	d9800317 	ldw	r6,12(sp)
1104b96c:	3000021e 	bne	r6,zero,1104b978 <_dtoa_r+0xeac>
1104b970:	d8c00617 	ldw	r3,24(sp)
1104b974:	18003726 	beq	r3,zero,1104ba54 <_dtoa_r+0xf88>
1104b978:	b0002016 	blt	r22,zero,1104b9fc <_dtoa_r+0xf30>
1104b97c:	b000041e 	bne	r22,zero,1104b990 <_dtoa_r+0xec4>
1104b980:	d9000317 	ldw	r4,12(sp)
1104b984:	2000021e 	bne	r4,zero,1104b990 <_dtoa_r+0xec4>
1104b988:	d8c00617 	ldw	r3,24(sp)
1104b98c:	18001b26 	beq	r3,zero,1104b9fc <_dtoa_r+0xf30>
1104b990:	00810716 	blt	zero,r2,1104bdb0 <_dtoa_r+0x12e4>
1104b994:	d8c00417 	ldw	r3,16(sp)
1104b998:	9d800044 	addi	r22,r19,1
1104b99c:	9c800005 	stb	r18,0(r19)
1104b9a0:	b02f883a 	mov	r23,r22
1104b9a4:	98c10626 	beq	r19,r3,1104bdc0 <_dtoa_r+0x12f4>
1104b9a8:	800b883a 	mov	r5,r16
1104b9ac:	000f883a 	mov	r7,zero
1104b9b0:	01800284 	movi	r6,10
1104b9b4:	e009883a 	mov	r4,fp
1104b9b8:	104e2380 	call	1104e238 <__multadd>
1104b9bc:	1021883a 	mov	r16,r2
1104b9c0:	000f883a 	mov	r7,zero
1104b9c4:	01800284 	movi	r6,10
1104b9c8:	880b883a 	mov	r5,r17
1104b9cc:	e009883a 	mov	r4,fp
1104b9d0:	8d002526 	beq	r17,r20,1104ba68 <_dtoa_r+0xf9c>
1104b9d4:	104e2380 	call	1104e238 <__multadd>
1104b9d8:	a00b883a 	mov	r5,r20
1104b9dc:	000f883a 	mov	r7,zero
1104b9e0:	01800284 	movi	r6,10
1104b9e4:	e009883a 	mov	r4,fp
1104b9e8:	1023883a 	mov	r17,r2
1104b9ec:	104e2380 	call	1104e238 <__multadd>
1104b9f0:	1029883a 	mov	r20,r2
1104b9f4:	b027883a 	mov	r19,r22
1104b9f8:	003fc006 	br	1104b8fc <_dtoa_r+0xe30>
1104b9fc:	9011883a 	mov	r8,r18
1104ba00:	00800e0e 	bge	zero,r2,1104ba3c <_dtoa_r+0xf70>
1104ba04:	800b883a 	mov	r5,r16
1104ba08:	01800044 	movi	r6,1
1104ba0c:	e009883a 	mov	r4,fp
1104ba10:	da001715 	stw	r8,92(sp)
1104ba14:	104e8e80 	call	1104e8e8 <__lshift>
1104ba18:	a80b883a 	mov	r5,r21
1104ba1c:	1009883a 	mov	r4,r2
1104ba20:	1021883a 	mov	r16,r2
1104ba24:	104ea300 	call	1104ea30 <__mcmp>
1104ba28:	da001717 	ldw	r8,92(sp)
1104ba2c:	0081960e 	bge	zero,r2,1104c088 <_dtoa_r+0x15bc>
1104ba30:	00800e44 	movi	r2,57
1104ba34:	40817026 	beq	r8,r2,1104bff8 <_dtoa_r+0x152c>
1104ba38:	ba000c44 	addi	r8,r23,49
1104ba3c:	8825883a 	mov	r18,r17
1104ba40:	9dc00044 	addi	r23,r19,1
1104ba44:	9a000005 	stb	r8,0(r19)
1104ba48:	a023883a 	mov	r17,r20
1104ba4c:	dc000915 	stw	r16,36(sp)
1104ba50:	003f2406 	br	1104b6e4 <_dtoa_r+0xc18>
1104ba54:	00800e44 	movi	r2,57
1104ba58:	9011883a 	mov	r8,r18
1104ba5c:	90816626 	beq	r18,r2,1104bff8 <_dtoa_r+0x152c>
1104ba60:	05bff516 	blt	zero,r22,1104ba38 <_dtoa_r+0xf6c>
1104ba64:	003ff506 	br	1104ba3c <_dtoa_r+0xf70>
1104ba68:	104e2380 	call	1104e238 <__multadd>
1104ba6c:	1023883a 	mov	r17,r2
1104ba70:	1029883a 	mov	r20,r2
1104ba74:	003fdf06 	br	1104b9f4 <_dtoa_r+0xf28>
1104ba78:	e009883a 	mov	r4,fp
1104ba7c:	104e2100 	call	1104e210 <_Bfree>
1104ba80:	00800044 	movi	r2,1
1104ba84:	003fbc06 	br	1104b978 <_dtoa_r+0xeac>
1104ba88:	a80b883a 	mov	r5,r21
1104ba8c:	8009883a 	mov	r4,r16
1104ba90:	104ea300 	call	1104ea30 <__mcmp>
1104ba94:	103edb0e 	bge	r2,zero,1104b604 <_dtoa_r+0xb38>
1104ba98:	800b883a 	mov	r5,r16
1104ba9c:	000f883a 	mov	r7,zero
1104baa0:	01800284 	movi	r6,10
1104baa4:	e009883a 	mov	r4,fp
1104baa8:	104e2380 	call	1104e238 <__multadd>
1104baac:	1021883a 	mov	r16,r2
1104bab0:	d8800517 	ldw	r2,20(sp)
1104bab4:	d8c00b17 	ldw	r3,44(sp)
1104bab8:	10bfffc4 	addi	r2,r2,-1
1104babc:	d8800515 	stw	r2,20(sp)
1104bac0:	183f761e 	bne	r3,zero,1104b89c <_dtoa_r+0xdd0>
1104bac4:	d9000c17 	ldw	r4,48(sp)
1104bac8:	0101730e 	bge	zero,r4,1104c098 <_dtoa_r+0x15cc>
1104bacc:	d9000615 	stw	r4,24(sp)
1104bad0:	003ed006 	br	1104b614 <_dtoa_r+0xb48>
1104bad4:	00800084 	movi	r2,2
1104bad8:	3081861e 	bne	r6,r2,1104c0f4 <_dtoa_r+0x1628>
1104badc:	d8000b15 	stw	zero,44(sp)
1104bae0:	003f3c06 	br	1104b7d4 <_dtoa_r+0xd08>
1104bae4:	dc000917 	ldw	r16,36(sp)
1104bae8:	003e9206 	br	1104b534 <_dtoa_r+0xa68>
1104baec:	d9c00317 	ldw	r7,12(sp)
1104baf0:	00800084 	movi	r2,2
1104baf4:	11fec50e 	bge	r2,r7,1104b60c <_dtoa_r+0xb40>
1104baf8:	d9000617 	ldw	r4,24(sp)
1104bafc:	20013c1e 	bne	r4,zero,1104bff0 <_dtoa_r+0x1524>
1104bb00:	a80b883a 	mov	r5,r21
1104bb04:	000f883a 	mov	r7,zero
1104bb08:	01800144 	movi	r6,5
1104bb0c:	e009883a 	mov	r4,fp
1104bb10:	104e2380 	call	1104e238 <__multadd>
1104bb14:	100b883a 	mov	r5,r2
1104bb18:	8009883a 	mov	r4,r16
1104bb1c:	102b883a 	mov	r21,r2
1104bb20:	104ea300 	call	1104ea30 <__mcmp>
1104bb24:	dc000915 	stw	r16,36(sp)
1104bb28:	00bf410e 	bge	zero,r2,1104b830 <_dtoa_r+0xd64>
1104bb2c:	d9c00717 	ldw	r7,28(sp)
1104bb30:	00800c44 	movi	r2,49
1104bb34:	38800005 	stb	r2,0(r7)
1104bb38:	d8800517 	ldw	r2,20(sp)
1104bb3c:	3dc00044 	addi	r23,r7,1
1104bb40:	10800044 	addi	r2,r2,1
1104bb44:	d8800515 	stw	r2,20(sp)
1104bb48:	003f3d06 	br	1104b840 <_dtoa_r+0xd74>
1104bb4c:	d9800517 	ldw	r6,20(sp)
1104bb50:	d9c00717 	ldw	r7,28(sp)
1104bb54:	00800c44 	movi	r2,49
1104bb58:	31800044 	addi	r6,r6,1
1104bb5c:	d9800515 	stw	r6,20(sp)
1104bb60:	38800005 	stb	r2,0(r7)
1104bb64:	003edf06 	br	1104b6e4 <_dtoa_r+0xc18>
1104bb68:	d8000b15 	stw	zero,44(sp)
1104bb6c:	003c9f06 	br	1104adec <_dtoa_r+0x320>
1104bb70:	903e7e1e 	bne	r18,zero,1104b56c <_dtoa_r+0xaa0>
1104bb74:	00800434 	movhi	r2,16
1104bb78:	10bfffc4 	addi	r2,r2,-1
1104bb7c:	9884703a 	and	r2,r19,r2
1104bb80:	1000ea1e 	bne	r2,zero,1104bf2c <_dtoa_r+0x1460>
1104bb84:	9cdffc2c 	andhi	r19,r19,32752
1104bb88:	9800e826 	beq	r19,zero,1104bf2c <_dtoa_r+0x1460>
1104bb8c:	d9c00817 	ldw	r7,32(sp)
1104bb90:	b5800044 	addi	r22,r22,1
1104bb94:	04c00044 	movi	r19,1
1104bb98:	39c00044 	addi	r7,r7,1
1104bb9c:	d9c00815 	stw	r7,32(sp)
1104bba0:	d8800d17 	ldw	r2,52(sp)
1104bba4:	103e721e 	bne	r2,zero,1104b570 <_dtoa_r+0xaa4>
1104bba8:	00800044 	movi	r2,1
1104bbac:	003e7906 	br	1104b594 <_dtoa_r+0xac8>
1104bbb0:	8009883a 	mov	r4,r16
1104bbb4:	1045dd00 	call	11045dd0 <__floatsidf>
1104bbb8:	d9800f17 	ldw	r6,60(sp)
1104bbbc:	d9c01017 	ldw	r7,64(sp)
1104bbc0:	1009883a 	mov	r4,r2
1104bbc4:	180b883a 	mov	r5,r3
1104bbc8:	1044d3c0 	call	11044d3c <__muldf3>
1104bbcc:	000d883a 	mov	r6,zero
1104bbd0:	01d00734 	movhi	r7,16412
1104bbd4:	1009883a 	mov	r4,r2
1104bbd8:	180b883a 	mov	r5,r3
1104bbdc:	104432c0 	call	1104432c <__adddf3>
1104bbe0:	047f3034 	movhi	r17,64704
1104bbe4:	1021883a 	mov	r16,r2
1104bbe8:	1c63883a 	add	r17,r3,r17
1104bbec:	d9000f17 	ldw	r4,60(sp)
1104bbf0:	d9401017 	ldw	r5,64(sp)
1104bbf4:	000d883a 	mov	r6,zero
1104bbf8:	01d00534 	movhi	r7,16404
1104bbfc:	10454540 	call	11045454 <__subdf3>
1104bc00:	800d883a 	mov	r6,r16
1104bc04:	880f883a 	mov	r7,r17
1104bc08:	1009883a 	mov	r4,r2
1104bc0c:	180b883a 	mov	r5,r3
1104bc10:	102b883a 	mov	r21,r2
1104bc14:	1829883a 	mov	r20,r3
1104bc18:	1044c600 	call	11044c60 <__gedf2>
1104bc1c:	00806c16 	blt	zero,r2,1104bdd0 <_dtoa_r+0x1304>
1104bc20:	89e0003c 	xorhi	r7,r17,32768
1104bc24:	800d883a 	mov	r6,r16
1104bc28:	a809883a 	mov	r4,r21
1104bc2c:	a00b883a 	mov	r5,r20
1104bc30:	10540c80 	call	110540c8 <__ledf2>
1104bc34:	103d7e0e 	bge	r2,zero,1104b230 <_dtoa_r+0x764>
1104bc38:	002b883a 	mov	r21,zero
1104bc3c:	0023883a 	mov	r17,zero
1104bc40:	003efb06 	br	1104b830 <_dtoa_r+0xd64>
1104bc44:	d8800717 	ldw	r2,28(sp)
1104bc48:	003bd006 	br	1104ab8c <_dtoa_r+0xc0>
1104bc4c:	d9000a17 	ldw	r4,40(sp)
1104bc50:	d9800d17 	ldw	r6,52(sp)
1104bc54:	dd400a15 	stw	r21,40(sp)
1104bc58:	a905c83a 	sub	r2,r21,r4
1104bc5c:	308d883a 	add	r6,r6,r2
1104bc60:	d9800d15 	stw	r6,52(sp)
1104bc64:	002b883a 	mov	r21,zero
1104bc68:	003e0606 	br	1104b484 <_dtoa_r+0x9b8>
1104bc6c:	9023883a 	mov	r17,r18
1104bc70:	9829883a 	mov	r20,r19
1104bc74:	04000084 	movi	r16,2
1104bc78:	003c9206 	br	1104aec4 <_dtoa_r+0x3f8>
1104bc7c:	04000044 	movi	r16,1
1104bc80:	dc000c15 	stw	r16,48(sp)
1104bc84:	dc000615 	stw	r16,24(sp)
1104bc88:	dc002215 	stw	r16,136(sp)
1104bc8c:	e0001115 	stw	zero,68(fp)
1104bc90:	000b883a 	mov	r5,zero
1104bc94:	003c6906 	br	1104ae3c <_dtoa_r+0x370>
1104bc98:	3021883a 	mov	r16,r6
1104bc9c:	003ffb06 	br	1104bc8c <_dtoa_r+0x11c0>
1104bca0:	1000021e 	bne	r2,zero,1104bcac <_dtoa_r+0x11e0>
1104bca4:	4200004c 	andi	r8,r8,1
1104bca8:	403e7d1e 	bne	r8,zero,1104b6a0 <_dtoa_r+0xbd4>
1104bcac:	01000c04 	movi	r4,48
1104bcb0:	00000106 	br	1104bcb8 <_dtoa_r+0x11ec>
1104bcb4:	102f883a 	mov	r23,r2
1104bcb8:	b8bfffc4 	addi	r2,r23,-1
1104bcbc:	10c00007 	ldb	r3,0(r2)
1104bcc0:	193ffc26 	beq	r3,r4,1104bcb4 <_dtoa_r+0x11e8>
1104bcc4:	003e8706 	br	1104b6e4 <_dtoa_r+0xc18>
1104bcc8:	d8800517 	ldw	r2,20(sp)
1104bccc:	00a3c83a 	sub	r17,zero,r2
1104bcd0:	8800a426 	beq	r17,zero,1104bf64 <_dtoa_r+0x1498>
1104bcd4:	888003cc 	andi	r2,r17,15
1104bcd8:	100490fa 	slli	r2,r2,3
1104bcdc:	00c44174 	movhi	r3,4357
1104bce0:	18dc5e04 	addi	r3,r3,29048
1104bce4:	1885883a 	add	r2,r3,r2
1104bce8:	11800017 	ldw	r6,0(r2)
1104bcec:	11c00117 	ldw	r7,4(r2)
1104bcf0:	9009883a 	mov	r4,r18
1104bcf4:	980b883a 	mov	r5,r19
1104bcf8:	8823d13a 	srai	r17,r17,4
1104bcfc:	1044d3c0 	call	11044d3c <__muldf3>
1104bd00:	d8800f15 	stw	r2,60(sp)
1104bd04:	d8c01015 	stw	r3,64(sp)
1104bd08:	8800e826 	beq	r17,zero,1104c0ac <_dtoa_r+0x15e0>
1104bd0c:	05044174 	movhi	r20,4357
1104bd10:	a51c5404 	addi	r20,r20,29008
1104bd14:	04000084 	movi	r16,2
1104bd18:	8980004c 	andi	r6,r17,1
1104bd1c:	1009883a 	mov	r4,r2
1104bd20:	8823d07a 	srai	r17,r17,1
1104bd24:	180b883a 	mov	r5,r3
1104bd28:	30000426 	beq	r6,zero,1104bd3c <_dtoa_r+0x1270>
1104bd2c:	a1800017 	ldw	r6,0(r20)
1104bd30:	a1c00117 	ldw	r7,4(r20)
1104bd34:	84000044 	addi	r16,r16,1
1104bd38:	1044d3c0 	call	11044d3c <__muldf3>
1104bd3c:	a5000204 	addi	r20,r20,8
1104bd40:	883ff51e 	bne	r17,zero,1104bd18 <_dtoa_r+0x124c>
1104bd44:	d8800f15 	stw	r2,60(sp)
1104bd48:	d8c01015 	stw	r3,64(sp)
1104bd4c:	003c7606 	br	1104af28 <_dtoa_r+0x45c>
1104bd50:	00c00c04 	movi	r3,48
1104bd54:	10c00005 	stb	r3,0(r2)
1104bd58:	d8c00517 	ldw	r3,20(sp)
1104bd5c:	bd3fffc3 	ldbu	r20,-1(r23)
1104bd60:	18c00044 	addi	r3,r3,1
1104bd64:	d8c00515 	stw	r3,20(sp)
1104bd68:	003db906 	br	1104b450 <_dtoa_r+0x984>
1104bd6c:	89400117 	ldw	r5,4(r17)
1104bd70:	e009883a 	mov	r4,fp
1104bd74:	104e1680 	call	1104e168 <_Balloc>
1104bd78:	89800417 	ldw	r6,16(r17)
1104bd7c:	89400304 	addi	r5,r17,12
1104bd80:	11000304 	addi	r4,r2,12
1104bd84:	31800084 	addi	r6,r6,2
1104bd88:	318d883a 	add	r6,r6,r6
1104bd8c:	318d883a 	add	r6,r6,r6
1104bd90:	1027883a 	mov	r19,r2
1104bd94:	104dd9c0 	call	1104dd9c <memcpy>
1104bd98:	01800044 	movi	r6,1
1104bd9c:	980b883a 	mov	r5,r19
1104bda0:	e009883a 	mov	r4,fp
1104bda4:	104e8e80 	call	1104e8e8 <__lshift>
1104bda8:	1029883a 	mov	r20,r2
1104bdac:	003ecc06 	br	1104b8e0 <_dtoa_r+0xe14>
1104bdb0:	00800e44 	movi	r2,57
1104bdb4:	90809026 	beq	r18,r2,1104bff8 <_dtoa_r+0x152c>
1104bdb8:	92000044 	addi	r8,r18,1
1104bdbc:	003f1f06 	br	1104ba3c <_dtoa_r+0xf70>
1104bdc0:	9011883a 	mov	r8,r18
1104bdc4:	8825883a 	mov	r18,r17
1104bdc8:	a023883a 	mov	r17,r20
1104bdcc:	003e2906 	br	1104b674 <_dtoa_r+0xba8>
1104bdd0:	002b883a 	mov	r21,zero
1104bdd4:	0023883a 	mov	r17,zero
1104bdd8:	003f5406 	br	1104bb2c <_dtoa_r+0x1060>
1104bddc:	61bfffc4 	addi	r6,r12,-1
1104bde0:	300490fa 	slli	r2,r6,3
1104bde4:	00c44174 	movhi	r3,4357
1104bde8:	18dc5e04 	addi	r3,r3,29048
1104bdec:	1885883a 	add	r2,r3,r2
1104bdf0:	11000017 	ldw	r4,0(r2)
1104bdf4:	11400117 	ldw	r5,4(r2)
1104bdf8:	d8800717 	ldw	r2,28(sp)
1104bdfc:	880f883a 	mov	r7,r17
1104be00:	d9801215 	stw	r6,72(sp)
1104be04:	800d883a 	mov	r6,r16
1104be08:	db001615 	stw	r12,88(sp)
1104be0c:	15c00044 	addi	r23,r2,1
1104be10:	1044d3c0 	call	11044d3c <__muldf3>
1104be14:	d9401017 	ldw	r5,64(sp)
1104be18:	d9000f17 	ldw	r4,60(sp)
1104be1c:	d8c01515 	stw	r3,84(sp)
1104be20:	d8801415 	stw	r2,80(sp)
1104be24:	1045d500 	call	11045d50 <__fixdfsi>
1104be28:	1009883a 	mov	r4,r2
1104be2c:	1021883a 	mov	r16,r2
1104be30:	1045dd00 	call	11045dd0 <__floatsidf>
1104be34:	d9000f17 	ldw	r4,60(sp)
1104be38:	d9401017 	ldw	r5,64(sp)
1104be3c:	100d883a 	mov	r6,r2
1104be40:	180f883a 	mov	r7,r3
1104be44:	10454540 	call	11045454 <__subdf3>
1104be48:	1829883a 	mov	r20,r3
1104be4c:	d8c00717 	ldw	r3,28(sp)
1104be50:	84000c04 	addi	r16,r16,48
1104be54:	1023883a 	mov	r17,r2
1104be58:	1c000005 	stb	r16,0(r3)
1104be5c:	db001617 	ldw	r12,88(sp)
1104be60:	00800044 	movi	r2,1
1104be64:	60802226 	beq	r12,r2,1104bef0 <_dtoa_r+0x1424>
1104be68:	d9c00717 	ldw	r7,28(sp)
1104be6c:	8805883a 	mov	r2,r17
1104be70:	b82b883a 	mov	r21,r23
1104be74:	3b19883a 	add	r12,r7,r12
1104be78:	6023883a 	mov	r17,r12
1104be7c:	a007883a 	mov	r3,r20
1104be80:	dc800f15 	stw	r18,60(sp)
1104be84:	000d883a 	mov	r6,zero
1104be88:	01d00934 	movhi	r7,16420
1104be8c:	1009883a 	mov	r4,r2
1104be90:	180b883a 	mov	r5,r3
1104be94:	1044d3c0 	call	11044d3c <__muldf3>
1104be98:	180b883a 	mov	r5,r3
1104be9c:	1009883a 	mov	r4,r2
1104bea0:	1829883a 	mov	r20,r3
1104bea4:	1025883a 	mov	r18,r2
1104bea8:	1045d500 	call	11045d50 <__fixdfsi>
1104beac:	1009883a 	mov	r4,r2
1104beb0:	1021883a 	mov	r16,r2
1104beb4:	1045dd00 	call	11045dd0 <__floatsidf>
1104beb8:	100d883a 	mov	r6,r2
1104bebc:	180f883a 	mov	r7,r3
1104bec0:	9009883a 	mov	r4,r18
1104bec4:	a00b883a 	mov	r5,r20
1104bec8:	84000c04 	addi	r16,r16,48
1104becc:	10454540 	call	11045454 <__subdf3>
1104bed0:	ad400044 	addi	r21,r21,1
1104bed4:	ac3fffc5 	stb	r16,-1(r21)
1104bed8:	ac7fea1e 	bne	r21,r17,1104be84 <_dtoa_r+0x13b8>
1104bedc:	1023883a 	mov	r17,r2
1104bee0:	d8801217 	ldw	r2,72(sp)
1104bee4:	dc800f17 	ldw	r18,60(sp)
1104bee8:	1829883a 	mov	r20,r3
1104beec:	b8af883a 	add	r23,r23,r2
1104bef0:	d9001417 	ldw	r4,80(sp)
1104bef4:	d9401517 	ldw	r5,84(sp)
1104bef8:	000d883a 	mov	r6,zero
1104befc:	01cff834 	movhi	r7,16352
1104bf00:	104432c0 	call	1104432c <__adddf3>
1104bf04:	880d883a 	mov	r6,r17
1104bf08:	a00f883a 	mov	r7,r20
1104bf0c:	1009883a 	mov	r4,r2
1104bf10:	180b883a 	mov	r5,r3
1104bf14:	10540c80 	call	110540c8 <__ledf2>
1104bf18:	10003e0e 	bge	r2,zero,1104c014 <_dtoa_r+0x1548>
1104bf1c:	d9001317 	ldw	r4,76(sp)
1104bf20:	bd3fffc3 	ldbu	r20,-1(r23)
1104bf24:	d9000515 	stw	r4,20(sp)
1104bf28:	003d3b06 	br	1104b418 <_dtoa_r+0x94c>
1104bf2c:	0027883a 	mov	r19,zero
1104bf30:	003f1b06 	br	1104bba0 <_dtoa_r+0x10d4>
1104bf34:	d8800817 	ldw	r2,32(sp)
1104bf38:	11e9c83a 	sub	r20,r2,r7
1104bf3c:	0005883a 	mov	r2,zero
1104bf40:	003d5406 	br	1104b494 <_dtoa_r+0x9c8>
1104bf44:	00800044 	movi	r2,1
1104bf48:	003dc706 	br	1104b668 <_dtoa_r+0xb9c>
1104bf4c:	d8c00217 	ldw	r3,8(sp)
1104bf50:	00800d84 	movi	r2,54
1104bf54:	dd400a17 	ldw	r21,40(sp)
1104bf58:	10c5c83a 	sub	r2,r2,r3
1104bf5c:	dd000817 	ldw	r20,32(sp)
1104bf60:	003d4c06 	br	1104b494 <_dtoa_r+0x9c8>
1104bf64:	dc800f15 	stw	r18,60(sp)
1104bf68:	dcc01015 	stw	r19,64(sp)
1104bf6c:	04000084 	movi	r16,2
1104bf70:	003bed06 	br	1104af28 <_dtoa_r+0x45c>
1104bf74:	d9000617 	ldw	r4,24(sp)
1104bf78:	203f0d26 	beq	r4,zero,1104bbb0 <_dtoa_r+0x10e4>
1104bf7c:	d9800c17 	ldw	r6,48(sp)
1104bf80:	01bcab0e 	bge	zero,r6,1104b230 <_dtoa_r+0x764>
1104bf84:	d9401017 	ldw	r5,64(sp)
1104bf88:	d9000f17 	ldw	r4,60(sp)
1104bf8c:	000d883a 	mov	r6,zero
1104bf90:	01d00934 	movhi	r7,16420
1104bf94:	1044d3c0 	call	11044d3c <__muldf3>
1104bf98:	81000044 	addi	r4,r16,1
1104bf9c:	d8800f15 	stw	r2,60(sp)
1104bfa0:	d8c01015 	stw	r3,64(sp)
1104bfa4:	1045dd00 	call	11045dd0 <__floatsidf>
1104bfa8:	d9800f17 	ldw	r6,60(sp)
1104bfac:	d9c01017 	ldw	r7,64(sp)
1104bfb0:	1009883a 	mov	r4,r2
1104bfb4:	180b883a 	mov	r5,r3
1104bfb8:	1044d3c0 	call	11044d3c <__muldf3>
1104bfbc:	01d00734 	movhi	r7,16412
1104bfc0:	000d883a 	mov	r6,zero
1104bfc4:	1009883a 	mov	r4,r2
1104bfc8:	180b883a 	mov	r5,r3
1104bfcc:	104432c0 	call	1104432c <__adddf3>
1104bfd0:	d9c00517 	ldw	r7,20(sp)
1104bfd4:	047f3034 	movhi	r17,64704
1104bfd8:	1021883a 	mov	r16,r2
1104bfdc:	39ffffc4 	addi	r7,r7,-1
1104bfe0:	d9c01315 	stw	r7,76(sp)
1104bfe4:	1c63883a 	add	r17,r3,r17
1104bfe8:	db000c17 	ldw	r12,48(sp)
1104bfec:	003bea06 	br	1104af98 <_dtoa_r+0x4cc>
1104bff0:	dc000915 	stw	r16,36(sp)
1104bff4:	003e0e06 	br	1104b830 <_dtoa_r+0xd64>
1104bff8:	01000e44 	movi	r4,57
1104bffc:	8825883a 	mov	r18,r17
1104c000:	9dc00044 	addi	r23,r19,1
1104c004:	99000005 	stb	r4,0(r19)
1104c008:	a023883a 	mov	r17,r20
1104c00c:	dc000915 	stw	r16,36(sp)
1104c010:	003da406 	br	1104b6a4 <_dtoa_r+0xbd8>
1104c014:	d9801417 	ldw	r6,80(sp)
1104c018:	d9c01517 	ldw	r7,84(sp)
1104c01c:	0009883a 	mov	r4,zero
1104c020:	014ff834 	movhi	r5,16352
1104c024:	10454540 	call	11045454 <__subdf3>
1104c028:	880d883a 	mov	r6,r17
1104c02c:	a00f883a 	mov	r7,r20
1104c030:	1009883a 	mov	r4,r2
1104c034:	180b883a 	mov	r5,r3
1104c038:	1044c600 	call	11044c60 <__gedf2>
1104c03c:	00bc7c0e 	bge	zero,r2,1104b230 <_dtoa_r+0x764>
1104c040:	01000c04 	movi	r4,48
1104c044:	00000106 	br	1104c04c <_dtoa_r+0x1580>
1104c048:	102f883a 	mov	r23,r2
1104c04c:	b8bfffc4 	addi	r2,r23,-1
1104c050:	10c00007 	ldb	r3,0(r2)
1104c054:	193ffc26 	beq	r3,r4,1104c048 <_dtoa_r+0x157c>
1104c058:	d9801317 	ldw	r6,76(sp)
1104c05c:	d9800515 	stw	r6,20(sp)
1104c060:	003c4406 	br	1104b174 <_dtoa_r+0x6a8>
1104c064:	d9801317 	ldw	r6,76(sp)
1104c068:	d9800515 	stw	r6,20(sp)
1104c06c:	003cea06 	br	1104b418 <_dtoa_r+0x94c>
1104c070:	dd800f17 	ldw	r22,60(sp)
1104c074:	dcc01017 	ldw	r19,64(sp)
1104c078:	dc801217 	ldw	r18,72(sp)
1104c07c:	003c6c06 	br	1104b230 <_dtoa_r+0x764>
1104c080:	903e031e 	bne	r18,zero,1104b890 <_dtoa_r+0xdc4>
1104c084:	003ebb06 	br	1104bb74 <_dtoa_r+0x10a8>
1104c088:	103e6c1e 	bne	r2,zero,1104ba3c <_dtoa_r+0xf70>
1104c08c:	4080004c 	andi	r2,r8,1
1104c090:	103e6a26 	beq	r2,zero,1104ba3c <_dtoa_r+0xf70>
1104c094:	003e6606 	br	1104ba30 <_dtoa_r+0xf64>
1104c098:	d8c00317 	ldw	r3,12(sp)
1104c09c:	00800084 	movi	r2,2
1104c0a0:	10c02916 	blt	r2,r3,1104c148 <_dtoa_r+0x167c>
1104c0a4:	d9000c17 	ldw	r4,48(sp)
1104c0a8:	003e8806 	br	1104bacc <_dtoa_r+0x1000>
1104c0ac:	04000084 	movi	r16,2
1104c0b0:	003b9d06 	br	1104af28 <_dtoa_r+0x45c>
1104c0b4:	d9001317 	ldw	r4,76(sp)
1104c0b8:	d9000515 	stw	r4,20(sp)
1104c0bc:	003cd606 	br	1104b418 <_dtoa_r+0x94c>
1104c0c0:	d8801317 	ldw	r2,76(sp)
1104c0c4:	d8800515 	stw	r2,20(sp)
1104c0c8:	003c2a06 	br	1104b174 <_dtoa_r+0x6a8>
1104c0cc:	d9800317 	ldw	r6,12(sp)
1104c0d0:	00800084 	movi	r2,2
1104c0d4:	11801516 	blt	r2,r6,1104c12c <_dtoa_r+0x1660>
1104c0d8:	d9c00c17 	ldw	r7,48(sp)
1104c0dc:	d9c00615 	stw	r7,24(sp)
1104c0e0:	003df706 	br	1104b8c0 <_dtoa_r+0xdf4>
1104c0e4:	193d3926 	beq	r3,r4,1104b5cc <_dtoa_r+0xb00>
1104c0e8:	00c00f04 	movi	r3,60
1104c0ec:	1885c83a 	sub	r2,r3,r2
1104c0f0:	003ddf06 	br	1104b870 <_dtoa_r+0xda4>
1104c0f4:	e009883a 	mov	r4,fp
1104c0f8:	e0001115 	stw	zero,68(fp)
1104c0fc:	000b883a 	mov	r5,zero
1104c100:	104e1680 	call	1104e168 <_Balloc>
1104c104:	d8800715 	stw	r2,28(sp)
1104c108:	d8c00717 	ldw	r3,28(sp)
1104c10c:	00bfffc4 	movi	r2,-1
1104c110:	01000044 	movi	r4,1
1104c114:	d8800c15 	stw	r2,48(sp)
1104c118:	e0c01015 	stw	r3,64(fp)
1104c11c:	d9000b15 	stw	r4,44(sp)
1104c120:	d8800615 	stw	r2,24(sp)
1104c124:	d8002215 	stw	zero,136(sp)
1104c128:	003c4106 	br	1104b230 <_dtoa_r+0x764>
1104c12c:	d8c00c17 	ldw	r3,48(sp)
1104c130:	d8c00615 	stw	r3,24(sp)
1104c134:	003e7006 	br	1104baf8 <_dtoa_r+0x102c>
1104c138:	04400044 	movi	r17,1
1104c13c:	003b2006 	br	1104adc0 <_dtoa_r+0x2f4>
1104c140:	000b883a 	mov	r5,zero
1104c144:	003b3d06 	br	1104ae3c <_dtoa_r+0x370>
1104c148:	d8800c17 	ldw	r2,48(sp)
1104c14c:	d8800615 	stw	r2,24(sp)
1104c150:	003e6906 	br	1104baf8 <_dtoa_r+0x102c>

1104c154 <__sflush_r>:
1104c154:	2880030b 	ldhu	r2,12(r5)
1104c158:	defffb04 	addi	sp,sp,-20
1104c15c:	dcc00315 	stw	r19,12(sp)
1104c160:	dc400115 	stw	r17,4(sp)
1104c164:	dfc00415 	stw	ra,16(sp)
1104c168:	dc800215 	stw	r18,8(sp)
1104c16c:	dc000015 	stw	r16,0(sp)
1104c170:	10c0020c 	andi	r3,r2,8
1104c174:	2823883a 	mov	r17,r5
1104c178:	2027883a 	mov	r19,r4
1104c17c:	1800311e 	bne	r3,zero,1104c244 <__sflush_r+0xf0>
1104c180:	28c00117 	ldw	r3,4(r5)
1104c184:	10820014 	ori	r2,r2,2048
1104c188:	2880030d 	sth	r2,12(r5)
1104c18c:	00c04b0e 	bge	zero,r3,1104c2bc <__sflush_r+0x168>
1104c190:	8a000a17 	ldw	r8,40(r17)
1104c194:	40002326 	beq	r8,zero,1104c224 <__sflush_r+0xd0>
1104c198:	9c000017 	ldw	r16,0(r19)
1104c19c:	10c4000c 	andi	r3,r2,4096
1104c1a0:	98000015 	stw	zero,0(r19)
1104c1a4:	18004826 	beq	r3,zero,1104c2c8 <__sflush_r+0x174>
1104c1a8:	89801417 	ldw	r6,80(r17)
1104c1ac:	10c0010c 	andi	r3,r2,4
1104c1b0:	18000626 	beq	r3,zero,1104c1cc <__sflush_r+0x78>
1104c1b4:	88c00117 	ldw	r3,4(r17)
1104c1b8:	88800c17 	ldw	r2,48(r17)
1104c1bc:	30cdc83a 	sub	r6,r6,r3
1104c1c0:	10000226 	beq	r2,zero,1104c1cc <__sflush_r+0x78>
1104c1c4:	88800f17 	ldw	r2,60(r17)
1104c1c8:	308dc83a 	sub	r6,r6,r2
1104c1cc:	89400717 	ldw	r5,28(r17)
1104c1d0:	000f883a 	mov	r7,zero
1104c1d4:	9809883a 	mov	r4,r19
1104c1d8:	403ee83a 	callr	r8
1104c1dc:	00ffffc4 	movi	r3,-1
1104c1e0:	10c04426 	beq	r2,r3,1104c2f4 <__sflush_r+0x1a0>
1104c1e4:	88c0030b 	ldhu	r3,12(r17)
1104c1e8:	89000417 	ldw	r4,16(r17)
1104c1ec:	88000115 	stw	zero,4(r17)
1104c1f0:	197dffcc 	andi	r5,r3,63487
1104c1f4:	8940030d 	sth	r5,12(r17)
1104c1f8:	89000015 	stw	r4,0(r17)
1104c1fc:	18c4000c 	andi	r3,r3,4096
1104c200:	18002c1e 	bne	r3,zero,1104c2b4 <__sflush_r+0x160>
1104c204:	89400c17 	ldw	r5,48(r17)
1104c208:	9c000015 	stw	r16,0(r19)
1104c20c:	28000526 	beq	r5,zero,1104c224 <__sflush_r+0xd0>
1104c210:	88801004 	addi	r2,r17,64
1104c214:	28800226 	beq	r5,r2,1104c220 <__sflush_r+0xcc>
1104c218:	9809883a 	mov	r4,r19
1104c21c:	104c8c00 	call	1104c8c0 <_free_r>
1104c220:	88000c15 	stw	zero,48(r17)
1104c224:	0005883a 	mov	r2,zero
1104c228:	dfc00417 	ldw	ra,16(sp)
1104c22c:	dcc00317 	ldw	r19,12(sp)
1104c230:	dc800217 	ldw	r18,8(sp)
1104c234:	dc400117 	ldw	r17,4(sp)
1104c238:	dc000017 	ldw	r16,0(sp)
1104c23c:	dec00504 	addi	sp,sp,20
1104c240:	f800283a 	ret
1104c244:	2c800417 	ldw	r18,16(r5)
1104c248:	903ff626 	beq	r18,zero,1104c224 <__sflush_r+0xd0>
1104c24c:	2c000017 	ldw	r16,0(r5)
1104c250:	108000cc 	andi	r2,r2,3
1104c254:	2c800015 	stw	r18,0(r5)
1104c258:	84a1c83a 	sub	r16,r16,r18
1104c25c:	1000131e 	bne	r2,zero,1104c2ac <__sflush_r+0x158>
1104c260:	28800517 	ldw	r2,20(r5)
1104c264:	88800215 	stw	r2,8(r17)
1104c268:	04000316 	blt	zero,r16,1104c278 <__sflush_r+0x124>
1104c26c:	003fed06 	br	1104c224 <__sflush_r+0xd0>
1104c270:	90a5883a 	add	r18,r18,r2
1104c274:	043feb0e 	bge	zero,r16,1104c224 <__sflush_r+0xd0>
1104c278:	88800917 	ldw	r2,36(r17)
1104c27c:	89400717 	ldw	r5,28(r17)
1104c280:	800f883a 	mov	r7,r16
1104c284:	900d883a 	mov	r6,r18
1104c288:	9809883a 	mov	r4,r19
1104c28c:	103ee83a 	callr	r2
1104c290:	80a1c83a 	sub	r16,r16,r2
1104c294:	00bff616 	blt	zero,r2,1104c270 <__sflush_r+0x11c>
1104c298:	88c0030b 	ldhu	r3,12(r17)
1104c29c:	00bfffc4 	movi	r2,-1
1104c2a0:	18c01014 	ori	r3,r3,64
1104c2a4:	88c0030d 	sth	r3,12(r17)
1104c2a8:	003fdf06 	br	1104c228 <__sflush_r+0xd4>
1104c2ac:	0005883a 	mov	r2,zero
1104c2b0:	003fec06 	br	1104c264 <__sflush_r+0x110>
1104c2b4:	88801415 	stw	r2,80(r17)
1104c2b8:	003fd206 	br	1104c204 <__sflush_r+0xb0>
1104c2bc:	28c00f17 	ldw	r3,60(r5)
1104c2c0:	00ffb316 	blt	zero,r3,1104c190 <__sflush_r+0x3c>
1104c2c4:	003fd706 	br	1104c224 <__sflush_r+0xd0>
1104c2c8:	89400717 	ldw	r5,28(r17)
1104c2cc:	000d883a 	mov	r6,zero
1104c2d0:	01c00044 	movi	r7,1
1104c2d4:	9809883a 	mov	r4,r19
1104c2d8:	403ee83a 	callr	r8
1104c2dc:	100d883a 	mov	r6,r2
1104c2e0:	00bfffc4 	movi	r2,-1
1104c2e4:	30801426 	beq	r6,r2,1104c338 <__sflush_r+0x1e4>
1104c2e8:	8880030b 	ldhu	r2,12(r17)
1104c2ec:	8a000a17 	ldw	r8,40(r17)
1104c2f0:	003fae06 	br	1104c1ac <__sflush_r+0x58>
1104c2f4:	98c00017 	ldw	r3,0(r19)
1104c2f8:	183fba26 	beq	r3,zero,1104c1e4 <__sflush_r+0x90>
1104c2fc:	01000744 	movi	r4,29
1104c300:	19000626 	beq	r3,r4,1104c31c <__sflush_r+0x1c8>
1104c304:	01000584 	movi	r4,22
1104c308:	19000426 	beq	r3,r4,1104c31c <__sflush_r+0x1c8>
1104c30c:	88c0030b 	ldhu	r3,12(r17)
1104c310:	18c01014 	ori	r3,r3,64
1104c314:	88c0030d 	sth	r3,12(r17)
1104c318:	003fc306 	br	1104c228 <__sflush_r+0xd4>
1104c31c:	8880030b 	ldhu	r2,12(r17)
1104c320:	88c00417 	ldw	r3,16(r17)
1104c324:	88000115 	stw	zero,4(r17)
1104c328:	10bdffcc 	andi	r2,r2,63487
1104c32c:	8880030d 	sth	r2,12(r17)
1104c330:	88c00015 	stw	r3,0(r17)
1104c334:	003fb306 	br	1104c204 <__sflush_r+0xb0>
1104c338:	98800017 	ldw	r2,0(r19)
1104c33c:	103fea26 	beq	r2,zero,1104c2e8 <__sflush_r+0x194>
1104c340:	00c00744 	movi	r3,29
1104c344:	10c00226 	beq	r2,r3,1104c350 <__sflush_r+0x1fc>
1104c348:	00c00584 	movi	r3,22
1104c34c:	10c0031e 	bne	r2,r3,1104c35c <__sflush_r+0x208>
1104c350:	9c000015 	stw	r16,0(r19)
1104c354:	0005883a 	mov	r2,zero
1104c358:	003fb306 	br	1104c228 <__sflush_r+0xd4>
1104c35c:	88c0030b 	ldhu	r3,12(r17)
1104c360:	3005883a 	mov	r2,r6
1104c364:	18c01014 	ori	r3,r3,64
1104c368:	88c0030d 	sth	r3,12(r17)
1104c36c:	003fae06 	br	1104c228 <__sflush_r+0xd4>

1104c370 <_fflush_r>:
1104c370:	defffd04 	addi	sp,sp,-12
1104c374:	dc000115 	stw	r16,4(sp)
1104c378:	dfc00215 	stw	ra,8(sp)
1104c37c:	2021883a 	mov	r16,r4
1104c380:	20000226 	beq	r4,zero,1104c38c <_fflush_r+0x1c>
1104c384:	20800e17 	ldw	r2,56(r4)
1104c388:	10000c26 	beq	r2,zero,1104c3bc <_fflush_r+0x4c>
1104c38c:	2880030f 	ldh	r2,12(r5)
1104c390:	1000051e 	bne	r2,zero,1104c3a8 <_fflush_r+0x38>
1104c394:	0005883a 	mov	r2,zero
1104c398:	dfc00217 	ldw	ra,8(sp)
1104c39c:	dc000117 	ldw	r16,4(sp)
1104c3a0:	dec00304 	addi	sp,sp,12
1104c3a4:	f800283a 	ret
1104c3a8:	8009883a 	mov	r4,r16
1104c3ac:	dfc00217 	ldw	ra,8(sp)
1104c3b0:	dc000117 	ldw	r16,4(sp)
1104c3b4:	dec00304 	addi	sp,sp,12
1104c3b8:	104c1541 	jmpi	1104c154 <__sflush_r>
1104c3bc:	d9400015 	stw	r5,0(sp)
1104c3c0:	104c74c0 	call	1104c74c <__sinit>
1104c3c4:	d9400017 	ldw	r5,0(sp)
1104c3c8:	003ff006 	br	1104c38c <_fflush_r+0x1c>

1104c3cc <fflush>:
1104c3cc:	20000526 	beq	r4,zero,1104c3e4 <fflush+0x18>
1104c3d0:	008441b4 	movhi	r2,4358
1104c3d4:	10a35704 	addi	r2,r2,-29348
1104c3d8:	200b883a 	mov	r5,r4
1104c3dc:	11000017 	ldw	r4,0(r2)
1104c3e0:	104c3701 	jmpi	1104c370 <_fflush_r>
1104c3e4:	008441b4 	movhi	r2,4358
1104c3e8:	10a35604 	addi	r2,r2,-29352
1104c3ec:	11000017 	ldw	r4,0(r2)
1104c3f0:	01444174 	movhi	r5,4357
1104c3f4:	2970dc04 	addi	r5,r5,-15504
1104c3f8:	104d1501 	jmpi	1104d150 <_fwalk_reent>

1104c3fc <__fp_unlock>:
1104c3fc:	0005883a 	mov	r2,zero
1104c400:	f800283a 	ret

1104c404 <_cleanup_r>:
1104c404:	01444174 	movhi	r5,4357
1104c408:	29495d04 	addi	r5,r5,9588
1104c40c:	104d1501 	jmpi	1104d150 <_fwalk_reent>

1104c410 <__sinit.part.1>:
1104c410:	defff704 	addi	sp,sp,-36
1104c414:	00c44174 	movhi	r3,4357
1104c418:	dfc00815 	stw	ra,32(sp)
1104c41c:	ddc00715 	stw	r23,28(sp)
1104c420:	dd800615 	stw	r22,24(sp)
1104c424:	dd400515 	stw	r21,20(sp)
1104c428:	dd000415 	stw	r20,16(sp)
1104c42c:	dcc00315 	stw	r19,12(sp)
1104c430:	dc800215 	stw	r18,8(sp)
1104c434:	dc400115 	stw	r17,4(sp)
1104c438:	dc000015 	stw	r16,0(sp)
1104c43c:	18f10104 	addi	r3,r3,-15356
1104c440:	24000117 	ldw	r16,4(r4)
1104c444:	20c00f15 	stw	r3,60(r4)
1104c448:	2080bb04 	addi	r2,r4,748
1104c44c:	00c000c4 	movi	r3,3
1104c450:	20c0b915 	stw	r3,740(r4)
1104c454:	2080ba15 	stw	r2,744(r4)
1104c458:	2000b815 	stw	zero,736(r4)
1104c45c:	05c00204 	movi	r23,8
1104c460:	00800104 	movi	r2,4
1104c464:	2025883a 	mov	r18,r4
1104c468:	b80d883a 	mov	r6,r23
1104c46c:	81001704 	addi	r4,r16,92
1104c470:	000b883a 	mov	r5,zero
1104c474:	80000015 	stw	zero,0(r16)
1104c478:	80000115 	stw	zero,4(r16)
1104c47c:	80000215 	stw	zero,8(r16)
1104c480:	8080030d 	sth	r2,12(r16)
1104c484:	80001915 	stw	zero,100(r16)
1104c488:	8000038d 	sth	zero,14(r16)
1104c48c:	80000415 	stw	zero,16(r16)
1104c490:	80000515 	stw	zero,20(r16)
1104c494:	80000615 	stw	zero,24(r16)
1104c498:	104e0400 	call	1104e040 <memset>
1104c49c:	05844174 	movhi	r22,4357
1104c4a0:	94400217 	ldw	r17,8(r18)
1104c4a4:	05444174 	movhi	r21,4357
1104c4a8:	05044174 	movhi	r20,4357
1104c4ac:	04c44174 	movhi	r19,4357
1104c4b0:	b5bde404 	addi	r22,r22,-2160
1104c4b4:	ad7dfb04 	addi	r21,r21,-2068
1104c4b8:	a53e1a04 	addi	r20,r20,-1944
1104c4bc:	9cfe3104 	addi	r19,r19,-1852
1104c4c0:	85800815 	stw	r22,32(r16)
1104c4c4:	85400915 	stw	r21,36(r16)
1104c4c8:	85000a15 	stw	r20,40(r16)
1104c4cc:	84c00b15 	stw	r19,44(r16)
1104c4d0:	84000715 	stw	r16,28(r16)
1104c4d4:	00800284 	movi	r2,10
1104c4d8:	8880030d 	sth	r2,12(r17)
1104c4dc:	00800044 	movi	r2,1
1104c4e0:	b80d883a 	mov	r6,r23
1104c4e4:	89001704 	addi	r4,r17,92
1104c4e8:	000b883a 	mov	r5,zero
1104c4ec:	88000015 	stw	zero,0(r17)
1104c4f0:	88000115 	stw	zero,4(r17)
1104c4f4:	88000215 	stw	zero,8(r17)
1104c4f8:	88001915 	stw	zero,100(r17)
1104c4fc:	8880038d 	sth	r2,14(r17)
1104c500:	88000415 	stw	zero,16(r17)
1104c504:	88000515 	stw	zero,20(r17)
1104c508:	88000615 	stw	zero,24(r17)
1104c50c:	104e0400 	call	1104e040 <memset>
1104c510:	94000317 	ldw	r16,12(r18)
1104c514:	00800484 	movi	r2,18
1104c518:	8c400715 	stw	r17,28(r17)
1104c51c:	8d800815 	stw	r22,32(r17)
1104c520:	8d400915 	stw	r21,36(r17)
1104c524:	8d000a15 	stw	r20,40(r17)
1104c528:	8cc00b15 	stw	r19,44(r17)
1104c52c:	8080030d 	sth	r2,12(r16)
1104c530:	00800084 	movi	r2,2
1104c534:	80000015 	stw	zero,0(r16)
1104c538:	80000115 	stw	zero,4(r16)
1104c53c:	80000215 	stw	zero,8(r16)
1104c540:	80001915 	stw	zero,100(r16)
1104c544:	8080038d 	sth	r2,14(r16)
1104c548:	80000415 	stw	zero,16(r16)
1104c54c:	80000515 	stw	zero,20(r16)
1104c550:	80000615 	stw	zero,24(r16)
1104c554:	b80d883a 	mov	r6,r23
1104c558:	000b883a 	mov	r5,zero
1104c55c:	81001704 	addi	r4,r16,92
1104c560:	104e0400 	call	1104e040 <memset>
1104c564:	00800044 	movi	r2,1
1104c568:	84000715 	stw	r16,28(r16)
1104c56c:	85800815 	stw	r22,32(r16)
1104c570:	85400915 	stw	r21,36(r16)
1104c574:	85000a15 	stw	r20,40(r16)
1104c578:	84c00b15 	stw	r19,44(r16)
1104c57c:	90800e15 	stw	r2,56(r18)
1104c580:	dfc00817 	ldw	ra,32(sp)
1104c584:	ddc00717 	ldw	r23,28(sp)
1104c588:	dd800617 	ldw	r22,24(sp)
1104c58c:	dd400517 	ldw	r21,20(sp)
1104c590:	dd000417 	ldw	r20,16(sp)
1104c594:	dcc00317 	ldw	r19,12(sp)
1104c598:	dc800217 	ldw	r18,8(sp)
1104c59c:	dc400117 	ldw	r17,4(sp)
1104c5a0:	dc000017 	ldw	r16,0(sp)
1104c5a4:	dec00904 	addi	sp,sp,36
1104c5a8:	f800283a 	ret

1104c5ac <__fp_lock>:
1104c5ac:	0005883a 	mov	r2,zero
1104c5b0:	f800283a 	ret

1104c5b4 <__sfmoreglue>:
1104c5b4:	defffc04 	addi	sp,sp,-16
1104c5b8:	dc400115 	stw	r17,4(sp)
1104c5bc:	2c7fffc4 	addi	r17,r5,-1
1104c5c0:	8c401a24 	muli	r17,r17,104
1104c5c4:	dc800215 	stw	r18,8(sp)
1104c5c8:	2825883a 	mov	r18,r5
1104c5cc:	89401d04 	addi	r5,r17,116
1104c5d0:	dc000015 	stw	r16,0(sp)
1104c5d4:	dfc00315 	stw	ra,12(sp)
1104c5d8:	104d4ac0 	call	1104d4ac <_malloc_r>
1104c5dc:	1021883a 	mov	r16,r2
1104c5e0:	10000726 	beq	r2,zero,1104c600 <__sfmoreglue+0x4c>
1104c5e4:	11000304 	addi	r4,r2,12
1104c5e8:	10000015 	stw	zero,0(r2)
1104c5ec:	14800115 	stw	r18,4(r2)
1104c5f0:	11000215 	stw	r4,8(r2)
1104c5f4:	89801a04 	addi	r6,r17,104
1104c5f8:	000b883a 	mov	r5,zero
1104c5fc:	104e0400 	call	1104e040 <memset>
1104c600:	8005883a 	mov	r2,r16
1104c604:	dfc00317 	ldw	ra,12(sp)
1104c608:	dc800217 	ldw	r18,8(sp)
1104c60c:	dc400117 	ldw	r17,4(sp)
1104c610:	dc000017 	ldw	r16,0(sp)
1104c614:	dec00404 	addi	sp,sp,16
1104c618:	f800283a 	ret

1104c61c <__sfp>:
1104c61c:	defffb04 	addi	sp,sp,-20
1104c620:	dc000015 	stw	r16,0(sp)
1104c624:	040441b4 	movhi	r16,4358
1104c628:	84235604 	addi	r16,r16,-29352
1104c62c:	dcc00315 	stw	r19,12(sp)
1104c630:	2027883a 	mov	r19,r4
1104c634:	81000017 	ldw	r4,0(r16)
1104c638:	dfc00415 	stw	ra,16(sp)
1104c63c:	dc800215 	stw	r18,8(sp)
1104c640:	20800e17 	ldw	r2,56(r4)
1104c644:	dc400115 	stw	r17,4(sp)
1104c648:	1000021e 	bne	r2,zero,1104c654 <__sfp+0x38>
1104c64c:	104c4100 	call	1104c410 <__sinit.part.1>
1104c650:	81000017 	ldw	r4,0(r16)
1104c654:	2480b804 	addi	r18,r4,736
1104c658:	047fffc4 	movi	r17,-1
1104c65c:	91000117 	ldw	r4,4(r18)
1104c660:	94000217 	ldw	r16,8(r18)
1104c664:	213fffc4 	addi	r4,r4,-1
1104c668:	20000a16 	blt	r4,zero,1104c694 <__sfp+0x78>
1104c66c:	8080030f 	ldh	r2,12(r16)
1104c670:	10000c26 	beq	r2,zero,1104c6a4 <__sfp+0x88>
1104c674:	80c01d04 	addi	r3,r16,116
1104c678:	00000206 	br	1104c684 <__sfp+0x68>
1104c67c:	18bfe60f 	ldh	r2,-104(r3)
1104c680:	10000826 	beq	r2,zero,1104c6a4 <__sfp+0x88>
1104c684:	213fffc4 	addi	r4,r4,-1
1104c688:	1c3ffd04 	addi	r16,r3,-12
1104c68c:	18c01a04 	addi	r3,r3,104
1104c690:	247ffa1e 	bne	r4,r17,1104c67c <__sfp+0x60>
1104c694:	90800017 	ldw	r2,0(r18)
1104c698:	10001d26 	beq	r2,zero,1104c710 <__sfp+0xf4>
1104c69c:	1025883a 	mov	r18,r2
1104c6a0:	003fee06 	br	1104c65c <__sfp+0x40>
1104c6a4:	00bfffc4 	movi	r2,-1
1104c6a8:	8080038d 	sth	r2,14(r16)
1104c6ac:	00800044 	movi	r2,1
1104c6b0:	8080030d 	sth	r2,12(r16)
1104c6b4:	80001915 	stw	zero,100(r16)
1104c6b8:	80000015 	stw	zero,0(r16)
1104c6bc:	80000215 	stw	zero,8(r16)
1104c6c0:	80000115 	stw	zero,4(r16)
1104c6c4:	80000415 	stw	zero,16(r16)
1104c6c8:	80000515 	stw	zero,20(r16)
1104c6cc:	80000615 	stw	zero,24(r16)
1104c6d0:	01800204 	movi	r6,8
1104c6d4:	000b883a 	mov	r5,zero
1104c6d8:	81001704 	addi	r4,r16,92
1104c6dc:	104e0400 	call	1104e040 <memset>
1104c6e0:	8005883a 	mov	r2,r16
1104c6e4:	80000c15 	stw	zero,48(r16)
1104c6e8:	80000d15 	stw	zero,52(r16)
1104c6ec:	80001115 	stw	zero,68(r16)
1104c6f0:	80001215 	stw	zero,72(r16)
1104c6f4:	dfc00417 	ldw	ra,16(sp)
1104c6f8:	dcc00317 	ldw	r19,12(sp)
1104c6fc:	dc800217 	ldw	r18,8(sp)
1104c700:	dc400117 	ldw	r17,4(sp)
1104c704:	dc000017 	ldw	r16,0(sp)
1104c708:	dec00504 	addi	sp,sp,20
1104c70c:	f800283a 	ret
1104c710:	01400104 	movi	r5,4
1104c714:	9809883a 	mov	r4,r19
1104c718:	104c5b40 	call	1104c5b4 <__sfmoreglue>
1104c71c:	90800015 	stw	r2,0(r18)
1104c720:	103fde1e 	bne	r2,zero,1104c69c <__sfp+0x80>
1104c724:	00800304 	movi	r2,12
1104c728:	98800015 	stw	r2,0(r19)
1104c72c:	0005883a 	mov	r2,zero
1104c730:	003ff006 	br	1104c6f4 <__sfp+0xd8>

1104c734 <_cleanup>:
1104c734:	008441b4 	movhi	r2,4358
1104c738:	10a35604 	addi	r2,r2,-29352
1104c73c:	11000017 	ldw	r4,0(r2)
1104c740:	01444174 	movhi	r5,4357
1104c744:	29495d04 	addi	r5,r5,9588
1104c748:	104d1501 	jmpi	1104d150 <_fwalk_reent>

1104c74c <__sinit>:
1104c74c:	20800e17 	ldw	r2,56(r4)
1104c750:	10000126 	beq	r2,zero,1104c758 <__sinit+0xc>
1104c754:	f800283a 	ret
1104c758:	104c4101 	jmpi	1104c410 <__sinit.part.1>

1104c75c <__sfp_lock_acquire>:
1104c75c:	f800283a 	ret

1104c760 <__sfp_lock_release>:
1104c760:	f800283a 	ret

1104c764 <__sinit_lock_acquire>:
1104c764:	f800283a 	ret

1104c768 <__sinit_lock_release>:
1104c768:	f800283a 	ret

1104c76c <__fp_lock_all>:
1104c76c:	008441b4 	movhi	r2,4358
1104c770:	10a35704 	addi	r2,r2,-29348
1104c774:	11000017 	ldw	r4,0(r2)
1104c778:	01444174 	movhi	r5,4357
1104c77c:	29716b04 	addi	r5,r5,-14932
1104c780:	104d08c1 	jmpi	1104d08c <_fwalk>

1104c784 <__fp_unlock_all>:
1104c784:	008441b4 	movhi	r2,4358
1104c788:	10a35704 	addi	r2,r2,-29348
1104c78c:	11000017 	ldw	r4,0(r2)
1104c790:	01444174 	movhi	r5,4357
1104c794:	2970ff04 	addi	r5,r5,-15364
1104c798:	104d08c1 	jmpi	1104d08c <_fwalk>

1104c79c <_malloc_trim_r>:
1104c79c:	defffb04 	addi	sp,sp,-20
1104c7a0:	dcc00315 	stw	r19,12(sp)
1104c7a4:	04c44174 	movhi	r19,4357
1104c7a8:	dc800215 	stw	r18,8(sp)
1104c7ac:	dc400115 	stw	r17,4(sp)
1104c7b0:	dc000015 	stw	r16,0(sp)
1104c7b4:	dfc00415 	stw	ra,16(sp)
1104c7b8:	2821883a 	mov	r16,r5
1104c7bc:	9cddd204 	addi	r19,r19,30536
1104c7c0:	2025883a 	mov	r18,r4
1104c7c4:	10547e00 	call	110547e0 <__malloc_lock>
1104c7c8:	98800217 	ldw	r2,8(r19)
1104c7cc:	14400117 	ldw	r17,4(r2)
1104c7d0:	00bfff04 	movi	r2,-4
1104c7d4:	88a2703a 	and	r17,r17,r2
1104c7d8:	8c21c83a 	sub	r16,r17,r16
1104c7dc:	8403fbc4 	addi	r16,r16,4079
1104c7e0:	8020d33a 	srli	r16,r16,12
1104c7e4:	0083ffc4 	movi	r2,4095
1104c7e8:	843fffc4 	addi	r16,r16,-1
1104c7ec:	8020933a 	slli	r16,r16,12
1104c7f0:	1400060e 	bge	r2,r16,1104c80c <_malloc_trim_r+0x70>
1104c7f4:	000b883a 	mov	r5,zero
1104c7f8:	9009883a 	mov	r4,r18
1104c7fc:	104f73c0 	call	1104f73c <_sbrk_r>
1104c800:	98c00217 	ldw	r3,8(r19)
1104c804:	1c47883a 	add	r3,r3,r17
1104c808:	10c00a26 	beq	r2,r3,1104c834 <_malloc_trim_r+0x98>
1104c80c:	9009883a 	mov	r4,r18
1104c810:	10548040 	call	11054804 <__malloc_unlock>
1104c814:	0005883a 	mov	r2,zero
1104c818:	dfc00417 	ldw	ra,16(sp)
1104c81c:	dcc00317 	ldw	r19,12(sp)
1104c820:	dc800217 	ldw	r18,8(sp)
1104c824:	dc400117 	ldw	r17,4(sp)
1104c828:	dc000017 	ldw	r16,0(sp)
1104c82c:	dec00504 	addi	sp,sp,20
1104c830:	f800283a 	ret
1104c834:	040bc83a 	sub	r5,zero,r16
1104c838:	9009883a 	mov	r4,r18
1104c83c:	104f73c0 	call	1104f73c <_sbrk_r>
1104c840:	00ffffc4 	movi	r3,-1
1104c844:	10c00d26 	beq	r2,r3,1104c87c <_malloc_trim_r+0xe0>
1104c848:	00c441b4 	movhi	r3,4358
1104c84c:	18ea3a04 	addi	r3,r3,-22296
1104c850:	18800017 	ldw	r2,0(r3)
1104c854:	99000217 	ldw	r4,8(r19)
1104c858:	8c23c83a 	sub	r17,r17,r16
1104c85c:	8c400054 	ori	r17,r17,1
1104c860:	1421c83a 	sub	r16,r2,r16
1104c864:	24400115 	stw	r17,4(r4)
1104c868:	9009883a 	mov	r4,r18
1104c86c:	1c000015 	stw	r16,0(r3)
1104c870:	10548040 	call	11054804 <__malloc_unlock>
1104c874:	00800044 	movi	r2,1
1104c878:	003fe706 	br	1104c818 <_malloc_trim_r+0x7c>
1104c87c:	000b883a 	mov	r5,zero
1104c880:	9009883a 	mov	r4,r18
1104c884:	104f73c0 	call	1104f73c <_sbrk_r>
1104c888:	99000217 	ldw	r4,8(r19)
1104c88c:	014003c4 	movi	r5,15
1104c890:	1107c83a 	sub	r3,r2,r4
1104c894:	28ffdd0e 	bge	r5,r3,1104c80c <_malloc_trim_r+0x70>
1104c898:	014441b4 	movhi	r5,4358
1104c89c:	29635904 	addi	r5,r5,-29340
1104c8a0:	29400017 	ldw	r5,0(r5)
1104c8a4:	18c00054 	ori	r3,r3,1
1104c8a8:	20c00115 	stw	r3,4(r4)
1104c8ac:	00c441b4 	movhi	r3,4358
1104c8b0:	1145c83a 	sub	r2,r2,r5
1104c8b4:	18ea3a04 	addi	r3,r3,-22296
1104c8b8:	18800015 	stw	r2,0(r3)
1104c8bc:	003fd306 	br	1104c80c <_malloc_trim_r+0x70>

1104c8c0 <_free_r>:
1104c8c0:	28004126 	beq	r5,zero,1104c9c8 <_free_r+0x108>
1104c8c4:	defffd04 	addi	sp,sp,-12
1104c8c8:	dc400115 	stw	r17,4(sp)
1104c8cc:	dc000015 	stw	r16,0(sp)
1104c8d0:	2023883a 	mov	r17,r4
1104c8d4:	2821883a 	mov	r16,r5
1104c8d8:	dfc00215 	stw	ra,8(sp)
1104c8dc:	10547e00 	call	110547e0 <__malloc_lock>
1104c8e0:	81ffff17 	ldw	r7,-4(r16)
1104c8e4:	00bfff84 	movi	r2,-2
1104c8e8:	01044174 	movhi	r4,4357
1104c8ec:	81bffe04 	addi	r6,r16,-8
1104c8f0:	3884703a 	and	r2,r7,r2
1104c8f4:	211dd204 	addi	r4,r4,30536
1104c8f8:	308b883a 	add	r5,r6,r2
1104c8fc:	2a400117 	ldw	r9,4(r5)
1104c900:	22000217 	ldw	r8,8(r4)
1104c904:	00ffff04 	movi	r3,-4
1104c908:	48c6703a 	and	r3,r9,r3
1104c90c:	2a005726 	beq	r5,r8,1104ca6c <_free_r+0x1ac>
1104c910:	28c00115 	stw	r3,4(r5)
1104c914:	39c0004c 	andi	r7,r7,1
1104c918:	3800091e 	bne	r7,zero,1104c940 <_free_r+0x80>
1104c91c:	823ffe17 	ldw	r8,-8(r16)
1104c920:	22400204 	addi	r9,r4,8
1104c924:	320dc83a 	sub	r6,r6,r8
1104c928:	31c00217 	ldw	r7,8(r6)
1104c92c:	1205883a 	add	r2,r2,r8
1104c930:	3a406526 	beq	r7,r9,1104cac8 <_free_r+0x208>
1104c934:	32000317 	ldw	r8,12(r6)
1104c938:	3a000315 	stw	r8,12(r7)
1104c93c:	41c00215 	stw	r7,8(r8)
1104c940:	28cf883a 	add	r7,r5,r3
1104c944:	39c00117 	ldw	r7,4(r7)
1104c948:	39c0004c 	andi	r7,r7,1
1104c94c:	38003a26 	beq	r7,zero,1104ca38 <_free_r+0x178>
1104c950:	10c00054 	ori	r3,r2,1
1104c954:	30c00115 	stw	r3,4(r6)
1104c958:	3087883a 	add	r3,r6,r2
1104c95c:	18800015 	stw	r2,0(r3)
1104c960:	00c07fc4 	movi	r3,511
1104c964:	18801936 	bltu	r3,r2,1104c9cc <_free_r+0x10c>
1104c968:	1004d0fa 	srli	r2,r2,3
1104c96c:	01c00044 	movi	r7,1
1104c970:	21400117 	ldw	r5,4(r4)
1104c974:	10c00044 	addi	r3,r2,1
1104c978:	18c7883a 	add	r3,r3,r3
1104c97c:	1005d0ba 	srai	r2,r2,2
1104c980:	18c7883a 	add	r3,r3,r3
1104c984:	18c7883a 	add	r3,r3,r3
1104c988:	1907883a 	add	r3,r3,r4
1104c98c:	3884983a 	sll	r2,r7,r2
1104c990:	19c00017 	ldw	r7,0(r3)
1104c994:	1a3ffe04 	addi	r8,r3,-8
1104c998:	1144b03a 	or	r2,r2,r5
1104c99c:	32000315 	stw	r8,12(r6)
1104c9a0:	31c00215 	stw	r7,8(r6)
1104c9a4:	20800115 	stw	r2,4(r4)
1104c9a8:	19800015 	stw	r6,0(r3)
1104c9ac:	39800315 	stw	r6,12(r7)
1104c9b0:	8809883a 	mov	r4,r17
1104c9b4:	dfc00217 	ldw	ra,8(sp)
1104c9b8:	dc400117 	ldw	r17,4(sp)
1104c9bc:	dc000017 	ldw	r16,0(sp)
1104c9c0:	dec00304 	addi	sp,sp,12
1104c9c4:	10548041 	jmpi	11054804 <__malloc_unlock>
1104c9c8:	f800283a 	ret
1104c9cc:	100ad27a 	srli	r5,r2,9
1104c9d0:	00c00104 	movi	r3,4
1104c9d4:	19404a36 	bltu	r3,r5,1104cb00 <_free_r+0x240>
1104c9d8:	100ad1ba 	srli	r5,r2,6
1104c9dc:	28c00e44 	addi	r3,r5,57
1104c9e0:	18c7883a 	add	r3,r3,r3
1104c9e4:	29400e04 	addi	r5,r5,56
1104c9e8:	18c7883a 	add	r3,r3,r3
1104c9ec:	18c7883a 	add	r3,r3,r3
1104c9f0:	1909883a 	add	r4,r3,r4
1104c9f4:	20c00017 	ldw	r3,0(r4)
1104c9f8:	01c44174 	movhi	r7,4357
1104c9fc:	213ffe04 	addi	r4,r4,-8
1104ca00:	39ddd204 	addi	r7,r7,30536
1104ca04:	20c04426 	beq	r4,r3,1104cb18 <_free_r+0x258>
1104ca08:	01ffff04 	movi	r7,-4
1104ca0c:	19400117 	ldw	r5,4(r3)
1104ca10:	29ca703a 	and	r5,r5,r7
1104ca14:	1140022e 	bgeu	r2,r5,1104ca20 <_free_r+0x160>
1104ca18:	18c00217 	ldw	r3,8(r3)
1104ca1c:	20fffb1e 	bne	r4,r3,1104ca0c <_free_r+0x14c>
1104ca20:	19000317 	ldw	r4,12(r3)
1104ca24:	31000315 	stw	r4,12(r6)
1104ca28:	30c00215 	stw	r3,8(r6)
1104ca2c:	21800215 	stw	r6,8(r4)
1104ca30:	19800315 	stw	r6,12(r3)
1104ca34:	003fde06 	br	1104c9b0 <_free_r+0xf0>
1104ca38:	29c00217 	ldw	r7,8(r5)
1104ca3c:	10c5883a 	add	r2,r2,r3
1104ca40:	00c44174 	movhi	r3,4357
1104ca44:	18ddd404 	addi	r3,r3,30544
1104ca48:	38c03b26 	beq	r7,r3,1104cb38 <_free_r+0x278>
1104ca4c:	2a000317 	ldw	r8,12(r5)
1104ca50:	11400054 	ori	r5,r2,1
1104ca54:	3087883a 	add	r3,r6,r2
1104ca58:	3a000315 	stw	r8,12(r7)
1104ca5c:	41c00215 	stw	r7,8(r8)
1104ca60:	31400115 	stw	r5,4(r6)
1104ca64:	18800015 	stw	r2,0(r3)
1104ca68:	003fbd06 	br	1104c960 <_free_r+0xa0>
1104ca6c:	39c0004c 	andi	r7,r7,1
1104ca70:	10c5883a 	add	r2,r2,r3
1104ca74:	3800071e 	bne	r7,zero,1104ca94 <_free_r+0x1d4>
1104ca78:	81fffe17 	ldw	r7,-8(r16)
1104ca7c:	31cdc83a 	sub	r6,r6,r7
1104ca80:	30c00317 	ldw	r3,12(r6)
1104ca84:	31400217 	ldw	r5,8(r6)
1104ca88:	11c5883a 	add	r2,r2,r7
1104ca8c:	28c00315 	stw	r3,12(r5)
1104ca90:	19400215 	stw	r5,8(r3)
1104ca94:	10c00054 	ori	r3,r2,1
1104ca98:	30c00115 	stw	r3,4(r6)
1104ca9c:	00c441b4 	movhi	r3,4358
1104caa0:	18e35a04 	addi	r3,r3,-29336
1104caa4:	18c00017 	ldw	r3,0(r3)
1104caa8:	21800215 	stw	r6,8(r4)
1104caac:	10ffc036 	bltu	r2,r3,1104c9b0 <_free_r+0xf0>
1104cab0:	008441b4 	movhi	r2,4358
1104cab4:	10aa2704 	addi	r2,r2,-22372
1104cab8:	11400017 	ldw	r5,0(r2)
1104cabc:	8809883a 	mov	r4,r17
1104cac0:	104c79c0 	call	1104c79c <_malloc_trim_r>
1104cac4:	003fba06 	br	1104c9b0 <_free_r+0xf0>
1104cac8:	28c9883a 	add	r4,r5,r3
1104cacc:	21000117 	ldw	r4,4(r4)
1104cad0:	2100004c 	andi	r4,r4,1
1104cad4:	2000391e 	bne	r4,zero,1104cbbc <_free_r+0x2fc>
1104cad8:	29c00217 	ldw	r7,8(r5)
1104cadc:	29000317 	ldw	r4,12(r5)
1104cae0:	1885883a 	add	r2,r3,r2
1104cae4:	10c00054 	ori	r3,r2,1
1104cae8:	39000315 	stw	r4,12(r7)
1104caec:	21c00215 	stw	r7,8(r4)
1104caf0:	30c00115 	stw	r3,4(r6)
1104caf4:	308d883a 	add	r6,r6,r2
1104caf8:	30800015 	stw	r2,0(r6)
1104cafc:	003fac06 	br	1104c9b0 <_free_r+0xf0>
1104cb00:	00c00504 	movi	r3,20
1104cb04:	19401536 	bltu	r3,r5,1104cb5c <_free_r+0x29c>
1104cb08:	28c01704 	addi	r3,r5,92
1104cb0c:	18c7883a 	add	r3,r3,r3
1104cb10:	294016c4 	addi	r5,r5,91
1104cb14:	003fb406 	br	1104c9e8 <_free_r+0x128>
1104cb18:	280bd0ba 	srai	r5,r5,2
1104cb1c:	00c00044 	movi	r3,1
1104cb20:	38800117 	ldw	r2,4(r7)
1104cb24:	194a983a 	sll	r5,r3,r5
1104cb28:	2007883a 	mov	r3,r4
1104cb2c:	2884b03a 	or	r2,r5,r2
1104cb30:	38800115 	stw	r2,4(r7)
1104cb34:	003fbb06 	br	1104ca24 <_free_r+0x164>
1104cb38:	21800515 	stw	r6,20(r4)
1104cb3c:	21800415 	stw	r6,16(r4)
1104cb40:	10c00054 	ori	r3,r2,1
1104cb44:	31c00315 	stw	r7,12(r6)
1104cb48:	31c00215 	stw	r7,8(r6)
1104cb4c:	30c00115 	stw	r3,4(r6)
1104cb50:	308d883a 	add	r6,r6,r2
1104cb54:	30800015 	stw	r2,0(r6)
1104cb58:	003f9506 	br	1104c9b0 <_free_r+0xf0>
1104cb5c:	00c01504 	movi	r3,84
1104cb60:	19400536 	bltu	r3,r5,1104cb78 <_free_r+0x2b8>
1104cb64:	100ad33a 	srli	r5,r2,12
1104cb68:	28c01bc4 	addi	r3,r5,111
1104cb6c:	18c7883a 	add	r3,r3,r3
1104cb70:	29401b84 	addi	r5,r5,110
1104cb74:	003f9c06 	br	1104c9e8 <_free_r+0x128>
1104cb78:	00c05504 	movi	r3,340
1104cb7c:	19400536 	bltu	r3,r5,1104cb94 <_free_r+0x2d4>
1104cb80:	100ad3fa 	srli	r5,r2,15
1104cb84:	28c01e04 	addi	r3,r5,120
1104cb88:	18c7883a 	add	r3,r3,r3
1104cb8c:	29401dc4 	addi	r5,r5,119
1104cb90:	003f9506 	br	1104c9e8 <_free_r+0x128>
1104cb94:	00c15504 	movi	r3,1364
1104cb98:	19400536 	bltu	r3,r5,1104cbb0 <_free_r+0x2f0>
1104cb9c:	100ad4ba 	srli	r5,r2,18
1104cba0:	28c01f44 	addi	r3,r5,125
1104cba4:	18c7883a 	add	r3,r3,r3
1104cba8:	29401f04 	addi	r5,r5,124
1104cbac:	003f8e06 	br	1104c9e8 <_free_r+0x128>
1104cbb0:	00c03f84 	movi	r3,254
1104cbb4:	01401f84 	movi	r5,126
1104cbb8:	003f8b06 	br	1104c9e8 <_free_r+0x128>
1104cbbc:	10c00054 	ori	r3,r2,1
1104cbc0:	30c00115 	stw	r3,4(r6)
1104cbc4:	308d883a 	add	r6,r6,r2
1104cbc8:	30800015 	stw	r2,0(r6)
1104cbcc:	003f7806 	br	1104c9b0 <_free_r+0xf0>

1104cbd0 <__sfvwrite_r>:
1104cbd0:	30800217 	ldw	r2,8(r6)
1104cbd4:	10006726 	beq	r2,zero,1104cd74 <__sfvwrite_r+0x1a4>
1104cbd8:	28c0030b 	ldhu	r3,12(r5)
1104cbdc:	defff404 	addi	sp,sp,-48
1104cbe0:	dd400715 	stw	r21,28(sp)
1104cbe4:	dd000615 	stw	r20,24(sp)
1104cbe8:	dc000215 	stw	r16,8(sp)
1104cbec:	dfc00b15 	stw	ra,44(sp)
1104cbf0:	df000a15 	stw	fp,40(sp)
1104cbf4:	ddc00915 	stw	r23,36(sp)
1104cbf8:	dd800815 	stw	r22,32(sp)
1104cbfc:	dcc00515 	stw	r19,20(sp)
1104cc00:	dc800415 	stw	r18,16(sp)
1104cc04:	dc400315 	stw	r17,12(sp)
1104cc08:	1880020c 	andi	r2,r3,8
1104cc0c:	2821883a 	mov	r16,r5
1104cc10:	202b883a 	mov	r21,r4
1104cc14:	3029883a 	mov	r20,r6
1104cc18:	10002726 	beq	r2,zero,1104ccb8 <__sfvwrite_r+0xe8>
1104cc1c:	28800417 	ldw	r2,16(r5)
1104cc20:	10002526 	beq	r2,zero,1104ccb8 <__sfvwrite_r+0xe8>
1104cc24:	1880008c 	andi	r2,r3,2
1104cc28:	a4400017 	ldw	r17,0(r20)
1104cc2c:	10002a26 	beq	r2,zero,1104ccd8 <__sfvwrite_r+0x108>
1104cc30:	05a00034 	movhi	r22,32768
1104cc34:	0027883a 	mov	r19,zero
1104cc38:	0025883a 	mov	r18,zero
1104cc3c:	b5bf0004 	addi	r22,r22,-1024
1104cc40:	980d883a 	mov	r6,r19
1104cc44:	a809883a 	mov	r4,r21
1104cc48:	90004626 	beq	r18,zero,1104cd64 <__sfvwrite_r+0x194>
1104cc4c:	900f883a 	mov	r7,r18
1104cc50:	b480022e 	bgeu	r22,r18,1104cc5c <__sfvwrite_r+0x8c>
1104cc54:	01e00034 	movhi	r7,32768
1104cc58:	39ff0004 	addi	r7,r7,-1024
1104cc5c:	80800917 	ldw	r2,36(r16)
1104cc60:	81400717 	ldw	r5,28(r16)
1104cc64:	103ee83a 	callr	r2
1104cc68:	0080570e 	bge	zero,r2,1104cdc8 <__sfvwrite_r+0x1f8>
1104cc6c:	a0c00217 	ldw	r3,8(r20)
1104cc70:	98a7883a 	add	r19,r19,r2
1104cc74:	90a5c83a 	sub	r18,r18,r2
1104cc78:	1885c83a 	sub	r2,r3,r2
1104cc7c:	a0800215 	stw	r2,8(r20)
1104cc80:	103fef1e 	bne	r2,zero,1104cc40 <__sfvwrite_r+0x70>
1104cc84:	0005883a 	mov	r2,zero
1104cc88:	dfc00b17 	ldw	ra,44(sp)
1104cc8c:	df000a17 	ldw	fp,40(sp)
1104cc90:	ddc00917 	ldw	r23,36(sp)
1104cc94:	dd800817 	ldw	r22,32(sp)
1104cc98:	dd400717 	ldw	r21,28(sp)
1104cc9c:	dd000617 	ldw	r20,24(sp)
1104cca0:	dcc00517 	ldw	r19,20(sp)
1104cca4:	dc800417 	ldw	r18,16(sp)
1104cca8:	dc400317 	ldw	r17,12(sp)
1104ccac:	dc000217 	ldw	r16,8(sp)
1104ccb0:	dec00c04 	addi	sp,sp,48
1104ccb4:	f800283a 	ret
1104ccb8:	800b883a 	mov	r5,r16
1104ccbc:	a809883a 	mov	r4,r21
1104ccc0:	104a7780 	call	1104a778 <__swsetup_r>
1104ccc4:	1000eb1e 	bne	r2,zero,1104d074 <__sfvwrite_r+0x4a4>
1104ccc8:	80c0030b 	ldhu	r3,12(r16)
1104cccc:	a4400017 	ldw	r17,0(r20)
1104ccd0:	1880008c 	andi	r2,r3,2
1104ccd4:	103fd61e 	bne	r2,zero,1104cc30 <__sfvwrite_r+0x60>
1104ccd8:	1880004c 	andi	r2,r3,1
1104ccdc:	10003f1e 	bne	r2,zero,1104cddc <__sfvwrite_r+0x20c>
1104cce0:	0039883a 	mov	fp,zero
1104cce4:	0025883a 	mov	r18,zero
1104cce8:	90001a26 	beq	r18,zero,1104cd54 <__sfvwrite_r+0x184>
1104ccec:	1880800c 	andi	r2,r3,512
1104ccf0:	84c00217 	ldw	r19,8(r16)
1104ccf4:	10002126 	beq	r2,zero,1104cd7c <__sfvwrite_r+0x1ac>
1104ccf8:	982f883a 	mov	r23,r19
1104ccfc:	94c09336 	bltu	r18,r19,1104cf4c <__sfvwrite_r+0x37c>
1104cd00:	1881200c 	andi	r2,r3,1152
1104cd04:	10009e1e 	bne	r2,zero,1104cf80 <__sfvwrite_r+0x3b0>
1104cd08:	81000017 	ldw	r4,0(r16)
1104cd0c:	b80d883a 	mov	r6,r23
1104cd10:	e00b883a 	mov	r5,fp
1104cd14:	104dee40 	call	1104dee4 <memmove>
1104cd18:	80c00217 	ldw	r3,8(r16)
1104cd1c:	81000017 	ldw	r4,0(r16)
1104cd20:	9005883a 	mov	r2,r18
1104cd24:	1ce7c83a 	sub	r19,r3,r19
1104cd28:	25cf883a 	add	r7,r4,r23
1104cd2c:	84c00215 	stw	r19,8(r16)
1104cd30:	81c00015 	stw	r7,0(r16)
1104cd34:	a0c00217 	ldw	r3,8(r20)
1104cd38:	e0b9883a 	add	fp,fp,r2
1104cd3c:	90a5c83a 	sub	r18,r18,r2
1104cd40:	18a7c83a 	sub	r19,r3,r2
1104cd44:	a4c00215 	stw	r19,8(r20)
1104cd48:	983fce26 	beq	r19,zero,1104cc84 <__sfvwrite_r+0xb4>
1104cd4c:	80c0030b 	ldhu	r3,12(r16)
1104cd50:	903fe61e 	bne	r18,zero,1104ccec <__sfvwrite_r+0x11c>
1104cd54:	8f000017 	ldw	fp,0(r17)
1104cd58:	8c800117 	ldw	r18,4(r17)
1104cd5c:	8c400204 	addi	r17,r17,8
1104cd60:	003fe106 	br	1104cce8 <__sfvwrite_r+0x118>
1104cd64:	8cc00017 	ldw	r19,0(r17)
1104cd68:	8c800117 	ldw	r18,4(r17)
1104cd6c:	8c400204 	addi	r17,r17,8
1104cd70:	003fb306 	br	1104cc40 <__sfvwrite_r+0x70>
1104cd74:	0005883a 	mov	r2,zero
1104cd78:	f800283a 	ret
1104cd7c:	81000017 	ldw	r4,0(r16)
1104cd80:	80800417 	ldw	r2,16(r16)
1104cd84:	11005736 	bltu	r2,r4,1104cee4 <__sfvwrite_r+0x314>
1104cd88:	85c00517 	ldw	r23,20(r16)
1104cd8c:	95c05536 	bltu	r18,r23,1104cee4 <__sfvwrite_r+0x314>
1104cd90:	00a00034 	movhi	r2,32768
1104cd94:	10bfffc4 	addi	r2,r2,-1
1104cd98:	9009883a 	mov	r4,r18
1104cd9c:	1480012e 	bgeu	r2,r18,1104cda4 <__sfvwrite_r+0x1d4>
1104cda0:	1009883a 	mov	r4,r2
1104cda4:	b80b883a 	mov	r5,r23
1104cda8:	10441780 	call	11044178 <__divsi3>
1104cdac:	15cf383a 	mul	r7,r2,r23
1104cdb0:	81400717 	ldw	r5,28(r16)
1104cdb4:	80800917 	ldw	r2,36(r16)
1104cdb8:	e00d883a 	mov	r6,fp
1104cdbc:	a809883a 	mov	r4,r21
1104cdc0:	103ee83a 	callr	r2
1104cdc4:	00bfdb16 	blt	zero,r2,1104cd34 <__sfvwrite_r+0x164>
1104cdc8:	8080030b 	ldhu	r2,12(r16)
1104cdcc:	10801014 	ori	r2,r2,64
1104cdd0:	8080030d 	sth	r2,12(r16)
1104cdd4:	00bfffc4 	movi	r2,-1
1104cdd8:	003fab06 	br	1104cc88 <__sfvwrite_r+0xb8>
1104cddc:	0027883a 	mov	r19,zero
1104cde0:	0011883a 	mov	r8,zero
1104cde4:	0039883a 	mov	fp,zero
1104cde8:	0025883a 	mov	r18,zero
1104cdec:	90001f26 	beq	r18,zero,1104ce6c <__sfvwrite_r+0x29c>
1104cdf0:	40005a26 	beq	r8,zero,1104cf5c <__sfvwrite_r+0x38c>
1104cdf4:	982d883a 	mov	r22,r19
1104cdf8:	94c0012e 	bgeu	r18,r19,1104ce00 <__sfvwrite_r+0x230>
1104cdfc:	902d883a 	mov	r22,r18
1104ce00:	81000017 	ldw	r4,0(r16)
1104ce04:	80800417 	ldw	r2,16(r16)
1104ce08:	b02f883a 	mov	r23,r22
1104ce0c:	81c00517 	ldw	r7,20(r16)
1104ce10:	1100032e 	bgeu	r2,r4,1104ce20 <__sfvwrite_r+0x250>
1104ce14:	80c00217 	ldw	r3,8(r16)
1104ce18:	38c7883a 	add	r3,r7,r3
1104ce1c:	1d801816 	blt	r3,r22,1104ce80 <__sfvwrite_r+0x2b0>
1104ce20:	b1c03e16 	blt	r22,r7,1104cf1c <__sfvwrite_r+0x34c>
1104ce24:	80800917 	ldw	r2,36(r16)
1104ce28:	81400717 	ldw	r5,28(r16)
1104ce2c:	e00d883a 	mov	r6,fp
1104ce30:	da000115 	stw	r8,4(sp)
1104ce34:	a809883a 	mov	r4,r21
1104ce38:	103ee83a 	callr	r2
1104ce3c:	102f883a 	mov	r23,r2
1104ce40:	da000117 	ldw	r8,4(sp)
1104ce44:	00bfe00e 	bge	zero,r2,1104cdc8 <__sfvwrite_r+0x1f8>
1104ce48:	9de7c83a 	sub	r19,r19,r23
1104ce4c:	98001f26 	beq	r19,zero,1104cecc <__sfvwrite_r+0x2fc>
1104ce50:	a0800217 	ldw	r2,8(r20)
1104ce54:	e5f9883a 	add	fp,fp,r23
1104ce58:	95e5c83a 	sub	r18,r18,r23
1104ce5c:	15efc83a 	sub	r23,r2,r23
1104ce60:	a5c00215 	stw	r23,8(r20)
1104ce64:	b83f8726 	beq	r23,zero,1104cc84 <__sfvwrite_r+0xb4>
1104ce68:	903fe11e 	bne	r18,zero,1104cdf0 <__sfvwrite_r+0x220>
1104ce6c:	8f000017 	ldw	fp,0(r17)
1104ce70:	8c800117 	ldw	r18,4(r17)
1104ce74:	0011883a 	mov	r8,zero
1104ce78:	8c400204 	addi	r17,r17,8
1104ce7c:	003fdb06 	br	1104cdec <__sfvwrite_r+0x21c>
1104ce80:	180d883a 	mov	r6,r3
1104ce84:	e00b883a 	mov	r5,fp
1104ce88:	da000115 	stw	r8,4(sp)
1104ce8c:	d8c00015 	stw	r3,0(sp)
1104ce90:	104dee40 	call	1104dee4 <memmove>
1104ce94:	d8c00017 	ldw	r3,0(sp)
1104ce98:	80800017 	ldw	r2,0(r16)
1104ce9c:	800b883a 	mov	r5,r16
1104cea0:	a809883a 	mov	r4,r21
1104cea4:	10c5883a 	add	r2,r2,r3
1104cea8:	80800015 	stw	r2,0(r16)
1104ceac:	d8c00015 	stw	r3,0(sp)
1104ceb0:	104c3700 	call	1104c370 <_fflush_r>
1104ceb4:	d8c00017 	ldw	r3,0(sp)
1104ceb8:	da000117 	ldw	r8,4(sp)
1104cebc:	103fc21e 	bne	r2,zero,1104cdc8 <__sfvwrite_r+0x1f8>
1104cec0:	182f883a 	mov	r23,r3
1104cec4:	9de7c83a 	sub	r19,r19,r23
1104cec8:	983fe11e 	bne	r19,zero,1104ce50 <__sfvwrite_r+0x280>
1104cecc:	800b883a 	mov	r5,r16
1104ced0:	a809883a 	mov	r4,r21
1104ced4:	104c3700 	call	1104c370 <_fflush_r>
1104ced8:	103fbb1e 	bne	r2,zero,1104cdc8 <__sfvwrite_r+0x1f8>
1104cedc:	0011883a 	mov	r8,zero
1104cee0:	003fdb06 	br	1104ce50 <__sfvwrite_r+0x280>
1104cee4:	94c0012e 	bgeu	r18,r19,1104ceec <__sfvwrite_r+0x31c>
1104cee8:	9027883a 	mov	r19,r18
1104ceec:	980d883a 	mov	r6,r19
1104cef0:	e00b883a 	mov	r5,fp
1104cef4:	104dee40 	call	1104dee4 <memmove>
1104cef8:	80800217 	ldw	r2,8(r16)
1104cefc:	80c00017 	ldw	r3,0(r16)
1104cf00:	14c5c83a 	sub	r2,r2,r19
1104cf04:	1cc7883a 	add	r3,r3,r19
1104cf08:	80800215 	stw	r2,8(r16)
1104cf0c:	80c00015 	stw	r3,0(r16)
1104cf10:	10004326 	beq	r2,zero,1104d020 <__sfvwrite_r+0x450>
1104cf14:	9805883a 	mov	r2,r19
1104cf18:	003f8606 	br	1104cd34 <__sfvwrite_r+0x164>
1104cf1c:	b00d883a 	mov	r6,r22
1104cf20:	e00b883a 	mov	r5,fp
1104cf24:	da000115 	stw	r8,4(sp)
1104cf28:	104dee40 	call	1104dee4 <memmove>
1104cf2c:	80800217 	ldw	r2,8(r16)
1104cf30:	80c00017 	ldw	r3,0(r16)
1104cf34:	da000117 	ldw	r8,4(sp)
1104cf38:	1585c83a 	sub	r2,r2,r22
1104cf3c:	1dad883a 	add	r22,r3,r22
1104cf40:	80800215 	stw	r2,8(r16)
1104cf44:	85800015 	stw	r22,0(r16)
1104cf48:	003fbf06 	br	1104ce48 <__sfvwrite_r+0x278>
1104cf4c:	81000017 	ldw	r4,0(r16)
1104cf50:	9027883a 	mov	r19,r18
1104cf54:	902f883a 	mov	r23,r18
1104cf58:	003f6c06 	br	1104cd0c <__sfvwrite_r+0x13c>
1104cf5c:	900d883a 	mov	r6,r18
1104cf60:	01400284 	movi	r5,10
1104cf64:	e009883a 	mov	r4,fp
1104cf68:	104dcb80 	call	1104dcb8 <memchr>
1104cf6c:	10003e26 	beq	r2,zero,1104d068 <__sfvwrite_r+0x498>
1104cf70:	10800044 	addi	r2,r2,1
1104cf74:	1727c83a 	sub	r19,r2,fp
1104cf78:	02000044 	movi	r8,1
1104cf7c:	003f9d06 	br	1104cdf4 <__sfvwrite_r+0x224>
1104cf80:	80800517 	ldw	r2,20(r16)
1104cf84:	81400417 	ldw	r5,16(r16)
1104cf88:	81c00017 	ldw	r7,0(r16)
1104cf8c:	10a7883a 	add	r19,r2,r2
1104cf90:	9885883a 	add	r2,r19,r2
1104cf94:	1026d7fa 	srli	r19,r2,31
1104cf98:	396dc83a 	sub	r22,r7,r5
1104cf9c:	b1000044 	addi	r4,r22,1
1104cfa0:	9885883a 	add	r2,r19,r2
1104cfa4:	1027d07a 	srai	r19,r2,1
1104cfa8:	2485883a 	add	r2,r4,r18
1104cfac:	980d883a 	mov	r6,r19
1104cfb0:	9880022e 	bgeu	r19,r2,1104cfbc <__sfvwrite_r+0x3ec>
1104cfb4:	1027883a 	mov	r19,r2
1104cfb8:	100d883a 	mov	r6,r2
1104cfbc:	18c1000c 	andi	r3,r3,1024
1104cfc0:	18001c26 	beq	r3,zero,1104d034 <__sfvwrite_r+0x464>
1104cfc4:	300b883a 	mov	r5,r6
1104cfc8:	a809883a 	mov	r4,r21
1104cfcc:	104d4ac0 	call	1104d4ac <_malloc_r>
1104cfd0:	102f883a 	mov	r23,r2
1104cfd4:	10002926 	beq	r2,zero,1104d07c <__sfvwrite_r+0x4ac>
1104cfd8:	81400417 	ldw	r5,16(r16)
1104cfdc:	b00d883a 	mov	r6,r22
1104cfe0:	1009883a 	mov	r4,r2
1104cfe4:	104dd9c0 	call	1104dd9c <memcpy>
1104cfe8:	8080030b 	ldhu	r2,12(r16)
1104cfec:	00fedfc4 	movi	r3,-1153
1104cff0:	10c4703a 	and	r2,r2,r3
1104cff4:	10802014 	ori	r2,r2,128
1104cff8:	8080030d 	sth	r2,12(r16)
1104cffc:	bd89883a 	add	r4,r23,r22
1104d000:	9d8fc83a 	sub	r7,r19,r22
1104d004:	85c00415 	stw	r23,16(r16)
1104d008:	84c00515 	stw	r19,20(r16)
1104d00c:	81000015 	stw	r4,0(r16)
1104d010:	9027883a 	mov	r19,r18
1104d014:	81c00215 	stw	r7,8(r16)
1104d018:	902f883a 	mov	r23,r18
1104d01c:	003f3b06 	br	1104cd0c <__sfvwrite_r+0x13c>
1104d020:	800b883a 	mov	r5,r16
1104d024:	a809883a 	mov	r4,r21
1104d028:	104c3700 	call	1104c370 <_fflush_r>
1104d02c:	103fb926 	beq	r2,zero,1104cf14 <__sfvwrite_r+0x344>
1104d030:	003f6506 	br	1104cdc8 <__sfvwrite_r+0x1f8>
1104d034:	a809883a 	mov	r4,r21
1104d038:	104f1640 	call	1104f164 <_realloc_r>
1104d03c:	102f883a 	mov	r23,r2
1104d040:	103fee1e 	bne	r2,zero,1104cffc <__sfvwrite_r+0x42c>
1104d044:	81400417 	ldw	r5,16(r16)
1104d048:	a809883a 	mov	r4,r21
1104d04c:	104c8c00 	call	1104c8c0 <_free_r>
1104d050:	8080030b 	ldhu	r2,12(r16)
1104d054:	00ffdfc4 	movi	r3,-129
1104d058:	1884703a 	and	r2,r3,r2
1104d05c:	00c00304 	movi	r3,12
1104d060:	a8c00015 	stw	r3,0(r21)
1104d064:	003f5906 	br	1104cdcc <__sfvwrite_r+0x1fc>
1104d068:	94c00044 	addi	r19,r18,1
1104d06c:	02000044 	movi	r8,1
1104d070:	003f6006 	br	1104cdf4 <__sfvwrite_r+0x224>
1104d074:	00bfffc4 	movi	r2,-1
1104d078:	003f0306 	br	1104cc88 <__sfvwrite_r+0xb8>
1104d07c:	00800304 	movi	r2,12
1104d080:	a8800015 	stw	r2,0(r21)
1104d084:	8080030b 	ldhu	r2,12(r16)
1104d088:	003f5006 	br	1104cdcc <__sfvwrite_r+0x1fc>

1104d08c <_fwalk>:
1104d08c:	defff704 	addi	sp,sp,-36
1104d090:	dd000415 	stw	r20,16(sp)
1104d094:	dfc00815 	stw	ra,32(sp)
1104d098:	ddc00715 	stw	r23,28(sp)
1104d09c:	dd800615 	stw	r22,24(sp)
1104d0a0:	dd400515 	stw	r21,20(sp)
1104d0a4:	dcc00315 	stw	r19,12(sp)
1104d0a8:	dc800215 	stw	r18,8(sp)
1104d0ac:	dc400115 	stw	r17,4(sp)
1104d0b0:	dc000015 	stw	r16,0(sp)
1104d0b4:	2500b804 	addi	r20,r4,736
1104d0b8:	a0002326 	beq	r20,zero,1104d148 <_fwalk+0xbc>
1104d0bc:	282b883a 	mov	r21,r5
1104d0c0:	002f883a 	mov	r23,zero
1104d0c4:	05800044 	movi	r22,1
1104d0c8:	04ffffc4 	movi	r19,-1
1104d0cc:	a4400117 	ldw	r17,4(r20)
1104d0d0:	a4800217 	ldw	r18,8(r20)
1104d0d4:	8c7fffc4 	addi	r17,r17,-1
1104d0d8:	88000d16 	blt	r17,zero,1104d110 <_fwalk+0x84>
1104d0dc:	94000304 	addi	r16,r18,12
1104d0e0:	94800384 	addi	r18,r18,14
1104d0e4:	8080000b 	ldhu	r2,0(r16)
1104d0e8:	8c7fffc4 	addi	r17,r17,-1
1104d0ec:	813ffd04 	addi	r4,r16,-12
1104d0f0:	b080042e 	bgeu	r22,r2,1104d104 <_fwalk+0x78>
1104d0f4:	9080000f 	ldh	r2,0(r18)
1104d0f8:	14c00226 	beq	r2,r19,1104d104 <_fwalk+0x78>
1104d0fc:	a83ee83a 	callr	r21
1104d100:	b8aeb03a 	or	r23,r23,r2
1104d104:	84001a04 	addi	r16,r16,104
1104d108:	94801a04 	addi	r18,r18,104
1104d10c:	8cfff51e 	bne	r17,r19,1104d0e4 <_fwalk+0x58>
1104d110:	a5000017 	ldw	r20,0(r20)
1104d114:	a03fed1e 	bne	r20,zero,1104d0cc <_fwalk+0x40>
1104d118:	b805883a 	mov	r2,r23
1104d11c:	dfc00817 	ldw	ra,32(sp)
1104d120:	ddc00717 	ldw	r23,28(sp)
1104d124:	dd800617 	ldw	r22,24(sp)
1104d128:	dd400517 	ldw	r21,20(sp)
1104d12c:	dd000417 	ldw	r20,16(sp)
1104d130:	dcc00317 	ldw	r19,12(sp)
1104d134:	dc800217 	ldw	r18,8(sp)
1104d138:	dc400117 	ldw	r17,4(sp)
1104d13c:	dc000017 	ldw	r16,0(sp)
1104d140:	dec00904 	addi	sp,sp,36
1104d144:	f800283a 	ret
1104d148:	002f883a 	mov	r23,zero
1104d14c:	003ff206 	br	1104d118 <_fwalk+0x8c>

1104d150 <_fwalk_reent>:
1104d150:	defff704 	addi	sp,sp,-36
1104d154:	dd000415 	stw	r20,16(sp)
1104d158:	dfc00815 	stw	ra,32(sp)
1104d15c:	ddc00715 	stw	r23,28(sp)
1104d160:	dd800615 	stw	r22,24(sp)
1104d164:	dd400515 	stw	r21,20(sp)
1104d168:	dcc00315 	stw	r19,12(sp)
1104d16c:	dc800215 	stw	r18,8(sp)
1104d170:	dc400115 	stw	r17,4(sp)
1104d174:	dc000015 	stw	r16,0(sp)
1104d178:	2500b804 	addi	r20,r4,736
1104d17c:	a0002326 	beq	r20,zero,1104d20c <_fwalk_reent+0xbc>
1104d180:	282b883a 	mov	r21,r5
1104d184:	2027883a 	mov	r19,r4
1104d188:	002f883a 	mov	r23,zero
1104d18c:	05800044 	movi	r22,1
1104d190:	04bfffc4 	movi	r18,-1
1104d194:	a4400117 	ldw	r17,4(r20)
1104d198:	a4000217 	ldw	r16,8(r20)
1104d19c:	8c7fffc4 	addi	r17,r17,-1
1104d1a0:	88000c16 	blt	r17,zero,1104d1d4 <_fwalk_reent+0x84>
1104d1a4:	84000304 	addi	r16,r16,12
1104d1a8:	8080000b 	ldhu	r2,0(r16)
1104d1ac:	8c7fffc4 	addi	r17,r17,-1
1104d1b0:	817ffd04 	addi	r5,r16,-12
1104d1b4:	b080052e 	bgeu	r22,r2,1104d1cc <_fwalk_reent+0x7c>
1104d1b8:	8080008f 	ldh	r2,2(r16)
1104d1bc:	9809883a 	mov	r4,r19
1104d1c0:	14800226 	beq	r2,r18,1104d1cc <_fwalk_reent+0x7c>
1104d1c4:	a83ee83a 	callr	r21
1104d1c8:	b8aeb03a 	or	r23,r23,r2
1104d1cc:	84001a04 	addi	r16,r16,104
1104d1d0:	8cbff51e 	bne	r17,r18,1104d1a8 <_fwalk_reent+0x58>
1104d1d4:	a5000017 	ldw	r20,0(r20)
1104d1d8:	a03fee1e 	bne	r20,zero,1104d194 <_fwalk_reent+0x44>
1104d1dc:	b805883a 	mov	r2,r23
1104d1e0:	dfc00817 	ldw	ra,32(sp)
1104d1e4:	ddc00717 	ldw	r23,28(sp)
1104d1e8:	dd800617 	ldw	r22,24(sp)
1104d1ec:	dd400517 	ldw	r21,20(sp)
1104d1f0:	dd000417 	ldw	r20,16(sp)
1104d1f4:	dcc00317 	ldw	r19,12(sp)
1104d1f8:	dc800217 	ldw	r18,8(sp)
1104d1fc:	dc400117 	ldw	r17,4(sp)
1104d200:	dc000017 	ldw	r16,0(sp)
1104d204:	dec00904 	addi	sp,sp,36
1104d208:	f800283a 	ret
1104d20c:	002f883a 	mov	r23,zero
1104d210:	003ff206 	br	1104d1dc <_fwalk_reent+0x8c>

1104d214 <_setlocale_r>:
1104d214:	30001b26 	beq	r6,zero,1104d284 <_setlocale_r+0x70>
1104d218:	01444174 	movhi	r5,4357
1104d21c:	defffe04 	addi	sp,sp,-8
1104d220:	295c4404 	addi	r5,r5,28944
1104d224:	3009883a 	mov	r4,r6
1104d228:	dc000015 	stw	r16,0(sp)
1104d22c:	dfc00115 	stw	ra,4(sp)
1104d230:	3021883a 	mov	r16,r6
1104d234:	104f8cc0 	call	1104f8cc <strcmp>
1104d238:	1000061e 	bne	r2,zero,1104d254 <_setlocale_r+0x40>
1104d23c:	00844174 	movhi	r2,4357
1104d240:	109c4304 	addi	r2,r2,28940
1104d244:	dfc00117 	ldw	ra,4(sp)
1104d248:	dc000017 	ldw	r16,0(sp)
1104d24c:	dec00204 	addi	sp,sp,8
1104d250:	f800283a 	ret
1104d254:	01444174 	movhi	r5,4357
1104d258:	295c4304 	addi	r5,r5,28940
1104d25c:	8009883a 	mov	r4,r16
1104d260:	104f8cc0 	call	1104f8cc <strcmp>
1104d264:	103ff526 	beq	r2,zero,1104d23c <_setlocale_r+0x28>
1104d268:	01444174 	movhi	r5,4357
1104d26c:	295c2604 	addi	r5,r5,28824
1104d270:	8009883a 	mov	r4,r16
1104d274:	104f8cc0 	call	1104f8cc <strcmp>
1104d278:	103ff026 	beq	r2,zero,1104d23c <_setlocale_r+0x28>
1104d27c:	0005883a 	mov	r2,zero
1104d280:	003ff006 	br	1104d244 <_setlocale_r+0x30>
1104d284:	00844174 	movhi	r2,4357
1104d288:	109c4304 	addi	r2,r2,28940
1104d28c:	f800283a 	ret

1104d290 <__locale_charset>:
1104d290:	00844174 	movhi	r2,4357
1104d294:	109dbc04 	addi	r2,r2,30448
1104d298:	f800283a 	ret

1104d29c <__locale_mb_cur_max>:
1104d29c:	008441b4 	movhi	r2,4358
1104d2a0:	10a35804 	addi	r2,r2,-29344
1104d2a4:	10800017 	ldw	r2,0(r2)
1104d2a8:	f800283a 	ret

1104d2ac <__locale_msgcharset>:
1104d2ac:	00844174 	movhi	r2,4357
1104d2b0:	109db404 	addi	r2,r2,30416
1104d2b4:	f800283a 	ret

1104d2b8 <__locale_cjk_lang>:
1104d2b8:	0005883a 	mov	r2,zero
1104d2bc:	f800283a 	ret

1104d2c0 <_localeconv_r>:
1104d2c0:	00844174 	movhi	r2,4357
1104d2c4:	109dc404 	addi	r2,r2,30480
1104d2c8:	f800283a 	ret

1104d2cc <setlocale>:
1104d2cc:	008441b4 	movhi	r2,4358
1104d2d0:	10a35704 	addi	r2,r2,-29348
1104d2d4:	280d883a 	mov	r6,r5
1104d2d8:	200b883a 	mov	r5,r4
1104d2dc:	11000017 	ldw	r4,0(r2)
1104d2e0:	104d2141 	jmpi	1104d214 <_setlocale_r>

1104d2e4 <localeconv>:
1104d2e4:	00844174 	movhi	r2,4357
1104d2e8:	109dc404 	addi	r2,r2,30480
1104d2ec:	f800283a 	ret

1104d2f0 <__smakebuf_r>:
1104d2f0:	2880030b 	ldhu	r2,12(r5)
1104d2f4:	10c0008c 	andi	r3,r2,2
1104d2f8:	1800411e 	bne	r3,zero,1104d400 <__smakebuf_r+0x110>
1104d2fc:	deffec04 	addi	sp,sp,-80
1104d300:	dc000f15 	stw	r16,60(sp)
1104d304:	2821883a 	mov	r16,r5
1104d308:	2940038f 	ldh	r5,14(r5)
1104d30c:	dc401015 	stw	r17,64(sp)
1104d310:	dfc01315 	stw	ra,76(sp)
1104d314:	dcc01215 	stw	r19,72(sp)
1104d318:	dc801115 	stw	r18,68(sp)
1104d31c:	2023883a 	mov	r17,r4
1104d320:	28001c16 	blt	r5,zero,1104d394 <__smakebuf_r+0xa4>
1104d324:	d80d883a 	mov	r6,sp
1104d328:	10528800 	call	11052880 <_fstat_r>
1104d32c:	10001816 	blt	r2,zero,1104d390 <__smakebuf_r+0xa0>
1104d330:	d8800117 	ldw	r2,4(sp)
1104d334:	00e00014 	movui	r3,32768
1104d338:	10bc000c 	andi	r2,r2,61440
1104d33c:	14c80020 	cmpeqi	r19,r2,8192
1104d340:	10c03726 	beq	r2,r3,1104d420 <__smakebuf_r+0x130>
1104d344:	80c0030b 	ldhu	r3,12(r16)
1104d348:	18c20014 	ori	r3,r3,2048
1104d34c:	80c0030d 	sth	r3,12(r16)
1104d350:	00c80004 	movi	r3,8192
1104d354:	10c0521e 	bne	r2,r3,1104d4a0 <__smakebuf_r+0x1b0>
1104d358:	8140038f 	ldh	r5,14(r16)
1104d35c:	8809883a 	mov	r4,r17
1104d360:	10528dc0 	call	110528dc <_isatty_r>
1104d364:	10004c26 	beq	r2,zero,1104d498 <__smakebuf_r+0x1a8>
1104d368:	8080030b 	ldhu	r2,12(r16)
1104d36c:	80c010c4 	addi	r3,r16,67
1104d370:	80c00015 	stw	r3,0(r16)
1104d374:	10800054 	ori	r2,r2,1
1104d378:	8080030d 	sth	r2,12(r16)
1104d37c:	00800044 	movi	r2,1
1104d380:	80c00415 	stw	r3,16(r16)
1104d384:	80800515 	stw	r2,20(r16)
1104d388:	04810004 	movi	r18,1024
1104d38c:	00000706 	br	1104d3ac <__smakebuf_r+0xbc>
1104d390:	8080030b 	ldhu	r2,12(r16)
1104d394:	10c0200c 	andi	r3,r2,128
1104d398:	18001f1e 	bne	r3,zero,1104d418 <__smakebuf_r+0x128>
1104d39c:	04810004 	movi	r18,1024
1104d3a0:	10820014 	ori	r2,r2,2048
1104d3a4:	8080030d 	sth	r2,12(r16)
1104d3a8:	0027883a 	mov	r19,zero
1104d3ac:	900b883a 	mov	r5,r18
1104d3b0:	8809883a 	mov	r4,r17
1104d3b4:	104d4ac0 	call	1104d4ac <_malloc_r>
1104d3b8:	10002c26 	beq	r2,zero,1104d46c <__smakebuf_r+0x17c>
1104d3bc:	80c0030b 	ldhu	r3,12(r16)
1104d3c0:	01044174 	movhi	r4,4357
1104d3c4:	21310104 	addi	r4,r4,-15356
1104d3c8:	89000f15 	stw	r4,60(r17)
1104d3cc:	18c02014 	ori	r3,r3,128
1104d3d0:	80c0030d 	sth	r3,12(r16)
1104d3d4:	80800015 	stw	r2,0(r16)
1104d3d8:	80800415 	stw	r2,16(r16)
1104d3dc:	84800515 	stw	r18,20(r16)
1104d3e0:	98001a1e 	bne	r19,zero,1104d44c <__smakebuf_r+0x15c>
1104d3e4:	dfc01317 	ldw	ra,76(sp)
1104d3e8:	dcc01217 	ldw	r19,72(sp)
1104d3ec:	dc801117 	ldw	r18,68(sp)
1104d3f0:	dc401017 	ldw	r17,64(sp)
1104d3f4:	dc000f17 	ldw	r16,60(sp)
1104d3f8:	dec01404 	addi	sp,sp,80
1104d3fc:	f800283a 	ret
1104d400:	288010c4 	addi	r2,r5,67
1104d404:	28800015 	stw	r2,0(r5)
1104d408:	28800415 	stw	r2,16(r5)
1104d40c:	00800044 	movi	r2,1
1104d410:	28800515 	stw	r2,20(r5)
1104d414:	f800283a 	ret
1104d418:	04801004 	movi	r18,64
1104d41c:	003fe006 	br	1104d3a0 <__smakebuf_r+0xb0>
1104d420:	81000a17 	ldw	r4,40(r16)
1104d424:	00c44174 	movhi	r3,4357
1104d428:	18fe1a04 	addi	r3,r3,-1944
1104d42c:	20ffc51e 	bne	r4,r3,1104d344 <__smakebuf_r+0x54>
1104d430:	8080030b 	ldhu	r2,12(r16)
1104d434:	04810004 	movi	r18,1024
1104d438:	84801315 	stw	r18,76(r16)
1104d43c:	1484b03a 	or	r2,r2,r18
1104d440:	8080030d 	sth	r2,12(r16)
1104d444:	0027883a 	mov	r19,zero
1104d448:	003fd806 	br	1104d3ac <__smakebuf_r+0xbc>
1104d44c:	8140038f 	ldh	r5,14(r16)
1104d450:	8809883a 	mov	r4,r17
1104d454:	10528dc0 	call	110528dc <_isatty_r>
1104d458:	103fe226 	beq	r2,zero,1104d3e4 <__smakebuf_r+0xf4>
1104d45c:	8080030b 	ldhu	r2,12(r16)
1104d460:	10800054 	ori	r2,r2,1
1104d464:	8080030d 	sth	r2,12(r16)
1104d468:	003fde06 	br	1104d3e4 <__smakebuf_r+0xf4>
1104d46c:	8080030b 	ldhu	r2,12(r16)
1104d470:	10c0800c 	andi	r3,r2,512
1104d474:	183fdb1e 	bne	r3,zero,1104d3e4 <__smakebuf_r+0xf4>
1104d478:	10800094 	ori	r2,r2,2
1104d47c:	80c010c4 	addi	r3,r16,67
1104d480:	8080030d 	sth	r2,12(r16)
1104d484:	00800044 	movi	r2,1
1104d488:	80c00015 	stw	r3,0(r16)
1104d48c:	80c00415 	stw	r3,16(r16)
1104d490:	80800515 	stw	r2,20(r16)
1104d494:	003fd306 	br	1104d3e4 <__smakebuf_r+0xf4>
1104d498:	04810004 	movi	r18,1024
1104d49c:	003fc306 	br	1104d3ac <__smakebuf_r+0xbc>
1104d4a0:	0027883a 	mov	r19,zero
1104d4a4:	04810004 	movi	r18,1024
1104d4a8:	003fc006 	br	1104d3ac <__smakebuf_r+0xbc>

1104d4ac <_malloc_r>:
1104d4ac:	defff504 	addi	sp,sp,-44
1104d4b0:	dc800315 	stw	r18,12(sp)
1104d4b4:	dfc00a15 	stw	ra,40(sp)
1104d4b8:	df000915 	stw	fp,36(sp)
1104d4bc:	ddc00815 	stw	r23,32(sp)
1104d4c0:	dd800715 	stw	r22,28(sp)
1104d4c4:	dd400615 	stw	r21,24(sp)
1104d4c8:	dd000515 	stw	r20,20(sp)
1104d4cc:	dcc00415 	stw	r19,16(sp)
1104d4d0:	dc400215 	stw	r17,8(sp)
1104d4d4:	dc000115 	stw	r16,4(sp)
1104d4d8:	288002c4 	addi	r2,r5,11
1104d4dc:	00c00584 	movi	r3,22
1104d4e0:	2025883a 	mov	r18,r4
1104d4e4:	18807f2e 	bgeu	r3,r2,1104d6e4 <_malloc_r+0x238>
1104d4e8:	047ffe04 	movi	r17,-8
1104d4ec:	1462703a 	and	r17,r2,r17
1104d4f0:	8800a316 	blt	r17,zero,1104d780 <_malloc_r+0x2d4>
1104d4f4:	8940a236 	bltu	r17,r5,1104d780 <_malloc_r+0x2d4>
1104d4f8:	10547e00 	call	110547e0 <__malloc_lock>
1104d4fc:	00807dc4 	movi	r2,503
1104d500:	1441e92e 	bgeu	r2,r17,1104dca8 <_malloc_r+0x7fc>
1104d504:	8804d27a 	srli	r2,r17,9
1104d508:	1000a126 	beq	r2,zero,1104d790 <_malloc_r+0x2e4>
1104d50c:	00c00104 	movi	r3,4
1104d510:	18811e36 	bltu	r3,r2,1104d98c <_malloc_r+0x4e0>
1104d514:	8804d1ba 	srli	r2,r17,6
1104d518:	12000e44 	addi	r8,r2,57
1104d51c:	11c00e04 	addi	r7,r2,56
1104d520:	4209883a 	add	r4,r8,r8
1104d524:	04c44174 	movhi	r19,4357
1104d528:	2109883a 	add	r4,r4,r4
1104d52c:	9cddd204 	addi	r19,r19,30536
1104d530:	2109883a 	add	r4,r4,r4
1104d534:	9909883a 	add	r4,r19,r4
1104d538:	24000117 	ldw	r16,4(r4)
1104d53c:	213ffe04 	addi	r4,r4,-8
1104d540:	24009726 	beq	r4,r16,1104d7a0 <_malloc_r+0x2f4>
1104d544:	80800117 	ldw	r2,4(r16)
1104d548:	01bfff04 	movi	r6,-4
1104d54c:	014003c4 	movi	r5,15
1104d550:	1184703a 	and	r2,r2,r6
1104d554:	1447c83a 	sub	r3,r2,r17
1104d558:	28c00716 	blt	r5,r3,1104d578 <_malloc_r+0xcc>
1104d55c:	1800920e 	bge	r3,zero,1104d7a8 <_malloc_r+0x2fc>
1104d560:	84000317 	ldw	r16,12(r16)
1104d564:	24008e26 	beq	r4,r16,1104d7a0 <_malloc_r+0x2f4>
1104d568:	80800117 	ldw	r2,4(r16)
1104d56c:	1184703a 	and	r2,r2,r6
1104d570:	1447c83a 	sub	r3,r2,r17
1104d574:	28fff90e 	bge	r5,r3,1104d55c <_malloc_r+0xb0>
1104d578:	3809883a 	mov	r4,r7
1104d57c:	01844174 	movhi	r6,4357
1104d580:	9c000417 	ldw	r16,16(r19)
1104d584:	319dd204 	addi	r6,r6,30536
1104d588:	32000204 	addi	r8,r6,8
1104d58c:	82013426 	beq	r16,r8,1104da60 <_malloc_r+0x5b4>
1104d590:	80c00117 	ldw	r3,4(r16)
1104d594:	00bfff04 	movi	r2,-4
1104d598:	188e703a 	and	r7,r3,r2
1104d59c:	3c45c83a 	sub	r2,r7,r17
1104d5a0:	00c003c4 	movi	r3,15
1104d5a4:	18811f16 	blt	r3,r2,1104da24 <_malloc_r+0x578>
1104d5a8:	32000515 	stw	r8,20(r6)
1104d5ac:	32000415 	stw	r8,16(r6)
1104d5b0:	10007f0e 	bge	r2,zero,1104d7b0 <_malloc_r+0x304>
1104d5b4:	00807fc4 	movi	r2,511
1104d5b8:	11c0fd36 	bltu	r2,r7,1104d9b0 <_malloc_r+0x504>
1104d5bc:	3806d0fa 	srli	r3,r7,3
1104d5c0:	01c00044 	movi	r7,1
1104d5c4:	30800117 	ldw	r2,4(r6)
1104d5c8:	19400044 	addi	r5,r3,1
1104d5cc:	294b883a 	add	r5,r5,r5
1104d5d0:	1807d0ba 	srai	r3,r3,2
1104d5d4:	294b883a 	add	r5,r5,r5
1104d5d8:	294b883a 	add	r5,r5,r5
1104d5dc:	298b883a 	add	r5,r5,r6
1104d5e0:	38c6983a 	sll	r3,r7,r3
1104d5e4:	29c00017 	ldw	r7,0(r5)
1104d5e8:	2a7ffe04 	addi	r9,r5,-8
1104d5ec:	1886b03a 	or	r3,r3,r2
1104d5f0:	82400315 	stw	r9,12(r16)
1104d5f4:	81c00215 	stw	r7,8(r16)
1104d5f8:	30c00115 	stw	r3,4(r6)
1104d5fc:	2c000015 	stw	r16,0(r5)
1104d600:	3c000315 	stw	r16,12(r7)
1104d604:	2005d0ba 	srai	r2,r4,2
1104d608:	01400044 	movi	r5,1
1104d60c:	288a983a 	sll	r5,r5,r2
1104d610:	19406f36 	bltu	r3,r5,1104d7d0 <_malloc_r+0x324>
1104d614:	28c4703a 	and	r2,r5,r3
1104d618:	10000a1e 	bne	r2,zero,1104d644 <_malloc_r+0x198>
1104d61c:	00bfff04 	movi	r2,-4
1104d620:	294b883a 	add	r5,r5,r5
1104d624:	2088703a 	and	r4,r4,r2
1104d628:	28c4703a 	and	r2,r5,r3
1104d62c:	21000104 	addi	r4,r4,4
1104d630:	1000041e 	bne	r2,zero,1104d644 <_malloc_r+0x198>
1104d634:	294b883a 	add	r5,r5,r5
1104d638:	28c4703a 	and	r2,r5,r3
1104d63c:	21000104 	addi	r4,r4,4
1104d640:	103ffc26 	beq	r2,zero,1104d634 <_malloc_r+0x188>
1104d644:	02bfff04 	movi	r10,-4
1104d648:	024003c4 	movi	r9,15
1104d64c:	21800044 	addi	r6,r4,1
1104d650:	318d883a 	add	r6,r6,r6
1104d654:	318d883a 	add	r6,r6,r6
1104d658:	318d883a 	add	r6,r6,r6
1104d65c:	998d883a 	add	r6,r19,r6
1104d660:	333ffe04 	addi	r12,r6,-8
1104d664:	2017883a 	mov	r11,r4
1104d668:	31800104 	addi	r6,r6,4
1104d66c:	34000017 	ldw	r16,0(r6)
1104d670:	31fffd04 	addi	r7,r6,-12
1104d674:	81c0041e 	bne	r16,r7,1104d688 <_malloc_r+0x1dc>
1104d678:	0000fb06 	br	1104da68 <_malloc_r+0x5bc>
1104d67c:	1801030e 	bge	r3,zero,1104da8c <_malloc_r+0x5e0>
1104d680:	84000317 	ldw	r16,12(r16)
1104d684:	81c0f826 	beq	r16,r7,1104da68 <_malloc_r+0x5bc>
1104d688:	80800117 	ldw	r2,4(r16)
1104d68c:	1284703a 	and	r2,r2,r10
1104d690:	1447c83a 	sub	r3,r2,r17
1104d694:	48fff90e 	bge	r9,r3,1104d67c <_malloc_r+0x1d0>
1104d698:	80800317 	ldw	r2,12(r16)
1104d69c:	81000217 	ldw	r4,8(r16)
1104d6a0:	89400054 	ori	r5,r17,1
1104d6a4:	81400115 	stw	r5,4(r16)
1104d6a8:	20800315 	stw	r2,12(r4)
1104d6ac:	11000215 	stw	r4,8(r2)
1104d6b0:	8463883a 	add	r17,r16,r17
1104d6b4:	9c400515 	stw	r17,20(r19)
1104d6b8:	9c400415 	stw	r17,16(r19)
1104d6bc:	18800054 	ori	r2,r3,1
1104d6c0:	88800115 	stw	r2,4(r17)
1104d6c4:	8a000315 	stw	r8,12(r17)
1104d6c8:	8a000215 	stw	r8,8(r17)
1104d6cc:	88e3883a 	add	r17,r17,r3
1104d6d0:	88c00015 	stw	r3,0(r17)
1104d6d4:	9009883a 	mov	r4,r18
1104d6d8:	10548040 	call	11054804 <__malloc_unlock>
1104d6dc:	80800204 	addi	r2,r16,8
1104d6e0:	00001b06 	br	1104d750 <_malloc_r+0x2a4>
1104d6e4:	04400404 	movi	r17,16
1104d6e8:	89402536 	bltu	r17,r5,1104d780 <_malloc_r+0x2d4>
1104d6ec:	10547e00 	call	110547e0 <__malloc_lock>
1104d6f0:	00800184 	movi	r2,6
1104d6f4:	01000084 	movi	r4,2
1104d6f8:	04c44174 	movhi	r19,4357
1104d6fc:	1085883a 	add	r2,r2,r2
1104d700:	9cddd204 	addi	r19,r19,30536
1104d704:	1085883a 	add	r2,r2,r2
1104d708:	9885883a 	add	r2,r19,r2
1104d70c:	14000117 	ldw	r16,4(r2)
1104d710:	10fffe04 	addi	r3,r2,-8
1104d714:	80c0d926 	beq	r16,r3,1104da7c <_malloc_r+0x5d0>
1104d718:	80c00117 	ldw	r3,4(r16)
1104d71c:	81000317 	ldw	r4,12(r16)
1104d720:	00bfff04 	movi	r2,-4
1104d724:	1884703a 	and	r2,r3,r2
1104d728:	81400217 	ldw	r5,8(r16)
1104d72c:	8085883a 	add	r2,r16,r2
1104d730:	10c00117 	ldw	r3,4(r2)
1104d734:	29000315 	stw	r4,12(r5)
1104d738:	21400215 	stw	r5,8(r4)
1104d73c:	18c00054 	ori	r3,r3,1
1104d740:	10c00115 	stw	r3,4(r2)
1104d744:	9009883a 	mov	r4,r18
1104d748:	10548040 	call	11054804 <__malloc_unlock>
1104d74c:	80800204 	addi	r2,r16,8
1104d750:	dfc00a17 	ldw	ra,40(sp)
1104d754:	df000917 	ldw	fp,36(sp)
1104d758:	ddc00817 	ldw	r23,32(sp)
1104d75c:	dd800717 	ldw	r22,28(sp)
1104d760:	dd400617 	ldw	r21,24(sp)
1104d764:	dd000517 	ldw	r20,20(sp)
1104d768:	dcc00417 	ldw	r19,16(sp)
1104d76c:	dc800317 	ldw	r18,12(sp)
1104d770:	dc400217 	ldw	r17,8(sp)
1104d774:	dc000117 	ldw	r16,4(sp)
1104d778:	dec00b04 	addi	sp,sp,44
1104d77c:	f800283a 	ret
1104d780:	00800304 	movi	r2,12
1104d784:	90800015 	stw	r2,0(r18)
1104d788:	0005883a 	mov	r2,zero
1104d78c:	003ff006 	br	1104d750 <_malloc_r+0x2a4>
1104d790:	01002004 	movi	r4,128
1104d794:	02001004 	movi	r8,64
1104d798:	01c00fc4 	movi	r7,63
1104d79c:	003f6106 	br	1104d524 <_malloc_r+0x78>
1104d7a0:	4009883a 	mov	r4,r8
1104d7a4:	003f7506 	br	1104d57c <_malloc_r+0xd0>
1104d7a8:	81000317 	ldw	r4,12(r16)
1104d7ac:	003fde06 	br	1104d728 <_malloc_r+0x27c>
1104d7b0:	81c5883a 	add	r2,r16,r7
1104d7b4:	11400117 	ldw	r5,4(r2)
1104d7b8:	9009883a 	mov	r4,r18
1104d7bc:	29400054 	ori	r5,r5,1
1104d7c0:	11400115 	stw	r5,4(r2)
1104d7c4:	10548040 	call	11054804 <__malloc_unlock>
1104d7c8:	80800204 	addi	r2,r16,8
1104d7cc:	003fe006 	br	1104d750 <_malloc_r+0x2a4>
1104d7d0:	9c000217 	ldw	r16,8(r19)
1104d7d4:	00bfff04 	movi	r2,-4
1104d7d8:	85800117 	ldw	r22,4(r16)
1104d7dc:	b0ac703a 	and	r22,r22,r2
1104d7e0:	b4400336 	bltu	r22,r17,1104d7f0 <_malloc_r+0x344>
1104d7e4:	b445c83a 	sub	r2,r22,r17
1104d7e8:	00c003c4 	movi	r3,15
1104d7ec:	18805d16 	blt	r3,r2,1104d964 <_malloc_r+0x4b8>
1104d7f0:	05c441b4 	movhi	r23,4358
1104d7f4:	008441b4 	movhi	r2,4358
1104d7f8:	10aa2704 	addi	r2,r2,-22372
1104d7fc:	bde35904 	addi	r23,r23,-29340
1104d800:	15400017 	ldw	r21,0(r2)
1104d804:	b8c00017 	ldw	r3,0(r23)
1104d808:	00bfffc4 	movi	r2,-1
1104d80c:	858d883a 	add	r6,r16,r22
1104d810:	8d6b883a 	add	r21,r17,r21
1104d814:	1880ea26 	beq	r3,r2,1104dbc0 <_malloc_r+0x714>
1104d818:	ad4403c4 	addi	r21,r21,4111
1104d81c:	00bc0004 	movi	r2,-4096
1104d820:	a8aa703a 	and	r21,r21,r2
1104d824:	a80b883a 	mov	r5,r21
1104d828:	9009883a 	mov	r4,r18
1104d82c:	d9800015 	stw	r6,0(sp)
1104d830:	104f73c0 	call	1104f73c <_sbrk_r>
1104d834:	1029883a 	mov	r20,r2
1104d838:	00bfffc4 	movi	r2,-1
1104d83c:	d9800017 	ldw	r6,0(sp)
1104d840:	a080e826 	beq	r20,r2,1104dbe4 <_malloc_r+0x738>
1104d844:	a180a636 	bltu	r20,r6,1104dae0 <_malloc_r+0x634>
1104d848:	070441b4 	movhi	fp,4358
1104d84c:	e72a3a04 	addi	fp,fp,-22296
1104d850:	e0800017 	ldw	r2,0(fp)
1104d854:	a887883a 	add	r3,r21,r2
1104d858:	e0c00015 	stw	r3,0(fp)
1104d85c:	3500e626 	beq	r6,r20,1104dbf8 <_malloc_r+0x74c>
1104d860:	b9000017 	ldw	r4,0(r23)
1104d864:	00bfffc4 	movi	r2,-1
1104d868:	2080ee26 	beq	r4,r2,1104dc24 <_malloc_r+0x778>
1104d86c:	a185c83a 	sub	r2,r20,r6
1104d870:	10c5883a 	add	r2,r2,r3
1104d874:	e0800015 	stw	r2,0(fp)
1104d878:	a0c001cc 	andi	r3,r20,7
1104d87c:	1800bc26 	beq	r3,zero,1104db70 <_malloc_r+0x6c4>
1104d880:	a0e9c83a 	sub	r20,r20,r3
1104d884:	00840204 	movi	r2,4104
1104d888:	a5000204 	addi	r20,r20,8
1104d88c:	10c7c83a 	sub	r3,r2,r3
1104d890:	a545883a 	add	r2,r20,r21
1104d894:	1083ffcc 	andi	r2,r2,4095
1104d898:	18abc83a 	sub	r21,r3,r2
1104d89c:	a80b883a 	mov	r5,r21
1104d8a0:	9009883a 	mov	r4,r18
1104d8a4:	104f73c0 	call	1104f73c <_sbrk_r>
1104d8a8:	00ffffc4 	movi	r3,-1
1104d8ac:	10c0e126 	beq	r2,r3,1104dc34 <_malloc_r+0x788>
1104d8b0:	1505c83a 	sub	r2,r2,r20
1104d8b4:	1545883a 	add	r2,r2,r21
1104d8b8:	10800054 	ori	r2,r2,1
1104d8bc:	e0c00017 	ldw	r3,0(fp)
1104d8c0:	9d000215 	stw	r20,8(r19)
1104d8c4:	a0800115 	stw	r2,4(r20)
1104d8c8:	a8c7883a 	add	r3,r21,r3
1104d8cc:	e0c00015 	stw	r3,0(fp)
1104d8d0:	84c00e26 	beq	r16,r19,1104d90c <_malloc_r+0x460>
1104d8d4:	018003c4 	movi	r6,15
1104d8d8:	3580a72e 	bgeu	r6,r22,1104db78 <_malloc_r+0x6cc>
1104d8dc:	81400117 	ldw	r5,4(r16)
1104d8e0:	013ffe04 	movi	r4,-8
1104d8e4:	b0bffd04 	addi	r2,r22,-12
1104d8e8:	1104703a 	and	r2,r2,r4
1104d8ec:	2900004c 	andi	r4,r5,1
1104d8f0:	2088b03a 	or	r4,r4,r2
1104d8f4:	81000115 	stw	r4,4(r16)
1104d8f8:	01400144 	movi	r5,5
1104d8fc:	8089883a 	add	r4,r16,r2
1104d900:	21400115 	stw	r5,4(r4)
1104d904:	21400215 	stw	r5,8(r4)
1104d908:	3080cd36 	bltu	r6,r2,1104dc40 <_malloc_r+0x794>
1104d90c:	008441b4 	movhi	r2,4358
1104d910:	10aa2604 	addi	r2,r2,-22376
1104d914:	11000017 	ldw	r4,0(r2)
1104d918:	20c0012e 	bgeu	r4,r3,1104d920 <_malloc_r+0x474>
1104d91c:	10c00015 	stw	r3,0(r2)
1104d920:	008441b4 	movhi	r2,4358
1104d924:	10aa2504 	addi	r2,r2,-22380
1104d928:	11000017 	ldw	r4,0(r2)
1104d92c:	9c000217 	ldw	r16,8(r19)
1104d930:	20c0012e 	bgeu	r4,r3,1104d938 <_malloc_r+0x48c>
1104d934:	10c00015 	stw	r3,0(r2)
1104d938:	80c00117 	ldw	r3,4(r16)
1104d93c:	00bfff04 	movi	r2,-4
1104d940:	1886703a 	and	r3,r3,r2
1104d944:	1c45c83a 	sub	r2,r3,r17
1104d948:	1c400236 	bltu	r3,r17,1104d954 <_malloc_r+0x4a8>
1104d94c:	00c003c4 	movi	r3,15
1104d950:	18800416 	blt	r3,r2,1104d964 <_malloc_r+0x4b8>
1104d954:	9009883a 	mov	r4,r18
1104d958:	10548040 	call	11054804 <__malloc_unlock>
1104d95c:	0005883a 	mov	r2,zero
1104d960:	003f7b06 	br	1104d750 <_malloc_r+0x2a4>
1104d964:	88c00054 	ori	r3,r17,1
1104d968:	80c00115 	stw	r3,4(r16)
1104d96c:	8463883a 	add	r17,r16,r17
1104d970:	10800054 	ori	r2,r2,1
1104d974:	9c400215 	stw	r17,8(r19)
1104d978:	88800115 	stw	r2,4(r17)
1104d97c:	9009883a 	mov	r4,r18
1104d980:	10548040 	call	11054804 <__malloc_unlock>
1104d984:	80800204 	addi	r2,r16,8
1104d988:	003f7106 	br	1104d750 <_malloc_r+0x2a4>
1104d98c:	00c00504 	movi	r3,20
1104d990:	18804a2e 	bgeu	r3,r2,1104dabc <_malloc_r+0x610>
1104d994:	00c01504 	movi	r3,84
1104d998:	18806e36 	bltu	r3,r2,1104db54 <_malloc_r+0x6a8>
1104d99c:	8804d33a 	srli	r2,r17,12
1104d9a0:	12001bc4 	addi	r8,r2,111
1104d9a4:	11c01b84 	addi	r7,r2,110
1104d9a8:	4209883a 	add	r4,r8,r8
1104d9ac:	003edd06 	br	1104d524 <_malloc_r+0x78>
1104d9b0:	3804d27a 	srli	r2,r7,9
1104d9b4:	00c00104 	movi	r3,4
1104d9b8:	1880442e 	bgeu	r3,r2,1104dacc <_malloc_r+0x620>
1104d9bc:	00c00504 	movi	r3,20
1104d9c0:	18808136 	bltu	r3,r2,1104dbc8 <_malloc_r+0x71c>
1104d9c4:	11401704 	addi	r5,r2,92
1104d9c8:	10c016c4 	addi	r3,r2,91
1104d9cc:	294b883a 	add	r5,r5,r5
1104d9d0:	294b883a 	add	r5,r5,r5
1104d9d4:	294b883a 	add	r5,r5,r5
1104d9d8:	994b883a 	add	r5,r19,r5
1104d9dc:	28800017 	ldw	r2,0(r5)
1104d9e0:	01844174 	movhi	r6,4357
1104d9e4:	297ffe04 	addi	r5,r5,-8
1104d9e8:	319dd204 	addi	r6,r6,30536
1104d9ec:	28806526 	beq	r5,r2,1104db84 <_malloc_r+0x6d8>
1104d9f0:	01bfff04 	movi	r6,-4
1104d9f4:	10c00117 	ldw	r3,4(r2)
1104d9f8:	1986703a 	and	r3,r3,r6
1104d9fc:	38c0022e 	bgeu	r7,r3,1104da08 <_malloc_r+0x55c>
1104da00:	10800217 	ldw	r2,8(r2)
1104da04:	28bffb1e 	bne	r5,r2,1104d9f4 <_malloc_r+0x548>
1104da08:	11400317 	ldw	r5,12(r2)
1104da0c:	98c00117 	ldw	r3,4(r19)
1104da10:	81400315 	stw	r5,12(r16)
1104da14:	80800215 	stw	r2,8(r16)
1104da18:	2c000215 	stw	r16,8(r5)
1104da1c:	14000315 	stw	r16,12(r2)
1104da20:	003ef806 	br	1104d604 <_malloc_r+0x158>
1104da24:	88c00054 	ori	r3,r17,1
1104da28:	80c00115 	stw	r3,4(r16)
1104da2c:	8463883a 	add	r17,r16,r17
1104da30:	34400515 	stw	r17,20(r6)
1104da34:	34400415 	stw	r17,16(r6)
1104da38:	10c00054 	ori	r3,r2,1
1104da3c:	8a000315 	stw	r8,12(r17)
1104da40:	8a000215 	stw	r8,8(r17)
1104da44:	88c00115 	stw	r3,4(r17)
1104da48:	88a3883a 	add	r17,r17,r2
1104da4c:	88800015 	stw	r2,0(r17)
1104da50:	9009883a 	mov	r4,r18
1104da54:	10548040 	call	11054804 <__malloc_unlock>
1104da58:	80800204 	addi	r2,r16,8
1104da5c:	003f3c06 	br	1104d750 <_malloc_r+0x2a4>
1104da60:	30c00117 	ldw	r3,4(r6)
1104da64:	003ee706 	br	1104d604 <_malloc_r+0x158>
1104da68:	5ac00044 	addi	r11,r11,1
1104da6c:	588000cc 	andi	r2,r11,3
1104da70:	31800204 	addi	r6,r6,8
1104da74:	103efd1e 	bne	r2,zero,1104d66c <_malloc_r+0x1c0>
1104da78:	00002406 	br	1104db0c <_malloc_r+0x660>
1104da7c:	14000317 	ldw	r16,12(r2)
1104da80:	143f251e 	bne	r2,r16,1104d718 <_malloc_r+0x26c>
1104da84:	21000084 	addi	r4,r4,2
1104da88:	003ebc06 	br	1104d57c <_malloc_r+0xd0>
1104da8c:	8085883a 	add	r2,r16,r2
1104da90:	10c00117 	ldw	r3,4(r2)
1104da94:	81000317 	ldw	r4,12(r16)
1104da98:	81400217 	ldw	r5,8(r16)
1104da9c:	18c00054 	ori	r3,r3,1
1104daa0:	10c00115 	stw	r3,4(r2)
1104daa4:	29000315 	stw	r4,12(r5)
1104daa8:	21400215 	stw	r5,8(r4)
1104daac:	9009883a 	mov	r4,r18
1104dab0:	10548040 	call	11054804 <__malloc_unlock>
1104dab4:	80800204 	addi	r2,r16,8
1104dab8:	003f2506 	br	1104d750 <_malloc_r+0x2a4>
1104dabc:	12001704 	addi	r8,r2,92
1104dac0:	11c016c4 	addi	r7,r2,91
1104dac4:	4209883a 	add	r4,r8,r8
1104dac8:	003e9606 	br	1104d524 <_malloc_r+0x78>
1104dacc:	3804d1ba 	srli	r2,r7,6
1104dad0:	11400e44 	addi	r5,r2,57
1104dad4:	10c00e04 	addi	r3,r2,56
1104dad8:	294b883a 	add	r5,r5,r5
1104dadc:	003fbc06 	br	1104d9d0 <_malloc_r+0x524>
1104dae0:	84ff5926 	beq	r16,r19,1104d848 <_malloc_r+0x39c>
1104dae4:	00844174 	movhi	r2,4357
1104dae8:	109dd204 	addi	r2,r2,30536
1104daec:	14000217 	ldw	r16,8(r2)
1104daf0:	00bfff04 	movi	r2,-4
1104daf4:	80c00117 	ldw	r3,4(r16)
1104daf8:	1886703a 	and	r3,r3,r2
1104dafc:	003f9106 	br	1104d944 <_malloc_r+0x498>
1104db00:	60800217 	ldw	r2,8(r12)
1104db04:	213fffc4 	addi	r4,r4,-1
1104db08:	1300651e 	bne	r2,r12,1104dca0 <_malloc_r+0x7f4>
1104db0c:	208000cc 	andi	r2,r4,3
1104db10:	633ffe04 	addi	r12,r12,-8
1104db14:	103ffa1e 	bne	r2,zero,1104db00 <_malloc_r+0x654>
1104db18:	98800117 	ldw	r2,4(r19)
1104db1c:	0146303a 	nor	r3,zero,r5
1104db20:	1884703a 	and	r2,r3,r2
1104db24:	98800115 	stw	r2,4(r19)
1104db28:	294b883a 	add	r5,r5,r5
1104db2c:	117f2836 	bltu	r2,r5,1104d7d0 <_malloc_r+0x324>
1104db30:	283f2726 	beq	r5,zero,1104d7d0 <_malloc_r+0x324>
1104db34:	2886703a 	and	r3,r5,r2
1104db38:	5809883a 	mov	r4,r11
1104db3c:	183ec31e 	bne	r3,zero,1104d64c <_malloc_r+0x1a0>
1104db40:	294b883a 	add	r5,r5,r5
1104db44:	2886703a 	and	r3,r5,r2
1104db48:	21000104 	addi	r4,r4,4
1104db4c:	183ffc26 	beq	r3,zero,1104db40 <_malloc_r+0x694>
1104db50:	003ebe06 	br	1104d64c <_malloc_r+0x1a0>
1104db54:	00c05504 	movi	r3,340
1104db58:	18801236 	bltu	r3,r2,1104dba4 <_malloc_r+0x6f8>
1104db5c:	8804d3fa 	srli	r2,r17,15
1104db60:	12001e04 	addi	r8,r2,120
1104db64:	11c01dc4 	addi	r7,r2,119
1104db68:	4209883a 	add	r4,r8,r8
1104db6c:	003e6d06 	br	1104d524 <_malloc_r+0x78>
1104db70:	00c40004 	movi	r3,4096
1104db74:	003f4606 	br	1104d890 <_malloc_r+0x3e4>
1104db78:	00800044 	movi	r2,1
1104db7c:	a0800115 	stw	r2,4(r20)
1104db80:	003f7406 	br	1104d954 <_malloc_r+0x4a8>
1104db84:	1805d0ba 	srai	r2,r3,2
1104db88:	01c00044 	movi	r7,1
1104db8c:	30c00117 	ldw	r3,4(r6)
1104db90:	388e983a 	sll	r7,r7,r2
1104db94:	2805883a 	mov	r2,r5
1104db98:	38c6b03a 	or	r3,r7,r3
1104db9c:	30c00115 	stw	r3,4(r6)
1104dba0:	003f9b06 	br	1104da10 <_malloc_r+0x564>
1104dba4:	00c15504 	movi	r3,1364
1104dba8:	18801a36 	bltu	r3,r2,1104dc14 <_malloc_r+0x768>
1104dbac:	8804d4ba 	srli	r2,r17,18
1104dbb0:	12001f44 	addi	r8,r2,125
1104dbb4:	11c01f04 	addi	r7,r2,124
1104dbb8:	4209883a 	add	r4,r8,r8
1104dbbc:	003e5906 	br	1104d524 <_malloc_r+0x78>
1104dbc0:	ad400404 	addi	r21,r21,16
1104dbc4:	003f1706 	br	1104d824 <_malloc_r+0x378>
1104dbc8:	00c01504 	movi	r3,84
1104dbcc:	18802336 	bltu	r3,r2,1104dc5c <_malloc_r+0x7b0>
1104dbd0:	3804d33a 	srli	r2,r7,12
1104dbd4:	11401bc4 	addi	r5,r2,111
1104dbd8:	10c01b84 	addi	r3,r2,110
1104dbdc:	294b883a 	add	r5,r5,r5
1104dbe0:	003f7b06 	br	1104d9d0 <_malloc_r+0x524>
1104dbe4:	9c000217 	ldw	r16,8(r19)
1104dbe8:	00bfff04 	movi	r2,-4
1104dbec:	80c00117 	ldw	r3,4(r16)
1104dbf0:	1886703a 	and	r3,r3,r2
1104dbf4:	003f5306 	br	1104d944 <_malloc_r+0x498>
1104dbf8:	3083ffcc 	andi	r2,r6,4095
1104dbfc:	103f181e 	bne	r2,zero,1104d860 <_malloc_r+0x3b4>
1104dc00:	99000217 	ldw	r4,8(r19)
1104dc04:	b545883a 	add	r2,r22,r21
1104dc08:	10800054 	ori	r2,r2,1
1104dc0c:	20800115 	stw	r2,4(r4)
1104dc10:	003f3e06 	br	1104d90c <_malloc_r+0x460>
1104dc14:	01003f84 	movi	r4,254
1104dc18:	02001fc4 	movi	r8,127
1104dc1c:	01c01f84 	movi	r7,126
1104dc20:	003e4006 	br	1104d524 <_malloc_r+0x78>
1104dc24:	008441b4 	movhi	r2,4358
1104dc28:	10a35904 	addi	r2,r2,-29340
1104dc2c:	15000015 	stw	r20,0(r2)
1104dc30:	003f1106 	br	1104d878 <_malloc_r+0x3cc>
1104dc34:	00800044 	movi	r2,1
1104dc38:	002b883a 	mov	r21,zero
1104dc3c:	003f1f06 	br	1104d8bc <_malloc_r+0x410>
1104dc40:	81400204 	addi	r5,r16,8
1104dc44:	9009883a 	mov	r4,r18
1104dc48:	104c8c00 	call	1104c8c0 <_free_r>
1104dc4c:	008441b4 	movhi	r2,4358
1104dc50:	10aa3a04 	addi	r2,r2,-22296
1104dc54:	10c00017 	ldw	r3,0(r2)
1104dc58:	003f2c06 	br	1104d90c <_malloc_r+0x460>
1104dc5c:	00c05504 	movi	r3,340
1104dc60:	18800536 	bltu	r3,r2,1104dc78 <_malloc_r+0x7cc>
1104dc64:	3804d3fa 	srli	r2,r7,15
1104dc68:	11401e04 	addi	r5,r2,120
1104dc6c:	10c01dc4 	addi	r3,r2,119
1104dc70:	294b883a 	add	r5,r5,r5
1104dc74:	003f5606 	br	1104d9d0 <_malloc_r+0x524>
1104dc78:	00c15504 	movi	r3,1364
1104dc7c:	18800536 	bltu	r3,r2,1104dc94 <_malloc_r+0x7e8>
1104dc80:	3804d4ba 	srli	r2,r7,18
1104dc84:	11401f44 	addi	r5,r2,125
1104dc88:	10c01f04 	addi	r3,r2,124
1104dc8c:	294b883a 	add	r5,r5,r5
1104dc90:	003f4f06 	br	1104d9d0 <_malloc_r+0x524>
1104dc94:	01403f84 	movi	r5,254
1104dc98:	00c01f84 	movi	r3,126
1104dc9c:	003f4c06 	br	1104d9d0 <_malloc_r+0x524>
1104dca0:	98800117 	ldw	r2,4(r19)
1104dca4:	003fa006 	br	1104db28 <_malloc_r+0x67c>
1104dca8:	8808d0fa 	srli	r4,r17,3
1104dcac:	20800044 	addi	r2,r4,1
1104dcb0:	1085883a 	add	r2,r2,r2
1104dcb4:	003e9006 	br	1104d6f8 <_malloc_r+0x24c>

1104dcb8 <memchr>:
1104dcb8:	208000cc 	andi	r2,r4,3
1104dcbc:	280f883a 	mov	r7,r5
1104dcc0:	10003426 	beq	r2,zero,1104dd94 <memchr+0xdc>
1104dcc4:	30bfffc4 	addi	r2,r6,-1
1104dcc8:	30001a26 	beq	r6,zero,1104dd34 <memchr+0x7c>
1104dccc:	20c00003 	ldbu	r3,0(r4)
1104dcd0:	29803fcc 	andi	r6,r5,255
1104dcd4:	30c0051e 	bne	r6,r3,1104dcec <memchr+0x34>
1104dcd8:	00001806 	br	1104dd3c <memchr+0x84>
1104dcdc:	10001526 	beq	r2,zero,1104dd34 <memchr+0x7c>
1104dce0:	20c00003 	ldbu	r3,0(r4)
1104dce4:	10bfffc4 	addi	r2,r2,-1
1104dce8:	30c01426 	beq	r6,r3,1104dd3c <memchr+0x84>
1104dcec:	21000044 	addi	r4,r4,1
1104dcf0:	20c000cc 	andi	r3,r4,3
1104dcf4:	183ff91e 	bne	r3,zero,1104dcdc <memchr+0x24>
1104dcf8:	020000c4 	movi	r8,3
1104dcfc:	40801136 	bltu	r8,r2,1104dd44 <memchr+0x8c>
1104dd00:	10000c26 	beq	r2,zero,1104dd34 <memchr+0x7c>
1104dd04:	20c00003 	ldbu	r3,0(r4)
1104dd08:	29403fcc 	andi	r5,r5,255
1104dd0c:	28c00b26 	beq	r5,r3,1104dd3c <memchr+0x84>
1104dd10:	20c00044 	addi	r3,r4,1
1104dd14:	39803fcc 	andi	r6,r7,255
1104dd18:	2089883a 	add	r4,r4,r2
1104dd1c:	00000306 	br	1104dd2c <memchr+0x74>
1104dd20:	18c00044 	addi	r3,r3,1
1104dd24:	197fffc3 	ldbu	r5,-1(r3)
1104dd28:	31400526 	beq	r6,r5,1104dd40 <memchr+0x88>
1104dd2c:	1805883a 	mov	r2,r3
1104dd30:	20fffb1e 	bne	r4,r3,1104dd20 <memchr+0x68>
1104dd34:	0005883a 	mov	r2,zero
1104dd38:	f800283a 	ret
1104dd3c:	2005883a 	mov	r2,r4
1104dd40:	f800283a 	ret
1104dd44:	28c03fcc 	andi	r3,r5,255
1104dd48:	1812923a 	slli	r9,r3,8
1104dd4c:	02ffbff4 	movhi	r11,65279
1104dd50:	02a02074 	movhi	r10,32897
1104dd54:	48d2b03a 	or	r9,r9,r3
1104dd58:	4806943a 	slli	r3,r9,16
1104dd5c:	5affbfc4 	addi	r11,r11,-257
1104dd60:	52a02004 	addi	r10,r10,-32640
1104dd64:	48d2b03a 	or	r9,r9,r3
1104dd68:	20c00017 	ldw	r3,0(r4)
1104dd6c:	48c6f03a 	xor	r3,r9,r3
1104dd70:	1acd883a 	add	r6,r3,r11
1104dd74:	00c6303a 	nor	r3,zero,r3
1104dd78:	30c6703a 	and	r3,r6,r3
1104dd7c:	1a86703a 	and	r3,r3,r10
1104dd80:	183fe01e 	bne	r3,zero,1104dd04 <memchr+0x4c>
1104dd84:	10bfff04 	addi	r2,r2,-4
1104dd88:	21000104 	addi	r4,r4,4
1104dd8c:	40bff636 	bltu	r8,r2,1104dd68 <memchr+0xb0>
1104dd90:	003fdb06 	br	1104dd00 <memchr+0x48>
1104dd94:	3005883a 	mov	r2,r6
1104dd98:	003fd706 	br	1104dcf8 <memchr+0x40>

1104dd9c <memcpy>:
1104dd9c:	defffd04 	addi	sp,sp,-12
1104dda0:	dfc00215 	stw	ra,8(sp)
1104dda4:	dc400115 	stw	r17,4(sp)
1104dda8:	dc000015 	stw	r16,0(sp)
1104ddac:	00c003c4 	movi	r3,15
1104ddb0:	2005883a 	mov	r2,r4
1104ddb4:	1980452e 	bgeu	r3,r6,1104decc <memcpy+0x130>
1104ddb8:	2906b03a 	or	r3,r5,r4
1104ddbc:	18c000cc 	andi	r3,r3,3
1104ddc0:	1800441e 	bne	r3,zero,1104ded4 <memcpy+0x138>
1104ddc4:	347ffc04 	addi	r17,r6,-16
1104ddc8:	8822d13a 	srli	r17,r17,4
1104ddcc:	28c00104 	addi	r3,r5,4
1104ddd0:	23400104 	addi	r13,r4,4
1104ddd4:	8820913a 	slli	r16,r17,4
1104ddd8:	2b000204 	addi	r12,r5,8
1104dddc:	22c00204 	addi	r11,r4,8
1104dde0:	84000504 	addi	r16,r16,20
1104dde4:	2a800304 	addi	r10,r5,12
1104dde8:	22400304 	addi	r9,r4,12
1104ddec:	2c21883a 	add	r16,r5,r16
1104ddf0:	2811883a 	mov	r8,r5
1104ddf4:	200f883a 	mov	r7,r4
1104ddf8:	41000017 	ldw	r4,0(r8)
1104ddfc:	1fc00017 	ldw	ra,0(r3)
1104de00:	63c00017 	ldw	r15,0(r12)
1104de04:	39000015 	stw	r4,0(r7)
1104de08:	53800017 	ldw	r14,0(r10)
1104de0c:	6fc00015 	stw	ra,0(r13)
1104de10:	5bc00015 	stw	r15,0(r11)
1104de14:	4b800015 	stw	r14,0(r9)
1104de18:	18c00404 	addi	r3,r3,16
1104de1c:	39c00404 	addi	r7,r7,16
1104de20:	42000404 	addi	r8,r8,16
1104de24:	6b400404 	addi	r13,r13,16
1104de28:	63000404 	addi	r12,r12,16
1104de2c:	5ac00404 	addi	r11,r11,16
1104de30:	52800404 	addi	r10,r10,16
1104de34:	4a400404 	addi	r9,r9,16
1104de38:	1c3fef1e 	bne	r3,r16,1104ddf8 <memcpy+0x5c>
1104de3c:	89c00044 	addi	r7,r17,1
1104de40:	380e913a 	slli	r7,r7,4
1104de44:	310003cc 	andi	r4,r6,15
1104de48:	02c000c4 	movi	r11,3
1104de4c:	11c7883a 	add	r3,r2,r7
1104de50:	29cb883a 	add	r5,r5,r7
1104de54:	5900212e 	bgeu	r11,r4,1104dedc <memcpy+0x140>
1104de58:	1813883a 	mov	r9,r3
1104de5c:	2811883a 	mov	r8,r5
1104de60:	200f883a 	mov	r7,r4
1104de64:	42800017 	ldw	r10,0(r8)
1104de68:	4a400104 	addi	r9,r9,4
1104de6c:	39ffff04 	addi	r7,r7,-4
1104de70:	4abfff15 	stw	r10,-4(r9)
1104de74:	42000104 	addi	r8,r8,4
1104de78:	59fffa36 	bltu	r11,r7,1104de64 <memcpy+0xc8>
1104de7c:	213fff04 	addi	r4,r4,-4
1104de80:	2008d0ba 	srli	r4,r4,2
1104de84:	318000cc 	andi	r6,r6,3
1104de88:	21000044 	addi	r4,r4,1
1104de8c:	2109883a 	add	r4,r4,r4
1104de90:	2109883a 	add	r4,r4,r4
1104de94:	1907883a 	add	r3,r3,r4
1104de98:	290b883a 	add	r5,r5,r4
1104de9c:	30000626 	beq	r6,zero,1104deb8 <memcpy+0x11c>
1104dea0:	198d883a 	add	r6,r3,r6
1104dea4:	29c00003 	ldbu	r7,0(r5)
1104dea8:	18c00044 	addi	r3,r3,1
1104deac:	29400044 	addi	r5,r5,1
1104deb0:	19ffffc5 	stb	r7,-1(r3)
1104deb4:	19bffb1e 	bne	r3,r6,1104dea4 <memcpy+0x108>
1104deb8:	dfc00217 	ldw	ra,8(sp)
1104debc:	dc400117 	ldw	r17,4(sp)
1104dec0:	dc000017 	ldw	r16,0(sp)
1104dec4:	dec00304 	addi	sp,sp,12
1104dec8:	f800283a 	ret
1104decc:	2007883a 	mov	r3,r4
1104ded0:	003ff206 	br	1104de9c <memcpy+0x100>
1104ded4:	2007883a 	mov	r3,r4
1104ded8:	003ff106 	br	1104dea0 <memcpy+0x104>
1104dedc:	200d883a 	mov	r6,r4
1104dee0:	003fee06 	br	1104de9c <memcpy+0x100>

1104dee4 <memmove>:
1104dee4:	2005883a 	mov	r2,r4
1104dee8:	29000b2e 	bgeu	r5,r4,1104df18 <memmove+0x34>
1104deec:	298f883a 	add	r7,r5,r6
1104def0:	21c0092e 	bgeu	r4,r7,1104df18 <memmove+0x34>
1104def4:	2187883a 	add	r3,r4,r6
1104def8:	198bc83a 	sub	r5,r3,r6
1104defc:	30004826 	beq	r6,zero,1104e020 <memmove+0x13c>
1104df00:	39ffffc4 	addi	r7,r7,-1
1104df04:	39000003 	ldbu	r4,0(r7)
1104df08:	18ffffc4 	addi	r3,r3,-1
1104df0c:	19000005 	stb	r4,0(r3)
1104df10:	28fffb1e 	bne	r5,r3,1104df00 <memmove+0x1c>
1104df14:	f800283a 	ret
1104df18:	00c003c4 	movi	r3,15
1104df1c:	1980412e 	bgeu	r3,r6,1104e024 <memmove+0x140>
1104df20:	2886b03a 	or	r3,r5,r2
1104df24:	18c000cc 	andi	r3,r3,3
1104df28:	1800401e 	bne	r3,zero,1104e02c <memmove+0x148>
1104df2c:	33fffc04 	addi	r15,r6,-16
1104df30:	781ed13a 	srli	r15,r15,4
1104df34:	28c00104 	addi	r3,r5,4
1104df38:	13400104 	addi	r13,r2,4
1104df3c:	781c913a 	slli	r14,r15,4
1104df40:	2b000204 	addi	r12,r5,8
1104df44:	12c00204 	addi	r11,r2,8
1104df48:	73800504 	addi	r14,r14,20
1104df4c:	2a800304 	addi	r10,r5,12
1104df50:	12400304 	addi	r9,r2,12
1104df54:	2b9d883a 	add	r14,r5,r14
1104df58:	2811883a 	mov	r8,r5
1104df5c:	100f883a 	mov	r7,r2
1104df60:	41000017 	ldw	r4,0(r8)
1104df64:	39c00404 	addi	r7,r7,16
1104df68:	18c00404 	addi	r3,r3,16
1104df6c:	393ffc15 	stw	r4,-16(r7)
1104df70:	193ffc17 	ldw	r4,-16(r3)
1104df74:	6b400404 	addi	r13,r13,16
1104df78:	5ac00404 	addi	r11,r11,16
1104df7c:	693ffc15 	stw	r4,-16(r13)
1104df80:	61000017 	ldw	r4,0(r12)
1104df84:	4a400404 	addi	r9,r9,16
1104df88:	42000404 	addi	r8,r8,16
1104df8c:	593ffc15 	stw	r4,-16(r11)
1104df90:	51000017 	ldw	r4,0(r10)
1104df94:	63000404 	addi	r12,r12,16
1104df98:	52800404 	addi	r10,r10,16
1104df9c:	493ffc15 	stw	r4,-16(r9)
1104dfa0:	1bbfef1e 	bne	r3,r14,1104df60 <memmove+0x7c>
1104dfa4:	79000044 	addi	r4,r15,1
1104dfa8:	2008913a 	slli	r4,r4,4
1104dfac:	328003cc 	andi	r10,r6,15
1104dfb0:	02c000c4 	movi	r11,3
1104dfb4:	1107883a 	add	r3,r2,r4
1104dfb8:	290b883a 	add	r5,r5,r4
1104dfbc:	5a801e2e 	bgeu	r11,r10,1104e038 <memmove+0x154>
1104dfc0:	1813883a 	mov	r9,r3
1104dfc4:	2811883a 	mov	r8,r5
1104dfc8:	500f883a 	mov	r7,r10
1104dfcc:	41000017 	ldw	r4,0(r8)
1104dfd0:	4a400104 	addi	r9,r9,4
1104dfd4:	39ffff04 	addi	r7,r7,-4
1104dfd8:	493fff15 	stw	r4,-4(r9)
1104dfdc:	42000104 	addi	r8,r8,4
1104dfe0:	59fffa36 	bltu	r11,r7,1104dfcc <memmove+0xe8>
1104dfe4:	513fff04 	addi	r4,r10,-4
1104dfe8:	2008d0ba 	srli	r4,r4,2
1104dfec:	318000cc 	andi	r6,r6,3
1104dff0:	21000044 	addi	r4,r4,1
1104dff4:	2109883a 	add	r4,r4,r4
1104dff8:	2109883a 	add	r4,r4,r4
1104dffc:	1907883a 	add	r3,r3,r4
1104e000:	290b883a 	add	r5,r5,r4
1104e004:	30000b26 	beq	r6,zero,1104e034 <memmove+0x150>
1104e008:	198d883a 	add	r6,r3,r6
1104e00c:	29c00003 	ldbu	r7,0(r5)
1104e010:	18c00044 	addi	r3,r3,1
1104e014:	29400044 	addi	r5,r5,1
1104e018:	19ffffc5 	stb	r7,-1(r3)
1104e01c:	19bffb1e 	bne	r3,r6,1104e00c <memmove+0x128>
1104e020:	f800283a 	ret
1104e024:	1007883a 	mov	r3,r2
1104e028:	003ff606 	br	1104e004 <memmove+0x120>
1104e02c:	1007883a 	mov	r3,r2
1104e030:	003ff506 	br	1104e008 <memmove+0x124>
1104e034:	f800283a 	ret
1104e038:	500d883a 	mov	r6,r10
1104e03c:	003ff106 	br	1104e004 <memmove+0x120>

1104e040 <memset>:
1104e040:	20c000cc 	andi	r3,r4,3
1104e044:	2005883a 	mov	r2,r4
1104e048:	18004426 	beq	r3,zero,1104e15c <memset+0x11c>
1104e04c:	31ffffc4 	addi	r7,r6,-1
1104e050:	30004026 	beq	r6,zero,1104e154 <memset+0x114>
1104e054:	2813883a 	mov	r9,r5
1104e058:	200d883a 	mov	r6,r4
1104e05c:	2007883a 	mov	r3,r4
1104e060:	00000406 	br	1104e074 <memset+0x34>
1104e064:	3a3fffc4 	addi	r8,r7,-1
1104e068:	31800044 	addi	r6,r6,1
1104e06c:	38003926 	beq	r7,zero,1104e154 <memset+0x114>
1104e070:	400f883a 	mov	r7,r8
1104e074:	18c00044 	addi	r3,r3,1
1104e078:	32400005 	stb	r9,0(r6)
1104e07c:	1a0000cc 	andi	r8,r3,3
1104e080:	403ff81e 	bne	r8,zero,1104e064 <memset+0x24>
1104e084:	010000c4 	movi	r4,3
1104e088:	21c02d2e 	bgeu	r4,r7,1104e140 <memset+0x100>
1104e08c:	29003fcc 	andi	r4,r5,255
1104e090:	200c923a 	slli	r6,r4,8
1104e094:	3108b03a 	or	r4,r6,r4
1104e098:	200c943a 	slli	r6,r4,16
1104e09c:	218cb03a 	or	r6,r4,r6
1104e0a0:	010003c4 	movi	r4,15
1104e0a4:	21c0182e 	bgeu	r4,r7,1104e108 <memset+0xc8>
1104e0a8:	3b3ffc04 	addi	r12,r7,-16
1104e0ac:	6018d13a 	srli	r12,r12,4
1104e0b0:	1a000104 	addi	r8,r3,4
1104e0b4:	1ac00204 	addi	r11,r3,8
1104e0b8:	6008913a 	slli	r4,r12,4
1104e0bc:	1a800304 	addi	r10,r3,12
1104e0c0:	1813883a 	mov	r9,r3
1104e0c4:	21000504 	addi	r4,r4,20
1104e0c8:	1909883a 	add	r4,r3,r4
1104e0cc:	49800015 	stw	r6,0(r9)
1104e0d0:	41800015 	stw	r6,0(r8)
1104e0d4:	59800015 	stw	r6,0(r11)
1104e0d8:	51800015 	stw	r6,0(r10)
1104e0dc:	42000404 	addi	r8,r8,16
1104e0e0:	4a400404 	addi	r9,r9,16
1104e0e4:	5ac00404 	addi	r11,r11,16
1104e0e8:	52800404 	addi	r10,r10,16
1104e0ec:	413ff71e 	bne	r8,r4,1104e0cc <memset+0x8c>
1104e0f0:	63000044 	addi	r12,r12,1
1104e0f4:	6018913a 	slli	r12,r12,4
1104e0f8:	39c003cc 	andi	r7,r7,15
1104e0fc:	010000c4 	movi	r4,3
1104e100:	1b07883a 	add	r3,r3,r12
1104e104:	21c00e2e 	bgeu	r4,r7,1104e140 <memset+0x100>
1104e108:	1813883a 	mov	r9,r3
1104e10c:	3811883a 	mov	r8,r7
1104e110:	010000c4 	movi	r4,3
1104e114:	49800015 	stw	r6,0(r9)
1104e118:	423fff04 	addi	r8,r8,-4
1104e11c:	4a400104 	addi	r9,r9,4
1104e120:	223ffc36 	bltu	r4,r8,1104e114 <memset+0xd4>
1104e124:	393fff04 	addi	r4,r7,-4
1104e128:	2008d0ba 	srli	r4,r4,2
1104e12c:	39c000cc 	andi	r7,r7,3
1104e130:	21000044 	addi	r4,r4,1
1104e134:	2109883a 	add	r4,r4,r4
1104e138:	2109883a 	add	r4,r4,r4
1104e13c:	1907883a 	add	r3,r3,r4
1104e140:	38000526 	beq	r7,zero,1104e158 <memset+0x118>
1104e144:	19cf883a 	add	r7,r3,r7
1104e148:	19400005 	stb	r5,0(r3)
1104e14c:	18c00044 	addi	r3,r3,1
1104e150:	38fffd1e 	bne	r7,r3,1104e148 <memset+0x108>
1104e154:	f800283a 	ret
1104e158:	f800283a 	ret
1104e15c:	2007883a 	mov	r3,r4
1104e160:	300f883a 	mov	r7,r6
1104e164:	003fc706 	br	1104e084 <memset+0x44>

1104e168 <_Balloc>:
1104e168:	20801317 	ldw	r2,76(r4)
1104e16c:	defffc04 	addi	sp,sp,-16
1104e170:	dc400115 	stw	r17,4(sp)
1104e174:	dc000015 	stw	r16,0(sp)
1104e178:	dfc00315 	stw	ra,12(sp)
1104e17c:	dc800215 	stw	r18,8(sp)
1104e180:	2023883a 	mov	r17,r4
1104e184:	2821883a 	mov	r16,r5
1104e188:	10000f26 	beq	r2,zero,1104e1c8 <_Balloc+0x60>
1104e18c:	8407883a 	add	r3,r16,r16
1104e190:	18c7883a 	add	r3,r3,r3
1104e194:	10c7883a 	add	r3,r2,r3
1104e198:	18800017 	ldw	r2,0(r3)
1104e19c:	10001126 	beq	r2,zero,1104e1e4 <_Balloc+0x7c>
1104e1a0:	11000017 	ldw	r4,0(r2)
1104e1a4:	19000015 	stw	r4,0(r3)
1104e1a8:	10000415 	stw	zero,16(r2)
1104e1ac:	10000315 	stw	zero,12(r2)
1104e1b0:	dfc00317 	ldw	ra,12(sp)
1104e1b4:	dc800217 	ldw	r18,8(sp)
1104e1b8:	dc400117 	ldw	r17,4(sp)
1104e1bc:	dc000017 	ldw	r16,0(sp)
1104e1c0:	dec00404 	addi	sp,sp,16
1104e1c4:	f800283a 	ret
1104e1c8:	01800844 	movi	r6,33
1104e1cc:	01400104 	movi	r5,4
1104e1d0:	10524b00 	call	110524b0 <_calloc_r>
1104e1d4:	88801315 	stw	r2,76(r17)
1104e1d8:	103fec1e 	bne	r2,zero,1104e18c <_Balloc+0x24>
1104e1dc:	0005883a 	mov	r2,zero
1104e1e0:	003ff306 	br	1104e1b0 <_Balloc+0x48>
1104e1e4:	01400044 	movi	r5,1
1104e1e8:	2c24983a 	sll	r18,r5,r16
1104e1ec:	8809883a 	mov	r4,r17
1104e1f0:	91800144 	addi	r6,r18,5
1104e1f4:	318d883a 	add	r6,r6,r6
1104e1f8:	318d883a 	add	r6,r6,r6
1104e1fc:	10524b00 	call	110524b0 <_calloc_r>
1104e200:	103ff626 	beq	r2,zero,1104e1dc <_Balloc+0x74>
1104e204:	14000115 	stw	r16,4(r2)
1104e208:	14800215 	stw	r18,8(r2)
1104e20c:	003fe606 	br	1104e1a8 <_Balloc+0x40>

1104e210 <_Bfree>:
1104e210:	28000826 	beq	r5,zero,1104e234 <_Bfree+0x24>
1104e214:	28c00117 	ldw	r3,4(r5)
1104e218:	20801317 	ldw	r2,76(r4)
1104e21c:	18c7883a 	add	r3,r3,r3
1104e220:	18c7883a 	add	r3,r3,r3
1104e224:	10c5883a 	add	r2,r2,r3
1104e228:	10c00017 	ldw	r3,0(r2)
1104e22c:	28c00015 	stw	r3,0(r5)
1104e230:	11400015 	stw	r5,0(r2)
1104e234:	f800283a 	ret

1104e238 <__multadd>:
1104e238:	defffa04 	addi	sp,sp,-24
1104e23c:	dc800315 	stw	r18,12(sp)
1104e240:	dc400215 	stw	r17,8(sp)
1104e244:	dc000115 	stw	r16,4(sp)
1104e248:	2823883a 	mov	r17,r5
1104e24c:	2c000417 	ldw	r16,16(r5)
1104e250:	dfc00515 	stw	ra,20(sp)
1104e254:	dcc00415 	stw	r19,16(sp)
1104e258:	2025883a 	mov	r18,r4
1104e25c:	29400504 	addi	r5,r5,20
1104e260:	0011883a 	mov	r8,zero
1104e264:	28c00017 	ldw	r3,0(r5)
1104e268:	29400104 	addi	r5,r5,4
1104e26c:	42000044 	addi	r8,r8,1
1104e270:	18bfffcc 	andi	r2,r3,65535
1104e274:	1185383a 	mul	r2,r2,r6
1104e278:	1806d43a 	srli	r3,r3,16
1104e27c:	11cf883a 	add	r7,r2,r7
1104e280:	3808d43a 	srli	r4,r7,16
1104e284:	1987383a 	mul	r3,r3,r6
1104e288:	38bfffcc 	andi	r2,r7,65535
1104e28c:	1907883a 	add	r3,r3,r4
1104e290:	1808943a 	slli	r4,r3,16
1104e294:	180ed43a 	srli	r7,r3,16
1104e298:	2085883a 	add	r2,r4,r2
1104e29c:	28bfff15 	stw	r2,-4(r5)
1104e2a0:	443ff016 	blt	r8,r16,1104e264 <__multadd+0x2c>
1104e2a4:	38000926 	beq	r7,zero,1104e2cc <__multadd+0x94>
1104e2a8:	88800217 	ldw	r2,8(r17)
1104e2ac:	80800f0e 	bge	r16,r2,1104e2ec <__multadd+0xb4>
1104e2b0:	80800144 	addi	r2,r16,5
1104e2b4:	1085883a 	add	r2,r2,r2
1104e2b8:	1085883a 	add	r2,r2,r2
1104e2bc:	8885883a 	add	r2,r17,r2
1104e2c0:	11c00015 	stw	r7,0(r2)
1104e2c4:	84000044 	addi	r16,r16,1
1104e2c8:	8c000415 	stw	r16,16(r17)
1104e2cc:	8805883a 	mov	r2,r17
1104e2d0:	dfc00517 	ldw	ra,20(sp)
1104e2d4:	dcc00417 	ldw	r19,16(sp)
1104e2d8:	dc800317 	ldw	r18,12(sp)
1104e2dc:	dc400217 	ldw	r17,8(sp)
1104e2e0:	dc000117 	ldw	r16,4(sp)
1104e2e4:	dec00604 	addi	sp,sp,24
1104e2e8:	f800283a 	ret
1104e2ec:	89400117 	ldw	r5,4(r17)
1104e2f0:	9009883a 	mov	r4,r18
1104e2f4:	d9c00015 	stw	r7,0(sp)
1104e2f8:	29400044 	addi	r5,r5,1
1104e2fc:	104e1680 	call	1104e168 <_Balloc>
1104e300:	89800417 	ldw	r6,16(r17)
1104e304:	89400304 	addi	r5,r17,12
1104e308:	11000304 	addi	r4,r2,12
1104e30c:	31800084 	addi	r6,r6,2
1104e310:	318d883a 	add	r6,r6,r6
1104e314:	318d883a 	add	r6,r6,r6
1104e318:	1027883a 	mov	r19,r2
1104e31c:	104dd9c0 	call	1104dd9c <memcpy>
1104e320:	d9c00017 	ldw	r7,0(sp)
1104e324:	88000a26 	beq	r17,zero,1104e350 <__multadd+0x118>
1104e328:	88c00117 	ldw	r3,4(r17)
1104e32c:	90801317 	ldw	r2,76(r18)
1104e330:	18c7883a 	add	r3,r3,r3
1104e334:	18c7883a 	add	r3,r3,r3
1104e338:	10c5883a 	add	r2,r2,r3
1104e33c:	10c00017 	ldw	r3,0(r2)
1104e340:	88c00015 	stw	r3,0(r17)
1104e344:	14400015 	stw	r17,0(r2)
1104e348:	9823883a 	mov	r17,r19
1104e34c:	003fd806 	br	1104e2b0 <__multadd+0x78>
1104e350:	9823883a 	mov	r17,r19
1104e354:	003fd606 	br	1104e2b0 <__multadd+0x78>

1104e358 <__s2b>:
1104e358:	defff904 	addi	sp,sp,-28
1104e35c:	dc400115 	stw	r17,4(sp)
1104e360:	dc000015 	stw	r16,0(sp)
1104e364:	2023883a 	mov	r17,r4
1104e368:	2821883a 	mov	r16,r5
1104e36c:	39000204 	addi	r4,r7,8
1104e370:	01400244 	movi	r5,9
1104e374:	dcc00315 	stw	r19,12(sp)
1104e378:	dc800215 	stw	r18,8(sp)
1104e37c:	dfc00615 	stw	ra,24(sp)
1104e380:	dd400515 	stw	r21,20(sp)
1104e384:	dd000415 	stw	r20,16(sp)
1104e388:	3825883a 	mov	r18,r7
1104e38c:	3027883a 	mov	r19,r6
1104e390:	10441780 	call	11044178 <__divsi3>
1104e394:	00c00044 	movi	r3,1
1104e398:	000b883a 	mov	r5,zero
1104e39c:	1880030e 	bge	r3,r2,1104e3ac <__s2b+0x54>
1104e3a0:	18c7883a 	add	r3,r3,r3
1104e3a4:	29400044 	addi	r5,r5,1
1104e3a8:	18bffd16 	blt	r3,r2,1104e3a0 <__s2b+0x48>
1104e3ac:	8809883a 	mov	r4,r17
1104e3b0:	104e1680 	call	1104e168 <_Balloc>
1104e3b4:	d8c00717 	ldw	r3,28(sp)
1104e3b8:	10c00515 	stw	r3,20(r2)
1104e3bc:	00c00044 	movi	r3,1
1104e3c0:	10c00415 	stw	r3,16(r2)
1104e3c4:	00c00244 	movi	r3,9
1104e3c8:	1cc0210e 	bge	r3,r19,1104e450 <__s2b+0xf8>
1104e3cc:	80eb883a 	add	r21,r16,r3
1104e3d0:	a829883a 	mov	r20,r21
1104e3d4:	84e1883a 	add	r16,r16,r19
1104e3d8:	a1c00007 	ldb	r7,0(r20)
1104e3dc:	01800284 	movi	r6,10
1104e3e0:	a5000044 	addi	r20,r20,1
1104e3e4:	100b883a 	mov	r5,r2
1104e3e8:	39fff404 	addi	r7,r7,-48
1104e3ec:	8809883a 	mov	r4,r17
1104e3f0:	104e2380 	call	1104e238 <__multadd>
1104e3f4:	a43ff81e 	bne	r20,r16,1104e3d8 <__s2b+0x80>
1104e3f8:	ace1883a 	add	r16,r21,r19
1104e3fc:	843ffe04 	addi	r16,r16,-8
1104e400:	9c800a0e 	bge	r19,r18,1104e42c <__s2b+0xd4>
1104e404:	94e5c83a 	sub	r18,r18,r19
1104e408:	84a5883a 	add	r18,r16,r18
1104e40c:	81c00007 	ldb	r7,0(r16)
1104e410:	01800284 	movi	r6,10
1104e414:	84000044 	addi	r16,r16,1
1104e418:	100b883a 	mov	r5,r2
1104e41c:	39fff404 	addi	r7,r7,-48
1104e420:	8809883a 	mov	r4,r17
1104e424:	104e2380 	call	1104e238 <__multadd>
1104e428:	84bff81e 	bne	r16,r18,1104e40c <__s2b+0xb4>
1104e42c:	dfc00617 	ldw	ra,24(sp)
1104e430:	dd400517 	ldw	r21,20(sp)
1104e434:	dd000417 	ldw	r20,16(sp)
1104e438:	dcc00317 	ldw	r19,12(sp)
1104e43c:	dc800217 	ldw	r18,8(sp)
1104e440:	dc400117 	ldw	r17,4(sp)
1104e444:	dc000017 	ldw	r16,0(sp)
1104e448:	dec00704 	addi	sp,sp,28
1104e44c:	f800283a 	ret
1104e450:	84000284 	addi	r16,r16,10
1104e454:	1827883a 	mov	r19,r3
1104e458:	003fe906 	br	1104e400 <__s2b+0xa8>

1104e45c <__hi0bits>:
1104e45c:	20bfffec 	andhi	r2,r4,65535
1104e460:	1000141e 	bne	r2,zero,1104e4b4 <__hi0bits+0x58>
1104e464:	2008943a 	slli	r4,r4,16
1104e468:	00800404 	movi	r2,16
1104e46c:	20ffc02c 	andhi	r3,r4,65280
1104e470:	1800021e 	bne	r3,zero,1104e47c <__hi0bits+0x20>
1104e474:	2008923a 	slli	r4,r4,8
1104e478:	10800204 	addi	r2,r2,8
1104e47c:	20fc002c 	andhi	r3,r4,61440
1104e480:	1800021e 	bne	r3,zero,1104e48c <__hi0bits+0x30>
1104e484:	2008913a 	slli	r4,r4,4
1104e488:	10800104 	addi	r2,r2,4
1104e48c:	20f0002c 	andhi	r3,r4,49152
1104e490:	1800031e 	bne	r3,zero,1104e4a0 <__hi0bits+0x44>
1104e494:	2109883a 	add	r4,r4,r4
1104e498:	10800084 	addi	r2,r2,2
1104e49c:	2109883a 	add	r4,r4,r4
1104e4a0:	20000316 	blt	r4,zero,1104e4b0 <__hi0bits+0x54>
1104e4a4:	2110002c 	andhi	r4,r4,16384
1104e4a8:	2000041e 	bne	r4,zero,1104e4bc <__hi0bits+0x60>
1104e4ac:	00800804 	movi	r2,32
1104e4b0:	f800283a 	ret
1104e4b4:	0005883a 	mov	r2,zero
1104e4b8:	003fec06 	br	1104e46c <__hi0bits+0x10>
1104e4bc:	10800044 	addi	r2,r2,1
1104e4c0:	f800283a 	ret

1104e4c4 <__lo0bits>:
1104e4c4:	20c00017 	ldw	r3,0(r4)
1104e4c8:	188001cc 	andi	r2,r3,7
1104e4cc:	10000826 	beq	r2,zero,1104e4f0 <__lo0bits+0x2c>
1104e4d0:	1880004c 	andi	r2,r3,1
1104e4d4:	1000211e 	bne	r2,zero,1104e55c <__lo0bits+0x98>
1104e4d8:	1880008c 	andi	r2,r3,2
1104e4dc:	1000211e 	bne	r2,zero,1104e564 <__lo0bits+0xa0>
1104e4e0:	1806d0ba 	srli	r3,r3,2
1104e4e4:	00800084 	movi	r2,2
1104e4e8:	20c00015 	stw	r3,0(r4)
1104e4ec:	f800283a 	ret
1104e4f0:	18bfffcc 	andi	r2,r3,65535
1104e4f4:	10001326 	beq	r2,zero,1104e544 <__lo0bits+0x80>
1104e4f8:	0005883a 	mov	r2,zero
1104e4fc:	19403fcc 	andi	r5,r3,255
1104e500:	2800021e 	bne	r5,zero,1104e50c <__lo0bits+0x48>
1104e504:	1806d23a 	srli	r3,r3,8
1104e508:	10800204 	addi	r2,r2,8
1104e50c:	194003cc 	andi	r5,r3,15
1104e510:	2800021e 	bne	r5,zero,1104e51c <__lo0bits+0x58>
1104e514:	1806d13a 	srli	r3,r3,4
1104e518:	10800104 	addi	r2,r2,4
1104e51c:	194000cc 	andi	r5,r3,3
1104e520:	2800021e 	bne	r5,zero,1104e52c <__lo0bits+0x68>
1104e524:	1806d0ba 	srli	r3,r3,2
1104e528:	10800084 	addi	r2,r2,2
1104e52c:	1940004c 	andi	r5,r3,1
1104e530:	2800081e 	bne	r5,zero,1104e554 <__lo0bits+0x90>
1104e534:	1806d07a 	srli	r3,r3,1
1104e538:	1800051e 	bne	r3,zero,1104e550 <__lo0bits+0x8c>
1104e53c:	00800804 	movi	r2,32
1104e540:	f800283a 	ret
1104e544:	1806d43a 	srli	r3,r3,16
1104e548:	00800404 	movi	r2,16
1104e54c:	003feb06 	br	1104e4fc <__lo0bits+0x38>
1104e550:	10800044 	addi	r2,r2,1
1104e554:	20c00015 	stw	r3,0(r4)
1104e558:	f800283a 	ret
1104e55c:	0005883a 	mov	r2,zero
1104e560:	f800283a 	ret
1104e564:	1806d07a 	srli	r3,r3,1
1104e568:	00800044 	movi	r2,1
1104e56c:	20c00015 	stw	r3,0(r4)
1104e570:	f800283a 	ret

1104e574 <__i2b>:
1104e574:	defffd04 	addi	sp,sp,-12
1104e578:	dc000015 	stw	r16,0(sp)
1104e57c:	04000044 	movi	r16,1
1104e580:	dc400115 	stw	r17,4(sp)
1104e584:	2823883a 	mov	r17,r5
1104e588:	800b883a 	mov	r5,r16
1104e58c:	dfc00215 	stw	ra,8(sp)
1104e590:	104e1680 	call	1104e168 <_Balloc>
1104e594:	14400515 	stw	r17,20(r2)
1104e598:	14000415 	stw	r16,16(r2)
1104e59c:	dfc00217 	ldw	ra,8(sp)
1104e5a0:	dc400117 	ldw	r17,4(sp)
1104e5a4:	dc000017 	ldw	r16,0(sp)
1104e5a8:	dec00304 	addi	sp,sp,12
1104e5ac:	f800283a 	ret

1104e5b0 <__multiply>:
1104e5b0:	defffa04 	addi	sp,sp,-24
1104e5b4:	dcc00315 	stw	r19,12(sp)
1104e5b8:	dc800215 	stw	r18,8(sp)
1104e5bc:	34c00417 	ldw	r19,16(r6)
1104e5c0:	2c800417 	ldw	r18,16(r5)
1104e5c4:	dd000415 	stw	r20,16(sp)
1104e5c8:	dc400115 	stw	r17,4(sp)
1104e5cc:	dfc00515 	stw	ra,20(sp)
1104e5d0:	dc000015 	stw	r16,0(sp)
1104e5d4:	2829883a 	mov	r20,r5
1104e5d8:	3023883a 	mov	r17,r6
1104e5dc:	94c0050e 	bge	r18,r19,1104e5f4 <__multiply+0x44>
1104e5e0:	9007883a 	mov	r3,r18
1104e5e4:	3029883a 	mov	r20,r6
1104e5e8:	9825883a 	mov	r18,r19
1104e5ec:	2823883a 	mov	r17,r5
1104e5f0:	1827883a 	mov	r19,r3
1104e5f4:	a0800217 	ldw	r2,8(r20)
1104e5f8:	94e1883a 	add	r16,r18,r19
1104e5fc:	a1400117 	ldw	r5,4(r20)
1104e600:	1400010e 	bge	r2,r16,1104e608 <__multiply+0x58>
1104e604:	29400044 	addi	r5,r5,1
1104e608:	104e1680 	call	1104e168 <_Balloc>
1104e60c:	8415883a 	add	r10,r16,r16
1104e610:	12c00504 	addi	r11,r2,20
1104e614:	5295883a 	add	r10,r10,r10
1104e618:	5a95883a 	add	r10,r11,r10
1104e61c:	5807883a 	mov	r3,r11
1104e620:	5a80032e 	bgeu	r11,r10,1104e630 <__multiply+0x80>
1104e624:	18000015 	stw	zero,0(r3)
1104e628:	18c00104 	addi	r3,r3,4
1104e62c:	1abffd36 	bltu	r3,r10,1104e624 <__multiply+0x74>
1104e630:	9ce7883a 	add	r19,r19,r19
1104e634:	94a5883a 	add	r18,r18,r18
1104e638:	89800504 	addi	r6,r17,20
1104e63c:	9ce7883a 	add	r19,r19,r19
1104e640:	a3400504 	addi	r13,r20,20
1104e644:	94a5883a 	add	r18,r18,r18
1104e648:	34d9883a 	add	r12,r6,r19
1104e64c:	6c93883a 	add	r9,r13,r18
1104e650:	3300422e 	bgeu	r6,r12,1104e75c <__multiply+0x1ac>
1104e654:	37c00017 	ldw	ra,0(r6)
1104e658:	fbffffcc 	andi	r15,ra,65535
1104e65c:	78001b26 	beq	r15,zero,1104e6cc <__multiply+0x11c>
1104e660:	5811883a 	mov	r8,r11
1104e664:	681d883a 	mov	r14,r13
1104e668:	000f883a 	mov	r7,zero
1104e66c:	71000017 	ldw	r4,0(r14)
1104e670:	40c00017 	ldw	r3,0(r8)
1104e674:	73800104 	addi	r14,r14,4
1104e678:	217fffcc 	andi	r5,r4,65535
1104e67c:	2bcb383a 	mul	r5,r5,r15
1104e680:	2008d43a 	srli	r4,r4,16
1104e684:	1c7fffcc 	andi	r17,r3,65535
1104e688:	2c4b883a 	add	r5,r5,r17
1104e68c:	29cb883a 	add	r5,r5,r7
1104e690:	23c9383a 	mul	r4,r4,r15
1104e694:	1806d43a 	srli	r3,r3,16
1104e698:	280ed43a 	srli	r7,r5,16
1104e69c:	297fffcc 	andi	r5,r5,65535
1104e6a0:	20c7883a 	add	r3,r4,r3
1104e6a4:	19c7883a 	add	r3,r3,r7
1104e6a8:	1808943a 	slli	r4,r3,16
1104e6ac:	4023883a 	mov	r17,r8
1104e6b0:	180ed43a 	srli	r7,r3,16
1104e6b4:	214ab03a 	or	r5,r4,r5
1104e6b8:	41400015 	stw	r5,0(r8)
1104e6bc:	42000104 	addi	r8,r8,4
1104e6c0:	727fea36 	bltu	r14,r9,1104e66c <__multiply+0xbc>
1104e6c4:	89c00115 	stw	r7,4(r17)
1104e6c8:	37c00017 	ldw	ra,0(r6)
1104e6cc:	f83ed43a 	srli	ra,ra,16
1104e6d0:	f8001f26 	beq	ra,zero,1104e750 <__multiply+0x1a0>
1104e6d4:	58c00017 	ldw	r3,0(r11)
1104e6d8:	681d883a 	mov	r14,r13
1104e6dc:	581f883a 	mov	r15,r11
1104e6e0:	1811883a 	mov	r8,r3
1104e6e4:	5825883a 	mov	r18,r11
1104e6e8:	000f883a 	mov	r7,zero
1104e6ec:	00000106 	br	1104e6f4 <__multiply+0x144>
1104e6f0:	8825883a 	mov	r18,r17
1104e6f4:	7140000b 	ldhu	r5,0(r14)
1104e6f8:	4010d43a 	srli	r8,r8,16
1104e6fc:	193fffcc 	andi	r4,r3,65535
1104e700:	2fcb383a 	mul	r5,r5,ra
1104e704:	7bc00104 	addi	r15,r15,4
1104e708:	73800104 	addi	r14,r14,4
1104e70c:	2a0b883a 	add	r5,r5,r8
1104e710:	29cb883a 	add	r5,r5,r7
1104e714:	2806943a 	slli	r3,r5,16
1104e718:	94400104 	addi	r17,r18,4
1104e71c:	280ad43a 	srli	r5,r5,16
1104e720:	1908b03a 	or	r4,r3,r4
1104e724:	793fff15 	stw	r4,-4(r15)
1104e728:	70ffff17 	ldw	r3,-4(r14)
1104e72c:	8a000017 	ldw	r8,0(r17)
1104e730:	1806d43a 	srli	r3,r3,16
1104e734:	413fffcc 	andi	r4,r8,65535
1104e738:	1fc7383a 	mul	r3,r3,ra
1104e73c:	1907883a 	add	r3,r3,r4
1104e740:	1947883a 	add	r3,r3,r5
1104e744:	180ed43a 	srli	r7,r3,16
1104e748:	727fe936 	bltu	r14,r9,1104e6f0 <__multiply+0x140>
1104e74c:	90c00115 	stw	r3,4(r18)
1104e750:	31800104 	addi	r6,r6,4
1104e754:	5ac00104 	addi	r11,r11,4
1104e758:	333fbe36 	bltu	r6,r12,1104e654 <__multiply+0xa4>
1104e75c:	0400090e 	bge	zero,r16,1104e784 <__multiply+0x1d4>
1104e760:	50ffff17 	ldw	r3,-4(r10)
1104e764:	52bfff04 	addi	r10,r10,-4
1104e768:	18000326 	beq	r3,zero,1104e778 <__multiply+0x1c8>
1104e76c:	00000506 	br	1104e784 <__multiply+0x1d4>
1104e770:	50c00017 	ldw	r3,0(r10)
1104e774:	1800031e 	bne	r3,zero,1104e784 <__multiply+0x1d4>
1104e778:	843fffc4 	addi	r16,r16,-1
1104e77c:	52bfff04 	addi	r10,r10,-4
1104e780:	803ffb1e 	bne	r16,zero,1104e770 <__multiply+0x1c0>
1104e784:	14000415 	stw	r16,16(r2)
1104e788:	dfc00517 	ldw	ra,20(sp)
1104e78c:	dd000417 	ldw	r20,16(sp)
1104e790:	dcc00317 	ldw	r19,12(sp)
1104e794:	dc800217 	ldw	r18,8(sp)
1104e798:	dc400117 	ldw	r17,4(sp)
1104e79c:	dc000017 	ldw	r16,0(sp)
1104e7a0:	dec00604 	addi	sp,sp,24
1104e7a4:	f800283a 	ret

1104e7a8 <__pow5mult>:
1104e7a8:	defffa04 	addi	sp,sp,-24
1104e7ac:	dcc00315 	stw	r19,12(sp)
1104e7b0:	dc000015 	stw	r16,0(sp)
1104e7b4:	dfc00515 	stw	ra,20(sp)
1104e7b8:	dd000415 	stw	r20,16(sp)
1104e7bc:	dc800215 	stw	r18,8(sp)
1104e7c0:	dc400115 	stw	r17,4(sp)
1104e7c4:	308000cc 	andi	r2,r6,3
1104e7c8:	3021883a 	mov	r16,r6
1104e7cc:	2027883a 	mov	r19,r4
1104e7d0:	10002f1e 	bne	r2,zero,1104e890 <__pow5mult+0xe8>
1104e7d4:	2825883a 	mov	r18,r5
1104e7d8:	8021d0ba 	srai	r16,r16,2
1104e7dc:	80001a26 	beq	r16,zero,1104e848 <__pow5mult+0xa0>
1104e7e0:	9c401217 	ldw	r17,72(r19)
1104e7e4:	8800061e 	bne	r17,zero,1104e800 <__pow5mult+0x58>
1104e7e8:	00003406 	br	1104e8bc <__pow5mult+0x114>
1104e7ec:	8021d07a 	srai	r16,r16,1
1104e7f0:	80001526 	beq	r16,zero,1104e848 <__pow5mult+0xa0>
1104e7f4:	88800017 	ldw	r2,0(r17)
1104e7f8:	10001c26 	beq	r2,zero,1104e86c <__pow5mult+0xc4>
1104e7fc:	1023883a 	mov	r17,r2
1104e800:	8080004c 	andi	r2,r16,1
1104e804:	103ff926 	beq	r2,zero,1104e7ec <__pow5mult+0x44>
1104e808:	880d883a 	mov	r6,r17
1104e80c:	900b883a 	mov	r5,r18
1104e810:	9809883a 	mov	r4,r19
1104e814:	104e5b00 	call	1104e5b0 <__multiply>
1104e818:	90001b26 	beq	r18,zero,1104e888 <__pow5mult+0xe0>
1104e81c:	91000117 	ldw	r4,4(r18)
1104e820:	98c01317 	ldw	r3,76(r19)
1104e824:	8021d07a 	srai	r16,r16,1
1104e828:	2109883a 	add	r4,r4,r4
1104e82c:	2109883a 	add	r4,r4,r4
1104e830:	1907883a 	add	r3,r3,r4
1104e834:	19000017 	ldw	r4,0(r3)
1104e838:	91000015 	stw	r4,0(r18)
1104e83c:	1c800015 	stw	r18,0(r3)
1104e840:	1025883a 	mov	r18,r2
1104e844:	803feb1e 	bne	r16,zero,1104e7f4 <__pow5mult+0x4c>
1104e848:	9005883a 	mov	r2,r18
1104e84c:	dfc00517 	ldw	ra,20(sp)
1104e850:	dd000417 	ldw	r20,16(sp)
1104e854:	dcc00317 	ldw	r19,12(sp)
1104e858:	dc800217 	ldw	r18,8(sp)
1104e85c:	dc400117 	ldw	r17,4(sp)
1104e860:	dc000017 	ldw	r16,0(sp)
1104e864:	dec00604 	addi	sp,sp,24
1104e868:	f800283a 	ret
1104e86c:	880d883a 	mov	r6,r17
1104e870:	880b883a 	mov	r5,r17
1104e874:	9809883a 	mov	r4,r19
1104e878:	104e5b00 	call	1104e5b0 <__multiply>
1104e87c:	88800015 	stw	r2,0(r17)
1104e880:	10000015 	stw	zero,0(r2)
1104e884:	003fdd06 	br	1104e7fc <__pow5mult+0x54>
1104e888:	1025883a 	mov	r18,r2
1104e88c:	003fd706 	br	1104e7ec <__pow5mult+0x44>
1104e890:	10bfffc4 	addi	r2,r2,-1
1104e894:	1085883a 	add	r2,r2,r2
1104e898:	00c44174 	movhi	r3,4357
1104e89c:	18dc4704 	addi	r3,r3,28956
1104e8a0:	1085883a 	add	r2,r2,r2
1104e8a4:	1885883a 	add	r2,r3,r2
1104e8a8:	11800017 	ldw	r6,0(r2)
1104e8ac:	000f883a 	mov	r7,zero
1104e8b0:	104e2380 	call	1104e238 <__multadd>
1104e8b4:	1025883a 	mov	r18,r2
1104e8b8:	003fc706 	br	1104e7d8 <__pow5mult+0x30>
1104e8bc:	05000044 	movi	r20,1
1104e8c0:	a00b883a 	mov	r5,r20
1104e8c4:	9809883a 	mov	r4,r19
1104e8c8:	104e1680 	call	1104e168 <_Balloc>
1104e8cc:	1023883a 	mov	r17,r2
1104e8d0:	00809c44 	movi	r2,625
1104e8d4:	88800515 	stw	r2,20(r17)
1104e8d8:	8d000415 	stw	r20,16(r17)
1104e8dc:	9c401215 	stw	r17,72(r19)
1104e8e0:	88000015 	stw	zero,0(r17)
1104e8e4:	003fc606 	br	1104e800 <__pow5mult+0x58>

1104e8e8 <__lshift>:
1104e8e8:	defff904 	addi	sp,sp,-28
1104e8ec:	dd400515 	stw	r21,20(sp)
1104e8f0:	dcc00315 	stw	r19,12(sp)
1104e8f4:	302bd17a 	srai	r21,r6,5
1104e8f8:	2cc00417 	ldw	r19,16(r5)
1104e8fc:	28800217 	ldw	r2,8(r5)
1104e900:	dd000415 	stw	r20,16(sp)
1104e904:	ace7883a 	add	r19,r21,r19
1104e908:	dc800215 	stw	r18,8(sp)
1104e90c:	dc400115 	stw	r17,4(sp)
1104e910:	dc000015 	stw	r16,0(sp)
1104e914:	dfc00615 	stw	ra,24(sp)
1104e918:	9c000044 	addi	r16,r19,1
1104e91c:	2823883a 	mov	r17,r5
1104e920:	3029883a 	mov	r20,r6
1104e924:	2025883a 	mov	r18,r4
1104e928:	29400117 	ldw	r5,4(r5)
1104e92c:	1400030e 	bge	r2,r16,1104e93c <__lshift+0x54>
1104e930:	1085883a 	add	r2,r2,r2
1104e934:	29400044 	addi	r5,r5,1
1104e938:	143ffd16 	blt	r2,r16,1104e930 <__lshift+0x48>
1104e93c:	9009883a 	mov	r4,r18
1104e940:	104e1680 	call	1104e168 <_Balloc>
1104e944:	10c00504 	addi	r3,r2,20
1104e948:	0540070e 	bge	zero,r21,1104e968 <__lshift+0x80>
1104e94c:	ad6b883a 	add	r21,r21,r21
1104e950:	ad6b883a 	add	r21,r21,r21
1104e954:	1809883a 	mov	r4,r3
1104e958:	1d47883a 	add	r3,r3,r21
1104e95c:	20000015 	stw	zero,0(r4)
1104e960:	21000104 	addi	r4,r4,4
1104e964:	193ffd1e 	bne	r3,r4,1104e95c <__lshift+0x74>
1104e968:	8a000417 	ldw	r8,16(r17)
1104e96c:	89000504 	addi	r4,r17,20
1104e970:	a18007cc 	andi	r6,r20,31
1104e974:	4211883a 	add	r8,r8,r8
1104e978:	4211883a 	add	r8,r8,r8
1104e97c:	2211883a 	add	r8,r4,r8
1104e980:	30002326 	beq	r6,zero,1104ea10 <__lshift+0x128>
1104e984:	02400804 	movi	r9,32
1104e988:	4993c83a 	sub	r9,r9,r6
1104e98c:	000b883a 	mov	r5,zero
1104e990:	21c00017 	ldw	r7,0(r4)
1104e994:	1815883a 	mov	r10,r3
1104e998:	18c00104 	addi	r3,r3,4
1104e99c:	398e983a 	sll	r7,r7,r6
1104e9a0:	21000104 	addi	r4,r4,4
1104e9a4:	394ab03a 	or	r5,r7,r5
1104e9a8:	197fff15 	stw	r5,-4(r3)
1104e9ac:	217fff17 	ldw	r5,-4(r4)
1104e9b0:	2a4ad83a 	srl	r5,r5,r9
1104e9b4:	223ff636 	bltu	r4,r8,1104e990 <__lshift+0xa8>
1104e9b8:	51400115 	stw	r5,4(r10)
1104e9bc:	28001a1e 	bne	r5,zero,1104ea28 <__lshift+0x140>
1104e9c0:	843fffc4 	addi	r16,r16,-1
1104e9c4:	14000415 	stw	r16,16(r2)
1104e9c8:	88000826 	beq	r17,zero,1104e9ec <__lshift+0x104>
1104e9cc:	89000117 	ldw	r4,4(r17)
1104e9d0:	90c01317 	ldw	r3,76(r18)
1104e9d4:	2109883a 	add	r4,r4,r4
1104e9d8:	2109883a 	add	r4,r4,r4
1104e9dc:	1907883a 	add	r3,r3,r4
1104e9e0:	19000017 	ldw	r4,0(r3)
1104e9e4:	89000015 	stw	r4,0(r17)
1104e9e8:	1c400015 	stw	r17,0(r3)
1104e9ec:	dfc00617 	ldw	ra,24(sp)
1104e9f0:	dd400517 	ldw	r21,20(sp)
1104e9f4:	dd000417 	ldw	r20,16(sp)
1104e9f8:	dcc00317 	ldw	r19,12(sp)
1104e9fc:	dc800217 	ldw	r18,8(sp)
1104ea00:	dc400117 	ldw	r17,4(sp)
1104ea04:	dc000017 	ldw	r16,0(sp)
1104ea08:	dec00704 	addi	sp,sp,28
1104ea0c:	f800283a 	ret
1104ea10:	21400017 	ldw	r5,0(r4)
1104ea14:	18c00104 	addi	r3,r3,4
1104ea18:	21000104 	addi	r4,r4,4
1104ea1c:	197fff15 	stw	r5,-4(r3)
1104ea20:	223ffb36 	bltu	r4,r8,1104ea10 <__lshift+0x128>
1104ea24:	003fe606 	br	1104e9c0 <__lshift+0xd8>
1104ea28:	9c000084 	addi	r16,r19,2
1104ea2c:	003fe406 	br	1104e9c0 <__lshift+0xd8>

1104ea30 <__mcmp>:
1104ea30:	20800417 	ldw	r2,16(r4)
1104ea34:	28c00417 	ldw	r3,16(r5)
1104ea38:	10c5c83a 	sub	r2,r2,r3
1104ea3c:	1000111e 	bne	r2,zero,1104ea84 <__mcmp+0x54>
1104ea40:	18c7883a 	add	r3,r3,r3
1104ea44:	18c7883a 	add	r3,r3,r3
1104ea48:	21000504 	addi	r4,r4,20
1104ea4c:	29400504 	addi	r5,r5,20
1104ea50:	20c5883a 	add	r2,r4,r3
1104ea54:	28cb883a 	add	r5,r5,r3
1104ea58:	00000106 	br	1104ea60 <__mcmp+0x30>
1104ea5c:	20800a2e 	bgeu	r4,r2,1104ea88 <__mcmp+0x58>
1104ea60:	10bfff04 	addi	r2,r2,-4
1104ea64:	297fff04 	addi	r5,r5,-4
1104ea68:	11800017 	ldw	r6,0(r2)
1104ea6c:	28c00017 	ldw	r3,0(r5)
1104ea70:	30fffa26 	beq	r6,r3,1104ea5c <__mcmp+0x2c>
1104ea74:	30c00236 	bltu	r6,r3,1104ea80 <__mcmp+0x50>
1104ea78:	00800044 	movi	r2,1
1104ea7c:	f800283a 	ret
1104ea80:	00bfffc4 	movi	r2,-1
1104ea84:	f800283a 	ret
1104ea88:	0005883a 	mov	r2,zero
1104ea8c:	f800283a 	ret

1104ea90 <__mdiff>:
1104ea90:	28c00417 	ldw	r3,16(r5)
1104ea94:	30800417 	ldw	r2,16(r6)
1104ea98:	defffa04 	addi	sp,sp,-24
1104ea9c:	dcc00315 	stw	r19,12(sp)
1104eaa0:	dc800215 	stw	r18,8(sp)
1104eaa4:	dfc00515 	stw	ra,20(sp)
1104eaa8:	dd000415 	stw	r20,16(sp)
1104eaac:	dc400115 	stw	r17,4(sp)
1104eab0:	dc000015 	stw	r16,0(sp)
1104eab4:	1887c83a 	sub	r3,r3,r2
1104eab8:	2825883a 	mov	r18,r5
1104eabc:	3027883a 	mov	r19,r6
1104eac0:	1800141e 	bne	r3,zero,1104eb14 <__mdiff+0x84>
1104eac4:	1085883a 	add	r2,r2,r2
1104eac8:	1085883a 	add	r2,r2,r2
1104eacc:	2a000504 	addi	r8,r5,20
1104ead0:	34000504 	addi	r16,r6,20
1104ead4:	4087883a 	add	r3,r8,r2
1104ead8:	8085883a 	add	r2,r16,r2
1104eadc:	00000106 	br	1104eae4 <__mdiff+0x54>
1104eae0:	40c0592e 	bgeu	r8,r3,1104ec48 <__mdiff+0x1b8>
1104eae4:	18ffff04 	addi	r3,r3,-4
1104eae8:	10bfff04 	addi	r2,r2,-4
1104eaec:	19c00017 	ldw	r7,0(r3)
1104eaf0:	11400017 	ldw	r5,0(r2)
1104eaf4:	397ffa26 	beq	r7,r5,1104eae0 <__mdiff+0x50>
1104eaf8:	3940592e 	bgeu	r7,r5,1104ec60 <__mdiff+0x1d0>
1104eafc:	9005883a 	mov	r2,r18
1104eb00:	4023883a 	mov	r17,r8
1104eb04:	9825883a 	mov	r18,r19
1104eb08:	05000044 	movi	r20,1
1104eb0c:	1027883a 	mov	r19,r2
1104eb10:	00000406 	br	1104eb24 <__mdiff+0x94>
1104eb14:	18005616 	blt	r3,zero,1104ec70 <__mdiff+0x1e0>
1104eb18:	34400504 	addi	r17,r6,20
1104eb1c:	2c000504 	addi	r16,r5,20
1104eb20:	0029883a 	mov	r20,zero
1104eb24:	91400117 	ldw	r5,4(r18)
1104eb28:	104e1680 	call	1104e168 <_Balloc>
1104eb2c:	92400417 	ldw	r9,16(r18)
1104eb30:	9b000417 	ldw	r12,16(r19)
1104eb34:	12c00504 	addi	r11,r2,20
1104eb38:	4a51883a 	add	r8,r9,r9
1104eb3c:	6319883a 	add	r12,r12,r12
1104eb40:	4211883a 	add	r8,r8,r8
1104eb44:	6319883a 	add	r12,r12,r12
1104eb48:	15000315 	stw	r20,12(r2)
1104eb4c:	8211883a 	add	r8,r16,r8
1104eb50:	8b19883a 	add	r12,r17,r12
1104eb54:	0007883a 	mov	r3,zero
1104eb58:	81400017 	ldw	r5,0(r16)
1104eb5c:	89c00017 	ldw	r7,0(r17)
1104eb60:	59800104 	addi	r6,r11,4
1104eb64:	293fffcc 	andi	r4,r5,65535
1104eb68:	20c7883a 	add	r3,r4,r3
1104eb6c:	393fffcc 	andi	r4,r7,65535
1104eb70:	1909c83a 	sub	r4,r3,r4
1104eb74:	280ad43a 	srli	r5,r5,16
1104eb78:	380ed43a 	srli	r7,r7,16
1104eb7c:	2007d43a 	srai	r3,r4,16
1104eb80:	213fffcc 	andi	r4,r4,65535
1104eb84:	29cbc83a 	sub	r5,r5,r7
1104eb88:	28c7883a 	add	r3,r5,r3
1104eb8c:	180a943a 	slli	r5,r3,16
1104eb90:	8c400104 	addi	r17,r17,4
1104eb94:	84000104 	addi	r16,r16,4
1104eb98:	2908b03a 	or	r4,r5,r4
1104eb9c:	59000015 	stw	r4,0(r11)
1104eba0:	1807d43a 	srai	r3,r3,16
1104eba4:	3015883a 	mov	r10,r6
1104eba8:	3017883a 	mov	r11,r6
1104ebac:	8b3fea36 	bltu	r17,r12,1104eb58 <__mdiff+0xc8>
1104ebb0:	8200162e 	bgeu	r16,r8,1104ec0c <__mdiff+0x17c>
1104ebb4:	8017883a 	mov	r11,r16
1104ebb8:	59400017 	ldw	r5,0(r11)
1104ebbc:	31800104 	addi	r6,r6,4
1104ebc0:	5ac00104 	addi	r11,r11,4
1104ebc4:	293fffcc 	andi	r4,r5,65535
1104ebc8:	20c7883a 	add	r3,r4,r3
1104ebcc:	280ed43a 	srli	r7,r5,16
1104ebd0:	180bd43a 	srai	r5,r3,16
1104ebd4:	193fffcc 	andi	r4,r3,65535
1104ebd8:	3947883a 	add	r3,r7,r5
1104ebdc:	180a943a 	slli	r5,r3,16
1104ebe0:	1807d43a 	srai	r3,r3,16
1104ebe4:	2908b03a 	or	r4,r5,r4
1104ebe8:	313fff15 	stw	r4,-4(r6)
1104ebec:	5a3ff236 	bltu	r11,r8,1104ebb8 <__mdiff+0x128>
1104ebf0:	0406303a 	nor	r3,zero,r16
1104ebf4:	1a07883a 	add	r3,r3,r8
1104ebf8:	1806d0ba 	srli	r3,r3,2
1104ebfc:	18c00044 	addi	r3,r3,1
1104ec00:	18c7883a 	add	r3,r3,r3
1104ec04:	18c7883a 	add	r3,r3,r3
1104ec08:	50d5883a 	add	r10,r10,r3
1104ec0c:	50ffff04 	addi	r3,r10,-4
1104ec10:	2000041e 	bne	r4,zero,1104ec24 <__mdiff+0x194>
1104ec14:	18ffff04 	addi	r3,r3,-4
1104ec18:	19000017 	ldw	r4,0(r3)
1104ec1c:	4a7fffc4 	addi	r9,r9,-1
1104ec20:	203ffc26 	beq	r4,zero,1104ec14 <__mdiff+0x184>
1104ec24:	12400415 	stw	r9,16(r2)
1104ec28:	dfc00517 	ldw	ra,20(sp)
1104ec2c:	dd000417 	ldw	r20,16(sp)
1104ec30:	dcc00317 	ldw	r19,12(sp)
1104ec34:	dc800217 	ldw	r18,8(sp)
1104ec38:	dc400117 	ldw	r17,4(sp)
1104ec3c:	dc000017 	ldw	r16,0(sp)
1104ec40:	dec00604 	addi	sp,sp,24
1104ec44:	f800283a 	ret
1104ec48:	000b883a 	mov	r5,zero
1104ec4c:	104e1680 	call	1104e168 <_Balloc>
1104ec50:	00c00044 	movi	r3,1
1104ec54:	10c00415 	stw	r3,16(r2)
1104ec58:	10000515 	stw	zero,20(r2)
1104ec5c:	003ff206 	br	1104ec28 <__mdiff+0x198>
1104ec60:	8023883a 	mov	r17,r16
1104ec64:	0029883a 	mov	r20,zero
1104ec68:	4021883a 	mov	r16,r8
1104ec6c:	003fad06 	br	1104eb24 <__mdiff+0x94>
1104ec70:	9005883a 	mov	r2,r18
1104ec74:	94400504 	addi	r17,r18,20
1104ec78:	9c000504 	addi	r16,r19,20
1104ec7c:	9825883a 	mov	r18,r19
1104ec80:	05000044 	movi	r20,1
1104ec84:	1027883a 	mov	r19,r2
1104ec88:	003fa606 	br	1104eb24 <__mdiff+0x94>

1104ec8c <__ulp>:
1104ec8c:	295ffc2c 	andhi	r5,r5,32752
1104ec90:	00bf3034 	movhi	r2,64704
1104ec94:	2887883a 	add	r3,r5,r2
1104ec98:	00c0020e 	bge	zero,r3,1104eca4 <__ulp+0x18>
1104ec9c:	0005883a 	mov	r2,zero
1104eca0:	f800283a 	ret
1104eca4:	00c7c83a 	sub	r3,zero,r3
1104eca8:	1807d53a 	srai	r3,r3,20
1104ecac:	008004c4 	movi	r2,19
1104ecb0:	10c00b0e 	bge	r2,r3,1104ece0 <__ulp+0x54>
1104ecb4:	18bffb04 	addi	r2,r3,-20
1104ecb8:	01000784 	movi	r4,30
1104ecbc:	0007883a 	mov	r3,zero
1104ecc0:	20800516 	blt	r4,r2,1104ecd8 <__ulp+0x4c>
1104ecc4:	010007c4 	movi	r4,31
1104ecc8:	2089c83a 	sub	r4,r4,r2
1104eccc:	00800044 	movi	r2,1
1104ecd0:	1104983a 	sll	r2,r2,r4
1104ecd4:	f800283a 	ret
1104ecd8:	00800044 	movi	r2,1
1104ecdc:	f800283a 	ret
1104ece0:	01400234 	movhi	r5,8
1104ece4:	28c7d83a 	sra	r3,r5,r3
1104ece8:	0005883a 	mov	r2,zero
1104ecec:	f800283a 	ret

1104ecf0 <__b2d>:
1104ecf0:	defffa04 	addi	sp,sp,-24
1104ecf4:	dc000015 	stw	r16,0(sp)
1104ecf8:	24000417 	ldw	r16,16(r4)
1104ecfc:	dc400115 	stw	r17,4(sp)
1104ed00:	24400504 	addi	r17,r4,20
1104ed04:	8421883a 	add	r16,r16,r16
1104ed08:	8421883a 	add	r16,r16,r16
1104ed0c:	8c21883a 	add	r16,r17,r16
1104ed10:	dc800215 	stw	r18,8(sp)
1104ed14:	84bfff17 	ldw	r18,-4(r16)
1104ed18:	dd000415 	stw	r20,16(sp)
1104ed1c:	dcc00315 	stw	r19,12(sp)
1104ed20:	9009883a 	mov	r4,r18
1104ed24:	2829883a 	mov	r20,r5
1104ed28:	dfc00515 	stw	ra,20(sp)
1104ed2c:	104e45c0 	call	1104e45c <__hi0bits>
1104ed30:	00c00804 	movi	r3,32
1104ed34:	1889c83a 	sub	r4,r3,r2
1104ed38:	a1000015 	stw	r4,0(r20)
1104ed3c:	01000284 	movi	r4,10
1104ed40:	84ffff04 	addi	r19,r16,-4
1104ed44:	20801216 	blt	r4,r2,1104ed90 <__b2d+0xa0>
1104ed48:	018002c4 	movi	r6,11
1104ed4c:	308dc83a 	sub	r6,r6,r2
1104ed50:	9186d83a 	srl	r3,r18,r6
1104ed54:	18cffc34 	orhi	r3,r3,16368
1104ed58:	8cc0212e 	bgeu	r17,r19,1104ede0 <__b2d+0xf0>
1104ed5c:	813ffe17 	ldw	r4,-8(r16)
1104ed60:	218cd83a 	srl	r6,r4,r6
1104ed64:	10800544 	addi	r2,r2,21
1104ed68:	9084983a 	sll	r2,r18,r2
1104ed6c:	1184b03a 	or	r2,r2,r6
1104ed70:	dfc00517 	ldw	ra,20(sp)
1104ed74:	dd000417 	ldw	r20,16(sp)
1104ed78:	dcc00317 	ldw	r19,12(sp)
1104ed7c:	dc800217 	ldw	r18,8(sp)
1104ed80:	dc400117 	ldw	r17,4(sp)
1104ed84:	dc000017 	ldw	r16,0(sp)
1104ed88:	dec00604 	addi	sp,sp,24
1104ed8c:	f800283a 	ret
1104ed90:	8cc00f2e 	bgeu	r17,r19,1104edd0 <__b2d+0xe0>
1104ed94:	117ffd44 	addi	r5,r2,-11
1104ed98:	80bffe17 	ldw	r2,-8(r16)
1104ed9c:	28000e26 	beq	r5,zero,1104edd8 <__b2d+0xe8>
1104eda0:	1949c83a 	sub	r4,r3,r5
1104eda4:	9164983a 	sll	r18,r18,r5
1104eda8:	1106d83a 	srl	r3,r2,r4
1104edac:	81bffe04 	addi	r6,r16,-8
1104edb0:	948ffc34 	orhi	r18,r18,16368
1104edb4:	90c6b03a 	or	r3,r18,r3
1104edb8:	89800e2e 	bgeu	r17,r6,1104edf4 <__b2d+0x104>
1104edbc:	81bffd17 	ldw	r6,-12(r16)
1104edc0:	1144983a 	sll	r2,r2,r5
1104edc4:	310ad83a 	srl	r5,r6,r4
1104edc8:	2884b03a 	or	r2,r5,r2
1104edcc:	003fe806 	br	1104ed70 <__b2d+0x80>
1104edd0:	10bffd44 	addi	r2,r2,-11
1104edd4:	1000041e 	bne	r2,zero,1104ede8 <__b2d+0xf8>
1104edd8:	90cffc34 	orhi	r3,r18,16368
1104eddc:	003fe406 	br	1104ed70 <__b2d+0x80>
1104ede0:	000d883a 	mov	r6,zero
1104ede4:	003fdf06 	br	1104ed64 <__b2d+0x74>
1104ede8:	90a4983a 	sll	r18,r18,r2
1104edec:	0005883a 	mov	r2,zero
1104edf0:	003ff906 	br	1104edd8 <__b2d+0xe8>
1104edf4:	1144983a 	sll	r2,r2,r5
1104edf8:	003fdd06 	br	1104ed70 <__b2d+0x80>

1104edfc <__d2b>:
1104edfc:	defff804 	addi	sp,sp,-32
1104ee00:	dc000215 	stw	r16,8(sp)
1104ee04:	3021883a 	mov	r16,r6
1104ee08:	dc400315 	stw	r17,12(sp)
1104ee0c:	8022907a 	slli	r17,r16,1
1104ee10:	dd000615 	stw	r20,24(sp)
1104ee14:	2829883a 	mov	r20,r5
1104ee18:	01400044 	movi	r5,1
1104ee1c:	dcc00515 	stw	r19,20(sp)
1104ee20:	dc800415 	stw	r18,16(sp)
1104ee24:	dfc00715 	stw	ra,28(sp)
1104ee28:	3825883a 	mov	r18,r7
1104ee2c:	8822d57a 	srli	r17,r17,21
1104ee30:	104e1680 	call	1104e168 <_Balloc>
1104ee34:	1027883a 	mov	r19,r2
1104ee38:	00800434 	movhi	r2,16
1104ee3c:	10bfffc4 	addi	r2,r2,-1
1104ee40:	808c703a 	and	r6,r16,r2
1104ee44:	88000126 	beq	r17,zero,1104ee4c <__d2b+0x50>
1104ee48:	31800434 	orhi	r6,r6,16
1104ee4c:	d9800015 	stw	r6,0(sp)
1104ee50:	a0002426 	beq	r20,zero,1104eee4 <__d2b+0xe8>
1104ee54:	d9000104 	addi	r4,sp,4
1104ee58:	dd000115 	stw	r20,4(sp)
1104ee5c:	104e4c40 	call	1104e4c4 <__lo0bits>
1104ee60:	d8c00017 	ldw	r3,0(sp)
1104ee64:	10002f1e 	bne	r2,zero,1104ef24 <__d2b+0x128>
1104ee68:	d9000117 	ldw	r4,4(sp)
1104ee6c:	99000515 	stw	r4,20(r19)
1104ee70:	1821003a 	cmpeq	r16,r3,zero
1104ee74:	01000084 	movi	r4,2
1104ee78:	2421c83a 	sub	r16,r4,r16
1104ee7c:	98c00615 	stw	r3,24(r19)
1104ee80:	9c000415 	stw	r16,16(r19)
1104ee84:	88001f1e 	bne	r17,zero,1104ef04 <__d2b+0x108>
1104ee88:	10bef384 	addi	r2,r2,-1074
1104ee8c:	90800015 	stw	r2,0(r18)
1104ee90:	00900034 	movhi	r2,16384
1104ee94:	10bfffc4 	addi	r2,r2,-1
1104ee98:	8085883a 	add	r2,r16,r2
1104ee9c:	1085883a 	add	r2,r2,r2
1104eea0:	1085883a 	add	r2,r2,r2
1104eea4:	9885883a 	add	r2,r19,r2
1104eea8:	11000517 	ldw	r4,20(r2)
1104eeac:	8020917a 	slli	r16,r16,5
1104eeb0:	104e45c0 	call	1104e45c <__hi0bits>
1104eeb4:	d8c00817 	ldw	r3,32(sp)
1104eeb8:	8085c83a 	sub	r2,r16,r2
1104eebc:	18800015 	stw	r2,0(r3)
1104eec0:	9805883a 	mov	r2,r19
1104eec4:	dfc00717 	ldw	ra,28(sp)
1104eec8:	dd000617 	ldw	r20,24(sp)
1104eecc:	dcc00517 	ldw	r19,20(sp)
1104eed0:	dc800417 	ldw	r18,16(sp)
1104eed4:	dc400317 	ldw	r17,12(sp)
1104eed8:	dc000217 	ldw	r16,8(sp)
1104eedc:	dec00804 	addi	sp,sp,32
1104eee0:	f800283a 	ret
1104eee4:	d809883a 	mov	r4,sp
1104eee8:	104e4c40 	call	1104e4c4 <__lo0bits>
1104eeec:	d8c00017 	ldw	r3,0(sp)
1104eef0:	04000044 	movi	r16,1
1104eef4:	9c000415 	stw	r16,16(r19)
1104eef8:	98c00515 	stw	r3,20(r19)
1104eefc:	10800804 	addi	r2,r2,32
1104ef00:	883fe126 	beq	r17,zero,1104ee88 <__d2b+0x8c>
1104ef04:	00c00d44 	movi	r3,53
1104ef08:	8c7ef344 	addi	r17,r17,-1075
1104ef0c:	88a3883a 	add	r17,r17,r2
1104ef10:	1885c83a 	sub	r2,r3,r2
1104ef14:	d8c00817 	ldw	r3,32(sp)
1104ef18:	94400015 	stw	r17,0(r18)
1104ef1c:	18800015 	stw	r2,0(r3)
1104ef20:	003fe706 	br	1104eec0 <__d2b+0xc4>
1104ef24:	01000804 	movi	r4,32
1104ef28:	2089c83a 	sub	r4,r4,r2
1104ef2c:	1908983a 	sll	r4,r3,r4
1104ef30:	d9400117 	ldw	r5,4(sp)
1104ef34:	1886d83a 	srl	r3,r3,r2
1104ef38:	2148b03a 	or	r4,r4,r5
1104ef3c:	99000515 	stw	r4,20(r19)
1104ef40:	d8c00015 	stw	r3,0(sp)
1104ef44:	003fca06 	br	1104ee70 <__d2b+0x74>

1104ef48 <__ratio>:
1104ef48:	defff904 	addi	sp,sp,-28
1104ef4c:	dc400315 	stw	r17,12(sp)
1104ef50:	2823883a 	mov	r17,r5
1104ef54:	d9400104 	addi	r5,sp,4
1104ef58:	dfc00615 	stw	ra,24(sp)
1104ef5c:	dcc00515 	stw	r19,20(sp)
1104ef60:	dc800415 	stw	r18,16(sp)
1104ef64:	2027883a 	mov	r19,r4
1104ef68:	dc000215 	stw	r16,8(sp)
1104ef6c:	104ecf00 	call	1104ecf0 <__b2d>
1104ef70:	d80b883a 	mov	r5,sp
1104ef74:	8809883a 	mov	r4,r17
1104ef78:	1025883a 	mov	r18,r2
1104ef7c:	1821883a 	mov	r16,r3
1104ef80:	104ecf00 	call	1104ecf0 <__b2d>
1104ef84:	8a000417 	ldw	r8,16(r17)
1104ef88:	99000417 	ldw	r4,16(r19)
1104ef8c:	d9400117 	ldw	r5,4(sp)
1104ef90:	2209c83a 	sub	r4,r4,r8
1104ef94:	2010917a 	slli	r8,r4,5
1104ef98:	d9000017 	ldw	r4,0(sp)
1104ef9c:	2909c83a 	sub	r4,r5,r4
1104efa0:	4109883a 	add	r4,r8,r4
1104efa4:	01000e0e 	bge	zero,r4,1104efe0 <__ratio+0x98>
1104efa8:	2008953a 	slli	r4,r4,20
1104efac:	2421883a 	add	r16,r4,r16
1104efb0:	100d883a 	mov	r6,r2
1104efb4:	180f883a 	mov	r7,r3
1104efb8:	9009883a 	mov	r4,r18
1104efbc:	800b883a 	mov	r5,r16
1104efc0:	10537e00 	call	110537e0 <__divdf3>
1104efc4:	dfc00617 	ldw	ra,24(sp)
1104efc8:	dcc00517 	ldw	r19,20(sp)
1104efcc:	dc800417 	ldw	r18,16(sp)
1104efd0:	dc400317 	ldw	r17,12(sp)
1104efd4:	dc000217 	ldw	r16,8(sp)
1104efd8:	dec00704 	addi	sp,sp,28
1104efdc:	f800283a 	ret
1104efe0:	2008953a 	slli	r4,r4,20
1104efe4:	1907c83a 	sub	r3,r3,r4
1104efe8:	003ff106 	br	1104efb0 <__ratio+0x68>

1104efec <_mprec_log10>:
1104efec:	defffe04 	addi	sp,sp,-8
1104eff0:	dc000015 	stw	r16,0(sp)
1104eff4:	dfc00115 	stw	ra,4(sp)
1104eff8:	008005c4 	movi	r2,23
1104effc:	2021883a 	mov	r16,r4
1104f000:	11000d0e 	bge	r2,r4,1104f038 <_mprec_log10+0x4c>
1104f004:	0005883a 	mov	r2,zero
1104f008:	00cffc34 	movhi	r3,16368
1104f00c:	843fffc4 	addi	r16,r16,-1
1104f010:	000d883a 	mov	r6,zero
1104f014:	01d00934 	movhi	r7,16420
1104f018:	1009883a 	mov	r4,r2
1104f01c:	180b883a 	mov	r5,r3
1104f020:	1044d3c0 	call	11044d3c <__muldf3>
1104f024:	803ff91e 	bne	r16,zero,1104f00c <_mprec_log10+0x20>
1104f028:	dfc00117 	ldw	ra,4(sp)
1104f02c:	dc000017 	ldw	r16,0(sp)
1104f030:	dec00204 	addi	sp,sp,8
1104f034:	f800283a 	ret
1104f038:	202090fa 	slli	r16,r4,3
1104f03c:	00844174 	movhi	r2,4357
1104f040:	109c5e04 	addi	r2,r2,29048
1104f044:	1421883a 	add	r16,r2,r16
1104f048:	80800017 	ldw	r2,0(r16)
1104f04c:	80c00117 	ldw	r3,4(r16)
1104f050:	dfc00117 	ldw	ra,4(sp)
1104f054:	dc000017 	ldw	r16,0(sp)
1104f058:	dec00204 	addi	sp,sp,8
1104f05c:	f800283a 	ret

1104f060 <__copybits>:
1104f060:	297fffc4 	addi	r5,r5,-1
1104f064:	280fd17a 	srai	r7,r5,5
1104f068:	30c00417 	ldw	r3,16(r6)
1104f06c:	30800504 	addi	r2,r6,20
1104f070:	39c00044 	addi	r7,r7,1
1104f074:	18c7883a 	add	r3,r3,r3
1104f078:	39cf883a 	add	r7,r7,r7
1104f07c:	18c7883a 	add	r3,r3,r3
1104f080:	39cf883a 	add	r7,r7,r7
1104f084:	10c7883a 	add	r3,r2,r3
1104f088:	21cf883a 	add	r7,r4,r7
1104f08c:	10c00d2e 	bgeu	r2,r3,1104f0c4 <__copybits+0x64>
1104f090:	200b883a 	mov	r5,r4
1104f094:	12000017 	ldw	r8,0(r2)
1104f098:	29400104 	addi	r5,r5,4
1104f09c:	10800104 	addi	r2,r2,4
1104f0a0:	2a3fff15 	stw	r8,-4(r5)
1104f0a4:	10fffb36 	bltu	r2,r3,1104f094 <__copybits+0x34>
1104f0a8:	1985c83a 	sub	r2,r3,r6
1104f0ac:	10bffac4 	addi	r2,r2,-21
1104f0b0:	1004d0ba 	srli	r2,r2,2
1104f0b4:	10800044 	addi	r2,r2,1
1104f0b8:	1085883a 	add	r2,r2,r2
1104f0bc:	1085883a 	add	r2,r2,r2
1104f0c0:	2089883a 	add	r4,r4,r2
1104f0c4:	21c0032e 	bgeu	r4,r7,1104f0d4 <__copybits+0x74>
1104f0c8:	20000015 	stw	zero,0(r4)
1104f0cc:	21000104 	addi	r4,r4,4
1104f0d0:	21fffd36 	bltu	r4,r7,1104f0c8 <__copybits+0x68>
1104f0d4:	f800283a 	ret

1104f0d8 <__any_on>:
1104f0d8:	20c00417 	ldw	r3,16(r4)
1104f0dc:	2805d17a 	srai	r2,r5,5
1104f0e0:	21000504 	addi	r4,r4,20
1104f0e4:	18800d0e 	bge	r3,r2,1104f11c <__any_on+0x44>
1104f0e8:	18c7883a 	add	r3,r3,r3
1104f0ec:	18c7883a 	add	r3,r3,r3
1104f0f0:	20c7883a 	add	r3,r4,r3
1104f0f4:	20c0192e 	bgeu	r4,r3,1104f15c <__any_on+0x84>
1104f0f8:	18bfff17 	ldw	r2,-4(r3)
1104f0fc:	18ffff04 	addi	r3,r3,-4
1104f100:	1000041e 	bne	r2,zero,1104f114 <__any_on+0x3c>
1104f104:	20c0142e 	bgeu	r4,r3,1104f158 <__any_on+0x80>
1104f108:	18ffff04 	addi	r3,r3,-4
1104f10c:	19400017 	ldw	r5,0(r3)
1104f110:	283ffc26 	beq	r5,zero,1104f104 <__any_on+0x2c>
1104f114:	00800044 	movi	r2,1
1104f118:	f800283a 	ret
1104f11c:	10c00a0e 	bge	r2,r3,1104f148 <__any_on+0x70>
1104f120:	1085883a 	add	r2,r2,r2
1104f124:	1085883a 	add	r2,r2,r2
1104f128:	294007cc 	andi	r5,r5,31
1104f12c:	2087883a 	add	r3,r4,r2
1104f130:	283ff026 	beq	r5,zero,1104f0f4 <__any_on+0x1c>
1104f134:	19800017 	ldw	r6,0(r3)
1104f138:	3144d83a 	srl	r2,r6,r5
1104f13c:	114a983a 	sll	r5,r2,r5
1104f140:	317ff41e 	bne	r6,r5,1104f114 <__any_on+0x3c>
1104f144:	003feb06 	br	1104f0f4 <__any_on+0x1c>
1104f148:	1085883a 	add	r2,r2,r2
1104f14c:	1085883a 	add	r2,r2,r2
1104f150:	2087883a 	add	r3,r4,r2
1104f154:	003fe706 	br	1104f0f4 <__any_on+0x1c>
1104f158:	f800283a 	ret
1104f15c:	0005883a 	mov	r2,zero
1104f160:	f800283a 	ret

1104f164 <_realloc_r>:
1104f164:	defff604 	addi	sp,sp,-40
1104f168:	dc800215 	stw	r18,8(sp)
1104f16c:	dfc00915 	stw	ra,36(sp)
1104f170:	df000815 	stw	fp,32(sp)
1104f174:	ddc00715 	stw	r23,28(sp)
1104f178:	dd800615 	stw	r22,24(sp)
1104f17c:	dd400515 	stw	r21,20(sp)
1104f180:	dd000415 	stw	r20,16(sp)
1104f184:	dcc00315 	stw	r19,12(sp)
1104f188:	dc400115 	stw	r17,4(sp)
1104f18c:	dc000015 	stw	r16,0(sp)
1104f190:	3025883a 	mov	r18,r6
1104f194:	2800b726 	beq	r5,zero,1104f474 <_realloc_r+0x310>
1104f198:	282b883a 	mov	r21,r5
1104f19c:	2029883a 	mov	r20,r4
1104f1a0:	10547e00 	call	110547e0 <__malloc_lock>
1104f1a4:	a8bfff17 	ldw	r2,-4(r21)
1104f1a8:	043fff04 	movi	r16,-4
1104f1ac:	90c002c4 	addi	r3,r18,11
1104f1b0:	01000584 	movi	r4,22
1104f1b4:	acfffe04 	addi	r19,r21,-8
1104f1b8:	1420703a 	and	r16,r2,r16
1104f1bc:	20c0332e 	bgeu	r4,r3,1104f28c <_realloc_r+0x128>
1104f1c0:	047ffe04 	movi	r17,-8
1104f1c4:	1c62703a 	and	r17,r3,r17
1104f1c8:	8807883a 	mov	r3,r17
1104f1cc:	88005816 	blt	r17,zero,1104f330 <_realloc_r+0x1cc>
1104f1d0:	8c805736 	bltu	r17,r18,1104f330 <_realloc_r+0x1cc>
1104f1d4:	80c0300e 	bge	r16,r3,1104f298 <_realloc_r+0x134>
1104f1d8:	07044174 	movhi	fp,4357
1104f1dc:	e71dd204 	addi	fp,fp,30536
1104f1e0:	e1c00217 	ldw	r7,8(fp)
1104f1e4:	9c09883a 	add	r4,r19,r16
1104f1e8:	22000117 	ldw	r8,4(r4)
1104f1ec:	21c06326 	beq	r4,r7,1104f37c <_realloc_r+0x218>
1104f1f0:	017fff84 	movi	r5,-2
1104f1f4:	414a703a 	and	r5,r8,r5
1104f1f8:	214b883a 	add	r5,r4,r5
1104f1fc:	29800117 	ldw	r6,4(r5)
1104f200:	3180004c 	andi	r6,r6,1
1104f204:	30003f26 	beq	r6,zero,1104f304 <_realloc_r+0x1a0>
1104f208:	1080004c 	andi	r2,r2,1
1104f20c:	10008326 	beq	r2,zero,1104f41c <_realloc_r+0x2b8>
1104f210:	900b883a 	mov	r5,r18
1104f214:	a009883a 	mov	r4,r20
1104f218:	104d4ac0 	call	1104d4ac <_malloc_r>
1104f21c:	1025883a 	mov	r18,r2
1104f220:	10011e26 	beq	r2,zero,1104f69c <_realloc_r+0x538>
1104f224:	a93fff17 	ldw	r4,-4(r21)
1104f228:	10fffe04 	addi	r3,r2,-8
1104f22c:	00bfff84 	movi	r2,-2
1104f230:	2084703a 	and	r2,r4,r2
1104f234:	9885883a 	add	r2,r19,r2
1104f238:	1880ee26 	beq	r3,r2,1104f5f4 <_realloc_r+0x490>
1104f23c:	81bfff04 	addi	r6,r16,-4
1104f240:	00800904 	movi	r2,36
1104f244:	1180b836 	bltu	r2,r6,1104f528 <_realloc_r+0x3c4>
1104f248:	00c004c4 	movi	r3,19
1104f24c:	19809636 	bltu	r3,r6,1104f4a8 <_realloc_r+0x344>
1104f250:	9005883a 	mov	r2,r18
1104f254:	a807883a 	mov	r3,r21
1104f258:	19000017 	ldw	r4,0(r3)
1104f25c:	11000015 	stw	r4,0(r2)
1104f260:	19000117 	ldw	r4,4(r3)
1104f264:	11000115 	stw	r4,4(r2)
1104f268:	18c00217 	ldw	r3,8(r3)
1104f26c:	10c00215 	stw	r3,8(r2)
1104f270:	a80b883a 	mov	r5,r21
1104f274:	a009883a 	mov	r4,r20
1104f278:	104c8c00 	call	1104c8c0 <_free_r>
1104f27c:	a009883a 	mov	r4,r20
1104f280:	10548040 	call	11054804 <__malloc_unlock>
1104f284:	9005883a 	mov	r2,r18
1104f288:	00001206 	br	1104f2d4 <_realloc_r+0x170>
1104f28c:	00c00404 	movi	r3,16
1104f290:	1823883a 	mov	r17,r3
1104f294:	003fce06 	br	1104f1d0 <_realloc_r+0x6c>
1104f298:	a825883a 	mov	r18,r21
1104f29c:	8445c83a 	sub	r2,r16,r17
1104f2a0:	00c003c4 	movi	r3,15
1104f2a4:	18802636 	bltu	r3,r2,1104f340 <_realloc_r+0x1dc>
1104f2a8:	99800117 	ldw	r6,4(r19)
1104f2ac:	9c07883a 	add	r3,r19,r16
1104f2b0:	3180004c 	andi	r6,r6,1
1104f2b4:	3420b03a 	or	r16,r6,r16
1104f2b8:	9c000115 	stw	r16,4(r19)
1104f2bc:	18800117 	ldw	r2,4(r3)
1104f2c0:	10800054 	ori	r2,r2,1
1104f2c4:	18800115 	stw	r2,4(r3)
1104f2c8:	a009883a 	mov	r4,r20
1104f2cc:	10548040 	call	11054804 <__malloc_unlock>
1104f2d0:	9005883a 	mov	r2,r18
1104f2d4:	dfc00917 	ldw	ra,36(sp)
1104f2d8:	df000817 	ldw	fp,32(sp)
1104f2dc:	ddc00717 	ldw	r23,28(sp)
1104f2e0:	dd800617 	ldw	r22,24(sp)
1104f2e4:	dd400517 	ldw	r21,20(sp)
1104f2e8:	dd000417 	ldw	r20,16(sp)
1104f2ec:	dcc00317 	ldw	r19,12(sp)
1104f2f0:	dc800217 	ldw	r18,8(sp)
1104f2f4:	dc400117 	ldw	r17,4(sp)
1104f2f8:	dc000017 	ldw	r16,0(sp)
1104f2fc:	dec00a04 	addi	sp,sp,40
1104f300:	f800283a 	ret
1104f304:	017fff04 	movi	r5,-4
1104f308:	414a703a 	and	r5,r8,r5
1104f30c:	814d883a 	add	r6,r16,r5
1104f310:	30c01f16 	blt	r6,r3,1104f390 <_realloc_r+0x22c>
1104f314:	20800317 	ldw	r2,12(r4)
1104f318:	20c00217 	ldw	r3,8(r4)
1104f31c:	a825883a 	mov	r18,r21
1104f320:	3021883a 	mov	r16,r6
1104f324:	18800315 	stw	r2,12(r3)
1104f328:	10c00215 	stw	r3,8(r2)
1104f32c:	003fdb06 	br	1104f29c <_realloc_r+0x138>
1104f330:	00800304 	movi	r2,12
1104f334:	a0800015 	stw	r2,0(r20)
1104f338:	0005883a 	mov	r2,zero
1104f33c:	003fe506 	br	1104f2d4 <_realloc_r+0x170>
1104f340:	98c00117 	ldw	r3,4(r19)
1104f344:	9c4b883a 	add	r5,r19,r17
1104f348:	11000054 	ori	r4,r2,1
1104f34c:	18c0004c 	andi	r3,r3,1
1104f350:	1c62b03a 	or	r17,r3,r17
1104f354:	9c400115 	stw	r17,4(r19)
1104f358:	29000115 	stw	r4,4(r5)
1104f35c:	2885883a 	add	r2,r5,r2
1104f360:	10c00117 	ldw	r3,4(r2)
1104f364:	29400204 	addi	r5,r5,8
1104f368:	a009883a 	mov	r4,r20
1104f36c:	18c00054 	ori	r3,r3,1
1104f370:	10c00115 	stw	r3,4(r2)
1104f374:	104c8c00 	call	1104c8c0 <_free_r>
1104f378:	003fd306 	br	1104f2c8 <_realloc_r+0x164>
1104f37c:	017fff04 	movi	r5,-4
1104f380:	414a703a 	and	r5,r8,r5
1104f384:	89800404 	addi	r6,r17,16
1104f388:	8151883a 	add	r8,r16,r5
1104f38c:	4180590e 	bge	r8,r6,1104f4f4 <_realloc_r+0x390>
1104f390:	1080004c 	andi	r2,r2,1
1104f394:	103f9e1e 	bne	r2,zero,1104f210 <_realloc_r+0xac>
1104f398:	adbffe17 	ldw	r22,-8(r21)
1104f39c:	00bfff04 	movi	r2,-4
1104f3a0:	9dadc83a 	sub	r22,r19,r22
1104f3a4:	b1800117 	ldw	r6,4(r22)
1104f3a8:	3084703a 	and	r2,r6,r2
1104f3ac:	20002026 	beq	r4,zero,1104f430 <_realloc_r+0x2cc>
1104f3b0:	80af883a 	add	r23,r16,r2
1104f3b4:	b96f883a 	add	r23,r23,r5
1104f3b8:	21c05f26 	beq	r4,r7,1104f538 <_realloc_r+0x3d4>
1104f3bc:	b8c01c16 	blt	r23,r3,1104f430 <_realloc_r+0x2cc>
1104f3c0:	20800317 	ldw	r2,12(r4)
1104f3c4:	20c00217 	ldw	r3,8(r4)
1104f3c8:	81bfff04 	addi	r6,r16,-4
1104f3cc:	01000904 	movi	r4,36
1104f3d0:	18800315 	stw	r2,12(r3)
1104f3d4:	10c00215 	stw	r3,8(r2)
1104f3d8:	b0c00217 	ldw	r3,8(r22)
1104f3dc:	b0800317 	ldw	r2,12(r22)
1104f3e0:	b4800204 	addi	r18,r22,8
1104f3e4:	18800315 	stw	r2,12(r3)
1104f3e8:	10c00215 	stw	r3,8(r2)
1104f3ec:	21801b36 	bltu	r4,r6,1104f45c <_realloc_r+0x2f8>
1104f3f0:	008004c4 	movi	r2,19
1104f3f4:	1180352e 	bgeu	r2,r6,1104f4cc <_realloc_r+0x368>
1104f3f8:	a8800017 	ldw	r2,0(r21)
1104f3fc:	b0800215 	stw	r2,8(r22)
1104f400:	a8800117 	ldw	r2,4(r21)
1104f404:	b0800315 	stw	r2,12(r22)
1104f408:	008006c4 	movi	r2,27
1104f40c:	11807f36 	bltu	r2,r6,1104f60c <_realloc_r+0x4a8>
1104f410:	b0800404 	addi	r2,r22,16
1104f414:	ad400204 	addi	r21,r21,8
1104f418:	00002d06 	br	1104f4d0 <_realloc_r+0x36c>
1104f41c:	adbffe17 	ldw	r22,-8(r21)
1104f420:	00bfff04 	movi	r2,-4
1104f424:	9dadc83a 	sub	r22,r19,r22
1104f428:	b1000117 	ldw	r4,4(r22)
1104f42c:	2084703a 	and	r2,r4,r2
1104f430:	b03f7726 	beq	r22,zero,1104f210 <_realloc_r+0xac>
1104f434:	80af883a 	add	r23,r16,r2
1104f438:	b8ff7516 	blt	r23,r3,1104f210 <_realloc_r+0xac>
1104f43c:	b0800317 	ldw	r2,12(r22)
1104f440:	b0c00217 	ldw	r3,8(r22)
1104f444:	81bfff04 	addi	r6,r16,-4
1104f448:	01000904 	movi	r4,36
1104f44c:	18800315 	stw	r2,12(r3)
1104f450:	10c00215 	stw	r3,8(r2)
1104f454:	b4800204 	addi	r18,r22,8
1104f458:	21bfe52e 	bgeu	r4,r6,1104f3f0 <_realloc_r+0x28c>
1104f45c:	a80b883a 	mov	r5,r21
1104f460:	9009883a 	mov	r4,r18
1104f464:	104dee40 	call	1104dee4 <memmove>
1104f468:	b821883a 	mov	r16,r23
1104f46c:	b027883a 	mov	r19,r22
1104f470:	003f8a06 	br	1104f29c <_realloc_r+0x138>
1104f474:	300b883a 	mov	r5,r6
1104f478:	dfc00917 	ldw	ra,36(sp)
1104f47c:	df000817 	ldw	fp,32(sp)
1104f480:	ddc00717 	ldw	r23,28(sp)
1104f484:	dd800617 	ldw	r22,24(sp)
1104f488:	dd400517 	ldw	r21,20(sp)
1104f48c:	dd000417 	ldw	r20,16(sp)
1104f490:	dcc00317 	ldw	r19,12(sp)
1104f494:	dc800217 	ldw	r18,8(sp)
1104f498:	dc400117 	ldw	r17,4(sp)
1104f49c:	dc000017 	ldw	r16,0(sp)
1104f4a0:	dec00a04 	addi	sp,sp,40
1104f4a4:	104d4ac1 	jmpi	1104d4ac <_malloc_r>
1104f4a8:	a8c00017 	ldw	r3,0(r21)
1104f4ac:	90c00015 	stw	r3,0(r18)
1104f4b0:	a8c00117 	ldw	r3,4(r21)
1104f4b4:	90c00115 	stw	r3,4(r18)
1104f4b8:	00c006c4 	movi	r3,27
1104f4bc:	19804536 	bltu	r3,r6,1104f5d4 <_realloc_r+0x470>
1104f4c0:	90800204 	addi	r2,r18,8
1104f4c4:	a8c00204 	addi	r3,r21,8
1104f4c8:	003f6306 	br	1104f258 <_realloc_r+0xf4>
1104f4cc:	9005883a 	mov	r2,r18
1104f4d0:	a8c00017 	ldw	r3,0(r21)
1104f4d4:	b821883a 	mov	r16,r23
1104f4d8:	b027883a 	mov	r19,r22
1104f4dc:	10c00015 	stw	r3,0(r2)
1104f4e0:	a8c00117 	ldw	r3,4(r21)
1104f4e4:	10c00115 	stw	r3,4(r2)
1104f4e8:	a8c00217 	ldw	r3,8(r21)
1104f4ec:	10c00215 	stw	r3,8(r2)
1104f4f0:	003f6a06 	br	1104f29c <_realloc_r+0x138>
1104f4f4:	9c67883a 	add	r19,r19,r17
1104f4f8:	4445c83a 	sub	r2,r8,r17
1104f4fc:	e4c00215 	stw	r19,8(fp)
1104f500:	10800054 	ori	r2,r2,1
1104f504:	98800115 	stw	r2,4(r19)
1104f508:	a8bfff17 	ldw	r2,-4(r21)
1104f50c:	a009883a 	mov	r4,r20
1104f510:	1080004c 	andi	r2,r2,1
1104f514:	1462b03a 	or	r17,r2,r17
1104f518:	ac7fff15 	stw	r17,-4(r21)
1104f51c:	10548040 	call	11054804 <__malloc_unlock>
1104f520:	a805883a 	mov	r2,r21
1104f524:	003f6b06 	br	1104f2d4 <_realloc_r+0x170>
1104f528:	a80b883a 	mov	r5,r21
1104f52c:	9009883a 	mov	r4,r18
1104f530:	104dee40 	call	1104dee4 <memmove>
1104f534:	003f4e06 	br	1104f270 <_realloc_r+0x10c>
1104f538:	89000404 	addi	r4,r17,16
1104f53c:	b93fbc16 	blt	r23,r4,1104f430 <_realloc_r+0x2cc>
1104f540:	b0800317 	ldw	r2,12(r22)
1104f544:	b0c00217 	ldw	r3,8(r22)
1104f548:	81bfff04 	addi	r6,r16,-4
1104f54c:	01000904 	movi	r4,36
1104f550:	18800315 	stw	r2,12(r3)
1104f554:	10c00215 	stw	r3,8(r2)
1104f558:	b4800204 	addi	r18,r22,8
1104f55c:	21804336 	bltu	r4,r6,1104f66c <_realloc_r+0x508>
1104f560:	008004c4 	movi	r2,19
1104f564:	11803f2e 	bgeu	r2,r6,1104f664 <_realloc_r+0x500>
1104f568:	a8800017 	ldw	r2,0(r21)
1104f56c:	b0800215 	stw	r2,8(r22)
1104f570:	a8800117 	ldw	r2,4(r21)
1104f574:	b0800315 	stw	r2,12(r22)
1104f578:	008006c4 	movi	r2,27
1104f57c:	11803f36 	bltu	r2,r6,1104f67c <_realloc_r+0x518>
1104f580:	b0800404 	addi	r2,r22,16
1104f584:	ad400204 	addi	r21,r21,8
1104f588:	a8c00017 	ldw	r3,0(r21)
1104f58c:	10c00015 	stw	r3,0(r2)
1104f590:	a8c00117 	ldw	r3,4(r21)
1104f594:	10c00115 	stw	r3,4(r2)
1104f598:	a8c00217 	ldw	r3,8(r21)
1104f59c:	10c00215 	stw	r3,8(r2)
1104f5a0:	b447883a 	add	r3,r22,r17
1104f5a4:	bc45c83a 	sub	r2,r23,r17
1104f5a8:	e0c00215 	stw	r3,8(fp)
1104f5ac:	10800054 	ori	r2,r2,1
1104f5b0:	18800115 	stw	r2,4(r3)
1104f5b4:	b0800117 	ldw	r2,4(r22)
1104f5b8:	a009883a 	mov	r4,r20
1104f5bc:	1080004c 	andi	r2,r2,1
1104f5c0:	1462b03a 	or	r17,r2,r17
1104f5c4:	b4400115 	stw	r17,4(r22)
1104f5c8:	10548040 	call	11054804 <__malloc_unlock>
1104f5cc:	9005883a 	mov	r2,r18
1104f5d0:	003f4006 	br	1104f2d4 <_realloc_r+0x170>
1104f5d4:	a8c00217 	ldw	r3,8(r21)
1104f5d8:	90c00215 	stw	r3,8(r18)
1104f5dc:	a8c00317 	ldw	r3,12(r21)
1104f5e0:	90c00315 	stw	r3,12(r18)
1104f5e4:	30801126 	beq	r6,r2,1104f62c <_realloc_r+0x4c8>
1104f5e8:	90800404 	addi	r2,r18,16
1104f5ec:	a8c00404 	addi	r3,r21,16
1104f5f0:	003f1906 	br	1104f258 <_realloc_r+0xf4>
1104f5f4:	90ffff17 	ldw	r3,-4(r18)
1104f5f8:	00bfff04 	movi	r2,-4
1104f5fc:	a825883a 	mov	r18,r21
1104f600:	1884703a 	and	r2,r3,r2
1104f604:	80a1883a 	add	r16,r16,r2
1104f608:	003f2406 	br	1104f29c <_realloc_r+0x138>
1104f60c:	a8800217 	ldw	r2,8(r21)
1104f610:	b0800415 	stw	r2,16(r22)
1104f614:	a8800317 	ldw	r2,12(r21)
1104f618:	b0800515 	stw	r2,20(r22)
1104f61c:	31000a26 	beq	r6,r4,1104f648 <_realloc_r+0x4e4>
1104f620:	b0800604 	addi	r2,r22,24
1104f624:	ad400404 	addi	r21,r21,16
1104f628:	003fa906 	br	1104f4d0 <_realloc_r+0x36c>
1104f62c:	a9000417 	ldw	r4,16(r21)
1104f630:	90800604 	addi	r2,r18,24
1104f634:	a8c00604 	addi	r3,r21,24
1104f638:	91000415 	stw	r4,16(r18)
1104f63c:	a9000517 	ldw	r4,20(r21)
1104f640:	91000515 	stw	r4,20(r18)
1104f644:	003f0406 	br	1104f258 <_realloc_r+0xf4>
1104f648:	a8c00417 	ldw	r3,16(r21)
1104f64c:	ad400604 	addi	r21,r21,24
1104f650:	b0800804 	addi	r2,r22,32
1104f654:	b0c00615 	stw	r3,24(r22)
1104f658:	a8ffff17 	ldw	r3,-4(r21)
1104f65c:	b0c00715 	stw	r3,28(r22)
1104f660:	003f9b06 	br	1104f4d0 <_realloc_r+0x36c>
1104f664:	9005883a 	mov	r2,r18
1104f668:	003fc706 	br	1104f588 <_realloc_r+0x424>
1104f66c:	a80b883a 	mov	r5,r21
1104f670:	9009883a 	mov	r4,r18
1104f674:	104dee40 	call	1104dee4 <memmove>
1104f678:	003fc906 	br	1104f5a0 <_realloc_r+0x43c>
1104f67c:	a8800217 	ldw	r2,8(r21)
1104f680:	b0800415 	stw	r2,16(r22)
1104f684:	a8800317 	ldw	r2,12(r21)
1104f688:	b0800515 	stw	r2,20(r22)
1104f68c:	31000726 	beq	r6,r4,1104f6ac <_realloc_r+0x548>
1104f690:	b0800604 	addi	r2,r22,24
1104f694:	ad400404 	addi	r21,r21,16
1104f698:	003fbb06 	br	1104f588 <_realloc_r+0x424>
1104f69c:	a009883a 	mov	r4,r20
1104f6a0:	10548040 	call	11054804 <__malloc_unlock>
1104f6a4:	0005883a 	mov	r2,zero
1104f6a8:	003f0a06 	br	1104f2d4 <_realloc_r+0x170>
1104f6ac:	a8c00417 	ldw	r3,16(r21)
1104f6b0:	ad400604 	addi	r21,r21,24
1104f6b4:	b0800804 	addi	r2,r22,32
1104f6b8:	b0c00615 	stw	r3,24(r22)
1104f6bc:	a8ffff17 	ldw	r3,-4(r21)
1104f6c0:	b0c00715 	stw	r3,28(r22)
1104f6c4:	003fb006 	br	1104f588 <_realloc_r+0x424>

1104f6c8 <__fpclassifyd>:
1104f6c8:	00a00034 	movhi	r2,32768
1104f6cc:	10bfffc4 	addi	r2,r2,-1
1104f6d0:	2884703a 	and	r2,r5,r2
1104f6d4:	10000726 	beq	r2,zero,1104f6f4 <__fpclassifyd+0x2c>
1104f6d8:	00fffc34 	movhi	r3,65520
1104f6dc:	019ff834 	movhi	r6,32736
1104f6e0:	28c7883a 	add	r3,r5,r3
1104f6e4:	31bfffc4 	addi	r6,r6,-1
1104f6e8:	30c00536 	bltu	r6,r3,1104f700 <__fpclassifyd+0x38>
1104f6ec:	00800104 	movi	r2,4
1104f6f0:	f800283a 	ret
1104f6f4:	2000021e 	bne	r4,zero,1104f700 <__fpclassifyd+0x38>
1104f6f8:	00800084 	movi	r2,2
1104f6fc:	f800283a 	ret
1104f700:	00dffc34 	movhi	r3,32752
1104f704:	019ff834 	movhi	r6,32736
1104f708:	28cb883a 	add	r5,r5,r3
1104f70c:	31bfffc4 	addi	r6,r6,-1
1104f710:	317ff62e 	bgeu	r6,r5,1104f6ec <__fpclassifyd+0x24>
1104f714:	01400434 	movhi	r5,16
1104f718:	297fffc4 	addi	r5,r5,-1
1104f71c:	28800236 	bltu	r5,r2,1104f728 <__fpclassifyd+0x60>
1104f720:	008000c4 	movi	r2,3
1104f724:	f800283a 	ret
1104f728:	10c00226 	beq	r2,r3,1104f734 <__fpclassifyd+0x6c>
1104f72c:	0005883a 	mov	r2,zero
1104f730:	f800283a 	ret
1104f734:	2005003a 	cmpeq	r2,r4,zero
1104f738:	f800283a 	ret

1104f73c <_sbrk_r>:
1104f73c:	defffd04 	addi	sp,sp,-12
1104f740:	dc000015 	stw	r16,0(sp)
1104f744:	040441b4 	movhi	r16,4358
1104f748:	dc400115 	stw	r17,4(sp)
1104f74c:	842a2804 	addi	r16,r16,-22368
1104f750:	2023883a 	mov	r17,r4
1104f754:	2809883a 	mov	r4,r5
1104f758:	dfc00215 	stw	ra,8(sp)
1104f75c:	80000015 	stw	zero,0(r16)
1104f760:	10549c40 	call	110549c4 <sbrk>
1104f764:	00ffffc4 	movi	r3,-1
1104f768:	10c00526 	beq	r2,r3,1104f780 <_sbrk_r+0x44>
1104f76c:	dfc00217 	ldw	ra,8(sp)
1104f770:	dc400117 	ldw	r17,4(sp)
1104f774:	dc000017 	ldw	r16,0(sp)
1104f778:	dec00304 	addi	sp,sp,12
1104f77c:	f800283a 	ret
1104f780:	80c00017 	ldw	r3,0(r16)
1104f784:	183ff926 	beq	r3,zero,1104f76c <_sbrk_r+0x30>
1104f788:	88c00015 	stw	r3,0(r17)
1104f78c:	003ff706 	br	1104f76c <_sbrk_r+0x30>

1104f790 <__sread>:
1104f790:	defffe04 	addi	sp,sp,-8
1104f794:	dc000015 	stw	r16,0(sp)
1104f798:	2821883a 	mov	r16,r5
1104f79c:	2940038f 	ldh	r5,14(r5)
1104f7a0:	dfc00115 	stw	ra,4(sp)
1104f7a4:	10529900 	call	11052990 <_read_r>
1104f7a8:	10000716 	blt	r2,zero,1104f7c8 <__sread+0x38>
1104f7ac:	80c01417 	ldw	r3,80(r16)
1104f7b0:	1887883a 	add	r3,r3,r2
1104f7b4:	80c01415 	stw	r3,80(r16)
1104f7b8:	dfc00117 	ldw	ra,4(sp)
1104f7bc:	dc000017 	ldw	r16,0(sp)
1104f7c0:	dec00204 	addi	sp,sp,8
1104f7c4:	f800283a 	ret
1104f7c8:	80c0030b 	ldhu	r3,12(r16)
1104f7cc:	18fbffcc 	andi	r3,r3,61439
1104f7d0:	80c0030d 	sth	r3,12(r16)
1104f7d4:	dfc00117 	ldw	ra,4(sp)
1104f7d8:	dc000017 	ldw	r16,0(sp)
1104f7dc:	dec00204 	addi	sp,sp,8
1104f7e0:	f800283a 	ret

1104f7e4 <__seofread>:
1104f7e4:	0005883a 	mov	r2,zero
1104f7e8:	f800283a 	ret

1104f7ec <__swrite>:
1104f7ec:	2880030b 	ldhu	r2,12(r5)
1104f7f0:	defffb04 	addi	sp,sp,-20
1104f7f4:	dcc00315 	stw	r19,12(sp)
1104f7f8:	dc800215 	stw	r18,8(sp)
1104f7fc:	dc400115 	stw	r17,4(sp)
1104f800:	dc000015 	stw	r16,0(sp)
1104f804:	dfc00415 	stw	ra,16(sp)
1104f808:	10c0400c 	andi	r3,r2,256
1104f80c:	2821883a 	mov	r16,r5
1104f810:	2023883a 	mov	r17,r4
1104f814:	3025883a 	mov	r18,r6
1104f818:	3827883a 	mov	r19,r7
1104f81c:	18000526 	beq	r3,zero,1104f834 <__swrite+0x48>
1104f820:	2940038f 	ldh	r5,14(r5)
1104f824:	01c00084 	movi	r7,2
1104f828:	000d883a 	mov	r6,zero
1104f82c:	10529300 	call	11052930 <_lseek_r>
1104f830:	8080030b 	ldhu	r2,12(r16)
1104f834:	8140038f 	ldh	r5,14(r16)
1104f838:	10bbffcc 	andi	r2,r2,61439
1104f83c:	980f883a 	mov	r7,r19
1104f840:	900d883a 	mov	r6,r18
1104f844:	8809883a 	mov	r4,r17
1104f848:	8080030d 	sth	r2,12(r16)
1104f84c:	dfc00417 	ldw	ra,16(sp)
1104f850:	dcc00317 	ldw	r19,12(sp)
1104f854:	dc800217 	ldw	r18,8(sp)
1104f858:	dc400117 	ldw	r17,4(sp)
1104f85c:	dc000017 	ldw	r16,0(sp)
1104f860:	dec00504 	addi	sp,sp,20
1104f864:	10523fc1 	jmpi	110523fc <_write_r>

1104f868 <__sseek>:
1104f868:	defffe04 	addi	sp,sp,-8
1104f86c:	dc000015 	stw	r16,0(sp)
1104f870:	2821883a 	mov	r16,r5
1104f874:	2940038f 	ldh	r5,14(r5)
1104f878:	dfc00115 	stw	ra,4(sp)
1104f87c:	10529300 	call	11052930 <_lseek_r>
1104f880:	00ffffc4 	movi	r3,-1
1104f884:	10c00826 	beq	r2,r3,1104f8a8 <__sseek+0x40>
1104f888:	80c0030b 	ldhu	r3,12(r16)
1104f88c:	80801415 	stw	r2,80(r16)
1104f890:	18c40014 	ori	r3,r3,4096
1104f894:	80c0030d 	sth	r3,12(r16)
1104f898:	dfc00117 	ldw	ra,4(sp)
1104f89c:	dc000017 	ldw	r16,0(sp)
1104f8a0:	dec00204 	addi	sp,sp,8
1104f8a4:	f800283a 	ret
1104f8a8:	80c0030b 	ldhu	r3,12(r16)
1104f8ac:	18fbffcc 	andi	r3,r3,61439
1104f8b0:	80c0030d 	sth	r3,12(r16)
1104f8b4:	dfc00117 	ldw	ra,4(sp)
1104f8b8:	dc000017 	ldw	r16,0(sp)
1104f8bc:	dec00204 	addi	sp,sp,8
1104f8c0:	f800283a 	ret

1104f8c4 <__sclose>:
1104f8c4:	2940038f 	ldh	r5,14(r5)
1104f8c8:	105245c1 	jmpi	1105245c <_close_r>

1104f8cc <strcmp>:
1104f8cc:	2144b03a 	or	r2,r4,r5
1104f8d0:	108000cc 	andi	r2,r2,3
1104f8d4:	1000171e 	bne	r2,zero,1104f934 <strcmp+0x68>
1104f8d8:	20800017 	ldw	r2,0(r4)
1104f8dc:	28c00017 	ldw	r3,0(r5)
1104f8e0:	10c0141e 	bne	r2,r3,1104f934 <strcmp+0x68>
1104f8e4:	027fbff4 	movhi	r9,65279
1104f8e8:	4a7fbfc4 	addi	r9,r9,-257
1104f8ec:	0086303a 	nor	r3,zero,r2
1104f8f0:	02202074 	movhi	r8,32897
1104f8f4:	1245883a 	add	r2,r2,r9
1104f8f8:	42202004 	addi	r8,r8,-32640
1104f8fc:	10c4703a 	and	r2,r2,r3
1104f900:	1204703a 	and	r2,r2,r8
1104f904:	10000226 	beq	r2,zero,1104f910 <strcmp+0x44>
1104f908:	00002306 	br	1104f998 <strcmp+0xcc>
1104f90c:	1000221e 	bne	r2,zero,1104f998 <strcmp+0xcc>
1104f910:	21000104 	addi	r4,r4,4
1104f914:	20c00017 	ldw	r3,0(r4)
1104f918:	29400104 	addi	r5,r5,4
1104f91c:	29800017 	ldw	r6,0(r5)
1104f920:	1a4f883a 	add	r7,r3,r9
1104f924:	00c4303a 	nor	r2,zero,r3
1104f928:	3884703a 	and	r2,r7,r2
1104f92c:	1204703a 	and	r2,r2,r8
1104f930:	19bff626 	beq	r3,r6,1104f90c <strcmp+0x40>
1104f934:	20800003 	ldbu	r2,0(r4)
1104f938:	10c03fcc 	andi	r3,r2,255
1104f93c:	18c0201c 	xori	r3,r3,128
1104f940:	18ffe004 	addi	r3,r3,-128
1104f944:	18000c26 	beq	r3,zero,1104f978 <strcmp+0xac>
1104f948:	29800007 	ldb	r6,0(r5)
1104f94c:	19800326 	beq	r3,r6,1104f95c <strcmp+0x90>
1104f950:	00001306 	br	1104f9a0 <strcmp+0xd4>
1104f954:	29800007 	ldb	r6,0(r5)
1104f958:	11800b1e 	bne	r2,r6,1104f988 <strcmp+0xbc>
1104f95c:	21000044 	addi	r4,r4,1
1104f960:	20c00003 	ldbu	r3,0(r4)
1104f964:	29400044 	addi	r5,r5,1
1104f968:	18803fcc 	andi	r2,r3,255
1104f96c:	1080201c 	xori	r2,r2,128
1104f970:	10bfe004 	addi	r2,r2,-128
1104f974:	103ff71e 	bne	r2,zero,1104f954 <strcmp+0x88>
1104f978:	0007883a 	mov	r3,zero
1104f97c:	28800003 	ldbu	r2,0(r5)
1104f980:	1885c83a 	sub	r2,r3,r2
1104f984:	f800283a 	ret
1104f988:	28800003 	ldbu	r2,0(r5)
1104f98c:	18c03fcc 	andi	r3,r3,255
1104f990:	1885c83a 	sub	r2,r3,r2
1104f994:	f800283a 	ret
1104f998:	0005883a 	mov	r2,zero
1104f99c:	f800283a 	ret
1104f9a0:	10c03fcc 	andi	r3,r2,255
1104f9a4:	003ff506 	br	1104f97c <strcmp+0xb0>

1104f9a8 <__ssprint_r>:
1104f9a8:	30800217 	ldw	r2,8(r6)
1104f9ac:	defff604 	addi	sp,sp,-40
1104f9b0:	dc800215 	stw	r18,8(sp)
1104f9b4:	dfc00915 	stw	ra,36(sp)
1104f9b8:	df000815 	stw	fp,32(sp)
1104f9bc:	ddc00715 	stw	r23,28(sp)
1104f9c0:	dd800615 	stw	r22,24(sp)
1104f9c4:	dd400515 	stw	r21,20(sp)
1104f9c8:	dd000415 	stw	r20,16(sp)
1104f9cc:	dcc00315 	stw	r19,12(sp)
1104f9d0:	dc400115 	stw	r17,4(sp)
1104f9d4:	dc000015 	stw	r16,0(sp)
1104f9d8:	3025883a 	mov	r18,r6
1104f9dc:	10005826 	beq	r2,zero,1104fb40 <__ssprint_r+0x198>
1104f9e0:	2027883a 	mov	r19,r4
1104f9e4:	35c00017 	ldw	r23,0(r6)
1104f9e8:	29000017 	ldw	r4,0(r5)
1104f9ec:	28800217 	ldw	r2,8(r5)
1104f9f0:	2823883a 	mov	r17,r5
1104f9f4:	0039883a 	mov	fp,zero
1104f9f8:	0021883a 	mov	r16,zero
1104f9fc:	80003926 	beq	r16,zero,1104fae4 <__ssprint_r+0x13c>
1104fa00:	102b883a 	mov	r21,r2
1104fa04:	102d883a 	mov	r22,r2
1104fa08:	80803a36 	bltu	r16,r2,1104faf4 <__ssprint_r+0x14c>
1104fa0c:	88c0030b 	ldhu	r3,12(r17)
1104fa10:	1881200c 	andi	r2,r3,1152
1104fa14:	10002626 	beq	r2,zero,1104fab0 <__ssprint_r+0x108>
1104fa18:	88800517 	ldw	r2,20(r17)
1104fa1c:	89400417 	ldw	r5,16(r17)
1104fa20:	81800044 	addi	r6,r16,1
1104fa24:	108f883a 	add	r7,r2,r2
1104fa28:	3885883a 	add	r2,r7,r2
1104fa2c:	100ed7fa 	srli	r7,r2,31
1104fa30:	216dc83a 	sub	r22,r4,r5
1104fa34:	3589883a 	add	r4,r6,r22
1104fa38:	3885883a 	add	r2,r7,r2
1104fa3c:	102bd07a 	srai	r21,r2,1
1104fa40:	a80d883a 	mov	r6,r21
1104fa44:	a900022e 	bgeu	r21,r4,1104fa50 <__ssprint_r+0xa8>
1104fa48:	202b883a 	mov	r21,r4
1104fa4c:	200d883a 	mov	r6,r4
1104fa50:	18c1000c 	andi	r3,r3,1024
1104fa54:	18002a26 	beq	r3,zero,1104fb00 <__ssprint_r+0x158>
1104fa58:	300b883a 	mov	r5,r6
1104fa5c:	9809883a 	mov	r4,r19
1104fa60:	104d4ac0 	call	1104d4ac <_malloc_r>
1104fa64:	1029883a 	mov	r20,r2
1104fa68:	10002c26 	beq	r2,zero,1104fb1c <__ssprint_r+0x174>
1104fa6c:	89400417 	ldw	r5,16(r17)
1104fa70:	b00d883a 	mov	r6,r22
1104fa74:	1009883a 	mov	r4,r2
1104fa78:	104dd9c0 	call	1104dd9c <memcpy>
1104fa7c:	8880030b 	ldhu	r2,12(r17)
1104fa80:	00fedfc4 	movi	r3,-1153
1104fa84:	10c4703a 	and	r2,r2,r3
1104fa88:	10802014 	ori	r2,r2,128
1104fa8c:	8880030d 	sth	r2,12(r17)
1104fa90:	a589883a 	add	r4,r20,r22
1104fa94:	adadc83a 	sub	r22,r21,r22
1104fa98:	8d400515 	stw	r21,20(r17)
1104fa9c:	8d800215 	stw	r22,8(r17)
1104faa0:	8d000415 	stw	r20,16(r17)
1104faa4:	89000015 	stw	r4,0(r17)
1104faa8:	802b883a 	mov	r21,r16
1104faac:	802d883a 	mov	r22,r16
1104fab0:	b00d883a 	mov	r6,r22
1104fab4:	e00b883a 	mov	r5,fp
1104fab8:	104dee40 	call	1104dee4 <memmove>
1104fabc:	88800217 	ldw	r2,8(r17)
1104fac0:	89000017 	ldw	r4,0(r17)
1104fac4:	90c00217 	ldw	r3,8(r18)
1104fac8:	1545c83a 	sub	r2,r2,r21
1104facc:	2589883a 	add	r4,r4,r22
1104fad0:	88800215 	stw	r2,8(r17)
1104fad4:	89000015 	stw	r4,0(r17)
1104fad8:	1c21c83a 	sub	r16,r3,r16
1104fadc:	94000215 	stw	r16,8(r18)
1104fae0:	80001726 	beq	r16,zero,1104fb40 <__ssprint_r+0x198>
1104fae4:	bf000017 	ldw	fp,0(r23)
1104fae8:	bc000117 	ldw	r16,4(r23)
1104faec:	bdc00204 	addi	r23,r23,8
1104faf0:	003fc206 	br	1104f9fc <__ssprint_r+0x54>
1104faf4:	802b883a 	mov	r21,r16
1104faf8:	802d883a 	mov	r22,r16
1104fafc:	003fec06 	br	1104fab0 <__ssprint_r+0x108>
1104fb00:	9809883a 	mov	r4,r19
1104fb04:	104f1640 	call	1104f164 <_realloc_r>
1104fb08:	1029883a 	mov	r20,r2
1104fb0c:	103fe01e 	bne	r2,zero,1104fa90 <__ssprint_r+0xe8>
1104fb10:	89400417 	ldw	r5,16(r17)
1104fb14:	9809883a 	mov	r4,r19
1104fb18:	104c8c00 	call	1104c8c0 <_free_r>
1104fb1c:	88c0030b 	ldhu	r3,12(r17)
1104fb20:	00800304 	movi	r2,12
1104fb24:	98800015 	stw	r2,0(r19)
1104fb28:	18c01014 	ori	r3,r3,64
1104fb2c:	88c0030d 	sth	r3,12(r17)
1104fb30:	00bfffc4 	movi	r2,-1
1104fb34:	90000215 	stw	zero,8(r18)
1104fb38:	90000115 	stw	zero,4(r18)
1104fb3c:	00000206 	br	1104fb48 <__ssprint_r+0x1a0>
1104fb40:	90000115 	stw	zero,4(r18)
1104fb44:	0005883a 	mov	r2,zero
1104fb48:	dfc00917 	ldw	ra,36(sp)
1104fb4c:	df000817 	ldw	fp,32(sp)
1104fb50:	ddc00717 	ldw	r23,28(sp)
1104fb54:	dd800617 	ldw	r22,24(sp)
1104fb58:	dd400517 	ldw	r21,20(sp)
1104fb5c:	dd000417 	ldw	r20,16(sp)
1104fb60:	dcc00317 	ldw	r19,12(sp)
1104fb64:	dc800217 	ldw	r18,8(sp)
1104fb68:	dc400117 	ldw	r17,4(sp)
1104fb6c:	dc000017 	ldw	r16,0(sp)
1104fb70:	dec00a04 	addi	sp,sp,40
1104fb74:	f800283a 	ret

1104fb78 <___svfiprintf_internal_r>:
1104fb78:	2880030b 	ldhu	r2,12(r5)
1104fb7c:	deffc804 	addi	sp,sp,-224
1104fb80:	dcc03115 	stw	r19,196(sp)
1104fb84:	dfc03715 	stw	ra,220(sp)
1104fb88:	df003615 	stw	fp,216(sp)
1104fb8c:	ddc03515 	stw	r23,212(sp)
1104fb90:	dd803415 	stw	r22,208(sp)
1104fb94:	dd403315 	stw	r21,204(sp)
1104fb98:	dd003215 	stw	r20,200(sp)
1104fb9c:	dc803015 	stw	r18,192(sp)
1104fba0:	dc402f15 	stw	r17,188(sp)
1104fba4:	dc002e15 	stw	r16,184(sp)
1104fba8:	d9402715 	stw	r5,156(sp)
1104fbac:	d9002a15 	stw	r4,168(sp)
1104fbb0:	1080200c 	andi	r2,r2,128
1104fbb4:	d9c02315 	stw	r7,140(sp)
1104fbb8:	3027883a 	mov	r19,r6
1104fbbc:	10000226 	beq	r2,zero,1104fbc8 <___svfiprintf_internal_r+0x50>
1104fbc0:	28800417 	ldw	r2,16(r5)
1104fbc4:	10041d26 	beq	r2,zero,11050c3c <___svfiprintf_internal_r+0x10c4>
1104fbc8:	dac01a04 	addi	r11,sp,104
1104fbcc:	dac01e15 	stw	r11,120(sp)
1104fbd0:	d8801e17 	ldw	r2,120(sp)
1104fbd4:	dac019c4 	addi	r11,sp,103
1104fbd8:	dd402a17 	ldw	r21,168(sp)
1104fbdc:	ddc02717 	ldw	r23,156(sp)
1104fbe0:	05844174 	movhi	r22,4357
1104fbe4:	05044174 	movhi	r20,4357
1104fbe8:	dac01f15 	stw	r11,124(sp)
1104fbec:	12d7c83a 	sub	r11,r2,r11
1104fbf0:	b59c9404 	addi	r22,r22,29264
1104fbf4:	a51c9004 	addi	r20,r20,29248
1104fbf8:	dec01a15 	stw	sp,104(sp)
1104fbfc:	d8001c15 	stw	zero,112(sp)
1104fc00:	d8001b15 	stw	zero,108(sp)
1104fc04:	d811883a 	mov	r8,sp
1104fc08:	d8002915 	stw	zero,164(sp)
1104fc0c:	d8002515 	stw	zero,148(sp)
1104fc10:	dac02b15 	stw	r11,172(sp)
1104fc14:	98800007 	ldb	r2,0(r19)
1104fc18:	1002dd26 	beq	r2,zero,11050790 <___svfiprintf_internal_r+0xc18>
1104fc1c:	00c00944 	movi	r3,37
1104fc20:	9823883a 	mov	r17,r19
1104fc24:	10c0021e 	bne	r2,r3,1104fc30 <___svfiprintf_internal_r+0xb8>
1104fc28:	00001406 	br	1104fc7c <___svfiprintf_internal_r+0x104>
1104fc2c:	10c00326 	beq	r2,r3,1104fc3c <___svfiprintf_internal_r+0xc4>
1104fc30:	8c400044 	addi	r17,r17,1
1104fc34:	88800007 	ldb	r2,0(r17)
1104fc38:	103ffc1e 	bne	r2,zero,1104fc2c <___svfiprintf_internal_r+0xb4>
1104fc3c:	8ce1c83a 	sub	r16,r17,r19
1104fc40:	80000e26 	beq	r16,zero,1104fc7c <___svfiprintf_internal_r+0x104>
1104fc44:	d8c01c17 	ldw	r3,112(sp)
1104fc48:	d8801b17 	ldw	r2,108(sp)
1104fc4c:	44c00015 	stw	r19,0(r8)
1104fc50:	1c07883a 	add	r3,r3,r16
1104fc54:	10800044 	addi	r2,r2,1
1104fc58:	d8c01c15 	stw	r3,112(sp)
1104fc5c:	44000115 	stw	r16,4(r8)
1104fc60:	d8801b15 	stw	r2,108(sp)
1104fc64:	00c001c4 	movi	r3,7
1104fc68:	18831e16 	blt	r3,r2,110508e4 <___svfiprintf_internal_r+0xd6c>
1104fc6c:	42000204 	addi	r8,r8,8
1104fc70:	dac02517 	ldw	r11,148(sp)
1104fc74:	5c17883a 	add	r11,r11,r16
1104fc78:	dac02515 	stw	r11,148(sp)
1104fc7c:	88800007 	ldb	r2,0(r17)
1104fc80:	1002c526 	beq	r2,zero,11050798 <___svfiprintf_internal_r+0xc20>
1104fc84:	88c00047 	ldb	r3,1(r17)
1104fc88:	8cc00044 	addi	r19,r17,1
1104fc8c:	d8001d85 	stb	zero,118(sp)
1104fc90:	0009883a 	mov	r4,zero
1104fc94:	000f883a 	mov	r7,zero
1104fc98:	043fffc4 	movi	r16,-1
1104fc9c:	d8002415 	stw	zero,144(sp)
1104fca0:	0025883a 	mov	r18,zero
1104fca4:	01401604 	movi	r5,88
1104fca8:	01800244 	movi	r6,9
1104fcac:	02800a84 	movi	r10,42
1104fcb0:	02401b04 	movi	r9,108
1104fcb4:	9cc00044 	addi	r19,r19,1
1104fcb8:	18bff804 	addi	r2,r3,-32
1104fcbc:	2881dd36 	bltu	r5,r2,11050434 <___svfiprintf_internal_r+0x8bc>
1104fcc0:	100490ba 	slli	r2,r2,2
1104fcc4:	02c44174 	movhi	r11,4357
1104fcc8:	5aff3604 	addi	r11,r11,-808
1104fccc:	12c5883a 	add	r2,r2,r11
1104fcd0:	10800017 	ldw	r2,0(r2)
1104fcd4:	1000683a 	jmp	r2
1104fcd8:	1104fed4 	ori	r4,r2,5115
1104fcdc:	11050434 	orhi	r4,r2,5136
1104fce0:	11050434 	orhi	r4,r2,5136
1104fce4:	1104fec8 	cmpgei	r4,r2,5115
1104fce8:	11050434 	orhi	r4,r2,5136
1104fcec:	11050434 	orhi	r4,r2,5136
1104fcf0:	11050434 	orhi	r4,r2,5136
1104fcf4:	11050434 	orhi	r4,r2,5136
1104fcf8:	11050434 	orhi	r4,r2,5136
1104fcfc:	11050434 	orhi	r4,r2,5136
1104fd00:	1104fe3c 	xorhi	r4,r2,5112
1104fd04:	11050018 	cmpnei	r4,r2,5120
1104fd08:	11050434 	orhi	r4,r2,5136
1104fd0c:	1104fe68 	cmpgeui	r4,r2,5113
1104fd10:	11050468 	cmpgeui	r4,r2,5137
1104fd14:	11050434 	orhi	r4,r2,5136
1104fd18:	1105045c 	xori	r4,r2,5137
1104fd1c:	110503fc 	xorhi	r4,r2,5135
1104fd20:	110503fc 	xorhi	r4,r2,5135
1104fd24:	110503fc 	xorhi	r4,r2,5135
1104fd28:	110503fc 	xorhi	r4,r2,5135
1104fd2c:	110503fc 	xorhi	r4,r2,5135
1104fd30:	110503fc 	xorhi	r4,r2,5135
1104fd34:	110503fc 	xorhi	r4,r2,5135
1104fd38:	110503fc 	xorhi	r4,r2,5135
1104fd3c:	110503fc 	xorhi	r4,r2,5135
1104fd40:	11050434 	orhi	r4,r2,5136
1104fd44:	11050434 	orhi	r4,r2,5136
1104fd48:	11050434 	orhi	r4,r2,5136
1104fd4c:	11050434 	orhi	r4,r2,5136
1104fd50:	11050434 	orhi	r4,r2,5136
1104fd54:	11050434 	orhi	r4,r2,5136
1104fd58:	11050434 	orhi	r4,r2,5136
1104fd5c:	11050434 	orhi	r4,r2,5136
1104fd60:	11050434 	orhi	r4,r2,5136
1104fd64:	11050434 	orhi	r4,r2,5136
1104fd68:	11050398 	cmpnei	r4,r2,5134
1104fd6c:	11050434 	orhi	r4,r2,5136
1104fd70:	11050434 	orhi	r4,r2,5136
1104fd74:	11050434 	orhi	r4,r2,5136
1104fd78:	11050434 	orhi	r4,r2,5136
1104fd7c:	11050434 	orhi	r4,r2,5136
1104fd80:	11050434 	orhi	r4,r2,5136
1104fd84:	11050434 	orhi	r4,r2,5136
1104fd88:	11050434 	orhi	r4,r2,5136
1104fd8c:	11050434 	orhi	r4,r2,5136
1104fd90:	11050434 	orhi	r4,r2,5136
1104fd94:	11050510 	cmplti	r4,r2,5140
1104fd98:	11050434 	orhi	r4,r2,5136
1104fd9c:	11050434 	orhi	r4,r2,5136
1104fda0:	11050434 	orhi	r4,r2,5136
1104fda4:	11050434 	orhi	r4,r2,5136
1104fda8:	11050434 	orhi	r4,r2,5136
1104fdac:	110504a8 	cmpgeui	r4,r2,5138
1104fdb0:	11050434 	orhi	r4,r2,5136
1104fdb4:	11050434 	orhi	r4,r2,5136
1104fdb8:	110501dc 	xori	r4,r2,5127
1104fdbc:	11050434 	orhi	r4,r2,5136
1104fdc0:	11050434 	orhi	r4,r2,5136
1104fdc4:	11050434 	orhi	r4,r2,5136
1104fdc8:	11050434 	orhi	r4,r2,5136
1104fdcc:	11050434 	orhi	r4,r2,5136
1104fdd0:	11050434 	orhi	r4,r2,5136
1104fdd4:	11050434 	orhi	r4,r2,5136
1104fdd8:	11050434 	orhi	r4,r2,5136
1104fddc:	11050434 	orhi	r4,r2,5136
1104fde0:	11050434 	orhi	r4,r2,5136
1104fde4:	110500cc 	andi	r4,r2,5123
1104fde8:	11050278 	rdprs	r4,r2,5129
1104fdec:	11050434 	orhi	r4,r2,5136
1104fdf0:	11050434 	orhi	r4,r2,5136
1104fdf4:	11050434 	orhi	r4,r2,5136
1104fdf8:	1105026c 	andhi	r4,r2,5129
1104fdfc:	11050278 	rdprs	r4,r2,5129
1104fe00:	11050434 	orhi	r4,r2,5136
1104fe04:	11050434 	orhi	r4,r2,5136
1104fe08:	1105025c 	xori	r4,r2,5129
1104fe0c:	11050434 	orhi	r4,r2,5136
1104fe10:	11050220 	cmpeqi	r4,r2,5128
1104fe14:	11050028 	cmpgeui	r4,r2,5120
1104fe18:	1104fe74 	orhi	r4,r2,5113
1104fe1c:	1105038c 	andi	r4,r2,5134
1104fe20:	11050434 	orhi	r4,r2,5136
1104fe24:	11050340 	call	11105034 <__alt_data_end+0x85034>
1104fe28:	11050434 	orhi	r4,r2,5136
1104fe2c:	1104ff98 	cmpnei	r4,r2,5118
1104fe30:	11050434 	orhi	r4,r2,5136
1104fe34:	11050434 	orhi	r4,r2,5136
1104fe38:	1104fef4 	orhi	r4,r2,5115
1104fe3c:	dac02317 	ldw	r11,140(sp)
1104fe40:	5ac00017 	ldw	r11,0(r11)
1104fe44:	dac02415 	stw	r11,144(sp)
1104fe48:	dac02317 	ldw	r11,140(sp)
1104fe4c:	58800104 	addi	r2,r11,4
1104fe50:	dac02417 	ldw	r11,144(sp)
1104fe54:	5802e90e 	bge	r11,zero,110509fc <___svfiprintf_internal_r+0xe84>
1104fe58:	dac02417 	ldw	r11,144(sp)
1104fe5c:	d8802315 	stw	r2,140(sp)
1104fe60:	02d7c83a 	sub	r11,zero,r11
1104fe64:	dac02415 	stw	r11,144(sp)
1104fe68:	94800114 	ori	r18,r18,4
1104fe6c:	98c00007 	ldb	r3,0(r19)
1104fe70:	003f9006 	br	1104fcb4 <___svfiprintf_internal_r+0x13c>
1104fe74:	00800c04 	movi	r2,48
1104fe78:	dac02317 	ldw	r11,140(sp)
1104fe7c:	d8801d05 	stb	r2,116(sp)
1104fe80:	00801e04 	movi	r2,120
1104fe84:	d8801d45 	stb	r2,117(sp)
1104fe88:	d8001d85 	stb	zero,118(sp)
1104fe8c:	58c00104 	addi	r3,r11,4
1104fe90:	5f000017 	ldw	fp,0(r11)
1104fe94:	0013883a 	mov	r9,zero
1104fe98:	90800094 	ori	r2,r18,2
1104fe9c:	80032b16 	blt	r16,zero,11050b4c <___svfiprintf_internal_r+0xfd4>
1104fea0:	00bfdfc4 	movi	r2,-129
1104fea4:	90a4703a 	and	r18,r18,r2
1104fea8:	d8c02315 	stw	r3,140(sp)
1104feac:	94800094 	ori	r18,r18,2
1104feb0:	e002dc26 	beq	fp,zero,11050a24 <___svfiprintf_internal_r+0xeac>
1104feb4:	01044174 	movhi	r4,4357
1104feb8:	211c2704 	addi	r4,r4,28828
1104febc:	0015883a 	mov	r10,zero
1104fec0:	d9002915 	stw	r4,164(sp)
1104fec4:	00002306 	br	1104ff54 <___svfiprintf_internal_r+0x3dc>
1104fec8:	94800054 	ori	r18,r18,1
1104fecc:	98c00007 	ldb	r3,0(r19)
1104fed0:	003f7806 	br	1104fcb4 <___svfiprintf_internal_r+0x13c>
1104fed4:	38803fcc 	andi	r2,r7,255
1104fed8:	1080201c 	xori	r2,r2,128
1104fedc:	10bfe004 	addi	r2,r2,-128
1104fee0:	1002f31e 	bne	r2,zero,11050ab0 <___svfiprintf_internal_r+0xf38>
1104fee4:	01000044 	movi	r4,1
1104fee8:	01c00804 	movi	r7,32
1104feec:	98c00007 	ldb	r3,0(r19)
1104fef0:	003f7006 	br	1104fcb4 <___svfiprintf_internal_r+0x13c>
1104fef4:	21003fcc 	andi	r4,r4,255
1104fef8:	2003aa1e 	bne	r4,zero,11050da4 <___svfiprintf_internal_r+0x122c>
1104fefc:	00844174 	movhi	r2,4357
1104ff00:	109c2704 	addi	r2,r2,28828
1104ff04:	d8802915 	stw	r2,164(sp)
1104ff08:	9080080c 	andi	r2,r18,32
1104ff0c:	1000ba26 	beq	r2,zero,110501f8 <___svfiprintf_internal_r+0x680>
1104ff10:	dac02317 	ldw	r11,140(sp)
1104ff14:	5f000017 	ldw	fp,0(r11)
1104ff18:	5a400117 	ldw	r9,4(r11)
1104ff1c:	5ac00204 	addi	r11,r11,8
1104ff20:	dac02315 	stw	r11,140(sp)
1104ff24:	9080004c 	andi	r2,r18,1
1104ff28:	10029026 	beq	r2,zero,1105096c <___svfiprintf_internal_r+0xdf4>
1104ff2c:	e244b03a 	or	r2,fp,r9
1104ff30:	1002d41e 	bne	r2,zero,11050a84 <___svfiprintf_internal_r+0xf0c>
1104ff34:	d8001d85 	stb	zero,118(sp)
1104ff38:	80030b16 	blt	r16,zero,11050b68 <___svfiprintf_internal_r+0xff0>
1104ff3c:	00bfdfc4 	movi	r2,-129
1104ff40:	90a4703a 	and	r18,r18,r2
1104ff44:	0015883a 	mov	r10,zero
1104ff48:	80002426 	beq	r16,zero,1104ffdc <___svfiprintf_internal_r+0x464>
1104ff4c:	0039883a 	mov	fp,zero
1104ff50:	0013883a 	mov	r9,zero
1104ff54:	d9002917 	ldw	r4,164(sp)
1104ff58:	dc401a04 	addi	r17,sp,104
1104ff5c:	e08003cc 	andi	r2,fp,15
1104ff60:	4806973a 	slli	r3,r9,28
1104ff64:	2085883a 	add	r2,r4,r2
1104ff68:	e038d13a 	srli	fp,fp,4
1104ff6c:	10800003 	ldbu	r2,0(r2)
1104ff70:	4812d13a 	srli	r9,r9,4
1104ff74:	8c7fffc4 	addi	r17,r17,-1
1104ff78:	1f38b03a 	or	fp,r3,fp
1104ff7c:	88800005 	stb	r2,0(r17)
1104ff80:	e244b03a 	or	r2,fp,r9
1104ff84:	103ff51e 	bne	r2,zero,1104ff5c <___svfiprintf_internal_r+0x3e4>
1104ff88:	dac01e17 	ldw	r11,120(sp)
1104ff8c:	5c57c83a 	sub	r11,r11,r17
1104ff90:	dac02115 	stw	r11,132(sp)
1104ff94:	00001406 	br	1104ffe8 <___svfiprintf_internal_r+0x470>
1104ff98:	21003fcc 	andi	r4,r4,255
1104ff9c:	2003741e 	bne	r4,zero,11050d70 <___svfiprintf_internal_r+0x11f8>
1104ffa0:	9080080c 	andi	r2,r18,32
1104ffa4:	10014526 	beq	r2,zero,110504bc <___svfiprintf_internal_r+0x944>
1104ffa8:	dac02317 	ldw	r11,140(sp)
1104ffac:	d8001d85 	stb	zero,118(sp)
1104ffb0:	58c00204 	addi	r3,r11,8
1104ffb4:	5f000017 	ldw	fp,0(r11)
1104ffb8:	5a400117 	ldw	r9,4(r11)
1104ffbc:	8002d916 	blt	r16,zero,11050b24 <___svfiprintf_internal_r+0xfac>
1104ffc0:	013fdfc4 	movi	r4,-129
1104ffc4:	e244b03a 	or	r2,fp,r9
1104ffc8:	d8c02315 	stw	r3,140(sp)
1104ffcc:	9124703a 	and	r18,r18,r4
1104ffd0:	0015883a 	mov	r10,zero
1104ffd4:	1000b91e 	bne	r2,zero,110502bc <___svfiprintf_internal_r+0x744>
1104ffd8:	8002e61e 	bne	r16,zero,11050b74 <___svfiprintf_internal_r+0xffc>
1104ffdc:	0021883a 	mov	r16,zero
1104ffe0:	d8002115 	stw	zero,132(sp)
1104ffe4:	dc401a04 	addi	r17,sp,104
1104ffe8:	d8c02117 	ldw	r3,132(sp)
1104ffec:	dc002015 	stw	r16,128(sp)
1104fff0:	80c0010e 	bge	r16,r3,1104fff8 <___svfiprintf_internal_r+0x480>
1104fff4:	d8c02015 	stw	r3,128(sp)
1104fff8:	52803fcc 	andi	r10,r10,255
1104fffc:	5280201c 	xori	r10,r10,128
11050000:	52bfe004 	addi	r10,r10,-128
11050004:	50003c26 	beq	r10,zero,110500f8 <___svfiprintf_internal_r+0x580>
11050008:	dac02017 	ldw	r11,128(sp)
1105000c:	5ac00044 	addi	r11,r11,1
11050010:	dac02015 	stw	r11,128(sp)
11050014:	00003806 	br	110500f8 <___svfiprintf_internal_r+0x580>
11050018:	01000044 	movi	r4,1
1105001c:	01c00ac4 	movi	r7,43
11050020:	98c00007 	ldb	r3,0(r19)
11050024:	003f2306 	br	1104fcb4 <___svfiprintf_internal_r+0x13c>
11050028:	21003fcc 	andi	r4,r4,255
1105002c:	2003481e 	bne	r4,zero,11050d50 <___svfiprintf_internal_r+0x11d8>
11050030:	9080080c 	andi	r2,r18,32
11050034:	10013b26 	beq	r2,zero,11050524 <___svfiprintf_internal_r+0x9ac>
11050038:	dac02317 	ldw	r11,140(sp)
1105003c:	d8001d85 	stb	zero,118(sp)
11050040:	58800204 	addi	r2,r11,8
11050044:	5f000017 	ldw	fp,0(r11)
11050048:	5a400117 	ldw	r9,4(r11)
1105004c:	8002a816 	blt	r16,zero,11050af0 <___svfiprintf_internal_r+0xf78>
11050050:	013fdfc4 	movi	r4,-129
11050054:	e246b03a 	or	r3,fp,r9
11050058:	d8802315 	stw	r2,140(sp)
1105005c:	9124703a 	and	r18,r18,r4
11050060:	18013c26 	beq	r3,zero,11050554 <___svfiprintf_internal_r+0x9dc>
11050064:	0015883a 	mov	r10,zero
11050068:	dc401a04 	addi	r17,sp,104
1105006c:	e006d0fa 	srli	r3,fp,3
11050070:	4808977a 	slli	r4,r9,29
11050074:	4812d0fa 	srli	r9,r9,3
11050078:	e70001cc 	andi	fp,fp,7
1105007c:	e0800c04 	addi	r2,fp,48
11050080:	8c7fffc4 	addi	r17,r17,-1
11050084:	20f8b03a 	or	fp,r4,r3
11050088:	88800005 	stb	r2,0(r17)
1105008c:	e246b03a 	or	r3,fp,r9
11050090:	183ff61e 	bne	r3,zero,1105006c <___svfiprintf_internal_r+0x4f4>
11050094:	90c0004c 	andi	r3,r18,1
11050098:	1800a526 	beq	r3,zero,11050330 <___svfiprintf_internal_r+0x7b8>
1105009c:	10803fcc 	andi	r2,r2,255
110500a0:	1080201c 	xori	r2,r2,128
110500a4:	10bfe004 	addi	r2,r2,-128
110500a8:	00c00c04 	movi	r3,48
110500ac:	10ffb626 	beq	r2,r3,1104ff88 <___svfiprintf_internal_r+0x410>
110500b0:	88ffffc5 	stb	r3,-1(r17)
110500b4:	d8c01e17 	ldw	r3,120(sp)
110500b8:	88bfffc4 	addi	r2,r17,-1
110500bc:	1023883a 	mov	r17,r2
110500c0:	1887c83a 	sub	r3,r3,r2
110500c4:	d8c02115 	stw	r3,132(sp)
110500c8:	003fc706 	br	1104ffe8 <___svfiprintf_internal_r+0x470>
110500cc:	dac02317 	ldw	r11,140(sp)
110500d0:	00c00044 	movi	r3,1
110500d4:	d8c02015 	stw	r3,128(sp)
110500d8:	58800017 	ldw	r2,0(r11)
110500dc:	5ac00104 	addi	r11,r11,4
110500e0:	d8001d85 	stb	zero,118(sp)
110500e4:	d8801005 	stb	r2,64(sp)
110500e8:	dac02315 	stw	r11,140(sp)
110500ec:	d8c02115 	stw	r3,132(sp)
110500f0:	dc401004 	addi	r17,sp,64
110500f4:	0021883a 	mov	r16,zero
110500f8:	90c0008c 	andi	r3,r18,2
110500fc:	d8c02215 	stw	r3,136(sp)
11050100:	18000326 	beq	r3,zero,11050110 <___svfiprintf_internal_r+0x598>
11050104:	dac02017 	ldw	r11,128(sp)
11050108:	5ac00084 	addi	r11,r11,2
1105010c:	dac02015 	stw	r11,128(sp)
11050110:	90c0210c 	andi	r3,r18,132
11050114:	d8c02615 	stw	r3,152(sp)
11050118:	1801131e 	bne	r3,zero,11050568 <___svfiprintf_internal_r+0x9f0>
1105011c:	dac02417 	ldw	r11,144(sp)
11050120:	d8c02017 	ldw	r3,128(sp)
11050124:	58f9c83a 	sub	fp,r11,r3
11050128:	07010f0e 	bge	zero,fp,11050568 <___svfiprintf_internal_r+0x9f0>
1105012c:	02400404 	movi	r9,16
11050130:	d8c01c17 	ldw	r3,112(sp)
11050134:	d8801b17 	ldw	r2,108(sp)
11050138:	4f02d60e 	bge	r9,fp,11050c94 <___svfiprintf_internal_r+0x111c>
1105013c:	01444174 	movhi	r5,4357
11050140:	295c9404 	addi	r5,r5,29264
11050144:	d9402815 	stw	r5,160(sp)
11050148:	028001c4 	movi	r10,7
1105014c:	00000306 	br	1105015c <___svfiprintf_internal_r+0x5e4>
11050150:	e73ffc04 	addi	fp,fp,-16
11050154:	42000204 	addi	r8,r8,8
11050158:	4f00150e 	bge	r9,fp,110501b0 <___svfiprintf_internal_r+0x638>
1105015c:	18c00404 	addi	r3,r3,16
11050160:	10800044 	addi	r2,r2,1
11050164:	45800015 	stw	r22,0(r8)
11050168:	42400115 	stw	r9,4(r8)
1105016c:	d8c01c15 	stw	r3,112(sp)
11050170:	d8801b15 	stw	r2,108(sp)
11050174:	50bff60e 	bge	r10,r2,11050150 <___svfiprintf_internal_r+0x5d8>
11050178:	d9801a04 	addi	r6,sp,104
1105017c:	b80b883a 	mov	r5,r23
11050180:	a809883a 	mov	r4,r21
11050184:	da402c15 	stw	r9,176(sp)
11050188:	da802d15 	stw	r10,180(sp)
1105018c:	104f9a80 	call	1104f9a8 <__ssprint_r>
11050190:	da402c17 	ldw	r9,176(sp)
11050194:	da802d17 	ldw	r10,180(sp)
11050198:	1001851e 	bne	r2,zero,110507b0 <___svfiprintf_internal_r+0xc38>
1105019c:	e73ffc04 	addi	fp,fp,-16
110501a0:	d8c01c17 	ldw	r3,112(sp)
110501a4:	d8801b17 	ldw	r2,108(sp)
110501a8:	d811883a 	mov	r8,sp
110501ac:	4f3feb16 	blt	r9,fp,1105015c <___svfiprintf_internal_r+0x5e4>
110501b0:	dac02817 	ldw	r11,160(sp)
110501b4:	e0c7883a 	add	r3,fp,r3
110501b8:	10800044 	addi	r2,r2,1
110501bc:	42c00015 	stw	r11,0(r8)
110501c0:	47000115 	stw	fp,4(r8)
110501c4:	d8c01c15 	stw	r3,112(sp)
110501c8:	d8801b15 	stw	r2,108(sp)
110501cc:	010001c4 	movi	r4,7
110501d0:	2081ee16 	blt	r4,r2,1105098c <___svfiprintf_internal_r+0xe14>
110501d4:	42000204 	addi	r8,r8,8
110501d8:	0000e506 	br	11050570 <___svfiprintf_internal_r+0x9f8>
110501dc:	21003fcc 	andi	r4,r4,255
110501e0:	2002dd1e 	bne	r4,zero,11050d58 <___svfiprintf_internal_r+0x11e0>
110501e4:	00844174 	movhi	r2,4357
110501e8:	109c2204 	addi	r2,r2,28808
110501ec:	d8802915 	stw	r2,164(sp)
110501f0:	9080080c 	andi	r2,r18,32
110501f4:	103f461e 	bne	r2,zero,1104ff10 <___svfiprintf_internal_r+0x398>
110501f8:	9080040c 	andi	r2,r18,16
110501fc:	10022e1e 	bne	r2,zero,11050ab8 <___svfiprintf_internal_r+0xf40>
11050200:	9080100c 	andi	r2,r18,64
11050204:	dac02317 	ldw	r11,140(sp)
11050208:	10027326 	beq	r2,zero,11050bd8 <___svfiprintf_internal_r+0x1060>
1105020c:	5f00000b 	ldhu	fp,0(r11)
11050210:	5ac00104 	addi	r11,r11,4
11050214:	0013883a 	mov	r9,zero
11050218:	dac02315 	stw	r11,140(sp)
1105021c:	003f4106 	br	1104ff24 <___svfiprintf_internal_r+0x3ac>
11050220:	21003fcc 	andi	r4,r4,255
11050224:	2002e11e 	bne	r4,zero,11050dac <___svfiprintf_internal_r+0x1234>
11050228:	9080080c 	andi	r2,r18,32
1105022c:	1002011e 	bne	r2,zero,11050a34 <___svfiprintf_internal_r+0xebc>
11050230:	9080040c 	andi	r2,r18,16
11050234:	10023e1e 	bne	r2,zero,11050b30 <___svfiprintf_internal_r+0xfb8>
11050238:	9480100c 	andi	r18,r18,64
1105023c:	90023c26 	beq	r18,zero,11050b30 <___svfiprintf_internal_r+0xfb8>
11050240:	dac02317 	ldw	r11,140(sp)
11050244:	58800017 	ldw	r2,0(r11)
11050248:	5ac00104 	addi	r11,r11,4
1105024c:	dac02315 	stw	r11,140(sp)
11050250:	dac02517 	ldw	r11,148(sp)
11050254:	12c0000d 	sth	r11,0(r2)
11050258:	003e6e06 	br	1104fc14 <___svfiprintf_internal_r+0x9c>
1105025c:	98c00007 	ldb	r3,0(r19)
11050260:	1a422926 	beq	r3,r9,11050b08 <___svfiprintf_internal_r+0xf90>
11050264:	94800414 	ori	r18,r18,16
11050268:	003e9206 	br	1104fcb4 <___svfiprintf_internal_r+0x13c>
1105026c:	94801014 	ori	r18,r18,64
11050270:	98c00007 	ldb	r3,0(r19)
11050274:	003e8f06 	br	1104fcb4 <___svfiprintf_internal_r+0x13c>
11050278:	21003fcc 	andi	r4,r4,255
1105027c:	2002c71e 	bne	r4,zero,11050d9c <___svfiprintf_internal_r+0x1224>
11050280:	9080080c 	andi	r2,r18,32
11050284:	10004926 	beq	r2,zero,110503ac <___svfiprintf_internal_r+0x834>
11050288:	dac02317 	ldw	r11,140(sp)
1105028c:	58800117 	ldw	r2,4(r11)
11050290:	5f000017 	ldw	fp,0(r11)
11050294:	5ac00204 	addi	r11,r11,8
11050298:	dac02315 	stw	r11,140(sp)
1105029c:	1013883a 	mov	r9,r2
110502a0:	10004b16 	blt	r2,zero,110503d0 <___svfiprintf_internal_r+0x858>
110502a4:	da801d83 	ldbu	r10,118(sp)
110502a8:	8001cb16 	blt	r16,zero,110509d8 <___svfiprintf_internal_r+0xe60>
110502ac:	00ffdfc4 	movi	r3,-129
110502b0:	e244b03a 	or	r2,fp,r9
110502b4:	90e4703a 	and	r18,r18,r3
110502b8:	103f4726 	beq	r2,zero,1104ffd8 <___svfiprintf_internal_r+0x460>
110502bc:	48008c26 	beq	r9,zero,110504f0 <___svfiprintf_internal_r+0x978>
110502c0:	dc802015 	stw	r18,128(sp)
110502c4:	dc002115 	stw	r16,132(sp)
110502c8:	dc401a04 	addi	r17,sp,104
110502cc:	e021883a 	mov	r16,fp
110502d0:	da002215 	stw	r8,136(sp)
110502d4:	5039883a 	mov	fp,r10
110502d8:	4825883a 	mov	r18,r9
110502dc:	8009883a 	mov	r4,r16
110502e0:	900b883a 	mov	r5,r18
110502e4:	01800284 	movi	r6,10
110502e8:	000f883a 	mov	r7,zero
110502ec:	10532a80 	call	110532a8 <__umoddi3>
110502f0:	10800c04 	addi	r2,r2,48
110502f4:	8c7fffc4 	addi	r17,r17,-1
110502f8:	8009883a 	mov	r4,r16
110502fc:	900b883a 	mov	r5,r18
11050300:	88800005 	stb	r2,0(r17)
11050304:	01800284 	movi	r6,10
11050308:	000f883a 	mov	r7,zero
1105030c:	1052d300 	call	11052d30 <__udivdi3>
11050310:	1021883a 	mov	r16,r2
11050314:	10c4b03a 	or	r2,r2,r3
11050318:	1825883a 	mov	r18,r3
1105031c:	103fef1e 	bne	r2,zero,110502dc <___svfiprintf_internal_r+0x764>
11050320:	dc802017 	ldw	r18,128(sp)
11050324:	dc002117 	ldw	r16,132(sp)
11050328:	da002217 	ldw	r8,136(sp)
1105032c:	e015883a 	mov	r10,fp
11050330:	d8c01e17 	ldw	r3,120(sp)
11050334:	1c47c83a 	sub	r3,r3,r17
11050338:	d8c02115 	stw	r3,132(sp)
1105033c:	003f2a06 	br	1104ffe8 <___svfiprintf_internal_r+0x470>
11050340:	dac02317 	ldw	r11,140(sp)
11050344:	d8001d85 	stb	zero,118(sp)
11050348:	5c400017 	ldw	r17,0(r11)
1105034c:	5f000104 	addi	fp,r11,4
11050350:	88022f26 	beq	r17,zero,11050c10 <___svfiprintf_internal_r+0x1098>
11050354:	80022516 	blt	r16,zero,11050bec <___svfiprintf_internal_r+0x1074>
11050358:	800d883a 	mov	r6,r16
1105035c:	000b883a 	mov	r5,zero
11050360:	8809883a 	mov	r4,r17
11050364:	da002c15 	stw	r8,176(sp)
11050368:	104dcb80 	call	1104dcb8 <memchr>
1105036c:	da002c17 	ldw	r8,176(sp)
11050370:	10026426 	beq	r2,zero,11050d04 <___svfiprintf_internal_r+0x118c>
11050374:	1445c83a 	sub	r2,r2,r17
11050378:	d8802115 	stw	r2,132(sp)
1105037c:	da801d83 	ldbu	r10,118(sp)
11050380:	df002315 	stw	fp,140(sp)
11050384:	0021883a 	mov	r16,zero
11050388:	003f1706 	br	1104ffe8 <___svfiprintf_internal_r+0x470>
1105038c:	94800814 	ori	r18,r18,32
11050390:	98c00007 	ldb	r3,0(r19)
11050394:	003e4706 	br	1104fcb4 <___svfiprintf_internal_r+0x13c>
11050398:	21003fcc 	andi	r4,r4,255
1105039c:	2002701e 	bne	r4,zero,11050d60 <___svfiprintf_internal_r+0x11e8>
110503a0:	94800414 	ori	r18,r18,16
110503a4:	9080080c 	andi	r2,r18,32
110503a8:	103fb71e 	bne	r2,zero,11050288 <___svfiprintf_internal_r+0x710>
110503ac:	9080040c 	andi	r2,r18,16
110503b0:	1001ab26 	beq	r2,zero,11050a60 <___svfiprintf_internal_r+0xee8>
110503b4:	dac02317 	ldw	r11,140(sp)
110503b8:	5f000017 	ldw	fp,0(r11)
110503bc:	5ac00104 	addi	r11,r11,4
110503c0:	dac02315 	stw	r11,140(sp)
110503c4:	e013d7fa 	srai	r9,fp,31
110503c8:	4805883a 	mov	r2,r9
110503cc:	103fb50e 	bge	r2,zero,110502a4 <___svfiprintf_internal_r+0x72c>
110503d0:	0739c83a 	sub	fp,zero,fp
110503d4:	02800b44 	movi	r10,45
110503d8:	e004c03a 	cmpne	r2,fp,zero
110503dc:	0253c83a 	sub	r9,zero,r9
110503e0:	da801d85 	stb	r10,118(sp)
110503e4:	4893c83a 	sub	r9,r9,r2
110503e8:	80023016 	blt	r16,zero,11050cac <___svfiprintf_internal_r+0x1134>
110503ec:	00bfdfc4 	movi	r2,-129
110503f0:	90a4703a 	and	r18,r18,r2
110503f4:	483fb21e 	bne	r9,zero,110502c0 <___svfiprintf_internal_r+0x748>
110503f8:	00003d06 	br	110504f0 <___svfiprintf_internal_r+0x978>
110503fc:	9817883a 	mov	r11,r19
11050400:	d8002415 	stw	zero,144(sp)
11050404:	18bff404 	addi	r2,r3,-48
11050408:	0019883a 	mov	r12,zero
1105040c:	58c00007 	ldb	r3,0(r11)
11050410:	630002a4 	muli	r12,r12,10
11050414:	9cc00044 	addi	r19,r19,1
11050418:	9817883a 	mov	r11,r19
1105041c:	1319883a 	add	r12,r2,r12
11050420:	18bff404 	addi	r2,r3,-48
11050424:	30bff92e 	bgeu	r6,r2,1105040c <___svfiprintf_internal_r+0x894>
11050428:	db002415 	stw	r12,144(sp)
1105042c:	18bff804 	addi	r2,r3,-32
11050430:	28be232e 	bgeu	r5,r2,1104fcc0 <___svfiprintf_internal_r+0x148>
11050434:	21003fcc 	andi	r4,r4,255
11050438:	20024b1e 	bne	r4,zero,11050d68 <___svfiprintf_internal_r+0x11f0>
1105043c:	1800d626 	beq	r3,zero,11050798 <___svfiprintf_internal_r+0xc20>
11050440:	02c00044 	movi	r11,1
11050444:	dac02015 	stw	r11,128(sp)
11050448:	d8c01005 	stb	r3,64(sp)
1105044c:	d8001d85 	stb	zero,118(sp)
11050450:	dac02115 	stw	r11,132(sp)
11050454:	dc401004 	addi	r17,sp,64
11050458:	003f2606 	br	110500f4 <___svfiprintf_internal_r+0x57c>
1105045c:	94802014 	ori	r18,r18,128
11050460:	98c00007 	ldb	r3,0(r19)
11050464:	003e1306 	br	1104fcb4 <___svfiprintf_internal_r+0x13c>
11050468:	98c00007 	ldb	r3,0(r19)
1105046c:	9ac00044 	addi	r11,r19,1
11050470:	1a822b26 	beq	r3,r10,11050d20 <___svfiprintf_internal_r+0x11a8>
11050474:	18bff404 	addi	r2,r3,-48
11050478:	0021883a 	mov	r16,zero
1105047c:	30821e36 	bltu	r6,r2,11050cf8 <___svfiprintf_internal_r+0x1180>
11050480:	58c00007 	ldb	r3,0(r11)
11050484:	840002a4 	muli	r16,r16,10
11050488:	5cc00044 	addi	r19,r11,1
1105048c:	9817883a 	mov	r11,r19
11050490:	80a1883a 	add	r16,r16,r2
11050494:	18bff404 	addi	r2,r3,-48
11050498:	30bff92e 	bgeu	r6,r2,11050480 <___svfiprintf_internal_r+0x908>
1105049c:	803e060e 	bge	r16,zero,1104fcb8 <___svfiprintf_internal_r+0x140>
110504a0:	043fffc4 	movi	r16,-1
110504a4:	003e0406 	br	1104fcb8 <___svfiprintf_internal_r+0x140>
110504a8:	21003fcc 	andi	r4,r4,255
110504ac:	2002371e 	bne	r4,zero,11050d8c <___svfiprintf_internal_r+0x1214>
110504b0:	94800414 	ori	r18,r18,16
110504b4:	9080080c 	andi	r2,r18,32
110504b8:	103ebb1e 	bne	r2,zero,1104ffa8 <___svfiprintf_internal_r+0x430>
110504bc:	9080040c 	andi	r2,r18,16
110504c0:	10013b26 	beq	r2,zero,110509b0 <___svfiprintf_internal_r+0xe38>
110504c4:	dac02317 	ldw	r11,140(sp)
110504c8:	d8001d85 	stb	zero,118(sp)
110504cc:	0013883a 	mov	r9,zero
110504d0:	58800104 	addi	r2,r11,4
110504d4:	5f000017 	ldw	fp,0(r11)
110504d8:	80013d16 	blt	r16,zero,110509d0 <___svfiprintf_internal_r+0xe58>
110504dc:	00ffdfc4 	movi	r3,-129
110504e0:	d8802315 	stw	r2,140(sp)
110504e4:	90e4703a 	and	r18,r18,r3
110504e8:	0015883a 	mov	r10,zero
110504ec:	e03eba26 	beq	fp,zero,1104ffd8 <___svfiprintf_internal_r+0x460>
110504f0:	00800244 	movi	r2,9
110504f4:	173f7236 	bltu	r2,fp,110502c0 <___svfiprintf_internal_r+0x748>
110504f8:	dac02b17 	ldw	r11,172(sp)
110504fc:	e7000c04 	addi	fp,fp,48
11050500:	df0019c5 	stb	fp,103(sp)
11050504:	dac02115 	stw	r11,132(sp)
11050508:	dc4019c4 	addi	r17,sp,103
1105050c:	003eb606 	br	1104ffe8 <___svfiprintf_internal_r+0x470>
11050510:	21003fcc 	andi	r4,r4,255
11050514:	20021f1e 	bne	r4,zero,11050d94 <___svfiprintf_internal_r+0x121c>
11050518:	94800414 	ori	r18,r18,16
1105051c:	9080080c 	andi	r2,r18,32
11050520:	103ec51e 	bne	r2,zero,11050038 <___svfiprintf_internal_r+0x4c0>
11050524:	9080040c 	andi	r2,r18,16
11050528:	10016926 	beq	r2,zero,11050ad0 <___svfiprintf_internal_r+0xf58>
1105052c:	dac02317 	ldw	r11,140(sp)
11050530:	d8001d85 	stb	zero,118(sp)
11050534:	0013883a 	mov	r9,zero
11050538:	58800104 	addi	r2,r11,4
1105053c:	5f000017 	ldw	fp,0(r11)
11050540:	80016b16 	blt	r16,zero,11050af0 <___svfiprintf_internal_r+0xf78>
11050544:	00ffdfc4 	movi	r3,-129
11050548:	d8802315 	stw	r2,140(sp)
1105054c:	90e4703a 	and	r18,r18,r3
11050550:	e03ec41e 	bne	fp,zero,11050064 <___svfiprintf_internal_r+0x4ec>
11050554:	0015883a 	mov	r10,zero
11050558:	8001c226 	beq	r16,zero,11050c64 <___svfiprintf_internal_r+0x10ec>
1105055c:	0039883a 	mov	fp,zero
11050560:	0013883a 	mov	r9,zero
11050564:	003ec006 	br	11050068 <___svfiprintf_internal_r+0x4f0>
11050568:	d8c01c17 	ldw	r3,112(sp)
1105056c:	d8801b17 	ldw	r2,108(sp)
11050570:	d9001d87 	ldb	r4,118(sp)
11050574:	20000b26 	beq	r4,zero,110505a4 <___svfiprintf_internal_r+0xa2c>
11050578:	d9001d84 	addi	r4,sp,118
1105057c:	18c00044 	addi	r3,r3,1
11050580:	10800044 	addi	r2,r2,1
11050584:	41000015 	stw	r4,0(r8)
11050588:	01000044 	movi	r4,1
1105058c:	41000115 	stw	r4,4(r8)
11050590:	d8c01c15 	stw	r3,112(sp)
11050594:	d8801b15 	stw	r2,108(sp)
11050598:	010001c4 	movi	r4,7
1105059c:	2080e116 	blt	r4,r2,11050924 <___svfiprintf_internal_r+0xdac>
110505a0:	42000204 	addi	r8,r8,8
110505a4:	dac02217 	ldw	r11,136(sp)
110505a8:	58000b26 	beq	r11,zero,110505d8 <___svfiprintf_internal_r+0xa60>
110505ac:	d9001d04 	addi	r4,sp,116
110505b0:	18c00084 	addi	r3,r3,2
110505b4:	10800044 	addi	r2,r2,1
110505b8:	41000015 	stw	r4,0(r8)
110505bc:	01000084 	movi	r4,2
110505c0:	41000115 	stw	r4,4(r8)
110505c4:	d8c01c15 	stw	r3,112(sp)
110505c8:	d8801b15 	stw	r2,108(sp)
110505cc:	010001c4 	movi	r4,7
110505d0:	2080dd16 	blt	r4,r2,11050948 <___svfiprintf_internal_r+0xdd0>
110505d4:	42000204 	addi	r8,r8,8
110505d8:	dac02617 	ldw	r11,152(sp)
110505dc:	01002004 	movi	r4,128
110505e0:	59008426 	beq	r11,r4,110507f4 <___svfiprintf_internal_r+0xc7c>
110505e4:	dac02117 	ldw	r11,132(sp)
110505e8:	82e1c83a 	sub	r16,r16,r11
110505ec:	0400270e 	bge	zero,r16,1105068c <___svfiprintf_internal_r+0xb14>
110505f0:	01c00404 	movi	r7,16
110505f4:	3c016a0e 	bge	r7,r16,11050ba0 <___svfiprintf_internal_r+0x1028>
110505f8:	01444174 	movhi	r5,4357
110505fc:	295c9004 	addi	r5,r5,29248
11050600:	d9402215 	stw	r5,136(sp)
11050604:	070001c4 	movi	fp,7
11050608:	00000306 	br	11050618 <___svfiprintf_internal_r+0xaa0>
1105060c:	843ffc04 	addi	r16,r16,-16
11050610:	42000204 	addi	r8,r8,8
11050614:	3c00130e 	bge	r7,r16,11050664 <___svfiprintf_internal_r+0xaec>
11050618:	18c00404 	addi	r3,r3,16
1105061c:	10800044 	addi	r2,r2,1
11050620:	45000015 	stw	r20,0(r8)
11050624:	41c00115 	stw	r7,4(r8)
11050628:	d8c01c15 	stw	r3,112(sp)
1105062c:	d8801b15 	stw	r2,108(sp)
11050630:	e0bff60e 	bge	fp,r2,1105060c <___svfiprintf_internal_r+0xa94>
11050634:	d9801a04 	addi	r6,sp,104
11050638:	b80b883a 	mov	r5,r23
1105063c:	a809883a 	mov	r4,r21
11050640:	d9c02c15 	stw	r7,176(sp)
11050644:	104f9a80 	call	1104f9a8 <__ssprint_r>
11050648:	d9c02c17 	ldw	r7,176(sp)
1105064c:	1000581e 	bne	r2,zero,110507b0 <___svfiprintf_internal_r+0xc38>
11050650:	843ffc04 	addi	r16,r16,-16
11050654:	d8c01c17 	ldw	r3,112(sp)
11050658:	d8801b17 	ldw	r2,108(sp)
1105065c:	d811883a 	mov	r8,sp
11050660:	3c3fed16 	blt	r7,r16,11050618 <___svfiprintf_internal_r+0xaa0>
11050664:	dac02217 	ldw	r11,136(sp)
11050668:	1c07883a 	add	r3,r3,r16
1105066c:	10800044 	addi	r2,r2,1
11050670:	42c00015 	stw	r11,0(r8)
11050674:	44000115 	stw	r16,4(r8)
11050678:	d8c01c15 	stw	r3,112(sp)
1105067c:	d8801b15 	stw	r2,108(sp)
11050680:	010001c4 	movi	r4,7
11050684:	20809e16 	blt	r4,r2,11050900 <___svfiprintf_internal_r+0xd88>
11050688:	42000204 	addi	r8,r8,8
1105068c:	dac02117 	ldw	r11,132(sp)
11050690:	10800044 	addi	r2,r2,1
11050694:	44400015 	stw	r17,0(r8)
11050698:	58c7883a 	add	r3,r11,r3
1105069c:	42c00115 	stw	r11,4(r8)
110506a0:	d8c01c15 	stw	r3,112(sp)
110506a4:	d8801b15 	stw	r2,108(sp)
110506a8:	010001c4 	movi	r4,7
110506ac:	20807f16 	blt	r4,r2,110508ac <___svfiprintf_internal_r+0xd34>
110506b0:	42000204 	addi	r8,r8,8
110506b4:	9480010c 	andi	r18,r18,4
110506b8:	90002926 	beq	r18,zero,11050760 <___svfiprintf_internal_r+0xbe8>
110506bc:	dac02417 	ldw	r11,144(sp)
110506c0:	d8802017 	ldw	r2,128(sp)
110506c4:	58a1c83a 	sub	r16,r11,r2
110506c8:	0400250e 	bge	zero,r16,11050760 <___svfiprintf_internal_r+0xbe8>
110506cc:	04400404 	movi	r17,16
110506d0:	d8801b17 	ldw	r2,108(sp)
110506d4:	8c017c0e 	bge	r17,r16,11050cc8 <___svfiprintf_internal_r+0x1150>
110506d8:	01444174 	movhi	r5,4357
110506dc:	295c9404 	addi	r5,r5,29264
110506e0:	d9402815 	stw	r5,160(sp)
110506e4:	048001c4 	movi	r18,7
110506e8:	00000306 	br	110506f8 <___svfiprintf_internal_r+0xb80>
110506ec:	843ffc04 	addi	r16,r16,-16
110506f0:	42000204 	addi	r8,r8,8
110506f4:	8c00110e 	bge	r17,r16,1105073c <___svfiprintf_internal_r+0xbc4>
110506f8:	18c00404 	addi	r3,r3,16
110506fc:	10800044 	addi	r2,r2,1
11050700:	45800015 	stw	r22,0(r8)
11050704:	44400115 	stw	r17,4(r8)
11050708:	d8c01c15 	stw	r3,112(sp)
1105070c:	d8801b15 	stw	r2,108(sp)
11050710:	90bff60e 	bge	r18,r2,110506ec <___svfiprintf_internal_r+0xb74>
11050714:	d9801a04 	addi	r6,sp,104
11050718:	b80b883a 	mov	r5,r23
1105071c:	a809883a 	mov	r4,r21
11050720:	104f9a80 	call	1104f9a8 <__ssprint_r>
11050724:	1000221e 	bne	r2,zero,110507b0 <___svfiprintf_internal_r+0xc38>
11050728:	843ffc04 	addi	r16,r16,-16
1105072c:	d8c01c17 	ldw	r3,112(sp)
11050730:	d8801b17 	ldw	r2,108(sp)
11050734:	d811883a 	mov	r8,sp
11050738:	8c3fef16 	blt	r17,r16,110506f8 <___svfiprintf_internal_r+0xb80>
1105073c:	dac02817 	ldw	r11,160(sp)
11050740:	1c07883a 	add	r3,r3,r16
11050744:	10800044 	addi	r2,r2,1
11050748:	42c00015 	stw	r11,0(r8)
1105074c:	44000115 	stw	r16,4(r8)
11050750:	d8c01c15 	stw	r3,112(sp)
11050754:	d8801b15 	stw	r2,108(sp)
11050758:	010001c4 	movi	r4,7
1105075c:	2080aa16 	blt	r4,r2,11050a08 <___svfiprintf_internal_r+0xe90>
11050760:	d8802417 	ldw	r2,144(sp)
11050764:	dac02017 	ldw	r11,128(sp)
11050768:	12c0010e 	bge	r2,r11,11050770 <___svfiprintf_internal_r+0xbf8>
1105076c:	5805883a 	mov	r2,r11
11050770:	dac02517 	ldw	r11,148(sp)
11050774:	5897883a 	add	r11,r11,r2
11050778:	dac02515 	stw	r11,148(sp)
1105077c:	1800531e 	bne	r3,zero,110508cc <___svfiprintf_internal_r+0xd54>
11050780:	98800007 	ldb	r2,0(r19)
11050784:	d8001b15 	stw	zero,108(sp)
11050788:	d811883a 	mov	r8,sp
1105078c:	103d231e 	bne	r2,zero,1104fc1c <___svfiprintf_internal_r+0xa4>
11050790:	9823883a 	mov	r17,r19
11050794:	003d3906 	br	1104fc7c <___svfiprintf_internal_r+0x104>
11050798:	d8801c17 	ldw	r2,112(sp)
1105079c:	10000426 	beq	r2,zero,110507b0 <___svfiprintf_internal_r+0xc38>
110507a0:	d9402717 	ldw	r5,156(sp)
110507a4:	d9002a17 	ldw	r4,168(sp)
110507a8:	d9801a04 	addi	r6,sp,104
110507ac:	104f9a80 	call	1104f9a8 <__ssprint_r>
110507b0:	dac02717 	ldw	r11,156(sp)
110507b4:	d8802517 	ldw	r2,148(sp)
110507b8:	58c0030b 	ldhu	r3,12(r11)
110507bc:	18c0100c 	andi	r3,r3,64
110507c0:	1801381e 	bne	r3,zero,11050ca4 <___svfiprintf_internal_r+0x112c>
110507c4:	dfc03717 	ldw	ra,220(sp)
110507c8:	df003617 	ldw	fp,216(sp)
110507cc:	ddc03517 	ldw	r23,212(sp)
110507d0:	dd803417 	ldw	r22,208(sp)
110507d4:	dd403317 	ldw	r21,204(sp)
110507d8:	dd003217 	ldw	r20,200(sp)
110507dc:	dcc03117 	ldw	r19,196(sp)
110507e0:	dc803017 	ldw	r18,192(sp)
110507e4:	dc402f17 	ldw	r17,188(sp)
110507e8:	dc002e17 	ldw	r16,184(sp)
110507ec:	dec03804 	addi	sp,sp,224
110507f0:	f800283a 	ret
110507f4:	dac02417 	ldw	r11,144(sp)
110507f8:	d9002017 	ldw	r4,128(sp)
110507fc:	5939c83a 	sub	fp,r11,r4
11050800:	073f780e 	bge	zero,fp,110505e4 <___svfiprintf_internal_r+0xa6c>
11050804:	02400404 	movi	r9,16
11050808:	4f01370e 	bge	r9,fp,11050ce8 <___svfiprintf_internal_r+0x1170>
1105080c:	02c44174 	movhi	r11,4357
11050810:	5adc9004 	addi	r11,r11,29248
11050814:	dac02215 	stw	r11,136(sp)
11050818:	028001c4 	movi	r10,7
1105081c:	00000306 	br	1105082c <___svfiprintf_internal_r+0xcb4>
11050820:	e73ffc04 	addi	fp,fp,-16
11050824:	42000204 	addi	r8,r8,8
11050828:	4f00150e 	bge	r9,fp,11050880 <___svfiprintf_internal_r+0xd08>
1105082c:	18c00404 	addi	r3,r3,16
11050830:	10800044 	addi	r2,r2,1
11050834:	45000015 	stw	r20,0(r8)
11050838:	42400115 	stw	r9,4(r8)
1105083c:	d8c01c15 	stw	r3,112(sp)
11050840:	d8801b15 	stw	r2,108(sp)
11050844:	50bff60e 	bge	r10,r2,11050820 <___svfiprintf_internal_r+0xca8>
11050848:	d9801a04 	addi	r6,sp,104
1105084c:	b80b883a 	mov	r5,r23
11050850:	a809883a 	mov	r4,r21
11050854:	da402c15 	stw	r9,176(sp)
11050858:	da802d15 	stw	r10,180(sp)
1105085c:	104f9a80 	call	1104f9a8 <__ssprint_r>
11050860:	da402c17 	ldw	r9,176(sp)
11050864:	da802d17 	ldw	r10,180(sp)
11050868:	103fd11e 	bne	r2,zero,110507b0 <___svfiprintf_internal_r+0xc38>
1105086c:	e73ffc04 	addi	fp,fp,-16
11050870:	d8c01c17 	ldw	r3,112(sp)
11050874:	d8801b17 	ldw	r2,108(sp)
11050878:	d811883a 	mov	r8,sp
1105087c:	4f3feb16 	blt	r9,fp,1105082c <___svfiprintf_internal_r+0xcb4>
11050880:	dac02217 	ldw	r11,136(sp)
11050884:	1f07883a 	add	r3,r3,fp
11050888:	10800044 	addi	r2,r2,1
1105088c:	42c00015 	stw	r11,0(r8)
11050890:	47000115 	stw	fp,4(r8)
11050894:	d8c01c15 	stw	r3,112(sp)
11050898:	d8801b15 	stw	r2,108(sp)
1105089c:	010001c4 	movi	r4,7
110508a0:	2080b616 	blt	r4,r2,11050b7c <___svfiprintf_internal_r+0x1004>
110508a4:	42000204 	addi	r8,r8,8
110508a8:	003f4e06 	br	110505e4 <___svfiprintf_internal_r+0xa6c>
110508ac:	d9801a04 	addi	r6,sp,104
110508b0:	b80b883a 	mov	r5,r23
110508b4:	a809883a 	mov	r4,r21
110508b8:	104f9a80 	call	1104f9a8 <__ssprint_r>
110508bc:	103fbc1e 	bne	r2,zero,110507b0 <___svfiprintf_internal_r+0xc38>
110508c0:	d8c01c17 	ldw	r3,112(sp)
110508c4:	d811883a 	mov	r8,sp
110508c8:	003f7a06 	br	110506b4 <___svfiprintf_internal_r+0xb3c>
110508cc:	d9801a04 	addi	r6,sp,104
110508d0:	b80b883a 	mov	r5,r23
110508d4:	a809883a 	mov	r4,r21
110508d8:	104f9a80 	call	1104f9a8 <__ssprint_r>
110508dc:	103fa826 	beq	r2,zero,11050780 <___svfiprintf_internal_r+0xc08>
110508e0:	003fb306 	br	110507b0 <___svfiprintf_internal_r+0xc38>
110508e4:	d9801a04 	addi	r6,sp,104
110508e8:	b80b883a 	mov	r5,r23
110508ec:	a809883a 	mov	r4,r21
110508f0:	104f9a80 	call	1104f9a8 <__ssprint_r>
110508f4:	103fae1e 	bne	r2,zero,110507b0 <___svfiprintf_internal_r+0xc38>
110508f8:	d811883a 	mov	r8,sp
110508fc:	003cdc06 	br	1104fc70 <___svfiprintf_internal_r+0xf8>
11050900:	d9801a04 	addi	r6,sp,104
11050904:	b80b883a 	mov	r5,r23
11050908:	a809883a 	mov	r4,r21
1105090c:	104f9a80 	call	1104f9a8 <__ssprint_r>
11050910:	103fa71e 	bne	r2,zero,110507b0 <___svfiprintf_internal_r+0xc38>
11050914:	d8c01c17 	ldw	r3,112(sp)
11050918:	d8801b17 	ldw	r2,108(sp)
1105091c:	d811883a 	mov	r8,sp
11050920:	003f5a06 	br	1105068c <___svfiprintf_internal_r+0xb14>
11050924:	d9801a04 	addi	r6,sp,104
11050928:	b80b883a 	mov	r5,r23
1105092c:	a809883a 	mov	r4,r21
11050930:	104f9a80 	call	1104f9a8 <__ssprint_r>
11050934:	103f9e1e 	bne	r2,zero,110507b0 <___svfiprintf_internal_r+0xc38>
11050938:	d8c01c17 	ldw	r3,112(sp)
1105093c:	d8801b17 	ldw	r2,108(sp)
11050940:	d811883a 	mov	r8,sp
11050944:	003f1706 	br	110505a4 <___svfiprintf_internal_r+0xa2c>
11050948:	d9801a04 	addi	r6,sp,104
1105094c:	b80b883a 	mov	r5,r23
11050950:	a809883a 	mov	r4,r21
11050954:	104f9a80 	call	1104f9a8 <__ssprint_r>
11050958:	103f951e 	bne	r2,zero,110507b0 <___svfiprintf_internal_r+0xc38>
1105095c:	d8c01c17 	ldw	r3,112(sp)
11050960:	d8801b17 	ldw	r2,108(sp)
11050964:	d811883a 	mov	r8,sp
11050968:	003f1b06 	br	110505d8 <___svfiprintf_internal_r+0xa60>
1105096c:	d8001d85 	stb	zero,118(sp)
11050970:	80007b16 	blt	r16,zero,11050b60 <___svfiprintf_internal_r+0xfe8>
11050974:	00ffdfc4 	movi	r3,-129
11050978:	e244b03a 	or	r2,fp,r9
1105097c:	90e4703a 	and	r18,r18,r3
11050980:	103d7026 	beq	r2,zero,1104ff44 <___svfiprintf_internal_r+0x3cc>
11050984:	0015883a 	mov	r10,zero
11050988:	003d7206 	br	1104ff54 <___svfiprintf_internal_r+0x3dc>
1105098c:	d9801a04 	addi	r6,sp,104
11050990:	b80b883a 	mov	r5,r23
11050994:	a809883a 	mov	r4,r21
11050998:	104f9a80 	call	1104f9a8 <__ssprint_r>
1105099c:	103f841e 	bne	r2,zero,110507b0 <___svfiprintf_internal_r+0xc38>
110509a0:	d8c01c17 	ldw	r3,112(sp)
110509a4:	d8801b17 	ldw	r2,108(sp)
110509a8:	d811883a 	mov	r8,sp
110509ac:	003ef006 	br	11050570 <___svfiprintf_internal_r+0x9f8>
110509b0:	9080100c 	andi	r2,r18,64
110509b4:	d8001d85 	stb	zero,118(sp)
110509b8:	dac02317 	ldw	r11,140(sp)
110509bc:	10008126 	beq	r2,zero,11050bc4 <___svfiprintf_internal_r+0x104c>
110509c0:	58800104 	addi	r2,r11,4
110509c4:	5f00000b 	ldhu	fp,0(r11)
110509c8:	0013883a 	mov	r9,zero
110509cc:	803ec30e 	bge	r16,zero,110504dc <___svfiprintf_internal_r+0x964>
110509d0:	d8802315 	stw	r2,140(sp)
110509d4:	0015883a 	mov	r10,zero
110509d8:	e244b03a 	or	r2,fp,r9
110509dc:	103e371e 	bne	r2,zero,110502bc <___svfiprintf_internal_r+0x744>
110509e0:	00800044 	movi	r2,1
110509e4:	10803fcc 	andi	r2,r2,255
110509e8:	00c00044 	movi	r3,1
110509ec:	10c06126 	beq	r2,r3,11050b74 <___svfiprintf_internal_r+0xffc>
110509f0:	00c00084 	movi	r3,2
110509f4:	10fd5526 	beq	r2,r3,1104ff4c <___svfiprintf_internal_r+0x3d4>
110509f8:	003ed806 	br	1105055c <___svfiprintf_internal_r+0x9e4>
110509fc:	d8802315 	stw	r2,140(sp)
11050a00:	98c00007 	ldb	r3,0(r19)
11050a04:	003cab06 	br	1104fcb4 <___svfiprintf_internal_r+0x13c>
11050a08:	d9801a04 	addi	r6,sp,104
11050a0c:	b80b883a 	mov	r5,r23
11050a10:	a809883a 	mov	r4,r21
11050a14:	104f9a80 	call	1104f9a8 <__ssprint_r>
11050a18:	103f651e 	bne	r2,zero,110507b0 <___svfiprintf_internal_r+0xc38>
11050a1c:	d8c01c17 	ldw	r3,112(sp)
11050a20:	003f4f06 	br	11050760 <___svfiprintf_internal_r+0xbe8>
11050a24:	00844174 	movhi	r2,4357
11050a28:	109c2704 	addi	r2,r2,28828
11050a2c:	d8802915 	stw	r2,164(sp)
11050a30:	003d4406 	br	1104ff44 <___svfiprintf_internal_r+0x3cc>
11050a34:	dac02317 	ldw	r11,140(sp)
11050a38:	58800017 	ldw	r2,0(r11)
11050a3c:	dac02517 	ldw	r11,148(sp)
11050a40:	5807d7fa 	srai	r3,r11,31
11050a44:	dac02317 	ldw	r11,140(sp)
11050a48:	10c00115 	stw	r3,4(r2)
11050a4c:	5ac00104 	addi	r11,r11,4
11050a50:	dac02315 	stw	r11,140(sp)
11050a54:	dac02517 	ldw	r11,148(sp)
11050a58:	12c00015 	stw	r11,0(r2)
11050a5c:	003c6d06 	br	1104fc14 <___svfiprintf_internal_r+0x9c>
11050a60:	9080100c 	andi	r2,r18,64
11050a64:	dac02317 	ldw	r11,140(sp)
11050a68:	103e5326 	beq	r2,zero,110503b8 <___svfiprintf_internal_r+0x840>
11050a6c:	5f00000f 	ldh	fp,0(r11)
11050a70:	5ac00104 	addi	r11,r11,4
11050a74:	dac02315 	stw	r11,140(sp)
11050a78:	e013d7fa 	srai	r9,fp,31
11050a7c:	4805883a 	mov	r2,r9
11050a80:	003e0706 	br	110502a0 <___svfiprintf_internal_r+0x728>
11050a84:	00800c04 	movi	r2,48
11050a88:	d8801d05 	stb	r2,116(sp)
11050a8c:	d8c01d45 	stb	r3,117(sp)
11050a90:	d8001d85 	stb	zero,118(sp)
11050a94:	90800094 	ori	r2,r18,2
11050a98:	80008f16 	blt	r16,zero,11050cd8 <___svfiprintf_internal_r+0x1160>
11050a9c:	00bfdfc4 	movi	r2,-129
11050aa0:	90a4703a 	and	r18,r18,r2
11050aa4:	94800094 	ori	r18,r18,2
11050aa8:	0015883a 	mov	r10,zero
11050aac:	003d2906 	br	1104ff54 <___svfiprintf_internal_r+0x3dc>
11050ab0:	98c00007 	ldb	r3,0(r19)
11050ab4:	003c7f06 	br	1104fcb4 <___svfiprintf_internal_r+0x13c>
11050ab8:	dac02317 	ldw	r11,140(sp)
11050abc:	0013883a 	mov	r9,zero
11050ac0:	5f000017 	ldw	fp,0(r11)
11050ac4:	5ac00104 	addi	r11,r11,4
11050ac8:	dac02315 	stw	r11,140(sp)
11050acc:	003d1506 	br	1104ff24 <___svfiprintf_internal_r+0x3ac>
11050ad0:	9080100c 	andi	r2,r18,64
11050ad4:	d8001d85 	stb	zero,118(sp)
11050ad8:	dac02317 	ldw	r11,140(sp)
11050adc:	10003426 	beq	r2,zero,11050bb0 <___svfiprintf_internal_r+0x1038>
11050ae0:	58800104 	addi	r2,r11,4
11050ae4:	5f00000b 	ldhu	fp,0(r11)
11050ae8:	0013883a 	mov	r9,zero
11050aec:	803e950e 	bge	r16,zero,11050544 <___svfiprintf_internal_r+0x9cc>
11050af0:	e246b03a 	or	r3,fp,r9
11050af4:	d8802315 	stw	r2,140(sp)
11050af8:	183d5a1e 	bne	r3,zero,11050064 <___svfiprintf_internal_r+0x4ec>
11050afc:	0015883a 	mov	r10,zero
11050b00:	0005883a 	mov	r2,zero
11050b04:	003fb706 	br	110509e4 <___svfiprintf_internal_r+0xe6c>
11050b08:	98c00043 	ldbu	r3,1(r19)
11050b0c:	94800814 	ori	r18,r18,32
11050b10:	9cc00044 	addi	r19,r19,1
11050b14:	18c03fcc 	andi	r3,r3,255
11050b18:	18c0201c 	xori	r3,r3,128
11050b1c:	18ffe004 	addi	r3,r3,-128
11050b20:	003c6406 	br	1104fcb4 <___svfiprintf_internal_r+0x13c>
11050b24:	d8c02315 	stw	r3,140(sp)
11050b28:	0015883a 	mov	r10,zero
11050b2c:	003faa06 	br	110509d8 <___svfiprintf_internal_r+0xe60>
11050b30:	dac02317 	ldw	r11,140(sp)
11050b34:	58800017 	ldw	r2,0(r11)
11050b38:	5ac00104 	addi	r11,r11,4
11050b3c:	dac02315 	stw	r11,140(sp)
11050b40:	dac02517 	ldw	r11,148(sp)
11050b44:	12c00015 	stw	r11,0(r2)
11050b48:	003c3206 	br	1104fc14 <___svfiprintf_internal_r+0x9c>
11050b4c:	01044174 	movhi	r4,4357
11050b50:	211c2704 	addi	r4,r4,28828
11050b54:	d9002915 	stw	r4,164(sp)
11050b58:	d8c02315 	stw	r3,140(sp)
11050b5c:	1025883a 	mov	r18,r2
11050b60:	e244b03a 	or	r2,fp,r9
11050b64:	103f871e 	bne	r2,zero,11050984 <___svfiprintf_internal_r+0xe0c>
11050b68:	0015883a 	mov	r10,zero
11050b6c:	00800084 	movi	r2,2
11050b70:	003f9c06 	br	110509e4 <___svfiprintf_internal_r+0xe6c>
11050b74:	0039883a 	mov	fp,zero
11050b78:	003e5f06 	br	110504f8 <___svfiprintf_internal_r+0x980>
11050b7c:	d9801a04 	addi	r6,sp,104
11050b80:	b80b883a 	mov	r5,r23
11050b84:	a809883a 	mov	r4,r21
11050b88:	104f9a80 	call	1104f9a8 <__ssprint_r>
11050b8c:	103f081e 	bne	r2,zero,110507b0 <___svfiprintf_internal_r+0xc38>
11050b90:	d8c01c17 	ldw	r3,112(sp)
11050b94:	d8801b17 	ldw	r2,108(sp)
11050b98:	d811883a 	mov	r8,sp
11050b9c:	003e9106 	br	110505e4 <___svfiprintf_internal_r+0xa6c>
11050ba0:	01044174 	movhi	r4,4357
11050ba4:	211c9004 	addi	r4,r4,29248
11050ba8:	d9002215 	stw	r4,136(sp)
11050bac:	003ead06 	br	11050664 <___svfiprintf_internal_r+0xaec>
11050bb0:	58800104 	addi	r2,r11,4
11050bb4:	5f000017 	ldw	fp,0(r11)
11050bb8:	0013883a 	mov	r9,zero
11050bbc:	803e610e 	bge	r16,zero,11050544 <___svfiprintf_internal_r+0x9cc>
11050bc0:	003fcb06 	br	11050af0 <___svfiprintf_internal_r+0xf78>
11050bc4:	58800104 	addi	r2,r11,4
11050bc8:	5f000017 	ldw	fp,0(r11)
11050bcc:	0013883a 	mov	r9,zero
11050bd0:	803e420e 	bge	r16,zero,110504dc <___svfiprintf_internal_r+0x964>
11050bd4:	003f7e06 	br	110509d0 <___svfiprintf_internal_r+0xe58>
11050bd8:	5f000017 	ldw	fp,0(r11)
11050bdc:	5ac00104 	addi	r11,r11,4
11050be0:	0013883a 	mov	r9,zero
11050be4:	dac02315 	stw	r11,140(sp)
11050be8:	003cce06 	br	1104ff24 <___svfiprintf_internal_r+0x3ac>
11050bec:	8809883a 	mov	r4,r17
11050bf0:	da002c15 	stw	r8,176(sp)
11050bf4:	10461140 	call	11046114 <strlen>
11050bf8:	d8802115 	stw	r2,132(sp)
11050bfc:	da801d83 	ldbu	r10,118(sp)
11050c00:	df002315 	stw	fp,140(sp)
11050c04:	0021883a 	mov	r16,zero
11050c08:	da002c17 	ldw	r8,176(sp)
11050c0c:	003cf606 	br	1104ffe8 <___svfiprintf_internal_r+0x470>
11050c10:	00800184 	movi	r2,6
11050c14:	1400012e 	bgeu	r2,r16,11050c1c <___svfiprintf_internal_r+0x10a4>
11050c18:	1021883a 	mov	r16,r2
11050c1c:	dc002115 	stw	r16,132(sp)
11050c20:	8005883a 	mov	r2,r16
11050c24:	80003c16 	blt	r16,zero,11050d18 <___svfiprintf_internal_r+0x11a0>
11050c28:	04444174 	movhi	r17,4357
11050c2c:	d8802015 	stw	r2,128(sp)
11050c30:	df002315 	stw	fp,140(sp)
11050c34:	8c5c2c04 	addi	r17,r17,28848
11050c38:	003d2e06 	br	110500f4 <___svfiprintf_internal_r+0x57c>
11050c3c:	04001004 	movi	r16,64
11050c40:	800b883a 	mov	r5,r16
11050c44:	104d4ac0 	call	1104d4ac <_malloc_r>
11050c48:	dac02717 	ldw	r11,156(sp)
11050c4c:	58800015 	stw	r2,0(r11)
11050c50:	58800415 	stw	r2,16(r11)
11050c54:	10004826 	beq	r2,zero,11050d78 <___svfiprintf_internal_r+0x1200>
11050c58:	dac02717 	ldw	r11,156(sp)
11050c5c:	5c000515 	stw	r16,20(r11)
11050c60:	003bd906 	br	1104fbc8 <___svfiprintf_internal_r+0x50>
11050c64:	9080004c 	andi	r2,r18,1
11050c68:	0015883a 	mov	r10,zero
11050c6c:	10000626 	beq	r2,zero,11050c88 <___svfiprintf_internal_r+0x1110>
11050c70:	dac02b17 	ldw	r11,172(sp)
11050c74:	00800c04 	movi	r2,48
11050c78:	d88019c5 	stb	r2,103(sp)
11050c7c:	dac02115 	stw	r11,132(sp)
11050c80:	dc4019c4 	addi	r17,sp,103
11050c84:	003cd806 	br	1104ffe8 <___svfiprintf_internal_r+0x470>
11050c88:	d8002115 	stw	zero,132(sp)
11050c8c:	dc401a04 	addi	r17,sp,104
11050c90:	003cd506 	br	1104ffe8 <___svfiprintf_internal_r+0x470>
11050c94:	01044174 	movhi	r4,4357
11050c98:	211c9404 	addi	r4,r4,29264
11050c9c:	d9002815 	stw	r4,160(sp)
11050ca0:	003d4306 	br	110501b0 <___svfiprintf_internal_r+0x638>
11050ca4:	00bfffc4 	movi	r2,-1
11050ca8:	003ec606 	br	110507c4 <___svfiprintf_internal_r+0xc4c>
11050cac:	00800044 	movi	r2,1
11050cb0:	10803fcc 	andi	r2,r2,255
11050cb4:	00c00044 	movi	r3,1
11050cb8:	10fd8026 	beq	r2,r3,110502bc <___svfiprintf_internal_r+0x744>
11050cbc:	00c00084 	movi	r3,2
11050cc0:	10fca426 	beq	r2,r3,1104ff54 <___svfiprintf_internal_r+0x3dc>
11050cc4:	003ce806 	br	11050068 <___svfiprintf_internal_r+0x4f0>
11050cc8:	01044174 	movhi	r4,4357
11050ccc:	211c9404 	addi	r4,r4,29264
11050cd0:	d9002815 	stw	r4,160(sp)
11050cd4:	003e9906 	br	1105073c <___svfiprintf_internal_r+0xbc4>
11050cd8:	1025883a 	mov	r18,r2
11050cdc:	0015883a 	mov	r10,zero
11050ce0:	00800084 	movi	r2,2
11050ce4:	003ff206 	br	11050cb0 <___svfiprintf_internal_r+0x1138>
11050ce8:	01444174 	movhi	r5,4357
11050cec:	295c9004 	addi	r5,r5,29248
11050cf0:	d9402215 	stw	r5,136(sp)
11050cf4:	003ee206 	br	11050880 <___svfiprintf_internal_r+0xd08>
11050cf8:	5827883a 	mov	r19,r11
11050cfc:	0021883a 	mov	r16,zero
11050d00:	003bed06 	br	1104fcb8 <___svfiprintf_internal_r+0x140>
11050d04:	dc002115 	stw	r16,132(sp)
11050d08:	da801d83 	ldbu	r10,118(sp)
11050d0c:	df002315 	stw	fp,140(sp)
11050d10:	0021883a 	mov	r16,zero
11050d14:	003cb406 	br	1104ffe8 <___svfiprintf_internal_r+0x470>
11050d18:	0005883a 	mov	r2,zero
11050d1c:	003fc206 	br	11050c28 <___svfiprintf_internal_r+0x10b0>
11050d20:	d8802317 	ldw	r2,140(sp)
11050d24:	98c00043 	ldbu	r3,1(r19)
11050d28:	5827883a 	mov	r19,r11
11050d2c:	14000017 	ldw	r16,0(r2)
11050d30:	10800104 	addi	r2,r2,4
11050d34:	d8802315 	stw	r2,140(sp)
11050d38:	803f760e 	bge	r16,zero,11050b14 <___svfiprintf_internal_r+0xf9c>
11050d3c:	18c03fcc 	andi	r3,r3,255
11050d40:	18c0201c 	xori	r3,r3,128
11050d44:	043fffc4 	movi	r16,-1
11050d48:	18ffe004 	addi	r3,r3,-128
11050d4c:	003bd906 	br	1104fcb4 <___svfiprintf_internal_r+0x13c>
11050d50:	d9c01d85 	stb	r7,118(sp)
11050d54:	003cb606 	br	11050030 <___svfiprintf_internal_r+0x4b8>
11050d58:	d9c01d85 	stb	r7,118(sp)
11050d5c:	003d2106 	br	110501e4 <___svfiprintf_internal_r+0x66c>
11050d60:	d9c01d85 	stb	r7,118(sp)
11050d64:	003d8e06 	br	110503a0 <___svfiprintf_internal_r+0x828>
11050d68:	d9c01d85 	stb	r7,118(sp)
11050d6c:	003db306 	br	1105043c <___svfiprintf_internal_r+0x8c4>
11050d70:	d9c01d85 	stb	r7,118(sp)
11050d74:	003c8a06 	br	1104ffa0 <___svfiprintf_internal_r+0x428>
11050d78:	dac02a17 	ldw	r11,168(sp)
11050d7c:	00800304 	movi	r2,12
11050d80:	58800015 	stw	r2,0(r11)
11050d84:	00bfffc4 	movi	r2,-1
11050d88:	003e8e06 	br	110507c4 <___svfiprintf_internal_r+0xc4c>
11050d8c:	d9c01d85 	stb	r7,118(sp)
11050d90:	003dc706 	br	110504b0 <___svfiprintf_internal_r+0x938>
11050d94:	d9c01d85 	stb	r7,118(sp)
11050d98:	003ddf06 	br	11050518 <___svfiprintf_internal_r+0x9a0>
11050d9c:	d9c01d85 	stb	r7,118(sp)
11050da0:	003d3706 	br	11050280 <___svfiprintf_internal_r+0x708>
11050da4:	d9c01d85 	stb	r7,118(sp)
11050da8:	003c5406 	br	1104fefc <___svfiprintf_internal_r+0x384>
11050dac:	d9c01d85 	stb	r7,118(sp)
11050db0:	003d1d06 	br	11050228 <___svfiprintf_internal_r+0x6b0>

11050db4 <__sprint_r.part.0>:
11050db4:	28801917 	ldw	r2,100(r5)
11050db8:	defff604 	addi	sp,sp,-40
11050dbc:	dd400515 	stw	r21,20(sp)
11050dc0:	dfc00915 	stw	ra,36(sp)
11050dc4:	df000815 	stw	fp,32(sp)
11050dc8:	ddc00715 	stw	r23,28(sp)
11050dcc:	dd800615 	stw	r22,24(sp)
11050dd0:	dd000415 	stw	r20,16(sp)
11050dd4:	dcc00315 	stw	r19,12(sp)
11050dd8:	dc800215 	stw	r18,8(sp)
11050ddc:	dc400115 	stw	r17,4(sp)
11050de0:	dc000015 	stw	r16,0(sp)
11050de4:	1088000c 	andi	r2,r2,8192
11050de8:	302b883a 	mov	r21,r6
11050dec:	10002e26 	beq	r2,zero,11050ea8 <__sprint_r.part.0+0xf4>
11050df0:	30800217 	ldw	r2,8(r6)
11050df4:	35800017 	ldw	r22,0(r6)
11050df8:	10002926 	beq	r2,zero,11050ea0 <__sprint_r.part.0+0xec>
11050dfc:	2827883a 	mov	r19,r5
11050e00:	2029883a 	mov	r20,r4
11050e04:	b5c00104 	addi	r23,r22,4
11050e08:	04bfffc4 	movi	r18,-1
11050e0c:	bc400017 	ldw	r17,0(r23)
11050e10:	b4000017 	ldw	r16,0(r22)
11050e14:	0039883a 	mov	fp,zero
11050e18:	8822d0ba 	srli	r17,r17,2
11050e1c:	8800031e 	bne	r17,zero,11050e2c <__sprint_r.part.0+0x78>
11050e20:	00001806 	br	11050e84 <__sprint_r.part.0+0xd0>
11050e24:	84000104 	addi	r16,r16,4
11050e28:	8f001526 	beq	r17,fp,11050e80 <__sprint_r.part.0+0xcc>
11050e2c:	81400017 	ldw	r5,0(r16)
11050e30:	980d883a 	mov	r6,r19
11050e34:	a009883a 	mov	r4,r20
11050e38:	10527dc0 	call	110527dc <_fputwc_r>
11050e3c:	e7000044 	addi	fp,fp,1
11050e40:	14bff81e 	bne	r2,r18,11050e24 <__sprint_r.part.0+0x70>
11050e44:	9005883a 	mov	r2,r18
11050e48:	a8000215 	stw	zero,8(r21)
11050e4c:	a8000115 	stw	zero,4(r21)
11050e50:	dfc00917 	ldw	ra,36(sp)
11050e54:	df000817 	ldw	fp,32(sp)
11050e58:	ddc00717 	ldw	r23,28(sp)
11050e5c:	dd800617 	ldw	r22,24(sp)
11050e60:	dd400517 	ldw	r21,20(sp)
11050e64:	dd000417 	ldw	r20,16(sp)
11050e68:	dcc00317 	ldw	r19,12(sp)
11050e6c:	dc800217 	ldw	r18,8(sp)
11050e70:	dc400117 	ldw	r17,4(sp)
11050e74:	dc000017 	ldw	r16,0(sp)
11050e78:	dec00a04 	addi	sp,sp,40
11050e7c:	f800283a 	ret
11050e80:	a8800217 	ldw	r2,8(r21)
11050e84:	8c63883a 	add	r17,r17,r17
11050e88:	8c63883a 	add	r17,r17,r17
11050e8c:	1445c83a 	sub	r2,r2,r17
11050e90:	a8800215 	stw	r2,8(r21)
11050e94:	b5800204 	addi	r22,r22,8
11050e98:	bdc00204 	addi	r23,r23,8
11050e9c:	103fdb1e 	bne	r2,zero,11050e0c <__sprint_r.part.0+0x58>
11050ea0:	0005883a 	mov	r2,zero
11050ea4:	003fe806 	br	11050e48 <__sprint_r.part.0+0x94>
11050ea8:	104cbd00 	call	1104cbd0 <__sfvwrite_r>
11050eac:	003fe606 	br	11050e48 <__sprint_r.part.0+0x94>

11050eb0 <__sprint_r>:
11050eb0:	30c00217 	ldw	r3,8(r6)
11050eb4:	18000126 	beq	r3,zero,11050ebc <__sprint_r+0xc>
11050eb8:	1050db41 	jmpi	11050db4 <__sprint_r.part.0>
11050ebc:	30000115 	stw	zero,4(r6)
11050ec0:	0005883a 	mov	r2,zero
11050ec4:	f800283a 	ret

11050ec8 <___vfiprintf_internal_r>:
11050ec8:	deffc904 	addi	sp,sp,-220
11050ecc:	df003515 	stw	fp,212(sp)
11050ed0:	dd003115 	stw	r20,196(sp)
11050ed4:	dfc03615 	stw	ra,216(sp)
11050ed8:	ddc03415 	stw	r23,208(sp)
11050edc:	dd803315 	stw	r22,204(sp)
11050ee0:	dd403215 	stw	r21,200(sp)
11050ee4:	dcc03015 	stw	r19,192(sp)
11050ee8:	dc802f15 	stw	r18,188(sp)
11050eec:	dc402e15 	stw	r17,184(sp)
11050ef0:	dc002d15 	stw	r16,180(sp)
11050ef4:	d9002015 	stw	r4,128(sp)
11050ef8:	d9c02215 	stw	r7,136(sp)
11050efc:	2829883a 	mov	r20,r5
11050f00:	3039883a 	mov	fp,r6
11050f04:	20000226 	beq	r4,zero,11050f10 <___vfiprintf_internal_r+0x48>
11050f08:	20800e17 	ldw	r2,56(r4)
11050f0c:	1000cf26 	beq	r2,zero,1105124c <___vfiprintf_internal_r+0x384>
11050f10:	a080030b 	ldhu	r2,12(r20)
11050f14:	10c8000c 	andi	r3,r2,8192
11050f18:	1800061e 	bne	r3,zero,11050f34 <___vfiprintf_internal_r+0x6c>
11050f1c:	a1001917 	ldw	r4,100(r20)
11050f20:	00f7ffc4 	movi	r3,-8193
11050f24:	10880014 	ori	r2,r2,8192
11050f28:	20c6703a 	and	r3,r4,r3
11050f2c:	a080030d 	sth	r2,12(r20)
11050f30:	a0c01915 	stw	r3,100(r20)
11050f34:	10c0020c 	andi	r3,r2,8
11050f38:	1800a926 	beq	r3,zero,110511e0 <___vfiprintf_internal_r+0x318>
11050f3c:	a0c00417 	ldw	r3,16(r20)
11050f40:	1800a726 	beq	r3,zero,110511e0 <___vfiprintf_internal_r+0x318>
11050f44:	1080068c 	andi	r2,r2,26
11050f48:	00c00284 	movi	r3,10
11050f4c:	10c0ac26 	beq	r2,r3,11051200 <___vfiprintf_internal_r+0x338>
11050f50:	da801a04 	addi	r10,sp,104
11050f54:	da801e15 	stw	r10,120(sp)
11050f58:	d8801e17 	ldw	r2,120(sp)
11050f5c:	da8019c4 	addi	r10,sp,103
11050f60:	05844174 	movhi	r22,4357
11050f64:	05c44174 	movhi	r23,4357
11050f68:	da801f15 	stw	r10,124(sp)
11050f6c:	1295c83a 	sub	r10,r2,r10
11050f70:	b59c9c04 	addi	r22,r22,29296
11050f74:	bddc9804 	addi	r23,r23,29280
11050f78:	dec01a15 	stw	sp,104(sp)
11050f7c:	d8001c15 	stw	zero,112(sp)
11050f80:	d8001b15 	stw	zero,108(sp)
11050f84:	d8002615 	stw	zero,152(sp)
11050f88:	d8002315 	stw	zero,140(sp)
11050f8c:	da802715 	stw	r10,156(sp)
11050f90:	d811883a 	mov	r8,sp
11050f94:	dd002115 	stw	r20,132(sp)
11050f98:	e021883a 	mov	r16,fp
11050f9c:	80800007 	ldb	r2,0(r16)
11050fa0:	1003ea26 	beq	r2,zero,11051f4c <___vfiprintf_internal_r+0x1084>
11050fa4:	00c00944 	movi	r3,37
11050fa8:	8025883a 	mov	r18,r16
11050fac:	10c0021e 	bne	r2,r3,11050fb8 <___vfiprintf_internal_r+0xf0>
11050fb0:	00001606 	br	1105100c <___vfiprintf_internal_r+0x144>
11050fb4:	10c00326 	beq	r2,r3,11050fc4 <___vfiprintf_internal_r+0xfc>
11050fb8:	94800044 	addi	r18,r18,1
11050fbc:	90800007 	ldb	r2,0(r18)
11050fc0:	103ffc1e 	bne	r2,zero,11050fb4 <___vfiprintf_internal_r+0xec>
11050fc4:	9423c83a 	sub	r17,r18,r16
11050fc8:	88001026 	beq	r17,zero,1105100c <___vfiprintf_internal_r+0x144>
11050fcc:	d8c01c17 	ldw	r3,112(sp)
11050fd0:	d8801b17 	ldw	r2,108(sp)
11050fd4:	44000015 	stw	r16,0(r8)
11050fd8:	88c7883a 	add	r3,r17,r3
11050fdc:	10800044 	addi	r2,r2,1
11050fe0:	44400115 	stw	r17,4(r8)
11050fe4:	d8c01c15 	stw	r3,112(sp)
11050fe8:	d8801b15 	stw	r2,108(sp)
11050fec:	010001c4 	movi	r4,7
11050ff0:	2080760e 	bge	r4,r2,110511cc <___vfiprintf_internal_r+0x304>
11050ff4:	1803821e 	bne	r3,zero,11051e00 <___vfiprintf_internal_r+0xf38>
11050ff8:	da802317 	ldw	r10,140(sp)
11050ffc:	d8001b15 	stw	zero,108(sp)
11051000:	d811883a 	mov	r8,sp
11051004:	5455883a 	add	r10,r10,r17
11051008:	da802315 	stw	r10,140(sp)
1105100c:	90800007 	ldb	r2,0(r18)
11051010:	10044626 	beq	r2,zero,1105212c <___vfiprintf_internal_r+0x1264>
11051014:	90c00047 	ldb	r3,1(r18)
11051018:	94000044 	addi	r16,r18,1
1105101c:	d8001d85 	stb	zero,118(sp)
11051020:	0009883a 	mov	r4,zero
11051024:	000f883a 	mov	r7,zero
11051028:	027fffc4 	movi	r9,-1
1105102c:	0023883a 	mov	r17,zero
11051030:	0029883a 	mov	r20,zero
11051034:	01401604 	movi	r5,88
11051038:	01800244 	movi	r6,9
1105103c:	03400a84 	movi	r13,42
11051040:	03001b04 	movi	r12,108
11051044:	84000044 	addi	r16,r16,1
11051048:	18bff804 	addi	r2,r3,-32
1105104c:	28827336 	bltu	r5,r2,11051a1c <___vfiprintf_internal_r+0xb54>
11051050:	100490ba 	slli	r2,r2,2
11051054:	02844174 	movhi	r10,4357
11051058:	52841a04 	addi	r10,r10,4200
1105105c:	1285883a 	add	r2,r2,r10
11051060:	10800017 	ldw	r2,0(r2)
11051064:	1000683a 	jmp	r2
11051068:	11051750 	cmplti	r4,r2,5213
1105106c:	11051a1c 	xori	r4,r2,5224
11051070:	11051a1c 	xori	r4,r2,5224
11051074:	11051770 	cmpltui	r4,r2,5213
11051078:	11051a1c 	xori	r4,r2,5224
1105107c:	11051a1c 	xori	r4,r2,5224
11051080:	11051a1c 	xori	r4,r2,5224
11051084:	11051a1c 	xori	r4,r2,5224
11051088:	11051a1c 	xori	r4,r2,5224
1105108c:	11051a1c 	xori	r4,r2,5224
11051090:	11051958 	cmpnei	r4,r2,5221
11051094:	11051974 	orhi	r4,r2,5221
11051098:	11051a1c 	xori	r4,r2,5224
1105109c:	1105125c 	xori	r4,r2,5193
110510a0:	11051984 	addi	r4,r2,5222
110510a4:	11051a1c 	xori	r4,r2,5224
110510a8:	1105177c 	xorhi	r4,r2,5213
110510ac:	11051788 	cmpgei	r4,r2,5214
110510b0:	11051788 	cmpgei	r4,r2,5214
110510b4:	11051788 	cmpgei	r4,r2,5214
110510b8:	11051788 	cmpgei	r4,r2,5214
110510bc:	11051788 	cmpgei	r4,r2,5214
110510c0:	11051788 	cmpgei	r4,r2,5214
110510c4:	11051788 	cmpgei	r4,r2,5214
110510c8:	11051788 	cmpgei	r4,r2,5214
110510cc:	11051788 	cmpgei	r4,r2,5214
110510d0:	11051a1c 	xori	r4,r2,5224
110510d4:	11051a1c 	xori	r4,r2,5224
110510d8:	11051a1c 	xori	r4,r2,5224
110510dc:	11051a1c 	xori	r4,r2,5224
110510e0:	11051a1c 	xori	r4,r2,5224
110510e4:	11051a1c 	xori	r4,r2,5224
110510e8:	11051a1c 	xori	r4,r2,5224
110510ec:	11051a1c 	xori	r4,r2,5224
110510f0:	11051a1c 	xori	r4,r2,5224
110510f4:	11051a1c 	xori	r4,r2,5224
110510f8:	110517b4 	orhi	r4,r2,5214
110510fc:	11051a1c 	xori	r4,r2,5224
11051100:	11051a1c 	xori	r4,r2,5224
11051104:	11051a1c 	xori	r4,r2,5224
11051108:	11051a1c 	xori	r4,r2,5224
1105110c:	11051a1c 	xori	r4,r2,5224
11051110:	11051a1c 	xori	r4,r2,5224
11051114:	11051a1c 	xori	r4,r2,5224
11051118:	11051a1c 	xori	r4,r2,5224
1105111c:	11051a1c 	xori	r4,r2,5224
11051120:	11051a1c 	xori	r4,r2,5224
11051124:	110517ec 	andhi	r4,r2,5215
11051128:	11051a1c 	xori	r4,r2,5224
1105112c:	11051a1c 	xori	r4,r2,5224
11051130:	11051a1c 	xori	r4,r2,5224
11051134:	11051a1c 	xori	r4,r2,5224
11051138:	11051a1c 	xori	r4,r2,5224
1105113c:	11051844 	addi	r4,r2,5217
11051140:	11051a1c 	xori	r4,r2,5224
11051144:	11051a1c 	xori	r4,r2,5224
11051148:	110518b4 	orhi	r4,r2,5218
1105114c:	11051a1c 	xori	r4,r2,5224
11051150:	11051a1c 	xori	r4,r2,5224
11051154:	11051a1c 	xori	r4,r2,5224
11051158:	11051a1c 	xori	r4,r2,5224
1105115c:	11051a1c 	xori	r4,r2,5224
11051160:	11051a1c 	xori	r4,r2,5224
11051164:	11051a1c 	xori	r4,r2,5224
11051168:	11051a1c 	xori	r4,r2,5224
1105116c:	11051a1c 	xori	r4,r2,5224
11051170:	11051a1c 	xori	r4,r2,5224
11051174:	11051660 	cmpeqi	r4,r2,5209
11051178:	1105168c 	andi	r4,r2,5210
1105117c:	11051a1c 	xori	r4,r2,5224
11051180:	11051a1c 	xori	r4,r2,5224
11051184:	11051a1c 	xori	r4,r2,5224
11051188:	110519c4 	addi	r4,r2,5223
1105118c:	1105168c 	andi	r4,r2,5210
11051190:	11051a1c 	xori	r4,r2,5224
11051194:	11051a1c 	xori	r4,r2,5224
11051198:	11051520 	cmpeqi	r4,r2,5204
1105119c:	11051a1c 	xori	r4,r2,5224
110511a0:	11051530 	cmpltui	r4,r2,5204
110511a4:	1105156c 	andhi	r4,r2,5205
110511a8:	11051268 	cmpgeui	r4,r2,5193
110511ac:	11051514 	ori	r4,r2,5204
110511b0:	11051a1c 	xori	r4,r2,5224
110511b4:	110518f0 	cmpltui	r4,r2,5219
110511b8:	11051a1c 	xori	r4,r2,5224
110511bc:	11051948 	cmpgei	r4,r2,5221
110511c0:	11051a1c 	xori	r4,r2,5224
110511c4:	11051a1c 	xori	r4,r2,5224
110511c8:	1105160c 	andi	r4,r2,5208
110511cc:	42000204 	addi	r8,r8,8
110511d0:	da802317 	ldw	r10,140(sp)
110511d4:	5455883a 	add	r10,r10,r17
110511d8:	da802315 	stw	r10,140(sp)
110511dc:	003f8b06 	br	1105100c <___vfiprintf_internal_r+0x144>
110511e0:	d9002017 	ldw	r4,128(sp)
110511e4:	a00b883a 	mov	r5,r20
110511e8:	104a7780 	call	1104a778 <__swsetup_r>
110511ec:	1003b11e 	bne	r2,zero,110520b4 <___vfiprintf_internal_r+0x11ec>
110511f0:	a080030b 	ldhu	r2,12(r20)
110511f4:	00c00284 	movi	r3,10
110511f8:	1080068c 	andi	r2,r2,26
110511fc:	10ff541e 	bne	r2,r3,11050f50 <___vfiprintf_internal_r+0x88>
11051200:	a080038f 	ldh	r2,14(r20)
11051204:	103f5216 	blt	r2,zero,11050f50 <___vfiprintf_internal_r+0x88>
11051208:	d9c02217 	ldw	r7,136(sp)
1105120c:	d9002017 	ldw	r4,128(sp)
11051210:	e00d883a 	mov	r6,fp
11051214:	a00b883a 	mov	r5,r20
11051218:	10523400 	call	11052340 <__sbprintf>
1105121c:	dfc03617 	ldw	ra,216(sp)
11051220:	df003517 	ldw	fp,212(sp)
11051224:	ddc03417 	ldw	r23,208(sp)
11051228:	dd803317 	ldw	r22,204(sp)
1105122c:	dd403217 	ldw	r21,200(sp)
11051230:	dd003117 	ldw	r20,196(sp)
11051234:	dcc03017 	ldw	r19,192(sp)
11051238:	dc802f17 	ldw	r18,188(sp)
1105123c:	dc402e17 	ldw	r17,184(sp)
11051240:	dc002d17 	ldw	r16,180(sp)
11051244:	dec03704 	addi	sp,sp,220
11051248:	f800283a 	ret
1105124c:	104c74c0 	call	1104c74c <__sinit>
11051250:	003f2f06 	br	11050f10 <___vfiprintf_internal_r+0x48>
11051254:	0463c83a 	sub	r17,zero,r17
11051258:	d8802215 	stw	r2,136(sp)
1105125c:	a5000114 	ori	r20,r20,4
11051260:	80c00007 	ldb	r3,0(r16)
11051264:	003f7706 	br	11051044 <___vfiprintf_internal_r+0x17c>
11051268:	00800c04 	movi	r2,48
1105126c:	da802217 	ldw	r10,136(sp)
11051270:	d8801d05 	stb	r2,116(sp)
11051274:	00801e04 	movi	r2,120
11051278:	d8801d45 	stb	r2,117(sp)
1105127c:	d8001d85 	stb	zero,118(sp)
11051280:	50c00104 	addi	r3,r10,4
11051284:	54800017 	ldw	r18,0(r10)
11051288:	0027883a 	mov	r19,zero
1105128c:	a0800094 	ori	r2,r20,2
11051290:	48030b16 	blt	r9,zero,11051ec0 <___vfiprintf_internal_r+0xff8>
11051294:	00bfdfc4 	movi	r2,-129
11051298:	a096703a 	and	r11,r20,r2
1105129c:	d8c02215 	stw	r3,136(sp)
110512a0:	5d000094 	ori	r20,r11,2
110512a4:	90032b1e 	bne	r18,zero,11051f54 <___vfiprintf_internal_r+0x108c>
110512a8:	00844174 	movhi	r2,4357
110512ac:	109c2704 	addi	r2,r2,28828
110512b0:	d8802615 	stw	r2,152(sp)
110512b4:	0039883a 	mov	fp,zero
110512b8:	48017b1e 	bne	r9,zero,110518a8 <___vfiprintf_internal_r+0x9e0>
110512bc:	0013883a 	mov	r9,zero
110512c0:	0027883a 	mov	r19,zero
110512c4:	dd401a04 	addi	r21,sp,104
110512c8:	4825883a 	mov	r18,r9
110512cc:	4cc0010e 	bge	r9,r19,110512d4 <___vfiprintf_internal_r+0x40c>
110512d0:	9825883a 	mov	r18,r19
110512d4:	e7003fcc 	andi	fp,fp,255
110512d8:	e700201c 	xori	fp,fp,128
110512dc:	e73fe004 	addi	fp,fp,-128
110512e0:	e0000126 	beq	fp,zero,110512e8 <___vfiprintf_internal_r+0x420>
110512e4:	94800044 	addi	r18,r18,1
110512e8:	a380008c 	andi	r14,r20,2
110512ec:	70000126 	beq	r14,zero,110512f4 <___vfiprintf_internal_r+0x42c>
110512f0:	94800084 	addi	r18,r18,2
110512f4:	a700210c 	andi	fp,r20,132
110512f8:	e001df1e 	bne	fp,zero,11051a78 <___vfiprintf_internal_r+0xbb0>
110512fc:	8c87c83a 	sub	r3,r17,r18
11051300:	00c1dd0e 	bge	zero,r3,11051a78 <___vfiprintf_internal_r+0xbb0>
11051304:	01c00404 	movi	r7,16
11051308:	d8801c17 	ldw	r2,112(sp)
1105130c:	38c3ad0e 	bge	r7,r3,110521c4 <___vfiprintf_internal_r+0x12fc>
11051310:	02844174 	movhi	r10,4357
11051314:	529c9c04 	addi	r10,r10,29296
11051318:	dc002915 	stw	r16,164(sp)
1105131c:	d9801b17 	ldw	r6,108(sp)
11051320:	da802415 	stw	r10,144(sp)
11051324:	03c001c4 	movi	r15,7
11051328:	da402515 	stw	r9,148(sp)
1105132c:	db802815 	stw	r14,160(sp)
11051330:	1821883a 	mov	r16,r3
11051334:	00000506 	br	1105134c <___vfiprintf_internal_r+0x484>
11051338:	31400084 	addi	r5,r6,2
1105133c:	42000204 	addi	r8,r8,8
11051340:	200d883a 	mov	r6,r4
11051344:	843ffc04 	addi	r16,r16,-16
11051348:	3c000d0e 	bge	r7,r16,11051380 <___vfiprintf_internal_r+0x4b8>
1105134c:	10800404 	addi	r2,r2,16
11051350:	31000044 	addi	r4,r6,1
11051354:	45800015 	stw	r22,0(r8)
11051358:	41c00115 	stw	r7,4(r8)
1105135c:	d8801c15 	stw	r2,112(sp)
11051360:	d9001b15 	stw	r4,108(sp)
11051364:	793ff40e 	bge	r15,r4,11051338 <___vfiprintf_internal_r+0x470>
11051368:	1001b51e 	bne	r2,zero,11051a40 <___vfiprintf_internal_r+0xb78>
1105136c:	843ffc04 	addi	r16,r16,-16
11051370:	000d883a 	mov	r6,zero
11051374:	01400044 	movi	r5,1
11051378:	d811883a 	mov	r8,sp
1105137c:	3c3ff316 	blt	r7,r16,1105134c <___vfiprintf_internal_r+0x484>
11051380:	8007883a 	mov	r3,r16
11051384:	da402517 	ldw	r9,148(sp)
11051388:	db802817 	ldw	r14,160(sp)
1105138c:	dc002917 	ldw	r16,164(sp)
11051390:	da802417 	ldw	r10,144(sp)
11051394:	1885883a 	add	r2,r3,r2
11051398:	40c00115 	stw	r3,4(r8)
1105139c:	42800015 	stw	r10,0(r8)
110513a0:	d8801c15 	stw	r2,112(sp)
110513a4:	d9401b15 	stw	r5,108(sp)
110513a8:	00c001c4 	movi	r3,7
110513ac:	19426016 	blt	r3,r5,11051d30 <___vfiprintf_internal_r+0xe68>
110513b0:	d8c01d87 	ldb	r3,118(sp)
110513b4:	42000204 	addi	r8,r8,8
110513b8:	29000044 	addi	r4,r5,1
110513bc:	1801b31e 	bne	r3,zero,11051a8c <___vfiprintf_internal_r+0xbc4>
110513c0:	7001c026 	beq	r14,zero,11051ac4 <___vfiprintf_internal_r+0xbfc>
110513c4:	d8c01d04 	addi	r3,sp,116
110513c8:	10800084 	addi	r2,r2,2
110513cc:	40c00015 	stw	r3,0(r8)
110513d0:	00c00084 	movi	r3,2
110513d4:	40c00115 	stw	r3,4(r8)
110513d8:	d8801c15 	stw	r2,112(sp)
110513dc:	d9001b15 	stw	r4,108(sp)
110513e0:	00c001c4 	movi	r3,7
110513e4:	1902650e 	bge	r3,r4,11051d7c <___vfiprintf_internal_r+0xeb4>
110513e8:	10029a1e 	bne	r2,zero,11051e54 <___vfiprintf_internal_r+0xf8c>
110513ec:	00c02004 	movi	r3,128
110513f0:	01000044 	movi	r4,1
110513f4:	000b883a 	mov	r5,zero
110513f8:	d811883a 	mov	r8,sp
110513fc:	e0c1b31e 	bne	fp,r3,11051acc <___vfiprintf_internal_r+0xc04>
11051400:	8cb9c83a 	sub	fp,r17,r18
11051404:	0701b10e 	bge	zero,fp,11051acc <___vfiprintf_internal_r+0xc04>
11051408:	01c00404 	movi	r7,16
1105140c:	3f03890e 	bge	r7,fp,11052234 <___vfiprintf_internal_r+0x136c>
11051410:	00c44174 	movhi	r3,4357
11051414:	18dc9804 	addi	r3,r3,29280
11051418:	d8c02415 	stw	r3,144(sp)
1105141c:	8007883a 	mov	r3,r16
11051420:	034001c4 	movi	r13,7
11051424:	e021883a 	mov	r16,fp
11051428:	da402515 	stw	r9,148(sp)
1105142c:	1839883a 	mov	fp,r3
11051430:	00000506 	br	11051448 <___vfiprintf_internal_r+0x580>
11051434:	29800084 	addi	r6,r5,2
11051438:	42000204 	addi	r8,r8,8
1105143c:	180b883a 	mov	r5,r3
11051440:	843ffc04 	addi	r16,r16,-16
11051444:	3c000d0e 	bge	r7,r16,1105147c <___vfiprintf_internal_r+0x5b4>
11051448:	10800404 	addi	r2,r2,16
1105144c:	28c00044 	addi	r3,r5,1
11051450:	45c00015 	stw	r23,0(r8)
11051454:	41c00115 	stw	r7,4(r8)
11051458:	d8801c15 	stw	r2,112(sp)
1105145c:	d8c01b15 	stw	r3,108(sp)
11051460:	68fff40e 	bge	r13,r3,11051434 <___vfiprintf_internal_r+0x56c>
11051464:	1002241e 	bne	r2,zero,11051cf8 <___vfiprintf_internal_r+0xe30>
11051468:	843ffc04 	addi	r16,r16,-16
1105146c:	01800044 	movi	r6,1
11051470:	000b883a 	mov	r5,zero
11051474:	d811883a 	mov	r8,sp
11051478:	3c3ff316 	blt	r7,r16,11051448 <___vfiprintf_internal_r+0x580>
1105147c:	da402517 	ldw	r9,148(sp)
11051480:	e007883a 	mov	r3,fp
11051484:	8039883a 	mov	fp,r16
11051488:	1821883a 	mov	r16,r3
1105148c:	d8c02417 	ldw	r3,144(sp)
11051490:	1705883a 	add	r2,r2,fp
11051494:	47000115 	stw	fp,4(r8)
11051498:	40c00015 	stw	r3,0(r8)
1105149c:	d8801c15 	stw	r2,112(sp)
110514a0:	d9801b15 	stw	r6,108(sp)
110514a4:	00c001c4 	movi	r3,7
110514a8:	19827616 	blt	r3,r6,11051e84 <___vfiprintf_internal_r+0xfbc>
110514ac:	4cf9c83a 	sub	fp,r9,r19
110514b0:	42000204 	addi	r8,r8,8
110514b4:	31000044 	addi	r4,r6,1
110514b8:	300b883a 	mov	r5,r6
110514bc:	07018516 	blt	zero,fp,11051ad4 <___vfiprintf_internal_r+0xc0c>
110514c0:	9885883a 	add	r2,r19,r2
110514c4:	45400015 	stw	r21,0(r8)
110514c8:	44c00115 	stw	r19,4(r8)
110514cc:	d8801c15 	stw	r2,112(sp)
110514d0:	d9001b15 	stw	r4,108(sp)
110514d4:	00c001c4 	movi	r3,7
110514d8:	1901dd0e 	bge	r3,r4,11051c50 <___vfiprintf_internal_r+0xd88>
110514dc:	1002401e 	bne	r2,zero,11051de0 <___vfiprintf_internal_r+0xf18>
110514e0:	d8001b15 	stw	zero,108(sp)
110514e4:	a2c0010c 	andi	r11,r20,4
110514e8:	58000226 	beq	r11,zero,110514f4 <___vfiprintf_internal_r+0x62c>
110514ec:	8ca7c83a 	sub	r19,r17,r18
110514f0:	04c2f216 	blt	zero,r19,110520bc <___vfiprintf_internal_r+0x11f4>
110514f4:	8c80010e 	bge	r17,r18,110514fc <___vfiprintf_internal_r+0x634>
110514f8:	9023883a 	mov	r17,r18
110514fc:	da802317 	ldw	r10,140(sp)
11051500:	5455883a 	add	r10,r10,r17
11051504:	da802315 	stw	r10,140(sp)
11051508:	d8001b15 	stw	zero,108(sp)
1105150c:	d811883a 	mov	r8,sp
11051510:	003ea206 	br	11050f9c <___vfiprintf_internal_r+0xd4>
11051514:	a5000814 	ori	r20,r20,32
11051518:	80c00007 	ldb	r3,0(r16)
1105151c:	003ec906 	br	11051044 <___vfiprintf_internal_r+0x17c>
11051520:	80c00007 	ldb	r3,0(r16)
11051524:	1b030926 	beq	r3,r12,1105214c <___vfiprintf_internal_r+0x1284>
11051528:	a5000414 	ori	r20,r20,16
1105152c:	003ec506 	br	11051044 <___vfiprintf_internal_r+0x17c>
11051530:	21003fcc 	andi	r4,r4,255
11051534:	20035e1e 	bne	r4,zero,110522b0 <___vfiprintf_internal_r+0x13e8>
11051538:	a080080c 	andi	r2,r20,32
1105153c:	1002a526 	beq	r2,zero,11051fd4 <___vfiprintf_internal_r+0x110c>
11051540:	da802217 	ldw	r10,136(sp)
11051544:	50800017 	ldw	r2,0(r10)
11051548:	da802317 	ldw	r10,140(sp)
1105154c:	5007d7fa 	srai	r3,r10,31
11051550:	da802217 	ldw	r10,136(sp)
11051554:	10c00115 	stw	r3,4(r2)
11051558:	52800104 	addi	r10,r10,4
1105155c:	da802215 	stw	r10,136(sp)
11051560:	da802317 	ldw	r10,140(sp)
11051564:	12800015 	stw	r10,0(r2)
11051568:	003e8c06 	br	11050f9c <___vfiprintf_internal_r+0xd4>
1105156c:	21003fcc 	andi	r4,r4,255
11051570:	2003511e 	bne	r4,zero,110522b8 <___vfiprintf_internal_r+0x13f0>
11051574:	a080080c 	andi	r2,r20,32
11051578:	1000a126 	beq	r2,zero,11051800 <___vfiprintf_internal_r+0x938>
1105157c:	da802217 	ldw	r10,136(sp)
11051580:	d8001d85 	stb	zero,118(sp)
11051584:	50800204 	addi	r2,r10,8
11051588:	54800017 	ldw	r18,0(r10)
1105158c:	54c00117 	ldw	r19,4(r10)
11051590:	4802b416 	blt	r9,zero,11052064 <___vfiprintf_internal_r+0x119c>
11051594:	013fdfc4 	movi	r4,-129
11051598:	94c6b03a 	or	r3,r18,r19
1105159c:	d8802215 	stw	r2,136(sp)
110515a0:	a128703a 	and	r20,r20,r4
110515a4:	1800a226 	beq	r3,zero,11051830 <___vfiprintf_internal_r+0x968>
110515a8:	0039883a 	mov	fp,zero
110515ac:	dd401a04 	addi	r21,sp,104
110515b0:	9006d0fa 	srli	r3,r18,3
110515b4:	9808977a 	slli	r4,r19,29
110515b8:	9826d0fa 	srli	r19,r19,3
110515bc:	948001cc 	andi	r18,r18,7
110515c0:	90800c04 	addi	r2,r18,48
110515c4:	ad7fffc4 	addi	r21,r21,-1
110515c8:	20e4b03a 	or	r18,r4,r3
110515cc:	a8800005 	stb	r2,0(r21)
110515d0:	94c6b03a 	or	r3,r18,r19
110515d4:	183ff61e 	bne	r3,zero,110515b0 <___vfiprintf_internal_r+0x6e8>
110515d8:	a0c0004c 	andi	r3,r20,1
110515dc:	18005926 	beq	r3,zero,11051744 <___vfiprintf_internal_r+0x87c>
110515e0:	10803fcc 	andi	r2,r2,255
110515e4:	1080201c 	xori	r2,r2,128
110515e8:	10bfe004 	addi	r2,r2,-128
110515ec:	00c00c04 	movi	r3,48
110515f0:	10c05426 	beq	r2,r3,11051744 <___vfiprintf_internal_r+0x87c>
110515f4:	da801e17 	ldw	r10,120(sp)
110515f8:	a8bfffc4 	addi	r2,r21,-1
110515fc:	a8ffffc5 	stb	r3,-1(r21)
11051600:	50a7c83a 	sub	r19,r10,r2
11051604:	102b883a 	mov	r21,r2
11051608:	003f2f06 	br	110512c8 <___vfiprintf_internal_r+0x400>
1105160c:	21003fcc 	andi	r4,r4,255
11051610:	2003421e 	bne	r4,zero,1105231c <___vfiprintf_internal_r+0x1454>
11051614:	00844174 	movhi	r2,4357
11051618:	109c2704 	addi	r2,r2,28828
1105161c:	d8802615 	stw	r2,152(sp)
11051620:	a080080c 	andi	r2,r20,32
11051624:	1000aa26 	beq	r2,zero,110518d0 <___vfiprintf_internal_r+0xa08>
11051628:	da802217 	ldw	r10,136(sp)
1105162c:	54800017 	ldw	r18,0(r10)
11051630:	54c00117 	ldw	r19,4(r10)
11051634:	52800204 	addi	r10,r10,8
11051638:	da802215 	stw	r10,136(sp)
1105163c:	a080004c 	andi	r2,r20,1
11051640:	1001d226 	beq	r2,zero,11051d8c <___vfiprintf_internal_r+0xec4>
11051644:	94c4b03a 	or	r2,r18,r19
11051648:	1002351e 	bne	r2,zero,11051f20 <___vfiprintf_internal_r+0x1058>
1105164c:	d8001d85 	stb	zero,118(sp)
11051650:	48022216 	blt	r9,zero,11051edc <___vfiprintf_internal_r+0x1014>
11051654:	00bfdfc4 	movi	r2,-129
11051658:	a0a8703a 	and	r20,r20,r2
1105165c:	003f1506 	br	110512b4 <___vfiprintf_internal_r+0x3ec>
11051660:	da802217 	ldw	r10,136(sp)
11051664:	04800044 	movi	r18,1
11051668:	d8001d85 	stb	zero,118(sp)
1105166c:	50800017 	ldw	r2,0(r10)
11051670:	52800104 	addi	r10,r10,4
11051674:	da802215 	stw	r10,136(sp)
11051678:	d8801005 	stb	r2,64(sp)
1105167c:	9027883a 	mov	r19,r18
11051680:	dd401004 	addi	r21,sp,64
11051684:	0013883a 	mov	r9,zero
11051688:	003f1706 	br	110512e8 <___vfiprintf_internal_r+0x420>
1105168c:	21003fcc 	andi	r4,r4,255
11051690:	2003201e 	bne	r4,zero,11052314 <___vfiprintf_internal_r+0x144c>
11051694:	a080080c 	andi	r2,r20,32
11051698:	10004b26 	beq	r2,zero,110517c8 <___vfiprintf_internal_r+0x900>
1105169c:	da802217 	ldw	r10,136(sp)
110516a0:	50800117 	ldw	r2,4(r10)
110516a4:	54800017 	ldw	r18,0(r10)
110516a8:	52800204 	addi	r10,r10,8
110516ac:	da802215 	stw	r10,136(sp)
110516b0:	1027883a 	mov	r19,r2
110516b4:	10022c16 	blt	r2,zero,11051f68 <___vfiprintf_internal_r+0x10a0>
110516b8:	df001d83 	ldbu	fp,118(sp)
110516bc:	48007216 	blt	r9,zero,11051888 <___vfiprintf_internal_r+0x9c0>
110516c0:	00ffdfc4 	movi	r3,-129
110516c4:	94c4b03a 	or	r2,r18,r19
110516c8:	a0e8703a 	and	r20,r20,r3
110516cc:	1000cc26 	beq	r2,zero,11051a00 <___vfiprintf_internal_r+0xb38>
110516d0:	98021026 	beq	r19,zero,11051f14 <___vfiprintf_internal_r+0x104c>
110516d4:	dc402415 	stw	r17,144(sp)
110516d8:	dc002515 	stw	r16,148(sp)
110516dc:	9823883a 	mov	r17,r19
110516e0:	9021883a 	mov	r16,r18
110516e4:	dd401a04 	addi	r21,sp,104
110516e8:	4825883a 	mov	r18,r9
110516ec:	4027883a 	mov	r19,r8
110516f0:	8009883a 	mov	r4,r16
110516f4:	880b883a 	mov	r5,r17
110516f8:	01800284 	movi	r6,10
110516fc:	000f883a 	mov	r7,zero
11051700:	10532a80 	call	110532a8 <__umoddi3>
11051704:	10800c04 	addi	r2,r2,48
11051708:	ad7fffc4 	addi	r21,r21,-1
1105170c:	8009883a 	mov	r4,r16
11051710:	880b883a 	mov	r5,r17
11051714:	a8800005 	stb	r2,0(r21)
11051718:	01800284 	movi	r6,10
1105171c:	000f883a 	mov	r7,zero
11051720:	1052d300 	call	11052d30 <__udivdi3>
11051724:	1021883a 	mov	r16,r2
11051728:	10c4b03a 	or	r2,r2,r3
1105172c:	1823883a 	mov	r17,r3
11051730:	103fef1e 	bne	r2,zero,110516f0 <___vfiprintf_internal_r+0x828>
11051734:	dc402417 	ldw	r17,144(sp)
11051738:	dc002517 	ldw	r16,148(sp)
1105173c:	9013883a 	mov	r9,r18
11051740:	9811883a 	mov	r8,r19
11051744:	da801e17 	ldw	r10,120(sp)
11051748:	5567c83a 	sub	r19,r10,r21
1105174c:	003ede06 	br	110512c8 <___vfiprintf_internal_r+0x400>
11051750:	38803fcc 	andi	r2,r7,255
11051754:	1080201c 	xori	r2,r2,128
11051758:	10bfe004 	addi	r2,r2,-128
1105175c:	1002371e 	bne	r2,zero,1105203c <___vfiprintf_internal_r+0x1174>
11051760:	01000044 	movi	r4,1
11051764:	01c00804 	movi	r7,32
11051768:	80c00007 	ldb	r3,0(r16)
1105176c:	003e3506 	br	11051044 <___vfiprintf_internal_r+0x17c>
11051770:	a5000054 	ori	r20,r20,1
11051774:	80c00007 	ldb	r3,0(r16)
11051778:	003e3206 	br	11051044 <___vfiprintf_internal_r+0x17c>
1105177c:	a5002014 	ori	r20,r20,128
11051780:	80c00007 	ldb	r3,0(r16)
11051784:	003e2f06 	br	11051044 <___vfiprintf_internal_r+0x17c>
11051788:	8015883a 	mov	r10,r16
1105178c:	0023883a 	mov	r17,zero
11051790:	18bff404 	addi	r2,r3,-48
11051794:	50c00007 	ldb	r3,0(r10)
11051798:	8c4002a4 	muli	r17,r17,10
1105179c:	84000044 	addi	r16,r16,1
110517a0:	8015883a 	mov	r10,r16
110517a4:	1463883a 	add	r17,r2,r17
110517a8:	18bff404 	addi	r2,r3,-48
110517ac:	30bff92e 	bgeu	r6,r2,11051794 <___vfiprintf_internal_r+0x8cc>
110517b0:	003e2506 	br	11051048 <___vfiprintf_internal_r+0x180>
110517b4:	21003fcc 	andi	r4,r4,255
110517b8:	2002d41e 	bne	r4,zero,1105230c <___vfiprintf_internal_r+0x1444>
110517bc:	a5000414 	ori	r20,r20,16
110517c0:	a080080c 	andi	r2,r20,32
110517c4:	103fb51e 	bne	r2,zero,1105169c <___vfiprintf_internal_r+0x7d4>
110517c8:	a080040c 	andi	r2,r20,16
110517cc:	1001f826 	beq	r2,zero,11051fb0 <___vfiprintf_internal_r+0x10e8>
110517d0:	da802217 	ldw	r10,136(sp)
110517d4:	54800017 	ldw	r18,0(r10)
110517d8:	52800104 	addi	r10,r10,4
110517dc:	da802215 	stw	r10,136(sp)
110517e0:	9027d7fa 	srai	r19,r18,31
110517e4:	9805883a 	mov	r2,r19
110517e8:	003fb206 	br	110516b4 <___vfiprintf_internal_r+0x7ec>
110517ec:	21003fcc 	andi	r4,r4,255
110517f0:	2002c41e 	bne	r4,zero,11052304 <___vfiprintf_internal_r+0x143c>
110517f4:	a5000414 	ori	r20,r20,16
110517f8:	a080080c 	andi	r2,r20,32
110517fc:	103f5f1e 	bne	r2,zero,1105157c <___vfiprintf_internal_r+0x6b4>
11051800:	a080040c 	andi	r2,r20,16
11051804:	10020f26 	beq	r2,zero,11052044 <___vfiprintf_internal_r+0x117c>
11051808:	da802217 	ldw	r10,136(sp)
1105180c:	d8001d85 	stb	zero,118(sp)
11051810:	0027883a 	mov	r19,zero
11051814:	50800104 	addi	r2,r10,4
11051818:	54800017 	ldw	r18,0(r10)
1105181c:	48021116 	blt	r9,zero,11052064 <___vfiprintf_internal_r+0x119c>
11051820:	00ffdfc4 	movi	r3,-129
11051824:	d8802215 	stw	r2,136(sp)
11051828:	a0e8703a 	and	r20,r20,r3
1105182c:	903f5e1e 	bne	r18,zero,110515a8 <___vfiprintf_internal_r+0x6e0>
11051830:	0039883a 	mov	fp,zero
11051834:	4802a626 	beq	r9,zero,110522d0 <___vfiprintf_internal_r+0x1408>
11051838:	0025883a 	mov	r18,zero
1105183c:	0027883a 	mov	r19,zero
11051840:	003f5a06 	br	110515ac <___vfiprintf_internal_r+0x6e4>
11051844:	21003fcc 	andi	r4,r4,255
11051848:	20029f1e 	bne	r4,zero,110522c8 <___vfiprintf_internal_r+0x1400>
1105184c:	a5000414 	ori	r20,r20,16
11051850:	a080080c 	andi	r2,r20,32
11051854:	10005e1e 	bne	r2,zero,110519d0 <___vfiprintf_internal_r+0xb08>
11051858:	a080040c 	andi	r2,r20,16
1105185c:	1001a21e 	bne	r2,zero,11051ee8 <___vfiprintf_internal_r+0x1020>
11051860:	a080100c 	andi	r2,r20,64
11051864:	d8001d85 	stb	zero,118(sp)
11051868:	da802217 	ldw	r10,136(sp)
1105186c:	1002231e 	bne	r2,zero,110520fc <___vfiprintf_internal_r+0x1234>
11051870:	50800104 	addi	r2,r10,4
11051874:	54800017 	ldw	r18,0(r10)
11051878:	0027883a 	mov	r19,zero
1105187c:	4801a00e 	bge	r9,zero,11051f00 <___vfiprintf_internal_r+0x1038>
11051880:	d8802215 	stw	r2,136(sp)
11051884:	0039883a 	mov	fp,zero
11051888:	94c4b03a 	or	r2,r18,r19
1105188c:	103f901e 	bne	r2,zero,110516d0 <___vfiprintf_internal_r+0x808>
11051890:	00800044 	movi	r2,1
11051894:	10803fcc 	andi	r2,r2,255
11051898:	00c00044 	movi	r3,1
1105189c:	10c05926 	beq	r2,r3,11051a04 <___vfiprintf_internal_r+0xb3c>
110518a0:	00c00084 	movi	r3,2
110518a4:	10ffe41e 	bne	r2,r3,11051838 <___vfiprintf_internal_r+0x970>
110518a8:	0025883a 	mov	r18,zero
110518ac:	0027883a 	mov	r19,zero
110518b0:	00013d06 	br	11051da8 <___vfiprintf_internal_r+0xee0>
110518b4:	21003fcc 	andi	r4,r4,255
110518b8:	2002811e 	bne	r4,zero,110522c0 <___vfiprintf_internal_r+0x13f8>
110518bc:	00844174 	movhi	r2,4357
110518c0:	109c2204 	addi	r2,r2,28808
110518c4:	d8802615 	stw	r2,152(sp)
110518c8:	a080080c 	andi	r2,r20,32
110518cc:	103f561e 	bne	r2,zero,11051628 <___vfiprintf_internal_r+0x760>
110518d0:	a080040c 	andi	r2,r20,16
110518d4:	1001d126 	beq	r2,zero,1105201c <___vfiprintf_internal_r+0x1154>
110518d8:	da802217 	ldw	r10,136(sp)
110518dc:	0027883a 	mov	r19,zero
110518e0:	54800017 	ldw	r18,0(r10)
110518e4:	52800104 	addi	r10,r10,4
110518e8:	da802215 	stw	r10,136(sp)
110518ec:	003f5306 	br	1105163c <___vfiprintf_internal_r+0x774>
110518f0:	da802217 	ldw	r10,136(sp)
110518f4:	d8001d85 	stb	zero,118(sp)
110518f8:	55400017 	ldw	r21,0(r10)
110518fc:	50c00104 	addi	r3,r10,4
11051900:	a8024226 	beq	r21,zero,1105220c <___vfiprintf_internal_r+0x1344>
11051904:	48021816 	blt	r9,zero,11052168 <___vfiprintf_internal_r+0x12a0>
11051908:	480d883a 	mov	r6,r9
1105190c:	000b883a 	mov	r5,zero
11051910:	a809883a 	mov	r4,r21
11051914:	d8c02a15 	stw	r3,168(sp)
11051918:	da002b15 	stw	r8,172(sp)
1105191c:	da402c15 	stw	r9,176(sp)
11051920:	104dcb80 	call	1104dcb8 <memchr>
11051924:	d8c02a17 	ldw	r3,168(sp)
11051928:	da002b17 	ldw	r8,172(sp)
1105192c:	da402c17 	ldw	r9,176(sp)
11051930:	10024826 	beq	r2,zero,11052254 <___vfiprintf_internal_r+0x138c>
11051934:	1567c83a 	sub	r19,r2,r21
11051938:	df001d83 	ldbu	fp,118(sp)
1105193c:	d8c02215 	stw	r3,136(sp)
11051940:	0013883a 	mov	r9,zero
11051944:	003e6006 	br	110512c8 <___vfiprintf_internal_r+0x400>
11051948:	21003fcc 	andi	r4,r4,255
1105194c:	203fc026 	beq	r4,zero,11051850 <___vfiprintf_internal_r+0x988>
11051950:	d9c01d85 	stb	r7,118(sp)
11051954:	003fbe06 	br	11051850 <___vfiprintf_internal_r+0x988>
11051958:	da802217 	ldw	r10,136(sp)
1105195c:	54400017 	ldw	r17,0(r10)
11051960:	50800104 	addi	r2,r10,4
11051964:	883e3b16 	blt	r17,zero,11051254 <___vfiprintf_internal_r+0x38c>
11051968:	d8802215 	stw	r2,136(sp)
1105196c:	80c00007 	ldb	r3,0(r16)
11051970:	003db406 	br	11051044 <___vfiprintf_internal_r+0x17c>
11051974:	01000044 	movi	r4,1
11051978:	01c00ac4 	movi	r7,43
1105197c:	80c00007 	ldb	r3,0(r16)
11051980:	003db006 	br	11051044 <___vfiprintf_internal_r+0x17c>
11051984:	80c00007 	ldb	r3,0(r16)
11051988:	82800044 	addi	r10,r16,1
1105198c:	1b423c26 	beq	r3,r13,11052280 <___vfiprintf_internal_r+0x13b8>
11051990:	18bff404 	addi	r2,r3,-48
11051994:	0013883a 	mov	r9,zero
11051998:	30822b36 	bltu	r6,r2,11052248 <___vfiprintf_internal_r+0x1380>
1105199c:	50c00007 	ldb	r3,0(r10)
110519a0:	4a4002a4 	muli	r9,r9,10
110519a4:	54000044 	addi	r16,r10,1
110519a8:	8015883a 	mov	r10,r16
110519ac:	4893883a 	add	r9,r9,r2
110519b0:	18bff404 	addi	r2,r3,-48
110519b4:	30bff92e 	bgeu	r6,r2,1105199c <___vfiprintf_internal_r+0xad4>
110519b8:	483da30e 	bge	r9,zero,11051048 <___vfiprintf_internal_r+0x180>
110519bc:	027fffc4 	movi	r9,-1
110519c0:	003da106 	br	11051048 <___vfiprintf_internal_r+0x180>
110519c4:	a5001014 	ori	r20,r20,64
110519c8:	80c00007 	ldb	r3,0(r16)
110519cc:	003d9d06 	br	11051044 <___vfiprintf_internal_r+0x17c>
110519d0:	da802217 	ldw	r10,136(sp)
110519d4:	d8001d85 	stb	zero,118(sp)
110519d8:	50c00204 	addi	r3,r10,8
110519dc:	54800017 	ldw	r18,0(r10)
110519e0:	54c00117 	ldw	r19,4(r10)
110519e4:	4801ca16 	blt	r9,zero,11052110 <___vfiprintf_internal_r+0x1248>
110519e8:	013fdfc4 	movi	r4,-129
110519ec:	94c4b03a 	or	r2,r18,r19
110519f0:	d8c02215 	stw	r3,136(sp)
110519f4:	a128703a 	and	r20,r20,r4
110519f8:	0039883a 	mov	fp,zero
110519fc:	103f341e 	bne	r2,zero,110516d0 <___vfiprintf_internal_r+0x808>
11051a00:	483e2e26 	beq	r9,zero,110512bc <___vfiprintf_internal_r+0x3f4>
11051a04:	0025883a 	mov	r18,zero
11051a08:	94800c04 	addi	r18,r18,48
11051a0c:	dc8019c5 	stb	r18,103(sp)
11051a10:	dcc02717 	ldw	r19,156(sp)
11051a14:	dd4019c4 	addi	r21,sp,103
11051a18:	003e2b06 	br	110512c8 <___vfiprintf_internal_r+0x400>
11051a1c:	21003fcc 	andi	r4,r4,255
11051a20:	2002361e 	bne	r4,zero,110522fc <___vfiprintf_internal_r+0x1434>
11051a24:	1801c126 	beq	r3,zero,1105212c <___vfiprintf_internal_r+0x1264>
11051a28:	04800044 	movi	r18,1
11051a2c:	d8c01005 	stb	r3,64(sp)
11051a30:	d8001d85 	stb	zero,118(sp)
11051a34:	9027883a 	mov	r19,r18
11051a38:	dd401004 	addi	r21,sp,64
11051a3c:	003f1106 	br	11051684 <___vfiprintf_internal_r+0x7bc>
11051a40:	d9402117 	ldw	r5,132(sp)
11051a44:	d9002017 	ldw	r4,128(sp)
11051a48:	d9801a04 	addi	r6,sp,104
11051a4c:	d9c02b15 	stw	r7,172(sp)
11051a50:	dbc02a15 	stw	r15,168(sp)
11051a54:	1050db40 	call	11050db4 <__sprint_r.part.0>
11051a58:	d9c02b17 	ldw	r7,172(sp)
11051a5c:	dbc02a17 	ldw	r15,168(sp)
11051a60:	10006d1e 	bne	r2,zero,11051c18 <___vfiprintf_internal_r+0xd50>
11051a64:	d9801b17 	ldw	r6,108(sp)
11051a68:	d8801c17 	ldw	r2,112(sp)
11051a6c:	d811883a 	mov	r8,sp
11051a70:	31400044 	addi	r5,r6,1
11051a74:	003e3306 	br	11051344 <___vfiprintf_internal_r+0x47c>
11051a78:	d9401b17 	ldw	r5,108(sp)
11051a7c:	d8801c17 	ldw	r2,112(sp)
11051a80:	29000044 	addi	r4,r5,1
11051a84:	d8c01d87 	ldb	r3,118(sp)
11051a88:	183e4d26 	beq	r3,zero,110513c0 <___vfiprintf_internal_r+0x4f8>
11051a8c:	00c00044 	movi	r3,1
11051a90:	d9401d84 	addi	r5,sp,118
11051a94:	10c5883a 	add	r2,r2,r3
11051a98:	41400015 	stw	r5,0(r8)
11051a9c:	40c00115 	stw	r3,4(r8)
11051aa0:	d8801c15 	stw	r2,112(sp)
11051aa4:	d9001b15 	stw	r4,108(sp)
11051aa8:	014001c4 	movi	r5,7
11051aac:	2900a90e 	bge	r5,r4,11051d54 <___vfiprintf_internal_r+0xe8c>
11051ab0:	1000da1e 	bne	r2,zero,11051e1c <___vfiprintf_internal_r+0xf54>
11051ab4:	7000ab1e 	bne	r14,zero,11051d64 <___vfiprintf_internal_r+0xe9c>
11051ab8:	000b883a 	mov	r5,zero
11051abc:	1809883a 	mov	r4,r3
11051ac0:	d811883a 	mov	r8,sp
11051ac4:	00c02004 	movi	r3,128
11051ac8:	e0fe4d26 	beq	fp,r3,11051400 <___vfiprintf_internal_r+0x538>
11051acc:	4cf9c83a 	sub	fp,r9,r19
11051ad0:	073e7b0e 	bge	zero,fp,110514c0 <___vfiprintf_internal_r+0x5f8>
11051ad4:	01c00404 	movi	r7,16
11051ad8:	3f01900e 	bge	r7,fp,1105211c <___vfiprintf_internal_r+0x1254>
11051adc:	00c44174 	movhi	r3,4357
11051ae0:	18dc9804 	addi	r3,r3,29280
11051ae4:	d8c02415 	stw	r3,144(sp)
11051ae8:	034001c4 	movi	r13,7
11051aec:	00000506 	br	11051b04 <___vfiprintf_internal_r+0xc3c>
11051af0:	29000084 	addi	r4,r5,2
11051af4:	42000204 	addi	r8,r8,8
11051af8:	180b883a 	mov	r5,r3
11051afc:	e73ffc04 	addi	fp,fp,-16
11051b00:	3f000d0e 	bge	r7,fp,11051b38 <___vfiprintf_internal_r+0xc70>
11051b04:	10800404 	addi	r2,r2,16
11051b08:	28c00044 	addi	r3,r5,1
11051b0c:	45c00015 	stw	r23,0(r8)
11051b10:	41c00115 	stw	r7,4(r8)
11051b14:	d8801c15 	stw	r2,112(sp)
11051b18:	d8c01b15 	stw	r3,108(sp)
11051b1c:	68fff40e 	bge	r13,r3,11051af0 <___vfiprintf_internal_r+0xc28>
11051b20:	1000101e 	bne	r2,zero,11051b64 <___vfiprintf_internal_r+0xc9c>
11051b24:	e73ffc04 	addi	fp,fp,-16
11051b28:	01000044 	movi	r4,1
11051b2c:	000b883a 	mov	r5,zero
11051b30:	d811883a 	mov	r8,sp
11051b34:	3f3ff316 	blt	r7,fp,11051b04 <___vfiprintf_internal_r+0xc3c>
11051b38:	da802417 	ldw	r10,144(sp)
11051b3c:	1705883a 	add	r2,r2,fp
11051b40:	47000115 	stw	fp,4(r8)
11051b44:	42800015 	stw	r10,0(r8)
11051b48:	d8801c15 	stw	r2,112(sp)
11051b4c:	d9001b15 	stw	r4,108(sp)
11051b50:	00c001c4 	movi	r3,7
11051b54:	19003616 	blt	r3,r4,11051c30 <___vfiprintf_internal_r+0xd68>
11051b58:	42000204 	addi	r8,r8,8
11051b5c:	21000044 	addi	r4,r4,1
11051b60:	003e5706 	br	110514c0 <___vfiprintf_internal_r+0x5f8>
11051b64:	d9402117 	ldw	r5,132(sp)
11051b68:	d9002017 	ldw	r4,128(sp)
11051b6c:	d9801a04 	addi	r6,sp,104
11051b70:	d9c02b15 	stw	r7,172(sp)
11051b74:	db402a15 	stw	r13,168(sp)
11051b78:	1050db40 	call	11050db4 <__sprint_r.part.0>
11051b7c:	d9c02b17 	ldw	r7,172(sp)
11051b80:	db402a17 	ldw	r13,168(sp)
11051b84:	1000241e 	bne	r2,zero,11051c18 <___vfiprintf_internal_r+0xd50>
11051b88:	d9401b17 	ldw	r5,108(sp)
11051b8c:	d8801c17 	ldw	r2,112(sp)
11051b90:	d811883a 	mov	r8,sp
11051b94:	29000044 	addi	r4,r5,1
11051b98:	003fd806 	br	11051afc <___vfiprintf_internal_r+0xc34>
11051b9c:	d9401b17 	ldw	r5,108(sp)
11051ba0:	00c44174 	movhi	r3,4357
11051ba4:	18dc9c04 	addi	r3,r3,29296
11051ba8:	d8c02415 	stw	r3,144(sp)
11051bac:	29400044 	addi	r5,r5,1
11051bb0:	d8c02417 	ldw	r3,144(sp)
11051bb4:	14c5883a 	add	r2,r2,r19
11051bb8:	44c00115 	stw	r19,4(r8)
11051bbc:	40c00015 	stw	r3,0(r8)
11051bc0:	d8801c15 	stw	r2,112(sp)
11051bc4:	d9401b15 	stw	r5,108(sp)
11051bc8:	00c001c4 	movi	r3,7
11051bcc:	1940070e 	bge	r3,r5,11051bec <___vfiprintf_internal_r+0xd24>
11051bd0:	103e4826 	beq	r2,zero,110514f4 <___vfiprintf_internal_r+0x62c>
11051bd4:	d9402117 	ldw	r5,132(sp)
11051bd8:	d9002017 	ldw	r4,128(sp)
11051bdc:	d9801a04 	addi	r6,sp,104
11051be0:	1050db40 	call	11050db4 <__sprint_r.part.0>
11051be4:	10000c1e 	bne	r2,zero,11051c18 <___vfiprintf_internal_r+0xd50>
11051be8:	d8801c17 	ldw	r2,112(sp)
11051bec:	8c80010e 	bge	r17,r18,11051bf4 <___vfiprintf_internal_r+0xd2c>
11051bf0:	9023883a 	mov	r17,r18
11051bf4:	da802317 	ldw	r10,140(sp)
11051bf8:	5455883a 	add	r10,r10,r17
11051bfc:	da802315 	stw	r10,140(sp)
11051c00:	103e4126 	beq	r2,zero,11051508 <___vfiprintf_internal_r+0x640>
11051c04:	d9402117 	ldw	r5,132(sp)
11051c08:	d9002017 	ldw	r4,128(sp)
11051c0c:	d9801a04 	addi	r6,sp,104
11051c10:	1050db40 	call	11050db4 <__sprint_r.part.0>
11051c14:	103e3c26 	beq	r2,zero,11051508 <___vfiprintf_internal_r+0x640>
11051c18:	dd002117 	ldw	r20,132(sp)
11051c1c:	a080030b 	ldhu	r2,12(r20)
11051c20:	1080100c 	andi	r2,r2,64
11051c24:	1001231e 	bne	r2,zero,110520b4 <___vfiprintf_internal_r+0x11ec>
11051c28:	d8802317 	ldw	r2,140(sp)
11051c2c:	003d7b06 	br	1105121c <___vfiprintf_internal_r+0x354>
11051c30:	1000991e 	bne	r2,zero,11051e98 <___vfiprintf_internal_r+0xfd0>
11051c34:	00c00044 	movi	r3,1
11051c38:	9805883a 	mov	r2,r19
11051c3c:	dd400015 	stw	r21,0(sp)
11051c40:	dcc00115 	stw	r19,4(sp)
11051c44:	dcc01c15 	stw	r19,112(sp)
11051c48:	d8c01b15 	stw	r3,108(sp)
11051c4c:	d811883a 	mov	r8,sp
11051c50:	42000204 	addi	r8,r8,8
11051c54:	a2c0010c 	andi	r11,r20,4
11051c58:	583fe426 	beq	r11,zero,11051bec <___vfiprintf_internal_r+0xd24>
11051c5c:	8ca7c83a 	sub	r19,r17,r18
11051c60:	04ffe20e 	bge	zero,r19,11051bec <___vfiprintf_internal_r+0xd24>
11051c64:	01c00404 	movi	r7,16
11051c68:	3cffcc0e 	bge	r7,r19,11051b9c <___vfiprintf_internal_r+0xcd4>
11051c6c:	02844174 	movhi	r10,4357
11051c70:	529c9c04 	addi	r10,r10,29296
11051c74:	d9001b17 	ldw	r4,108(sp)
11051c78:	da802415 	stw	r10,144(sp)
11051c7c:	382b883a 	mov	r21,r7
11051c80:	050001c4 	movi	r20,7
11051c84:	df002017 	ldw	fp,128(sp)
11051c88:	00000506 	br	11051ca0 <___vfiprintf_internal_r+0xdd8>
11051c8c:	21400084 	addi	r5,r4,2
11051c90:	42000204 	addi	r8,r8,8
11051c94:	1809883a 	mov	r4,r3
11051c98:	9cfffc04 	addi	r19,r19,-16
11051c9c:	acffc40e 	bge	r21,r19,11051bb0 <___vfiprintf_internal_r+0xce8>
11051ca0:	10800404 	addi	r2,r2,16
11051ca4:	20c00044 	addi	r3,r4,1
11051ca8:	45800015 	stw	r22,0(r8)
11051cac:	45400115 	stw	r21,4(r8)
11051cb0:	d8801c15 	stw	r2,112(sp)
11051cb4:	d8c01b15 	stw	r3,108(sp)
11051cb8:	a0fff40e 	bge	r20,r3,11051c8c <___vfiprintf_internal_r+0xdc4>
11051cbc:	1000041e 	bne	r2,zero,11051cd0 <___vfiprintf_internal_r+0xe08>
11051cc0:	01400044 	movi	r5,1
11051cc4:	0009883a 	mov	r4,zero
11051cc8:	d811883a 	mov	r8,sp
11051ccc:	003ff206 	br	11051c98 <___vfiprintf_internal_r+0xdd0>
11051cd0:	d9402117 	ldw	r5,132(sp)
11051cd4:	d9801a04 	addi	r6,sp,104
11051cd8:	e009883a 	mov	r4,fp
11051cdc:	1050db40 	call	11050db4 <__sprint_r.part.0>
11051ce0:	103fcd1e 	bne	r2,zero,11051c18 <___vfiprintf_internal_r+0xd50>
11051ce4:	d9001b17 	ldw	r4,108(sp)
11051ce8:	d8801c17 	ldw	r2,112(sp)
11051cec:	d811883a 	mov	r8,sp
11051cf0:	21400044 	addi	r5,r4,1
11051cf4:	003fe806 	br	11051c98 <___vfiprintf_internal_r+0xdd0>
11051cf8:	d9402117 	ldw	r5,132(sp)
11051cfc:	d9002017 	ldw	r4,128(sp)
11051d00:	d9801a04 	addi	r6,sp,104
11051d04:	d9c02b15 	stw	r7,172(sp)
11051d08:	db402a15 	stw	r13,168(sp)
11051d0c:	1050db40 	call	11050db4 <__sprint_r.part.0>
11051d10:	d9c02b17 	ldw	r7,172(sp)
11051d14:	db402a17 	ldw	r13,168(sp)
11051d18:	103fbf1e 	bne	r2,zero,11051c18 <___vfiprintf_internal_r+0xd50>
11051d1c:	d9401b17 	ldw	r5,108(sp)
11051d20:	d8801c17 	ldw	r2,112(sp)
11051d24:	d811883a 	mov	r8,sp
11051d28:	29800044 	addi	r6,r5,1
11051d2c:	003dc406 	br	11051440 <___vfiprintf_internal_r+0x578>
11051d30:	1000d21e 	bne	r2,zero,1105207c <___vfiprintf_internal_r+0x11b4>
11051d34:	d8c01d87 	ldb	r3,118(sp)
11051d38:	18009526 	beq	r3,zero,11051f90 <___vfiprintf_internal_r+0x10c8>
11051d3c:	00800044 	movi	r2,1
11051d40:	d8c01d84 	addi	r3,sp,118
11051d44:	1009883a 	mov	r4,r2
11051d48:	d8c00015 	stw	r3,0(sp)
11051d4c:	d8800115 	stw	r2,4(sp)
11051d50:	d811883a 	mov	r8,sp
11051d54:	200b883a 	mov	r5,r4
11051d58:	42000204 	addi	r8,r8,8
11051d5c:	21000044 	addi	r4,r4,1
11051d60:	003d9706 	br	110513c0 <___vfiprintf_internal_r+0x4f8>
11051d64:	d9001d04 	addi	r4,sp,116
11051d68:	00800084 	movi	r2,2
11051d6c:	d9000015 	stw	r4,0(sp)
11051d70:	d8800115 	stw	r2,4(sp)
11051d74:	1809883a 	mov	r4,r3
11051d78:	d811883a 	mov	r8,sp
11051d7c:	200b883a 	mov	r5,r4
11051d80:	42000204 	addi	r8,r8,8
11051d84:	21000044 	addi	r4,r4,1
11051d88:	003f4e06 	br	11051ac4 <___vfiprintf_internal_r+0xbfc>
11051d8c:	d8001d85 	stb	zero,118(sp)
11051d90:	48005016 	blt	r9,zero,11051ed4 <___vfiprintf_internal_r+0x100c>
11051d94:	00ffdfc4 	movi	r3,-129
11051d98:	94c4b03a 	or	r2,r18,r19
11051d9c:	a0e8703a 	and	r20,r20,r3
11051da0:	103d4426 	beq	r2,zero,110512b4 <___vfiprintf_internal_r+0x3ec>
11051da4:	0039883a 	mov	fp,zero
11051da8:	d9002617 	ldw	r4,152(sp)
11051dac:	dd401a04 	addi	r21,sp,104
11051db0:	908003cc 	andi	r2,r18,15
11051db4:	9806973a 	slli	r3,r19,28
11051db8:	2085883a 	add	r2,r4,r2
11051dbc:	9024d13a 	srli	r18,r18,4
11051dc0:	10800003 	ldbu	r2,0(r2)
11051dc4:	9826d13a 	srli	r19,r19,4
11051dc8:	ad7fffc4 	addi	r21,r21,-1
11051dcc:	1ca4b03a 	or	r18,r3,r18
11051dd0:	a8800005 	stb	r2,0(r21)
11051dd4:	94c4b03a 	or	r2,r18,r19
11051dd8:	103ff51e 	bne	r2,zero,11051db0 <___vfiprintf_internal_r+0xee8>
11051ddc:	003e5906 	br	11051744 <___vfiprintf_internal_r+0x87c>
11051de0:	d9402117 	ldw	r5,132(sp)
11051de4:	d9002017 	ldw	r4,128(sp)
11051de8:	d9801a04 	addi	r6,sp,104
11051dec:	1050db40 	call	11050db4 <__sprint_r.part.0>
11051df0:	103f891e 	bne	r2,zero,11051c18 <___vfiprintf_internal_r+0xd50>
11051df4:	d8801c17 	ldw	r2,112(sp)
11051df8:	d811883a 	mov	r8,sp
11051dfc:	003f9506 	br	11051c54 <___vfiprintf_internal_r+0xd8c>
11051e00:	d9402117 	ldw	r5,132(sp)
11051e04:	d9002017 	ldw	r4,128(sp)
11051e08:	d9801a04 	addi	r6,sp,104
11051e0c:	1050db40 	call	11050db4 <__sprint_r.part.0>
11051e10:	103f811e 	bne	r2,zero,11051c18 <___vfiprintf_internal_r+0xd50>
11051e14:	d811883a 	mov	r8,sp
11051e18:	003ced06 	br	110511d0 <___vfiprintf_internal_r+0x308>
11051e1c:	d9402117 	ldw	r5,132(sp)
11051e20:	d9002017 	ldw	r4,128(sp)
11051e24:	d9801a04 	addi	r6,sp,104
11051e28:	da402c15 	stw	r9,176(sp)
11051e2c:	db802a15 	stw	r14,168(sp)
11051e30:	1050db40 	call	11050db4 <__sprint_r.part.0>
11051e34:	da402c17 	ldw	r9,176(sp)
11051e38:	db802a17 	ldw	r14,168(sp)
11051e3c:	103f761e 	bne	r2,zero,11051c18 <___vfiprintf_internal_r+0xd50>
11051e40:	d9401b17 	ldw	r5,108(sp)
11051e44:	d8801c17 	ldw	r2,112(sp)
11051e48:	d811883a 	mov	r8,sp
11051e4c:	29000044 	addi	r4,r5,1
11051e50:	003d5b06 	br	110513c0 <___vfiprintf_internal_r+0x4f8>
11051e54:	d9402117 	ldw	r5,132(sp)
11051e58:	d9002017 	ldw	r4,128(sp)
11051e5c:	d9801a04 	addi	r6,sp,104
11051e60:	da402c15 	stw	r9,176(sp)
11051e64:	1050db40 	call	11050db4 <__sprint_r.part.0>
11051e68:	da402c17 	ldw	r9,176(sp)
11051e6c:	103f6a1e 	bne	r2,zero,11051c18 <___vfiprintf_internal_r+0xd50>
11051e70:	d9401b17 	ldw	r5,108(sp)
11051e74:	d8801c17 	ldw	r2,112(sp)
11051e78:	d811883a 	mov	r8,sp
11051e7c:	29000044 	addi	r4,r5,1
11051e80:	003f1006 	br	11051ac4 <___vfiprintf_internal_r+0xbfc>
11051e84:	1000c31e 	bne	r2,zero,11052194 <___vfiprintf_internal_r+0x12cc>
11051e88:	01000044 	movi	r4,1
11051e8c:	000b883a 	mov	r5,zero
11051e90:	d811883a 	mov	r8,sp
11051e94:	003f0d06 	br	11051acc <___vfiprintf_internal_r+0xc04>
11051e98:	d9402117 	ldw	r5,132(sp)
11051e9c:	d9002017 	ldw	r4,128(sp)
11051ea0:	d9801a04 	addi	r6,sp,104
11051ea4:	1050db40 	call	11050db4 <__sprint_r.part.0>
11051ea8:	103f5b1e 	bne	r2,zero,11051c18 <___vfiprintf_internal_r+0xd50>
11051eac:	d9001b17 	ldw	r4,108(sp)
11051eb0:	d8801c17 	ldw	r2,112(sp)
11051eb4:	d811883a 	mov	r8,sp
11051eb8:	21000044 	addi	r4,r4,1
11051ebc:	003d8006 	br	110514c0 <___vfiprintf_internal_r+0x5f8>
11051ec0:	01044174 	movhi	r4,4357
11051ec4:	211c2704 	addi	r4,r4,28828
11051ec8:	d9002615 	stw	r4,152(sp)
11051ecc:	d8c02215 	stw	r3,136(sp)
11051ed0:	1029883a 	mov	r20,r2
11051ed4:	94c4b03a 	or	r2,r18,r19
11051ed8:	103fb21e 	bne	r2,zero,11051da4 <___vfiprintf_internal_r+0xedc>
11051edc:	0039883a 	mov	fp,zero
11051ee0:	00800084 	movi	r2,2
11051ee4:	003e6b06 	br	11051894 <___vfiprintf_internal_r+0x9cc>
11051ee8:	da802217 	ldw	r10,136(sp)
11051eec:	d8001d85 	stb	zero,118(sp)
11051ef0:	0027883a 	mov	r19,zero
11051ef4:	50800104 	addi	r2,r10,4
11051ef8:	54800017 	ldw	r18,0(r10)
11051efc:	483e6016 	blt	r9,zero,11051880 <___vfiprintf_internal_r+0x9b8>
11051f00:	00ffdfc4 	movi	r3,-129
11051f04:	d8802215 	stw	r2,136(sp)
11051f08:	a0e8703a 	and	r20,r20,r3
11051f0c:	0039883a 	mov	fp,zero
11051f10:	903ebb26 	beq	r18,zero,11051a00 <___vfiprintf_internal_r+0xb38>
11051f14:	00800244 	movi	r2,9
11051f18:	14bdee36 	bltu	r2,r18,110516d4 <___vfiprintf_internal_r+0x80c>
11051f1c:	003eba06 	br	11051a08 <___vfiprintf_internal_r+0xb40>
11051f20:	00800c04 	movi	r2,48
11051f24:	d8c01d45 	stb	r3,117(sp)
11051f28:	d8801d05 	stb	r2,116(sp)
11051f2c:	d8001d85 	stb	zero,118(sp)
11051f30:	a0c00094 	ori	r3,r20,2
11051f34:	4800a916 	blt	r9,zero,110521dc <___vfiprintf_internal_r+0x1314>
11051f38:	00bfdfc4 	movi	r2,-129
11051f3c:	a096703a 	and	r11,r20,r2
11051f40:	5d000094 	ori	r20,r11,2
11051f44:	0039883a 	mov	fp,zero
11051f48:	003f9706 	br	11051da8 <___vfiprintf_internal_r+0xee0>
11051f4c:	8025883a 	mov	r18,r16
11051f50:	003c2e06 	br	1105100c <___vfiprintf_internal_r+0x144>
11051f54:	00844174 	movhi	r2,4357
11051f58:	109c2704 	addi	r2,r2,28828
11051f5c:	0039883a 	mov	fp,zero
11051f60:	d8802615 	stw	r2,152(sp)
11051f64:	003f9006 	br	11051da8 <___vfiprintf_internal_r+0xee0>
11051f68:	04a5c83a 	sub	r18,zero,r18
11051f6c:	07000b44 	movi	fp,45
11051f70:	9004c03a 	cmpne	r2,r18,zero
11051f74:	04e7c83a 	sub	r19,zero,r19
11051f78:	df001d85 	stb	fp,118(sp)
11051f7c:	98a7c83a 	sub	r19,r19,r2
11051f80:	48009f16 	blt	r9,zero,11052200 <___vfiprintf_internal_r+0x1338>
11051f84:	00bfdfc4 	movi	r2,-129
11051f88:	a0a8703a 	and	r20,r20,r2
11051f8c:	003dd006 	br	110516d0 <___vfiprintf_internal_r+0x808>
11051f90:	70004c26 	beq	r14,zero,110520c4 <___vfiprintf_internal_r+0x11fc>
11051f94:	00800084 	movi	r2,2
11051f98:	d8c01d04 	addi	r3,sp,116
11051f9c:	d8c00015 	stw	r3,0(sp)
11051fa0:	d8800115 	stw	r2,4(sp)
11051fa4:	01000044 	movi	r4,1
11051fa8:	d811883a 	mov	r8,sp
11051fac:	003f7306 	br	11051d7c <___vfiprintf_internal_r+0xeb4>
11051fb0:	a080100c 	andi	r2,r20,64
11051fb4:	da802217 	ldw	r10,136(sp)
11051fb8:	103e0626 	beq	r2,zero,110517d4 <___vfiprintf_internal_r+0x90c>
11051fbc:	5480000f 	ldh	r18,0(r10)
11051fc0:	52800104 	addi	r10,r10,4
11051fc4:	da802215 	stw	r10,136(sp)
11051fc8:	9027d7fa 	srai	r19,r18,31
11051fcc:	9805883a 	mov	r2,r19
11051fd0:	003db806 	br	110516b4 <___vfiprintf_internal_r+0x7ec>
11051fd4:	a080040c 	andi	r2,r20,16
11051fd8:	1000091e 	bne	r2,zero,11052000 <___vfiprintf_internal_r+0x1138>
11051fdc:	a2c0100c 	andi	r11,r20,64
11051fe0:	58000726 	beq	r11,zero,11052000 <___vfiprintf_internal_r+0x1138>
11051fe4:	da802217 	ldw	r10,136(sp)
11051fe8:	50800017 	ldw	r2,0(r10)
11051fec:	52800104 	addi	r10,r10,4
11051ff0:	da802215 	stw	r10,136(sp)
11051ff4:	da802317 	ldw	r10,140(sp)
11051ff8:	1280000d 	sth	r10,0(r2)
11051ffc:	003be706 	br	11050f9c <___vfiprintf_internal_r+0xd4>
11052000:	da802217 	ldw	r10,136(sp)
11052004:	50800017 	ldw	r2,0(r10)
11052008:	52800104 	addi	r10,r10,4
1105200c:	da802215 	stw	r10,136(sp)
11052010:	da802317 	ldw	r10,140(sp)
11052014:	12800015 	stw	r10,0(r2)
11052018:	003be006 	br	11050f9c <___vfiprintf_internal_r+0xd4>
1105201c:	a080100c 	andi	r2,r20,64
11052020:	da802217 	ldw	r10,136(sp)
11052024:	10003026 	beq	r2,zero,110520e8 <___vfiprintf_internal_r+0x1220>
11052028:	5480000b 	ldhu	r18,0(r10)
1105202c:	52800104 	addi	r10,r10,4
11052030:	0027883a 	mov	r19,zero
11052034:	da802215 	stw	r10,136(sp)
11052038:	003d8006 	br	1105163c <___vfiprintf_internal_r+0x774>
1105203c:	80c00007 	ldb	r3,0(r16)
11052040:	003c0006 	br	11051044 <___vfiprintf_internal_r+0x17c>
11052044:	a080100c 	andi	r2,r20,64
11052048:	d8001d85 	stb	zero,118(sp)
1105204c:	da802217 	ldw	r10,136(sp)
11052050:	1000201e 	bne	r2,zero,110520d4 <___vfiprintf_internal_r+0x120c>
11052054:	50800104 	addi	r2,r10,4
11052058:	54800017 	ldw	r18,0(r10)
1105205c:	0027883a 	mov	r19,zero
11052060:	483def0e 	bge	r9,zero,11051820 <___vfiprintf_internal_r+0x958>
11052064:	94c6b03a 	or	r3,r18,r19
11052068:	d8802215 	stw	r2,136(sp)
1105206c:	183d4e1e 	bne	r3,zero,110515a8 <___vfiprintf_internal_r+0x6e0>
11052070:	0039883a 	mov	fp,zero
11052074:	0005883a 	mov	r2,zero
11052078:	003e0606 	br	11051894 <___vfiprintf_internal_r+0x9cc>
1105207c:	d9402117 	ldw	r5,132(sp)
11052080:	d9002017 	ldw	r4,128(sp)
11052084:	d9801a04 	addi	r6,sp,104
11052088:	da402c15 	stw	r9,176(sp)
1105208c:	db802a15 	stw	r14,168(sp)
11052090:	1050db40 	call	11050db4 <__sprint_r.part.0>
11052094:	da402c17 	ldw	r9,176(sp)
11052098:	db802a17 	ldw	r14,168(sp)
1105209c:	103ede1e 	bne	r2,zero,11051c18 <___vfiprintf_internal_r+0xd50>
110520a0:	d9401b17 	ldw	r5,108(sp)
110520a4:	d8801c17 	ldw	r2,112(sp)
110520a8:	d811883a 	mov	r8,sp
110520ac:	29000044 	addi	r4,r5,1
110520b0:	003e7406 	br	11051a84 <___vfiprintf_internal_r+0xbbc>
110520b4:	00bfffc4 	movi	r2,-1
110520b8:	003c5806 	br	1105121c <___vfiprintf_internal_r+0x354>
110520bc:	d811883a 	mov	r8,sp
110520c0:	003ee806 	br	11051c64 <___vfiprintf_internal_r+0xd9c>
110520c4:	000b883a 	mov	r5,zero
110520c8:	01000044 	movi	r4,1
110520cc:	d811883a 	mov	r8,sp
110520d0:	003e7c06 	br	11051ac4 <___vfiprintf_internal_r+0xbfc>
110520d4:	50800104 	addi	r2,r10,4
110520d8:	5480000b 	ldhu	r18,0(r10)
110520dc:	0027883a 	mov	r19,zero
110520e0:	483dcf0e 	bge	r9,zero,11051820 <___vfiprintf_internal_r+0x958>
110520e4:	003fdf06 	br	11052064 <___vfiprintf_internal_r+0x119c>
110520e8:	54800017 	ldw	r18,0(r10)
110520ec:	52800104 	addi	r10,r10,4
110520f0:	0027883a 	mov	r19,zero
110520f4:	da802215 	stw	r10,136(sp)
110520f8:	003d5006 	br	1105163c <___vfiprintf_internal_r+0x774>
110520fc:	50800104 	addi	r2,r10,4
11052100:	5480000b 	ldhu	r18,0(r10)
11052104:	0027883a 	mov	r19,zero
11052108:	483f7d0e 	bge	r9,zero,11051f00 <___vfiprintf_internal_r+0x1038>
1105210c:	003ddc06 	br	11051880 <___vfiprintf_internal_r+0x9b8>
11052110:	d8c02215 	stw	r3,136(sp)
11052114:	0039883a 	mov	fp,zero
11052118:	003ddb06 	br	11051888 <___vfiprintf_internal_r+0x9c0>
1105211c:	02844174 	movhi	r10,4357
11052120:	529c9804 	addi	r10,r10,29280
11052124:	da802415 	stw	r10,144(sp)
11052128:	003e8306 	br	11051b38 <___vfiprintf_internal_r+0xc70>
1105212c:	d8801c17 	ldw	r2,112(sp)
11052130:	dd002117 	ldw	r20,132(sp)
11052134:	103eb926 	beq	r2,zero,11051c1c <___vfiprintf_internal_r+0xd54>
11052138:	d9002017 	ldw	r4,128(sp)
1105213c:	d9801a04 	addi	r6,sp,104
11052140:	a00b883a 	mov	r5,r20
11052144:	1050db40 	call	11050db4 <__sprint_r.part.0>
11052148:	003eb406 	br	11051c1c <___vfiprintf_internal_r+0xd54>
1105214c:	80c00043 	ldbu	r3,1(r16)
11052150:	a5000814 	ori	r20,r20,32
11052154:	84000044 	addi	r16,r16,1
11052158:	18c03fcc 	andi	r3,r3,255
1105215c:	18c0201c 	xori	r3,r3,128
11052160:	18ffe004 	addi	r3,r3,-128
11052164:	003bb706 	br	11051044 <___vfiprintf_internal_r+0x17c>
11052168:	a809883a 	mov	r4,r21
1105216c:	d8c02a15 	stw	r3,168(sp)
11052170:	da002b15 	stw	r8,172(sp)
11052174:	10461140 	call	11046114 <strlen>
11052178:	d8c02a17 	ldw	r3,168(sp)
1105217c:	1027883a 	mov	r19,r2
11052180:	df001d83 	ldbu	fp,118(sp)
11052184:	d8c02215 	stw	r3,136(sp)
11052188:	0013883a 	mov	r9,zero
1105218c:	da002b17 	ldw	r8,172(sp)
11052190:	003c4d06 	br	110512c8 <___vfiprintf_internal_r+0x400>
11052194:	d9402117 	ldw	r5,132(sp)
11052198:	d9002017 	ldw	r4,128(sp)
1105219c:	d9801a04 	addi	r6,sp,104
110521a0:	da402c15 	stw	r9,176(sp)
110521a4:	1050db40 	call	11050db4 <__sprint_r.part.0>
110521a8:	da402c17 	ldw	r9,176(sp)
110521ac:	103e9a1e 	bne	r2,zero,11051c18 <___vfiprintf_internal_r+0xd50>
110521b0:	d9401b17 	ldw	r5,108(sp)
110521b4:	d8801c17 	ldw	r2,112(sp)
110521b8:	d811883a 	mov	r8,sp
110521bc:	29000044 	addi	r4,r5,1
110521c0:	003e4206 	br	11051acc <___vfiprintf_internal_r+0xc04>
110521c4:	d9401b17 	ldw	r5,108(sp)
110521c8:	01044174 	movhi	r4,4357
110521cc:	211c9c04 	addi	r4,r4,29296
110521d0:	d9002415 	stw	r4,144(sp)
110521d4:	29400044 	addi	r5,r5,1
110521d8:	003c6d06 	br	11051390 <___vfiprintf_internal_r+0x4c8>
110521dc:	0039883a 	mov	fp,zero
110521e0:	00800084 	movi	r2,2
110521e4:	10803fcc 	andi	r2,r2,255
110521e8:	01000044 	movi	r4,1
110521ec:	11001e26 	beq	r2,r4,11052268 <___vfiprintf_internal_r+0x13a0>
110521f0:	01000084 	movi	r4,2
110521f4:	11001e1e 	bne	r2,r4,11052270 <___vfiprintf_internal_r+0x13a8>
110521f8:	1829883a 	mov	r20,r3
110521fc:	003eea06 	br	11051da8 <___vfiprintf_internal_r+0xee0>
11052200:	a007883a 	mov	r3,r20
11052204:	00800044 	movi	r2,1
11052208:	003ff606 	br	110521e4 <___vfiprintf_internal_r+0x131c>
1105220c:	00800184 	movi	r2,6
11052210:	1240012e 	bgeu	r2,r9,11052218 <___vfiprintf_internal_r+0x1350>
11052214:	1013883a 	mov	r9,r2
11052218:	4827883a 	mov	r19,r9
1105221c:	4825883a 	mov	r18,r9
11052220:	48001516 	blt	r9,zero,11052278 <___vfiprintf_internal_r+0x13b0>
11052224:	05444174 	movhi	r21,4357
11052228:	d8c02215 	stw	r3,136(sp)
1105222c:	ad5c2c04 	addi	r21,r21,28848
11052230:	003d1406 	br	11051684 <___vfiprintf_internal_r+0x7bc>
11052234:	02844174 	movhi	r10,4357
11052238:	529c9804 	addi	r10,r10,29280
1105223c:	da802415 	stw	r10,144(sp)
11052240:	200d883a 	mov	r6,r4
11052244:	003c9106 	br	1105148c <___vfiprintf_internal_r+0x5c4>
11052248:	5021883a 	mov	r16,r10
1105224c:	0013883a 	mov	r9,zero
11052250:	003b7d06 	br	11051048 <___vfiprintf_internal_r+0x180>
11052254:	4827883a 	mov	r19,r9
11052258:	df001d83 	ldbu	fp,118(sp)
1105225c:	d8c02215 	stw	r3,136(sp)
11052260:	0013883a 	mov	r9,zero
11052264:	003c1806 	br	110512c8 <___vfiprintf_internal_r+0x400>
11052268:	1829883a 	mov	r20,r3
1105226c:	003d1806 	br	110516d0 <___vfiprintf_internal_r+0x808>
11052270:	1829883a 	mov	r20,r3
11052274:	003ccd06 	br	110515ac <___vfiprintf_internal_r+0x6e4>
11052278:	0025883a 	mov	r18,zero
1105227c:	003fe906 	br	11052224 <___vfiprintf_internal_r+0x135c>
11052280:	d8802217 	ldw	r2,136(sp)
11052284:	80c00043 	ldbu	r3,1(r16)
11052288:	5021883a 	mov	r16,r10
1105228c:	12400017 	ldw	r9,0(r2)
11052290:	10800104 	addi	r2,r2,4
11052294:	d8802215 	stw	r2,136(sp)
11052298:	483faf0e 	bge	r9,zero,11052158 <___vfiprintf_internal_r+0x1290>
1105229c:	18c03fcc 	andi	r3,r3,255
110522a0:	18c0201c 	xori	r3,r3,128
110522a4:	027fffc4 	movi	r9,-1
110522a8:	18ffe004 	addi	r3,r3,-128
110522ac:	003b6506 	br	11051044 <___vfiprintf_internal_r+0x17c>
110522b0:	d9c01d85 	stb	r7,118(sp)
110522b4:	003ca006 	br	11051538 <___vfiprintf_internal_r+0x670>
110522b8:	d9c01d85 	stb	r7,118(sp)
110522bc:	003cad06 	br	11051574 <___vfiprintf_internal_r+0x6ac>
110522c0:	d9c01d85 	stb	r7,118(sp)
110522c4:	003d7d06 	br	110518bc <___vfiprintf_internal_r+0x9f4>
110522c8:	d9c01d85 	stb	r7,118(sp)
110522cc:	003d5f06 	br	1105184c <___vfiprintf_internal_r+0x984>
110522d0:	a080004c 	andi	r2,r20,1
110522d4:	0039883a 	mov	fp,zero
110522d8:	10000526 	beq	r2,zero,110522f0 <___vfiprintf_internal_r+0x1428>
110522dc:	00800c04 	movi	r2,48
110522e0:	d88019c5 	stb	r2,103(sp)
110522e4:	dcc02717 	ldw	r19,156(sp)
110522e8:	dd4019c4 	addi	r21,sp,103
110522ec:	003bf606 	br	110512c8 <___vfiprintf_internal_r+0x400>
110522f0:	0027883a 	mov	r19,zero
110522f4:	dd401a04 	addi	r21,sp,104
110522f8:	003bf306 	br	110512c8 <___vfiprintf_internal_r+0x400>
110522fc:	d9c01d85 	stb	r7,118(sp)
11052300:	003dc806 	br	11051a24 <___vfiprintf_internal_r+0xb5c>
11052304:	d9c01d85 	stb	r7,118(sp)
11052308:	003d3a06 	br	110517f4 <___vfiprintf_internal_r+0x92c>
1105230c:	d9c01d85 	stb	r7,118(sp)
11052310:	003d2a06 	br	110517bc <___vfiprintf_internal_r+0x8f4>
11052314:	d9c01d85 	stb	r7,118(sp)
11052318:	003cde06 	br	11051694 <___vfiprintf_internal_r+0x7cc>
1105231c:	d9c01d85 	stb	r7,118(sp)
11052320:	003cbc06 	br	11051614 <___vfiprintf_internal_r+0x74c>

11052324 <__vfiprintf_internal>:
11052324:	008441b4 	movhi	r2,4358
11052328:	10a35704 	addi	r2,r2,-29348
1105232c:	300f883a 	mov	r7,r6
11052330:	280d883a 	mov	r6,r5
11052334:	200b883a 	mov	r5,r4
11052338:	11000017 	ldw	r4,0(r2)
1105233c:	1050ec81 	jmpi	11050ec8 <___vfiprintf_internal_r>

11052340 <__sbprintf>:
11052340:	2880030b 	ldhu	r2,12(r5)
11052344:	2ac01917 	ldw	r11,100(r5)
11052348:	2a80038b 	ldhu	r10,14(r5)
1105234c:	2a400717 	ldw	r9,28(r5)
11052350:	2a000917 	ldw	r8,36(r5)
11052354:	defee204 	addi	sp,sp,-1144
11052358:	00c10004 	movi	r3,1024
1105235c:	dc011a15 	stw	r16,1128(sp)
11052360:	10bfff4c 	andi	r2,r2,65533
11052364:	2821883a 	mov	r16,r5
11052368:	d8cb883a 	add	r5,sp,r3
1105236c:	dc811c15 	stw	r18,1136(sp)
11052370:	dc411b15 	stw	r17,1132(sp)
11052374:	dfc11d15 	stw	ra,1140(sp)
11052378:	2025883a 	mov	r18,r4
1105237c:	d881030d 	sth	r2,1036(sp)
11052380:	dac11915 	stw	r11,1124(sp)
11052384:	da81038d 	sth	r10,1038(sp)
11052388:	da410715 	stw	r9,1052(sp)
1105238c:	da010915 	stw	r8,1060(sp)
11052390:	dec10015 	stw	sp,1024(sp)
11052394:	dec10415 	stw	sp,1040(sp)
11052398:	d8c10215 	stw	r3,1032(sp)
1105239c:	d8c10515 	stw	r3,1044(sp)
110523a0:	d8010615 	stw	zero,1048(sp)
110523a4:	1050ec80 	call	11050ec8 <___vfiprintf_internal_r>
110523a8:	1023883a 	mov	r17,r2
110523ac:	10000416 	blt	r2,zero,110523c0 <__sbprintf+0x80>
110523b0:	d9410004 	addi	r5,sp,1024
110523b4:	9009883a 	mov	r4,r18
110523b8:	104c3700 	call	1104c370 <_fflush_r>
110523bc:	10000d1e 	bne	r2,zero,110523f4 <__sbprintf+0xb4>
110523c0:	d881030b 	ldhu	r2,1036(sp)
110523c4:	1080100c 	andi	r2,r2,64
110523c8:	10000326 	beq	r2,zero,110523d8 <__sbprintf+0x98>
110523cc:	8080030b 	ldhu	r2,12(r16)
110523d0:	10801014 	ori	r2,r2,64
110523d4:	8080030d 	sth	r2,12(r16)
110523d8:	8805883a 	mov	r2,r17
110523dc:	dfc11d17 	ldw	ra,1140(sp)
110523e0:	dc811c17 	ldw	r18,1136(sp)
110523e4:	dc411b17 	ldw	r17,1132(sp)
110523e8:	dc011a17 	ldw	r16,1128(sp)
110523ec:	dec11e04 	addi	sp,sp,1144
110523f0:	f800283a 	ret
110523f4:	047fffc4 	movi	r17,-1
110523f8:	003ff106 	br	110523c0 <__sbprintf+0x80>

110523fc <_write_r>:
110523fc:	defffd04 	addi	sp,sp,-12
11052400:	2805883a 	mov	r2,r5
11052404:	dc000015 	stw	r16,0(sp)
11052408:	040441b4 	movhi	r16,4358
1105240c:	dc400115 	stw	r17,4(sp)
11052410:	300b883a 	mov	r5,r6
11052414:	842a2804 	addi	r16,r16,-22368
11052418:	2023883a 	mov	r17,r4
1105241c:	380d883a 	mov	r6,r7
11052420:	1009883a 	mov	r4,r2
11052424:	dfc00215 	stw	ra,8(sp)
11052428:	80000015 	stw	zero,0(r16)
1105242c:	1054ae00 	call	11054ae0 <write>
11052430:	00ffffc4 	movi	r3,-1
11052434:	10c00526 	beq	r2,r3,1105244c <_write_r+0x50>
11052438:	dfc00217 	ldw	ra,8(sp)
1105243c:	dc400117 	ldw	r17,4(sp)
11052440:	dc000017 	ldw	r16,0(sp)
11052444:	dec00304 	addi	sp,sp,12
11052448:	f800283a 	ret
1105244c:	80c00017 	ldw	r3,0(r16)
11052450:	183ff926 	beq	r3,zero,11052438 <_write_r+0x3c>
11052454:	88c00015 	stw	r3,0(r17)
11052458:	003ff706 	br	11052438 <_write_r+0x3c>

1105245c <_close_r>:
1105245c:	defffd04 	addi	sp,sp,-12
11052460:	dc000015 	stw	r16,0(sp)
11052464:	040441b4 	movhi	r16,4358
11052468:	dc400115 	stw	r17,4(sp)
1105246c:	842a2804 	addi	r16,r16,-22368
11052470:	2023883a 	mov	r17,r4
11052474:	2809883a 	mov	r4,r5
11052478:	dfc00215 	stw	ra,8(sp)
1105247c:	80000015 	stw	zero,0(r16)
11052480:	10542a00 	call	110542a0 <close>
11052484:	00ffffc4 	movi	r3,-1
11052488:	10c00526 	beq	r2,r3,110524a0 <_close_r+0x44>
1105248c:	dfc00217 	ldw	ra,8(sp)
11052490:	dc400117 	ldw	r17,4(sp)
11052494:	dc000017 	ldw	r16,0(sp)
11052498:	dec00304 	addi	sp,sp,12
1105249c:	f800283a 	ret
110524a0:	80c00017 	ldw	r3,0(r16)
110524a4:	183ff926 	beq	r3,zero,1105248c <_close_r+0x30>
110524a8:	88c00015 	stw	r3,0(r17)
110524ac:	003ff706 	br	1105248c <_close_r+0x30>

110524b0 <_calloc_r>:
110524b0:	298b383a 	mul	r5,r5,r6
110524b4:	defffe04 	addi	sp,sp,-8
110524b8:	dfc00115 	stw	ra,4(sp)
110524bc:	dc000015 	stw	r16,0(sp)
110524c0:	104d4ac0 	call	1104d4ac <_malloc_r>
110524c4:	10002926 	beq	r2,zero,1105256c <_calloc_r+0xbc>
110524c8:	11bfff17 	ldw	r6,-4(r2)
110524cc:	1021883a 	mov	r16,r2
110524d0:	00bfff04 	movi	r2,-4
110524d4:	308c703a 	and	r6,r6,r2
110524d8:	00c00904 	movi	r3,36
110524dc:	308d883a 	add	r6,r6,r2
110524e0:	19801636 	bltu	r3,r6,1105253c <_calloc_r+0x8c>
110524e4:	008004c4 	movi	r2,19
110524e8:	11800b2e 	bgeu	r2,r6,11052518 <_calloc_r+0x68>
110524ec:	80000015 	stw	zero,0(r16)
110524f0:	80000115 	stw	zero,4(r16)
110524f4:	008006c4 	movi	r2,27
110524f8:	11801a2e 	bgeu	r2,r6,11052564 <_calloc_r+0xb4>
110524fc:	80000215 	stw	zero,8(r16)
11052500:	80000315 	stw	zero,12(r16)
11052504:	30c0151e 	bne	r6,r3,1105255c <_calloc_r+0xac>
11052508:	80000415 	stw	zero,16(r16)
1105250c:	80800604 	addi	r2,r16,24
11052510:	80000515 	stw	zero,20(r16)
11052514:	00000106 	br	1105251c <_calloc_r+0x6c>
11052518:	8005883a 	mov	r2,r16
1105251c:	10000015 	stw	zero,0(r2)
11052520:	10000115 	stw	zero,4(r2)
11052524:	10000215 	stw	zero,8(r2)
11052528:	8005883a 	mov	r2,r16
1105252c:	dfc00117 	ldw	ra,4(sp)
11052530:	dc000017 	ldw	r16,0(sp)
11052534:	dec00204 	addi	sp,sp,8
11052538:	f800283a 	ret
1105253c:	000b883a 	mov	r5,zero
11052540:	8009883a 	mov	r4,r16
11052544:	104e0400 	call	1104e040 <memset>
11052548:	8005883a 	mov	r2,r16
1105254c:	dfc00117 	ldw	ra,4(sp)
11052550:	dc000017 	ldw	r16,0(sp)
11052554:	dec00204 	addi	sp,sp,8
11052558:	f800283a 	ret
1105255c:	80800404 	addi	r2,r16,16
11052560:	003fee06 	br	1105251c <_calloc_r+0x6c>
11052564:	80800204 	addi	r2,r16,8
11052568:	003fec06 	br	1105251c <_calloc_r+0x6c>
1105256c:	0005883a 	mov	r2,zero
11052570:	003fee06 	br	1105252c <_calloc_r+0x7c>

11052574 <_fclose_r>:
11052574:	28003926 	beq	r5,zero,1105265c <_fclose_r+0xe8>
11052578:	defffc04 	addi	sp,sp,-16
1105257c:	dc400115 	stw	r17,4(sp)
11052580:	dc000015 	stw	r16,0(sp)
11052584:	dfc00315 	stw	ra,12(sp)
11052588:	dc800215 	stw	r18,8(sp)
1105258c:	2023883a 	mov	r17,r4
11052590:	2821883a 	mov	r16,r5
11052594:	20000226 	beq	r4,zero,110525a0 <_fclose_r+0x2c>
11052598:	20800e17 	ldw	r2,56(r4)
1105259c:	10002726 	beq	r2,zero,1105263c <_fclose_r+0xc8>
110525a0:	8080030f 	ldh	r2,12(r16)
110525a4:	1000071e 	bne	r2,zero,110525c4 <_fclose_r+0x50>
110525a8:	0005883a 	mov	r2,zero
110525ac:	dfc00317 	ldw	ra,12(sp)
110525b0:	dc800217 	ldw	r18,8(sp)
110525b4:	dc400117 	ldw	r17,4(sp)
110525b8:	dc000017 	ldw	r16,0(sp)
110525bc:	dec00404 	addi	sp,sp,16
110525c0:	f800283a 	ret
110525c4:	800b883a 	mov	r5,r16
110525c8:	8809883a 	mov	r4,r17
110525cc:	104c1540 	call	1104c154 <__sflush_r>
110525d0:	1025883a 	mov	r18,r2
110525d4:	80800b17 	ldw	r2,44(r16)
110525d8:	10000426 	beq	r2,zero,110525ec <_fclose_r+0x78>
110525dc:	81400717 	ldw	r5,28(r16)
110525e0:	8809883a 	mov	r4,r17
110525e4:	103ee83a 	callr	r2
110525e8:	10001616 	blt	r2,zero,11052644 <_fclose_r+0xd0>
110525ec:	8080030b 	ldhu	r2,12(r16)
110525f0:	1080200c 	andi	r2,r2,128
110525f4:	1000151e 	bne	r2,zero,1105264c <_fclose_r+0xd8>
110525f8:	81400c17 	ldw	r5,48(r16)
110525fc:	28000526 	beq	r5,zero,11052614 <_fclose_r+0xa0>
11052600:	80801004 	addi	r2,r16,64
11052604:	28800226 	beq	r5,r2,11052610 <_fclose_r+0x9c>
11052608:	8809883a 	mov	r4,r17
1105260c:	104c8c00 	call	1104c8c0 <_free_r>
11052610:	80000c15 	stw	zero,48(r16)
11052614:	81401117 	ldw	r5,68(r16)
11052618:	28000326 	beq	r5,zero,11052628 <_fclose_r+0xb4>
1105261c:	8809883a 	mov	r4,r17
11052620:	104c8c00 	call	1104c8c0 <_free_r>
11052624:	80001115 	stw	zero,68(r16)
11052628:	104c75c0 	call	1104c75c <__sfp_lock_acquire>
1105262c:	8000030d 	sth	zero,12(r16)
11052630:	104c7600 	call	1104c760 <__sfp_lock_release>
11052634:	9005883a 	mov	r2,r18
11052638:	003fdc06 	br	110525ac <_fclose_r+0x38>
1105263c:	104c74c0 	call	1104c74c <__sinit>
11052640:	003fd706 	br	110525a0 <_fclose_r+0x2c>
11052644:	04bfffc4 	movi	r18,-1
11052648:	003fe806 	br	110525ec <_fclose_r+0x78>
1105264c:	81400417 	ldw	r5,16(r16)
11052650:	8809883a 	mov	r4,r17
11052654:	104c8c00 	call	1104c8c0 <_free_r>
11052658:	003fe706 	br	110525f8 <_fclose_r+0x84>
1105265c:	0005883a 	mov	r2,zero
11052660:	f800283a 	ret

11052664 <fclose>:
11052664:	008441b4 	movhi	r2,4358
11052668:	10a35704 	addi	r2,r2,-29348
1105266c:	200b883a 	mov	r5,r4
11052670:	11000017 	ldw	r4,0(r2)
11052674:	10525741 	jmpi	11052574 <_fclose_r>

11052678 <__fputwc>:
11052678:	defff804 	addi	sp,sp,-32
1105267c:	dcc00415 	stw	r19,16(sp)
11052680:	dc800315 	stw	r18,12(sp)
11052684:	dc000115 	stw	r16,4(sp)
11052688:	dfc00715 	stw	ra,28(sp)
1105268c:	dd400615 	stw	r21,24(sp)
11052690:	dd000515 	stw	r20,20(sp)
11052694:	dc400215 	stw	r17,8(sp)
11052698:	2027883a 	mov	r19,r4
1105269c:	2825883a 	mov	r18,r5
110526a0:	3021883a 	mov	r16,r6
110526a4:	104d29c0 	call	1104d29c <__locale_mb_cur_max>
110526a8:	00c00044 	movi	r3,1
110526ac:	10c03e26 	beq	r2,r3,110527a8 <__fputwc+0x130>
110526b0:	81c01704 	addi	r7,r16,92
110526b4:	900d883a 	mov	r6,r18
110526b8:	d80b883a 	mov	r5,sp
110526bc:	9809883a 	mov	r4,r19
110526c0:	1052b480 	call	11052b48 <_wcrtomb_r>
110526c4:	1029883a 	mov	r20,r2
110526c8:	00bfffc4 	movi	r2,-1
110526cc:	a0802026 	beq	r20,r2,11052750 <__fputwc+0xd8>
110526d0:	d9400003 	ldbu	r5,0(sp)
110526d4:	a0001c26 	beq	r20,zero,11052748 <__fputwc+0xd0>
110526d8:	0023883a 	mov	r17,zero
110526dc:	05400284 	movi	r21,10
110526e0:	00000906 	br	11052708 <__fputwc+0x90>
110526e4:	80800017 	ldw	r2,0(r16)
110526e8:	11400005 	stb	r5,0(r2)
110526ec:	80c00017 	ldw	r3,0(r16)
110526f0:	18c00044 	addi	r3,r3,1
110526f4:	80c00015 	stw	r3,0(r16)
110526f8:	8c400044 	addi	r17,r17,1
110526fc:	dc45883a 	add	r2,sp,r17
11052700:	8d00112e 	bgeu	r17,r20,11052748 <__fputwc+0xd0>
11052704:	11400003 	ldbu	r5,0(r2)
11052708:	80c00217 	ldw	r3,8(r16)
1105270c:	18ffffc4 	addi	r3,r3,-1
11052710:	80c00215 	stw	r3,8(r16)
11052714:	183ff30e 	bge	r3,zero,110526e4 <__fputwc+0x6c>
11052718:	80800617 	ldw	r2,24(r16)
1105271c:	18801916 	blt	r3,r2,11052784 <__fputwc+0x10c>
11052720:	80800017 	ldw	r2,0(r16)
11052724:	11400005 	stb	r5,0(r2)
11052728:	80800017 	ldw	r2,0(r16)
1105272c:	10c00003 	ldbu	r3,0(r2)
11052730:	10800044 	addi	r2,r2,1
11052734:	1d402326 	beq	r3,r21,110527c4 <__fputwc+0x14c>
11052738:	80800015 	stw	r2,0(r16)
1105273c:	8c400044 	addi	r17,r17,1
11052740:	dc45883a 	add	r2,sp,r17
11052744:	8d3fef36 	bltu	r17,r20,11052704 <__fputwc+0x8c>
11052748:	9005883a 	mov	r2,r18
1105274c:	00000406 	br	11052760 <__fputwc+0xe8>
11052750:	80c0030b 	ldhu	r3,12(r16)
11052754:	a005883a 	mov	r2,r20
11052758:	18c01014 	ori	r3,r3,64
1105275c:	80c0030d 	sth	r3,12(r16)
11052760:	dfc00717 	ldw	ra,28(sp)
11052764:	dd400617 	ldw	r21,24(sp)
11052768:	dd000517 	ldw	r20,20(sp)
1105276c:	dcc00417 	ldw	r19,16(sp)
11052770:	dc800317 	ldw	r18,12(sp)
11052774:	dc400217 	ldw	r17,8(sp)
11052778:	dc000117 	ldw	r16,4(sp)
1105277c:	dec00804 	addi	sp,sp,32
11052780:	f800283a 	ret
11052784:	800d883a 	mov	r6,r16
11052788:	29403fcc 	andi	r5,r5,255
1105278c:	9809883a 	mov	r4,r19
11052790:	10529f00 	call	110529f0 <__swbuf_r>
11052794:	10bfffe0 	cmpeqi	r2,r2,-1
11052798:	10803fcc 	andi	r2,r2,255
1105279c:	103fd626 	beq	r2,zero,110526f8 <__fputwc+0x80>
110527a0:	00bfffc4 	movi	r2,-1
110527a4:	003fee06 	br	11052760 <__fputwc+0xe8>
110527a8:	90ffffc4 	addi	r3,r18,-1
110527ac:	01003f84 	movi	r4,254
110527b0:	20ffbf36 	bltu	r4,r3,110526b0 <__fputwc+0x38>
110527b4:	900b883a 	mov	r5,r18
110527b8:	dc800005 	stb	r18,0(sp)
110527bc:	1029883a 	mov	r20,r2
110527c0:	003fc506 	br	110526d8 <__fputwc+0x60>
110527c4:	800d883a 	mov	r6,r16
110527c8:	a80b883a 	mov	r5,r21
110527cc:	9809883a 	mov	r4,r19
110527d0:	10529f00 	call	110529f0 <__swbuf_r>
110527d4:	10bfffe0 	cmpeqi	r2,r2,-1
110527d8:	003fef06 	br	11052798 <__fputwc+0x120>

110527dc <_fputwc_r>:
110527dc:	3080030b 	ldhu	r2,12(r6)
110527e0:	10c8000c 	andi	r3,r2,8192
110527e4:	1800051e 	bne	r3,zero,110527fc <_fputwc_r+0x20>
110527e8:	30c01917 	ldw	r3,100(r6)
110527ec:	10880014 	ori	r2,r2,8192
110527f0:	3080030d 	sth	r2,12(r6)
110527f4:	18880014 	ori	r2,r3,8192
110527f8:	30801915 	stw	r2,100(r6)
110527fc:	10526781 	jmpi	11052678 <__fputwc>

11052800 <fputwc>:
11052800:	008441b4 	movhi	r2,4358
11052804:	defffc04 	addi	sp,sp,-16
11052808:	10a35704 	addi	r2,r2,-29348
1105280c:	dc000115 	stw	r16,4(sp)
11052810:	14000017 	ldw	r16,0(r2)
11052814:	dc400215 	stw	r17,8(sp)
11052818:	dfc00315 	stw	ra,12(sp)
1105281c:	2023883a 	mov	r17,r4
11052820:	80000226 	beq	r16,zero,1105282c <fputwc+0x2c>
11052824:	80800e17 	ldw	r2,56(r16)
11052828:	10001026 	beq	r2,zero,1105286c <fputwc+0x6c>
1105282c:	2880030b 	ldhu	r2,12(r5)
11052830:	10c8000c 	andi	r3,r2,8192
11052834:	1800051e 	bne	r3,zero,1105284c <fputwc+0x4c>
11052838:	28c01917 	ldw	r3,100(r5)
1105283c:	10880014 	ori	r2,r2,8192
11052840:	2880030d 	sth	r2,12(r5)
11052844:	18880014 	ori	r2,r3,8192
11052848:	28801915 	stw	r2,100(r5)
1105284c:	280d883a 	mov	r6,r5
11052850:	8009883a 	mov	r4,r16
11052854:	880b883a 	mov	r5,r17
11052858:	dfc00317 	ldw	ra,12(sp)
1105285c:	dc400217 	ldw	r17,8(sp)
11052860:	dc000117 	ldw	r16,4(sp)
11052864:	dec00404 	addi	sp,sp,16
11052868:	10526781 	jmpi	11052678 <__fputwc>
1105286c:	8009883a 	mov	r4,r16
11052870:	d9400015 	stw	r5,0(sp)
11052874:	104c74c0 	call	1104c74c <__sinit>
11052878:	d9400017 	ldw	r5,0(sp)
1105287c:	003feb06 	br	1105282c <fputwc+0x2c>

11052880 <_fstat_r>:
11052880:	defffd04 	addi	sp,sp,-12
11052884:	2805883a 	mov	r2,r5
11052888:	dc000015 	stw	r16,0(sp)
1105288c:	040441b4 	movhi	r16,4358
11052890:	dc400115 	stw	r17,4(sp)
11052894:	842a2804 	addi	r16,r16,-22368
11052898:	2023883a 	mov	r17,r4
1105289c:	300b883a 	mov	r5,r6
110528a0:	1009883a 	mov	r4,r2
110528a4:	dfc00215 	stw	ra,8(sp)
110528a8:	80000015 	stw	zero,0(r16)
110528ac:	10543d80 	call	110543d8 <fstat>
110528b0:	00ffffc4 	movi	r3,-1
110528b4:	10c00526 	beq	r2,r3,110528cc <_fstat_r+0x4c>
110528b8:	dfc00217 	ldw	ra,8(sp)
110528bc:	dc400117 	ldw	r17,4(sp)
110528c0:	dc000017 	ldw	r16,0(sp)
110528c4:	dec00304 	addi	sp,sp,12
110528c8:	f800283a 	ret
110528cc:	80c00017 	ldw	r3,0(r16)
110528d0:	183ff926 	beq	r3,zero,110528b8 <_fstat_r+0x38>
110528d4:	88c00015 	stw	r3,0(r17)
110528d8:	003ff706 	br	110528b8 <_fstat_r+0x38>

110528dc <_isatty_r>:
110528dc:	defffd04 	addi	sp,sp,-12
110528e0:	dc000015 	stw	r16,0(sp)
110528e4:	040441b4 	movhi	r16,4358
110528e8:	dc400115 	stw	r17,4(sp)
110528ec:	842a2804 	addi	r16,r16,-22368
110528f0:	2023883a 	mov	r17,r4
110528f4:	2809883a 	mov	r4,r5
110528f8:	dfc00215 	stw	ra,8(sp)
110528fc:	80000015 	stw	zero,0(r16)
11052900:	10544c40 	call	110544c4 <isatty>
11052904:	00ffffc4 	movi	r3,-1
11052908:	10c00526 	beq	r2,r3,11052920 <_isatty_r+0x44>
1105290c:	dfc00217 	ldw	ra,8(sp)
11052910:	dc400117 	ldw	r17,4(sp)
11052914:	dc000017 	ldw	r16,0(sp)
11052918:	dec00304 	addi	sp,sp,12
1105291c:	f800283a 	ret
11052920:	80c00017 	ldw	r3,0(r16)
11052924:	183ff926 	beq	r3,zero,1105290c <_isatty_r+0x30>
11052928:	88c00015 	stw	r3,0(r17)
1105292c:	003ff706 	br	1105290c <_isatty_r+0x30>

11052930 <_lseek_r>:
11052930:	defffd04 	addi	sp,sp,-12
11052934:	2805883a 	mov	r2,r5
11052938:	dc000015 	stw	r16,0(sp)
1105293c:	040441b4 	movhi	r16,4358
11052940:	dc400115 	stw	r17,4(sp)
11052944:	300b883a 	mov	r5,r6
11052948:	842a2804 	addi	r16,r16,-22368
1105294c:	2023883a 	mov	r17,r4
11052950:	380d883a 	mov	r6,r7
11052954:	1009883a 	mov	r4,r2
11052958:	dfc00215 	stw	ra,8(sp)
1105295c:	80000015 	stw	zero,0(r16)
11052960:	10546900 	call	11054690 <lseek>
11052964:	00ffffc4 	movi	r3,-1
11052968:	10c00526 	beq	r2,r3,11052980 <_lseek_r+0x50>
1105296c:	dfc00217 	ldw	ra,8(sp)
11052970:	dc400117 	ldw	r17,4(sp)
11052974:	dc000017 	ldw	r16,0(sp)
11052978:	dec00304 	addi	sp,sp,12
1105297c:	f800283a 	ret
11052980:	80c00017 	ldw	r3,0(r16)
11052984:	183ff926 	beq	r3,zero,1105296c <_lseek_r+0x3c>
11052988:	88c00015 	stw	r3,0(r17)
1105298c:	003ff706 	br	1105296c <_lseek_r+0x3c>

11052990 <_read_r>:
11052990:	defffd04 	addi	sp,sp,-12
11052994:	2805883a 	mov	r2,r5
11052998:	dc000015 	stw	r16,0(sp)
1105299c:	040441b4 	movhi	r16,4358
110529a0:	dc400115 	stw	r17,4(sp)
110529a4:	300b883a 	mov	r5,r6
110529a8:	842a2804 	addi	r16,r16,-22368
110529ac:	2023883a 	mov	r17,r4
110529b0:	380d883a 	mov	r6,r7
110529b4:	1009883a 	mov	r4,r2
110529b8:	dfc00215 	stw	ra,8(sp)
110529bc:	80000015 	stw	zero,0(r16)
110529c0:	10548640 	call	11054864 <read>
110529c4:	00ffffc4 	movi	r3,-1
110529c8:	10c00526 	beq	r2,r3,110529e0 <_read_r+0x50>
110529cc:	dfc00217 	ldw	ra,8(sp)
110529d0:	dc400117 	ldw	r17,4(sp)
110529d4:	dc000017 	ldw	r16,0(sp)
110529d8:	dec00304 	addi	sp,sp,12
110529dc:	f800283a 	ret
110529e0:	80c00017 	ldw	r3,0(r16)
110529e4:	183ff926 	beq	r3,zero,110529cc <_read_r+0x3c>
110529e8:	88c00015 	stw	r3,0(r17)
110529ec:	003ff706 	br	110529cc <_read_r+0x3c>

110529f0 <__swbuf_r>:
110529f0:	defffb04 	addi	sp,sp,-20
110529f4:	dcc00315 	stw	r19,12(sp)
110529f8:	dc800215 	stw	r18,8(sp)
110529fc:	dc000015 	stw	r16,0(sp)
11052a00:	dfc00415 	stw	ra,16(sp)
11052a04:	dc400115 	stw	r17,4(sp)
11052a08:	2025883a 	mov	r18,r4
11052a0c:	2827883a 	mov	r19,r5
11052a10:	3021883a 	mov	r16,r6
11052a14:	20000226 	beq	r4,zero,11052a20 <__swbuf_r+0x30>
11052a18:	20800e17 	ldw	r2,56(r4)
11052a1c:	10004226 	beq	r2,zero,11052b28 <__swbuf_r+0x138>
11052a20:	80800617 	ldw	r2,24(r16)
11052a24:	8100030b 	ldhu	r4,12(r16)
11052a28:	80800215 	stw	r2,8(r16)
11052a2c:	2080020c 	andi	r2,r4,8
11052a30:	10003626 	beq	r2,zero,11052b0c <__swbuf_r+0x11c>
11052a34:	80c00417 	ldw	r3,16(r16)
11052a38:	18003426 	beq	r3,zero,11052b0c <__swbuf_r+0x11c>
11052a3c:	2088000c 	andi	r2,r4,8192
11052a40:	9c403fcc 	andi	r17,r19,255
11052a44:	10001a26 	beq	r2,zero,11052ab0 <__swbuf_r+0xc0>
11052a48:	80800017 	ldw	r2,0(r16)
11052a4c:	81000517 	ldw	r4,20(r16)
11052a50:	10c7c83a 	sub	r3,r2,r3
11052a54:	1900200e 	bge	r3,r4,11052ad8 <__swbuf_r+0xe8>
11052a58:	18c00044 	addi	r3,r3,1
11052a5c:	81000217 	ldw	r4,8(r16)
11052a60:	11400044 	addi	r5,r2,1
11052a64:	81400015 	stw	r5,0(r16)
11052a68:	213fffc4 	addi	r4,r4,-1
11052a6c:	81000215 	stw	r4,8(r16)
11052a70:	14c00005 	stb	r19,0(r2)
11052a74:	80800517 	ldw	r2,20(r16)
11052a78:	10c01e26 	beq	r2,r3,11052af4 <__swbuf_r+0x104>
11052a7c:	8080030b 	ldhu	r2,12(r16)
11052a80:	1080004c 	andi	r2,r2,1
11052a84:	10000226 	beq	r2,zero,11052a90 <__swbuf_r+0xa0>
11052a88:	00800284 	movi	r2,10
11052a8c:	88801926 	beq	r17,r2,11052af4 <__swbuf_r+0x104>
11052a90:	8805883a 	mov	r2,r17
11052a94:	dfc00417 	ldw	ra,16(sp)
11052a98:	dcc00317 	ldw	r19,12(sp)
11052a9c:	dc800217 	ldw	r18,8(sp)
11052aa0:	dc400117 	ldw	r17,4(sp)
11052aa4:	dc000017 	ldw	r16,0(sp)
11052aa8:	dec00504 	addi	sp,sp,20
11052aac:	f800283a 	ret
11052ab0:	81401917 	ldw	r5,100(r16)
11052ab4:	00b7ffc4 	movi	r2,-8193
11052ab8:	21080014 	ori	r4,r4,8192
11052abc:	2884703a 	and	r2,r5,r2
11052ac0:	80801915 	stw	r2,100(r16)
11052ac4:	80800017 	ldw	r2,0(r16)
11052ac8:	8100030d 	sth	r4,12(r16)
11052acc:	81000517 	ldw	r4,20(r16)
11052ad0:	10c7c83a 	sub	r3,r2,r3
11052ad4:	193fe016 	blt	r3,r4,11052a58 <__swbuf_r+0x68>
11052ad8:	800b883a 	mov	r5,r16
11052adc:	9009883a 	mov	r4,r18
11052ae0:	104c3700 	call	1104c370 <_fflush_r>
11052ae4:	1000071e 	bne	r2,zero,11052b04 <__swbuf_r+0x114>
11052ae8:	80800017 	ldw	r2,0(r16)
11052aec:	00c00044 	movi	r3,1
11052af0:	003fda06 	br	11052a5c <__swbuf_r+0x6c>
11052af4:	800b883a 	mov	r5,r16
11052af8:	9009883a 	mov	r4,r18
11052afc:	104c3700 	call	1104c370 <_fflush_r>
11052b00:	103fe326 	beq	r2,zero,11052a90 <__swbuf_r+0xa0>
11052b04:	00bfffc4 	movi	r2,-1
11052b08:	003fe206 	br	11052a94 <__swbuf_r+0xa4>
11052b0c:	800b883a 	mov	r5,r16
11052b10:	9009883a 	mov	r4,r18
11052b14:	104a7780 	call	1104a778 <__swsetup_r>
11052b18:	103ffa1e 	bne	r2,zero,11052b04 <__swbuf_r+0x114>
11052b1c:	8100030b 	ldhu	r4,12(r16)
11052b20:	80c00417 	ldw	r3,16(r16)
11052b24:	003fc506 	br	11052a3c <__swbuf_r+0x4c>
11052b28:	104c74c0 	call	1104c74c <__sinit>
11052b2c:	003fbc06 	br	11052a20 <__swbuf_r+0x30>

11052b30 <__swbuf>:
11052b30:	008441b4 	movhi	r2,4358
11052b34:	10a35704 	addi	r2,r2,-29348
11052b38:	280d883a 	mov	r6,r5
11052b3c:	200b883a 	mov	r5,r4
11052b40:	11000017 	ldw	r4,0(r2)
11052b44:	10529f01 	jmpi	110529f0 <__swbuf_r>

11052b48 <_wcrtomb_r>:
11052b48:	defff604 	addi	sp,sp,-40
11052b4c:	008441b4 	movhi	r2,4358
11052b50:	dc800815 	stw	r18,32(sp)
11052b54:	dc400715 	stw	r17,28(sp)
11052b58:	dc000615 	stw	r16,24(sp)
11052b5c:	10a35b04 	addi	r2,r2,-29332
11052b60:	dfc00915 	stw	ra,36(sp)
11052b64:	2021883a 	mov	r16,r4
11052b68:	3823883a 	mov	r17,r7
11052b6c:	14800017 	ldw	r18,0(r2)
11052b70:	28001426 	beq	r5,zero,11052bc4 <_wcrtomb_r+0x7c>
11052b74:	d9400415 	stw	r5,16(sp)
11052b78:	d9800515 	stw	r6,20(sp)
11052b7c:	104d2900 	call	1104d290 <__locale_charset>
11052b80:	d9800517 	ldw	r6,20(sp)
11052b84:	d9400417 	ldw	r5,16(sp)
11052b88:	100f883a 	mov	r7,r2
11052b8c:	dc400015 	stw	r17,0(sp)
11052b90:	8009883a 	mov	r4,r16
11052b94:	903ee83a 	callr	r18
11052b98:	00ffffc4 	movi	r3,-1
11052b9c:	10c0031e 	bne	r2,r3,11052bac <_wcrtomb_r+0x64>
11052ba0:	88000015 	stw	zero,0(r17)
11052ba4:	00c02284 	movi	r3,138
11052ba8:	80c00015 	stw	r3,0(r16)
11052bac:	dfc00917 	ldw	ra,36(sp)
11052bb0:	dc800817 	ldw	r18,32(sp)
11052bb4:	dc400717 	ldw	r17,28(sp)
11052bb8:	dc000617 	ldw	r16,24(sp)
11052bbc:	dec00a04 	addi	sp,sp,40
11052bc0:	f800283a 	ret
11052bc4:	104d2900 	call	1104d290 <__locale_charset>
11052bc8:	100f883a 	mov	r7,r2
11052bcc:	dc400015 	stw	r17,0(sp)
11052bd0:	000d883a 	mov	r6,zero
11052bd4:	d9400104 	addi	r5,sp,4
11052bd8:	8009883a 	mov	r4,r16
11052bdc:	903ee83a 	callr	r18
11052be0:	003fed06 	br	11052b98 <_wcrtomb_r+0x50>

11052be4 <wcrtomb>:
11052be4:	defff604 	addi	sp,sp,-40
11052be8:	008441b4 	movhi	r2,4358
11052bec:	dc800615 	stw	r18,24(sp)
11052bf0:	dc400515 	stw	r17,20(sp)
11052bf4:	10a35704 	addi	r2,r2,-29348
11052bf8:	dfc00915 	stw	ra,36(sp)
11052bfc:	dd000815 	stw	r20,32(sp)
11052c00:	dcc00715 	stw	r19,28(sp)
11052c04:	dc000415 	stw	r16,16(sp)
11052c08:	3025883a 	mov	r18,r6
11052c0c:	14400017 	ldw	r17,0(r2)
11052c10:	20001926 	beq	r4,zero,11052c78 <wcrtomb+0x94>
11052c14:	008441b4 	movhi	r2,4358
11052c18:	10a35b04 	addi	r2,r2,-29332
11052c1c:	15000017 	ldw	r20,0(r2)
11052c20:	2021883a 	mov	r16,r4
11052c24:	2827883a 	mov	r19,r5
11052c28:	104d2900 	call	1104d290 <__locale_charset>
11052c2c:	100f883a 	mov	r7,r2
11052c30:	dc800015 	stw	r18,0(sp)
11052c34:	980d883a 	mov	r6,r19
11052c38:	800b883a 	mov	r5,r16
11052c3c:	8809883a 	mov	r4,r17
11052c40:	a03ee83a 	callr	r20
11052c44:	00ffffc4 	movi	r3,-1
11052c48:	10c0031e 	bne	r2,r3,11052c58 <wcrtomb+0x74>
11052c4c:	90000015 	stw	zero,0(r18)
11052c50:	00c02284 	movi	r3,138
11052c54:	88c00015 	stw	r3,0(r17)
11052c58:	dfc00917 	ldw	ra,36(sp)
11052c5c:	dd000817 	ldw	r20,32(sp)
11052c60:	dcc00717 	ldw	r19,28(sp)
11052c64:	dc800617 	ldw	r18,24(sp)
11052c68:	dc400517 	ldw	r17,20(sp)
11052c6c:	dc000417 	ldw	r16,16(sp)
11052c70:	dec00a04 	addi	sp,sp,40
11052c74:	f800283a 	ret
11052c78:	008441b4 	movhi	r2,4358
11052c7c:	10a35b04 	addi	r2,r2,-29332
11052c80:	14000017 	ldw	r16,0(r2)
11052c84:	104d2900 	call	1104d290 <__locale_charset>
11052c88:	100f883a 	mov	r7,r2
11052c8c:	dc800015 	stw	r18,0(sp)
11052c90:	000d883a 	mov	r6,zero
11052c94:	d9400104 	addi	r5,sp,4
11052c98:	8809883a 	mov	r4,r17
11052c9c:	803ee83a 	callr	r16
11052ca0:	003fe806 	br	11052c44 <wcrtomb+0x60>

11052ca4 <__ascii_wctomb>:
11052ca4:	28000526 	beq	r5,zero,11052cbc <__ascii_wctomb+0x18>
11052ca8:	00803fc4 	movi	r2,255
11052cac:	11800536 	bltu	r2,r6,11052cc4 <__ascii_wctomb+0x20>
11052cb0:	29800005 	stb	r6,0(r5)
11052cb4:	00800044 	movi	r2,1
11052cb8:	f800283a 	ret
11052cbc:	0005883a 	mov	r2,zero
11052cc0:	f800283a 	ret
11052cc4:	00802284 	movi	r2,138
11052cc8:	20800015 	stw	r2,0(r4)
11052ccc:	00bfffc4 	movi	r2,-1
11052cd0:	f800283a 	ret

11052cd4 <_wctomb_r>:
11052cd4:	008441b4 	movhi	r2,4358
11052cd8:	defff904 	addi	sp,sp,-28
11052cdc:	10a35b04 	addi	r2,r2,-29332
11052ce0:	dfc00615 	stw	ra,24(sp)
11052ce4:	dc400515 	stw	r17,20(sp)
11052ce8:	dc000415 	stw	r16,16(sp)
11052cec:	3823883a 	mov	r17,r7
11052cf0:	14000017 	ldw	r16,0(r2)
11052cf4:	d9000115 	stw	r4,4(sp)
11052cf8:	d9400215 	stw	r5,8(sp)
11052cfc:	d9800315 	stw	r6,12(sp)
11052d00:	104d2900 	call	1104d290 <__locale_charset>
11052d04:	d9800317 	ldw	r6,12(sp)
11052d08:	d9400217 	ldw	r5,8(sp)
11052d0c:	d9000117 	ldw	r4,4(sp)
11052d10:	100f883a 	mov	r7,r2
11052d14:	dc400015 	stw	r17,0(sp)
11052d18:	803ee83a 	callr	r16
11052d1c:	dfc00617 	ldw	ra,24(sp)
11052d20:	dc400517 	ldw	r17,20(sp)
11052d24:	dc000417 	ldw	r16,16(sp)
11052d28:	dec00704 	addi	sp,sp,28
11052d2c:	f800283a 	ret

11052d30 <__udivdi3>:
11052d30:	defff504 	addi	sp,sp,-44
11052d34:	dcc00415 	stw	r19,16(sp)
11052d38:	dc000115 	stw	r16,4(sp)
11052d3c:	dfc00a15 	stw	ra,40(sp)
11052d40:	df000915 	stw	fp,36(sp)
11052d44:	ddc00815 	stw	r23,32(sp)
11052d48:	dd800715 	stw	r22,28(sp)
11052d4c:	dd400615 	stw	r21,24(sp)
11052d50:	dd000515 	stw	r20,20(sp)
11052d54:	dc800315 	stw	r18,12(sp)
11052d58:	dc400215 	stw	r17,8(sp)
11052d5c:	2027883a 	mov	r19,r4
11052d60:	2821883a 	mov	r16,r5
11052d64:	3800411e 	bne	r7,zero,11052e6c <__udivdi3+0x13c>
11052d68:	3023883a 	mov	r17,r6
11052d6c:	2025883a 	mov	r18,r4
11052d70:	2980522e 	bgeu	r5,r6,11052ebc <__udivdi3+0x18c>
11052d74:	00bfffd4 	movui	r2,65535
11052d78:	282d883a 	mov	r22,r5
11052d7c:	1180a836 	bltu	r2,r6,11053020 <__udivdi3+0x2f0>
11052d80:	00803fc4 	movi	r2,255
11052d84:	1185803a 	cmpltu	r2,r2,r6
11052d88:	100490fa 	slli	r2,r2,3
11052d8c:	3086d83a 	srl	r3,r6,r2
11052d90:	01044174 	movhi	r4,4357
11052d94:	211bdd04 	addi	r4,r4,28532
11052d98:	20c7883a 	add	r3,r4,r3
11052d9c:	18c00003 	ldbu	r3,0(r3)
11052da0:	1885883a 	add	r2,r3,r2
11052da4:	00c00804 	movi	r3,32
11052da8:	1887c83a 	sub	r3,r3,r2
11052dac:	18000526 	beq	r3,zero,11052dc4 <__udivdi3+0x94>
11052db0:	80e0983a 	sll	r16,r16,r3
11052db4:	9884d83a 	srl	r2,r19,r2
11052db8:	30e2983a 	sll	r17,r6,r3
11052dbc:	98e4983a 	sll	r18,r19,r3
11052dc0:	142cb03a 	or	r22,r2,r16
11052dc4:	882ad43a 	srli	r21,r17,16
11052dc8:	b009883a 	mov	r4,r22
11052dcc:	8d3fffcc 	andi	r20,r17,65535
11052dd0:	a80b883a 	mov	r5,r21
11052dd4:	10442d40 	call	110442d4 <__umodsi3>
11052dd8:	b009883a 	mov	r4,r22
11052ddc:	a80b883a 	mov	r5,r21
11052de0:	1027883a 	mov	r19,r2
11052de4:	10442700 	call	11044270 <__udivsi3>
11052de8:	102d883a 	mov	r22,r2
11052dec:	9826943a 	slli	r19,r19,16
11052df0:	9004d43a 	srli	r2,r18,16
11052df4:	a5a1383a 	mul	r16,r20,r22
11052df8:	14c4b03a 	or	r2,r2,r19
11052dfc:	1400052e 	bgeu	r2,r16,11052e14 <__udivdi3+0xe4>
11052e00:	1445883a 	add	r2,r2,r17
11052e04:	b0ffffc4 	addi	r3,r22,-1
11052e08:	14400136 	bltu	r2,r17,11052e10 <__udivdi3+0xe0>
11052e0c:	14012336 	bltu	r2,r16,1105329c <__udivdi3+0x56c>
11052e10:	182d883a 	mov	r22,r3
11052e14:	1421c83a 	sub	r16,r2,r16
11052e18:	a80b883a 	mov	r5,r21
11052e1c:	8009883a 	mov	r4,r16
11052e20:	10442d40 	call	110442d4 <__umodsi3>
11052e24:	1027883a 	mov	r19,r2
11052e28:	a80b883a 	mov	r5,r21
11052e2c:	8009883a 	mov	r4,r16
11052e30:	10442700 	call	11044270 <__udivsi3>
11052e34:	9826943a 	slli	r19,r19,16
11052e38:	a0a9383a 	mul	r20,r20,r2
11052e3c:	94bfffcc 	andi	r18,r18,65535
11052e40:	94e4b03a 	or	r18,r18,r19
11052e44:	9500052e 	bgeu	r18,r20,11052e5c <__udivdi3+0x12c>
11052e48:	8ca5883a 	add	r18,r17,r18
11052e4c:	10ffffc4 	addi	r3,r2,-1
11052e50:	9440f136 	bltu	r18,r17,11053218 <__udivdi3+0x4e8>
11052e54:	9500f02e 	bgeu	r18,r20,11053218 <__udivdi3+0x4e8>
11052e58:	10bfff84 	addi	r2,r2,-2
11052e5c:	b00c943a 	slli	r6,r22,16
11052e60:	0007883a 	mov	r3,zero
11052e64:	3084b03a 	or	r2,r6,r2
11052e68:	00005906 	br	11052fd0 <__udivdi3+0x2a0>
11052e6c:	29c05636 	bltu	r5,r7,11052fc8 <__udivdi3+0x298>
11052e70:	00bfffd4 	movui	r2,65535
11052e74:	11c0622e 	bgeu	r2,r7,11053000 <__udivdi3+0x2d0>
11052e78:	00804034 	movhi	r2,256
11052e7c:	10bfffc4 	addi	r2,r2,-1
11052e80:	11c0ee36 	bltu	r2,r7,1105323c <__udivdi3+0x50c>
11052e84:	00800404 	movi	r2,16
11052e88:	3886d83a 	srl	r3,r7,r2
11052e8c:	01044174 	movhi	r4,4357
11052e90:	211bdd04 	addi	r4,r4,28532
11052e94:	20c7883a 	add	r3,r4,r3
11052e98:	18c00003 	ldbu	r3,0(r3)
11052e9c:	05400804 	movi	r21,32
11052ea0:	1885883a 	add	r2,r3,r2
11052ea4:	a8abc83a 	sub	r21,r21,r2
11052ea8:	a800621e 	bne	r21,zero,11053034 <__udivdi3+0x304>
11052eac:	3c00e936 	bltu	r7,r16,11053254 <__udivdi3+0x524>
11052eb0:	9985403a 	cmpgeu	r2,r19,r6
11052eb4:	0007883a 	mov	r3,zero
11052eb8:	00004506 	br	11052fd0 <__udivdi3+0x2a0>
11052ebc:	3000041e 	bne	r6,zero,11052ed0 <__udivdi3+0x1a0>
11052ec0:	000b883a 	mov	r5,zero
11052ec4:	01000044 	movi	r4,1
11052ec8:	10442700 	call	11044270 <__udivsi3>
11052ecc:	1023883a 	mov	r17,r2
11052ed0:	00bfffd4 	movui	r2,65535
11052ed4:	14404e2e 	bgeu	r2,r17,11053010 <__udivdi3+0x2e0>
11052ed8:	00804034 	movhi	r2,256
11052edc:	10bfffc4 	addi	r2,r2,-1
11052ee0:	1440d836 	bltu	r2,r17,11053244 <__udivdi3+0x514>
11052ee4:	00800404 	movi	r2,16
11052ee8:	8886d83a 	srl	r3,r17,r2
11052eec:	01044174 	movhi	r4,4357
11052ef0:	211bdd04 	addi	r4,r4,28532
11052ef4:	20c7883a 	add	r3,r4,r3
11052ef8:	18c00003 	ldbu	r3,0(r3)
11052efc:	1885883a 	add	r2,r3,r2
11052f00:	00c00804 	movi	r3,32
11052f04:	1887c83a 	sub	r3,r3,r2
11052f08:	18008f1e 	bne	r3,zero,11053148 <__udivdi3+0x418>
11052f0c:	882ad43a 	srli	r21,r17,16
11052f10:	8461c83a 	sub	r16,r16,r17
11052f14:	8d3fffcc 	andi	r20,r17,65535
11052f18:	00c00044 	movi	r3,1
11052f1c:	8009883a 	mov	r4,r16
11052f20:	a80b883a 	mov	r5,r21
11052f24:	d8c00015 	stw	r3,0(sp)
11052f28:	10442d40 	call	110442d4 <__umodsi3>
11052f2c:	8009883a 	mov	r4,r16
11052f30:	a80b883a 	mov	r5,r21
11052f34:	1027883a 	mov	r19,r2
11052f38:	10442700 	call	11044270 <__udivsi3>
11052f3c:	9826943a 	slli	r19,r19,16
11052f40:	9008d43a 	srli	r4,r18,16
11052f44:	1521383a 	mul	r16,r2,r20
11052f48:	102d883a 	mov	r22,r2
11052f4c:	24c8b03a 	or	r4,r4,r19
11052f50:	d8c00017 	ldw	r3,0(sp)
11052f54:	2400052e 	bgeu	r4,r16,11052f6c <__udivdi3+0x23c>
11052f58:	2449883a 	add	r4,r4,r17
11052f5c:	b0bfffc4 	addi	r2,r22,-1
11052f60:	24400136 	bltu	r4,r17,11052f68 <__udivdi3+0x238>
11052f64:	2400ca36 	bltu	r4,r16,11053290 <__udivdi3+0x560>
11052f68:	102d883a 	mov	r22,r2
11052f6c:	2421c83a 	sub	r16,r4,r16
11052f70:	a80b883a 	mov	r5,r21
11052f74:	8009883a 	mov	r4,r16
11052f78:	d8c00015 	stw	r3,0(sp)
11052f7c:	10442d40 	call	110442d4 <__umodsi3>
11052f80:	1027883a 	mov	r19,r2
11052f84:	a80b883a 	mov	r5,r21
11052f88:	8009883a 	mov	r4,r16
11052f8c:	10442700 	call	11044270 <__udivsi3>
11052f90:	9826943a 	slli	r19,r19,16
11052f94:	1529383a 	mul	r20,r2,r20
11052f98:	94bfffcc 	andi	r18,r18,65535
11052f9c:	94e4b03a 	or	r18,r18,r19
11052fa0:	d8c00017 	ldw	r3,0(sp)
11052fa4:	9500052e 	bgeu	r18,r20,11052fbc <__udivdi3+0x28c>
11052fa8:	8ca5883a 	add	r18,r17,r18
11052fac:	113fffc4 	addi	r4,r2,-1
11052fb0:	94409736 	bltu	r18,r17,11053210 <__udivdi3+0x4e0>
11052fb4:	9500962e 	bgeu	r18,r20,11053210 <__udivdi3+0x4e0>
11052fb8:	10bfff84 	addi	r2,r2,-2
11052fbc:	b00c943a 	slli	r6,r22,16
11052fc0:	3084b03a 	or	r2,r6,r2
11052fc4:	00000206 	br	11052fd0 <__udivdi3+0x2a0>
11052fc8:	0007883a 	mov	r3,zero
11052fcc:	0005883a 	mov	r2,zero
11052fd0:	dfc00a17 	ldw	ra,40(sp)
11052fd4:	df000917 	ldw	fp,36(sp)
11052fd8:	ddc00817 	ldw	r23,32(sp)
11052fdc:	dd800717 	ldw	r22,28(sp)
11052fe0:	dd400617 	ldw	r21,24(sp)
11052fe4:	dd000517 	ldw	r20,20(sp)
11052fe8:	dcc00417 	ldw	r19,16(sp)
11052fec:	dc800317 	ldw	r18,12(sp)
11052ff0:	dc400217 	ldw	r17,8(sp)
11052ff4:	dc000117 	ldw	r16,4(sp)
11052ff8:	dec00b04 	addi	sp,sp,44
11052ffc:	f800283a 	ret
11053000:	00803fc4 	movi	r2,255
11053004:	11c5803a 	cmpltu	r2,r2,r7
11053008:	100490fa 	slli	r2,r2,3
1105300c:	003f9e06 	br	11052e88 <__udivdi3+0x158>
11053010:	00803fc4 	movi	r2,255
11053014:	1445803a 	cmpltu	r2,r2,r17
11053018:	100490fa 	slli	r2,r2,3
1105301c:	003fb206 	br	11052ee8 <__udivdi3+0x1b8>
11053020:	00804034 	movhi	r2,256
11053024:	10bfffc4 	addi	r2,r2,-1
11053028:	11808836 	bltu	r2,r6,1105324c <__udivdi3+0x51c>
1105302c:	00800404 	movi	r2,16
11053030:	003f5606 	br	11052d8c <__udivdi3+0x5c>
11053034:	30aed83a 	srl	r23,r6,r2
11053038:	3d4e983a 	sll	r7,r7,r21
1105303c:	80acd83a 	srl	r22,r16,r2
11053040:	9884d83a 	srl	r2,r19,r2
11053044:	3deeb03a 	or	r23,r7,r23
11053048:	b824d43a 	srli	r18,r23,16
1105304c:	8560983a 	sll	r16,r16,r21
11053050:	b009883a 	mov	r4,r22
11053054:	900b883a 	mov	r5,r18
11053058:	3568983a 	sll	r20,r6,r21
1105305c:	1420b03a 	or	r16,r2,r16
11053060:	10442d40 	call	110442d4 <__umodsi3>
11053064:	b009883a 	mov	r4,r22
11053068:	900b883a 	mov	r5,r18
1105306c:	1023883a 	mov	r17,r2
11053070:	10442700 	call	11044270 <__udivsi3>
11053074:	8808943a 	slli	r4,r17,16
11053078:	bf3fffcc 	andi	fp,r23,65535
1105307c:	8006d43a 	srli	r3,r16,16
11053080:	e0a3383a 	mul	r17,fp,r2
11053084:	100d883a 	mov	r6,r2
11053088:	1906b03a 	or	r3,r3,r4
1105308c:	1c40042e 	bgeu	r3,r17,110530a0 <__udivdi3+0x370>
11053090:	1dc7883a 	add	r3,r3,r23
11053094:	10bfffc4 	addi	r2,r2,-1
11053098:	1dc0752e 	bgeu	r3,r23,11053270 <__udivdi3+0x540>
1105309c:	100d883a 	mov	r6,r2
110530a0:	1c63c83a 	sub	r17,r3,r17
110530a4:	900b883a 	mov	r5,r18
110530a8:	8809883a 	mov	r4,r17
110530ac:	d9800015 	stw	r6,0(sp)
110530b0:	10442d40 	call	110442d4 <__umodsi3>
110530b4:	102d883a 	mov	r22,r2
110530b8:	8809883a 	mov	r4,r17
110530bc:	900b883a 	mov	r5,r18
110530c0:	10442700 	call	11044270 <__udivsi3>
110530c4:	b02c943a 	slli	r22,r22,16
110530c8:	e089383a 	mul	r4,fp,r2
110530cc:	843fffcc 	andi	r16,r16,65535
110530d0:	85a0b03a 	or	r16,r16,r22
110530d4:	d9800017 	ldw	r6,0(sp)
110530d8:	8100042e 	bgeu	r16,r4,110530ec <__udivdi3+0x3bc>
110530dc:	85e1883a 	add	r16,r16,r23
110530e0:	10ffffc4 	addi	r3,r2,-1
110530e4:	85c05e2e 	bgeu	r16,r23,11053260 <__udivdi3+0x530>
110530e8:	1805883a 	mov	r2,r3
110530ec:	300c943a 	slli	r6,r6,16
110530f0:	a17fffcc 	andi	r5,r20,65535
110530f4:	a028d43a 	srli	r20,r20,16
110530f8:	3084b03a 	or	r2,r6,r2
110530fc:	10ffffcc 	andi	r3,r2,65535
11053100:	100cd43a 	srli	r6,r2,16
11053104:	194f383a 	mul	r7,r3,r5
11053108:	1d07383a 	mul	r3,r3,r20
1105310c:	314b383a 	mul	r5,r6,r5
11053110:	3810d43a 	srli	r8,r7,16
11053114:	8121c83a 	sub	r16,r16,r4
11053118:	1947883a 	add	r3,r3,r5
1105311c:	40c7883a 	add	r3,r8,r3
11053120:	350d383a 	mul	r6,r6,r20
11053124:	1940022e 	bgeu	r3,r5,11053130 <__udivdi3+0x400>
11053128:	01000074 	movhi	r4,1
1105312c:	310d883a 	add	r6,r6,r4
11053130:	1828d43a 	srli	r20,r3,16
11053134:	a18d883a 	add	r6,r20,r6
11053138:	81803e36 	bltu	r16,r6,11053234 <__udivdi3+0x504>
1105313c:	81803826 	beq	r16,r6,11053220 <__udivdi3+0x4f0>
11053140:	0007883a 	mov	r3,zero
11053144:	003fa206 	br	11052fd0 <__udivdi3+0x2a0>
11053148:	88e2983a 	sll	r17,r17,r3
1105314c:	80a8d83a 	srl	r20,r16,r2
11053150:	80e0983a 	sll	r16,r16,r3
11053154:	882ad43a 	srli	r21,r17,16
11053158:	9884d83a 	srl	r2,r19,r2
1105315c:	a009883a 	mov	r4,r20
11053160:	a80b883a 	mov	r5,r21
11053164:	142eb03a 	or	r23,r2,r16
11053168:	98e4983a 	sll	r18,r19,r3
1105316c:	10442d40 	call	110442d4 <__umodsi3>
11053170:	a009883a 	mov	r4,r20
11053174:	a80b883a 	mov	r5,r21
11053178:	1021883a 	mov	r16,r2
1105317c:	10442700 	call	11044270 <__udivsi3>
11053180:	1039883a 	mov	fp,r2
11053184:	8d3fffcc 	andi	r20,r17,65535
11053188:	8020943a 	slli	r16,r16,16
1105318c:	b804d43a 	srli	r2,r23,16
11053190:	a72d383a 	mul	r22,r20,fp
11053194:	1404b03a 	or	r2,r2,r16
11053198:	1580062e 	bgeu	r2,r22,110531b4 <__udivdi3+0x484>
1105319c:	1445883a 	add	r2,r2,r17
110531a0:	e0ffffc4 	addi	r3,fp,-1
110531a4:	14403836 	bltu	r2,r17,11053288 <__udivdi3+0x558>
110531a8:	1580372e 	bgeu	r2,r22,11053288 <__udivdi3+0x558>
110531ac:	e73fff84 	addi	fp,fp,-2
110531b0:	1445883a 	add	r2,r2,r17
110531b4:	15adc83a 	sub	r22,r2,r22
110531b8:	a80b883a 	mov	r5,r21
110531bc:	b009883a 	mov	r4,r22
110531c0:	10442d40 	call	110442d4 <__umodsi3>
110531c4:	1027883a 	mov	r19,r2
110531c8:	b009883a 	mov	r4,r22
110531cc:	a80b883a 	mov	r5,r21
110531d0:	10442700 	call	11044270 <__udivsi3>
110531d4:	9826943a 	slli	r19,r19,16
110531d8:	a0a1383a 	mul	r16,r20,r2
110531dc:	b93fffcc 	andi	r4,r23,65535
110531e0:	24c8b03a 	or	r4,r4,r19
110531e4:	2400062e 	bgeu	r4,r16,11053200 <__udivdi3+0x4d0>
110531e8:	2449883a 	add	r4,r4,r17
110531ec:	10ffffc4 	addi	r3,r2,-1
110531f0:	24402336 	bltu	r4,r17,11053280 <__udivdi3+0x550>
110531f4:	2400222e 	bgeu	r4,r16,11053280 <__udivdi3+0x550>
110531f8:	10bfff84 	addi	r2,r2,-2
110531fc:	2449883a 	add	r4,r4,r17
11053200:	e038943a 	slli	fp,fp,16
11053204:	2421c83a 	sub	r16,r4,r16
11053208:	e086b03a 	or	r3,fp,r2
1105320c:	003f4306 	br	11052f1c <__udivdi3+0x1ec>
11053210:	2005883a 	mov	r2,r4
11053214:	003f6906 	br	11052fbc <__udivdi3+0x28c>
11053218:	1805883a 	mov	r2,r3
1105321c:	003f0f06 	br	11052e5c <__udivdi3+0x12c>
11053220:	1806943a 	slli	r3,r3,16
11053224:	9d66983a 	sll	r19,r19,r21
11053228:	39ffffcc 	andi	r7,r7,65535
1105322c:	19c7883a 	add	r3,r3,r7
11053230:	98ffc32e 	bgeu	r19,r3,11053140 <__udivdi3+0x410>
11053234:	10bfffc4 	addi	r2,r2,-1
11053238:	003fc106 	br	11053140 <__udivdi3+0x410>
1105323c:	00800604 	movi	r2,24
11053240:	003f1106 	br	11052e88 <__udivdi3+0x158>
11053244:	00800604 	movi	r2,24
11053248:	003f2706 	br	11052ee8 <__udivdi3+0x1b8>
1105324c:	00800604 	movi	r2,24
11053250:	003ece06 	br	11052d8c <__udivdi3+0x5c>
11053254:	0007883a 	mov	r3,zero
11053258:	00800044 	movi	r2,1
1105325c:	003f5c06 	br	11052fd0 <__udivdi3+0x2a0>
11053260:	813fa12e 	bgeu	r16,r4,110530e8 <__udivdi3+0x3b8>
11053264:	10bfff84 	addi	r2,r2,-2
11053268:	85e1883a 	add	r16,r16,r23
1105326c:	003f9f06 	br	110530ec <__udivdi3+0x3bc>
11053270:	1c7f8a2e 	bgeu	r3,r17,1105309c <__udivdi3+0x36c>
11053274:	31bfff84 	addi	r6,r6,-2
11053278:	1dc7883a 	add	r3,r3,r23
1105327c:	003f8806 	br	110530a0 <__udivdi3+0x370>
11053280:	1805883a 	mov	r2,r3
11053284:	003fde06 	br	11053200 <__udivdi3+0x4d0>
11053288:	1839883a 	mov	fp,r3
1105328c:	003fc906 	br	110531b4 <__udivdi3+0x484>
11053290:	b5bfff84 	addi	r22,r22,-2
11053294:	2449883a 	add	r4,r4,r17
11053298:	003f3406 	br	11052f6c <__udivdi3+0x23c>
1105329c:	b5bfff84 	addi	r22,r22,-2
110532a0:	1445883a 	add	r2,r2,r17
110532a4:	003edb06 	br	11052e14 <__udivdi3+0xe4>

110532a8 <__umoddi3>:
110532a8:	defff404 	addi	sp,sp,-48
110532ac:	df000a15 	stw	fp,40(sp)
110532b0:	dc400315 	stw	r17,12(sp)
110532b4:	dc000215 	stw	r16,8(sp)
110532b8:	dfc00b15 	stw	ra,44(sp)
110532bc:	ddc00915 	stw	r23,36(sp)
110532c0:	dd800815 	stw	r22,32(sp)
110532c4:	dd400715 	stw	r21,28(sp)
110532c8:	dd000615 	stw	r20,24(sp)
110532cc:	dcc00515 	stw	r19,20(sp)
110532d0:	dc800415 	stw	r18,16(sp)
110532d4:	2021883a 	mov	r16,r4
110532d8:	2823883a 	mov	r17,r5
110532dc:	2839883a 	mov	fp,r5
110532e0:	38003c1e 	bne	r7,zero,110533d4 <__umoddi3+0x12c>
110532e4:	3027883a 	mov	r19,r6
110532e8:	2029883a 	mov	r20,r4
110532ec:	2980512e 	bgeu	r5,r6,11053434 <__umoddi3+0x18c>
110532f0:	00bfffd4 	movui	r2,65535
110532f4:	11809a36 	bltu	r2,r6,11053560 <__umoddi3+0x2b8>
110532f8:	01003fc4 	movi	r4,255
110532fc:	2189803a 	cmpltu	r4,r4,r6
11053300:	200890fa 	slli	r4,r4,3
11053304:	3104d83a 	srl	r2,r6,r4
11053308:	00c44174 	movhi	r3,4357
1105330c:	18dbdd04 	addi	r3,r3,28532
11053310:	1885883a 	add	r2,r3,r2
11053314:	10c00003 	ldbu	r3,0(r2)
11053318:	00800804 	movi	r2,32
1105331c:	1909883a 	add	r4,r3,r4
11053320:	1125c83a 	sub	r18,r2,r4
11053324:	90000526 	beq	r18,zero,1105333c <__umoddi3+0x94>
11053328:	8ca2983a 	sll	r17,r17,r18
1105332c:	8108d83a 	srl	r4,r16,r4
11053330:	34a6983a 	sll	r19,r6,r18
11053334:	84a8983a 	sll	r20,r16,r18
11053338:	2478b03a 	or	fp,r4,r17
1105333c:	982ed43a 	srli	r23,r19,16
11053340:	e009883a 	mov	r4,fp
11053344:	9dbfffcc 	andi	r22,r19,65535
11053348:	b80b883a 	mov	r5,r23
1105334c:	10442d40 	call	110442d4 <__umodsi3>
11053350:	e009883a 	mov	r4,fp
11053354:	b80b883a 	mov	r5,r23
11053358:	102b883a 	mov	r21,r2
1105335c:	10442700 	call	11044270 <__udivsi3>
11053360:	a806943a 	slli	r3,r21,16
11053364:	a008d43a 	srli	r4,r20,16
11053368:	b085383a 	mul	r2,r22,r2
1105336c:	20c8b03a 	or	r4,r4,r3
11053370:	2080032e 	bgeu	r4,r2,11053380 <__umoddi3+0xd8>
11053374:	24c9883a 	add	r4,r4,r19
11053378:	24c00136 	bltu	r4,r19,11053380 <__umoddi3+0xd8>
1105337c:	20811036 	bltu	r4,r2,110537c0 <__umoddi3+0x518>
11053380:	20abc83a 	sub	r21,r4,r2
11053384:	b80b883a 	mov	r5,r23
11053388:	a809883a 	mov	r4,r21
1105338c:	10442d40 	call	110442d4 <__umodsi3>
11053390:	1023883a 	mov	r17,r2
11053394:	b80b883a 	mov	r5,r23
11053398:	a809883a 	mov	r4,r21
1105339c:	10442700 	call	11044270 <__udivsi3>
110533a0:	8822943a 	slli	r17,r17,16
110533a4:	b085383a 	mul	r2,r22,r2
110533a8:	a0ffffcc 	andi	r3,r20,65535
110533ac:	1c46b03a 	or	r3,r3,r17
110533b0:	1880042e 	bgeu	r3,r2,110533c4 <__umoddi3+0x11c>
110533b4:	1cc7883a 	add	r3,r3,r19
110533b8:	1cc00236 	bltu	r3,r19,110533c4 <__umoddi3+0x11c>
110533bc:	1880012e 	bgeu	r3,r2,110533c4 <__umoddi3+0x11c>
110533c0:	1cc7883a 	add	r3,r3,r19
110533c4:	1885c83a 	sub	r2,r3,r2
110533c8:	1484d83a 	srl	r2,r2,r18
110533cc:	0007883a 	mov	r3,zero
110533d0:	00004f06 	br	11053510 <__umoddi3+0x268>
110533d4:	29c04c36 	bltu	r5,r7,11053508 <__umoddi3+0x260>
110533d8:	00bfffd4 	movui	r2,65535
110533dc:	11c0582e 	bgeu	r2,r7,11053540 <__umoddi3+0x298>
110533e0:	00804034 	movhi	r2,256
110533e4:	10bfffc4 	addi	r2,r2,-1
110533e8:	11c0e736 	bltu	r2,r7,11053788 <__umoddi3+0x4e0>
110533ec:	01000404 	movi	r4,16
110533f0:	3904d83a 	srl	r2,r7,r4
110533f4:	00c44174 	movhi	r3,4357
110533f8:	18dbdd04 	addi	r3,r3,28532
110533fc:	1885883a 	add	r2,r3,r2
11053400:	14c00003 	ldbu	r19,0(r2)
11053404:	00c00804 	movi	r3,32
11053408:	9927883a 	add	r19,r19,r4
1105340c:	1ce9c83a 	sub	r20,r3,r19
11053410:	a000581e 	bne	r20,zero,11053574 <__umoddi3+0x2cc>
11053414:	3c400136 	bltu	r7,r17,1105341c <__umoddi3+0x174>
11053418:	8180eb36 	bltu	r16,r6,110537c8 <__umoddi3+0x520>
1105341c:	8185c83a 	sub	r2,r16,r6
11053420:	89e3c83a 	sub	r17,r17,r7
11053424:	8089803a 	cmpltu	r4,r16,r2
11053428:	8939c83a 	sub	fp,r17,r4
1105342c:	e007883a 	mov	r3,fp
11053430:	00003706 	br	11053510 <__umoddi3+0x268>
11053434:	3000041e 	bne	r6,zero,11053448 <__umoddi3+0x1a0>
11053438:	000b883a 	mov	r5,zero
1105343c:	01000044 	movi	r4,1
11053440:	10442700 	call	11044270 <__udivsi3>
11053444:	1027883a 	mov	r19,r2
11053448:	00bfffd4 	movui	r2,65535
1105344c:	14c0402e 	bgeu	r2,r19,11053550 <__umoddi3+0x2a8>
11053450:	00804034 	movhi	r2,256
11053454:	10bfffc4 	addi	r2,r2,-1
11053458:	14c0cd36 	bltu	r2,r19,11053790 <__umoddi3+0x4e8>
1105345c:	00800404 	movi	r2,16
11053460:	9886d83a 	srl	r3,r19,r2
11053464:	01044174 	movhi	r4,4357
11053468:	211bdd04 	addi	r4,r4,28532
1105346c:	20c7883a 	add	r3,r4,r3
11053470:	18c00003 	ldbu	r3,0(r3)
11053474:	1887883a 	add	r3,r3,r2
11053478:	00800804 	movi	r2,32
1105347c:	10e5c83a 	sub	r18,r2,r3
11053480:	9000901e 	bne	r18,zero,110536c4 <__umoddi3+0x41c>
11053484:	982cd43a 	srli	r22,r19,16
11053488:	8ce3c83a 	sub	r17,r17,r19
1105348c:	9d7fffcc 	andi	r21,r19,65535
11053490:	b00b883a 	mov	r5,r22
11053494:	8809883a 	mov	r4,r17
11053498:	10442d40 	call	110442d4 <__umodsi3>
1105349c:	8809883a 	mov	r4,r17
110534a0:	b00b883a 	mov	r5,r22
110534a4:	1021883a 	mov	r16,r2
110534a8:	10442700 	call	11044270 <__udivsi3>
110534ac:	8006943a 	slli	r3,r16,16
110534b0:	a008d43a 	srli	r4,r20,16
110534b4:	1545383a 	mul	r2,r2,r21
110534b8:	20c8b03a 	or	r4,r4,r3
110534bc:	2080042e 	bgeu	r4,r2,110534d0 <__umoddi3+0x228>
110534c0:	24c9883a 	add	r4,r4,r19
110534c4:	24c00236 	bltu	r4,r19,110534d0 <__umoddi3+0x228>
110534c8:	2080012e 	bgeu	r4,r2,110534d0 <__umoddi3+0x228>
110534cc:	24c9883a 	add	r4,r4,r19
110534d0:	20a1c83a 	sub	r16,r4,r2
110534d4:	b00b883a 	mov	r5,r22
110534d8:	8009883a 	mov	r4,r16
110534dc:	10442d40 	call	110442d4 <__umodsi3>
110534e0:	1023883a 	mov	r17,r2
110534e4:	b00b883a 	mov	r5,r22
110534e8:	8009883a 	mov	r4,r16
110534ec:	10442700 	call	11044270 <__udivsi3>
110534f0:	8822943a 	slli	r17,r17,16
110534f4:	1545383a 	mul	r2,r2,r21
110534f8:	a53fffcc 	andi	r20,r20,65535
110534fc:	a446b03a 	or	r3,r20,r17
11053500:	18bfb02e 	bgeu	r3,r2,110533c4 <__umoddi3+0x11c>
11053504:	003fab06 	br	110533b4 <__umoddi3+0x10c>
11053508:	2005883a 	mov	r2,r4
1105350c:	2807883a 	mov	r3,r5
11053510:	dfc00b17 	ldw	ra,44(sp)
11053514:	df000a17 	ldw	fp,40(sp)
11053518:	ddc00917 	ldw	r23,36(sp)
1105351c:	dd800817 	ldw	r22,32(sp)
11053520:	dd400717 	ldw	r21,28(sp)
11053524:	dd000617 	ldw	r20,24(sp)
11053528:	dcc00517 	ldw	r19,20(sp)
1105352c:	dc800417 	ldw	r18,16(sp)
11053530:	dc400317 	ldw	r17,12(sp)
11053534:	dc000217 	ldw	r16,8(sp)
11053538:	dec00c04 	addi	sp,sp,48
1105353c:	f800283a 	ret
11053540:	04c03fc4 	movi	r19,255
11053544:	99c9803a 	cmpltu	r4,r19,r7
11053548:	200890fa 	slli	r4,r4,3
1105354c:	003fa806 	br	110533f0 <__umoddi3+0x148>
11053550:	00803fc4 	movi	r2,255
11053554:	14c5803a 	cmpltu	r2,r2,r19
11053558:	100490fa 	slli	r2,r2,3
1105355c:	003fc006 	br	11053460 <__umoddi3+0x1b8>
11053560:	00804034 	movhi	r2,256
11053564:	10bfffc4 	addi	r2,r2,-1
11053568:	11808b36 	bltu	r2,r6,11053798 <__umoddi3+0x4f0>
1105356c:	01000404 	movi	r4,16
11053570:	003f6406 	br	11053304 <__umoddi3+0x5c>
11053574:	34c4d83a 	srl	r2,r6,r19
11053578:	3d0e983a 	sll	r7,r7,r20
1105357c:	8cf8d83a 	srl	fp,r17,r19
11053580:	8d10983a 	sll	r8,r17,r20
11053584:	38aab03a 	or	r21,r7,r2
11053588:	a82cd43a 	srli	r22,r21,16
1105358c:	84e2d83a 	srl	r17,r16,r19
11053590:	e009883a 	mov	r4,fp
11053594:	b00b883a 	mov	r5,r22
11053598:	8a22b03a 	or	r17,r17,r8
1105359c:	3524983a 	sll	r18,r6,r20
110535a0:	10442d40 	call	110442d4 <__umodsi3>
110535a4:	e009883a 	mov	r4,fp
110535a8:	b00b883a 	mov	r5,r22
110535ac:	102f883a 	mov	r23,r2
110535b0:	10442700 	call	11044270 <__udivsi3>
110535b4:	100d883a 	mov	r6,r2
110535b8:	b808943a 	slli	r4,r23,16
110535bc:	aa3fffcc 	andi	r8,r21,65535
110535c0:	8804d43a 	srli	r2,r17,16
110535c4:	41af383a 	mul	r23,r8,r6
110535c8:	8520983a 	sll	r16,r16,r20
110535cc:	1104b03a 	or	r2,r2,r4
110535d0:	15c0042e 	bgeu	r2,r23,110535e4 <__umoddi3+0x33c>
110535d4:	1545883a 	add	r2,r2,r21
110535d8:	30ffffc4 	addi	r3,r6,-1
110535dc:	1540742e 	bgeu	r2,r21,110537b0 <__umoddi3+0x508>
110535e0:	180d883a 	mov	r6,r3
110535e4:	15efc83a 	sub	r23,r2,r23
110535e8:	b00b883a 	mov	r5,r22
110535ec:	b809883a 	mov	r4,r23
110535f0:	d9800115 	stw	r6,4(sp)
110535f4:	da000015 	stw	r8,0(sp)
110535f8:	10442d40 	call	110442d4 <__umodsi3>
110535fc:	b00b883a 	mov	r5,r22
11053600:	b809883a 	mov	r4,r23
11053604:	1039883a 	mov	fp,r2
11053608:	10442700 	call	11044270 <__udivsi3>
1105360c:	da000017 	ldw	r8,0(sp)
11053610:	e038943a 	slli	fp,fp,16
11053614:	100b883a 	mov	r5,r2
11053618:	4089383a 	mul	r4,r8,r2
1105361c:	8a3fffcc 	andi	r8,r17,65535
11053620:	4710b03a 	or	r8,r8,fp
11053624:	d9800117 	ldw	r6,4(sp)
11053628:	4100042e 	bgeu	r8,r4,1105363c <__umoddi3+0x394>
1105362c:	4551883a 	add	r8,r8,r21
11053630:	10bfffc4 	addi	r2,r2,-1
11053634:	45405a2e 	bgeu	r8,r21,110537a0 <__umoddi3+0x4f8>
11053638:	100b883a 	mov	r5,r2
1105363c:	300c943a 	slli	r6,r6,16
11053640:	91ffffcc 	andi	r7,r18,65535
11053644:	9004d43a 	srli	r2,r18,16
11053648:	314cb03a 	or	r6,r6,r5
1105364c:	317fffcc 	andi	r5,r6,65535
11053650:	300cd43a 	srli	r6,r6,16
11053654:	29d3383a 	mul	r9,r5,r7
11053658:	288b383a 	mul	r5,r5,r2
1105365c:	31cf383a 	mul	r7,r6,r7
11053660:	4806d43a 	srli	r3,r9,16
11053664:	4111c83a 	sub	r8,r8,r4
11053668:	29cb883a 	add	r5,r5,r7
1105366c:	194b883a 	add	r5,r3,r5
11053670:	3085383a 	mul	r2,r6,r2
11053674:	29c0022e 	bgeu	r5,r7,11053680 <__umoddi3+0x3d8>
11053678:	00c00074 	movhi	r3,1
1105367c:	10c5883a 	add	r2,r2,r3
11053680:	2808d43a 	srli	r4,r5,16
11053684:	280a943a 	slli	r5,r5,16
11053688:	4a7fffcc 	andi	r9,r9,65535
1105368c:	2085883a 	add	r2,r4,r2
11053690:	2a4b883a 	add	r5,r5,r9
11053694:	40803636 	bltu	r8,r2,11053770 <__umoddi3+0x4c8>
11053698:	40804d26 	beq	r8,r2,110537d0 <__umoddi3+0x528>
1105369c:	4089c83a 	sub	r4,r8,r2
110536a0:	280f883a 	mov	r7,r5
110536a4:	81cfc83a 	sub	r7,r16,r7
110536a8:	81c7803a 	cmpltu	r3,r16,r7
110536ac:	20c7c83a 	sub	r3,r4,r3
110536b0:	1cc4983a 	sll	r2,r3,r19
110536b4:	3d0ed83a 	srl	r7,r7,r20
110536b8:	1d06d83a 	srl	r3,r3,r20
110536bc:	11c4b03a 	or	r2,r2,r7
110536c0:	003f9306 	br	11053510 <__umoddi3+0x268>
110536c4:	9ca6983a 	sll	r19,r19,r18
110536c8:	88e8d83a 	srl	r20,r17,r3
110536cc:	80c4d83a 	srl	r2,r16,r3
110536d0:	982cd43a 	srli	r22,r19,16
110536d4:	8ca2983a 	sll	r17,r17,r18
110536d8:	a009883a 	mov	r4,r20
110536dc:	b00b883a 	mov	r5,r22
110536e0:	1478b03a 	or	fp,r2,r17
110536e4:	10442d40 	call	110442d4 <__umodsi3>
110536e8:	a009883a 	mov	r4,r20
110536ec:	b00b883a 	mov	r5,r22
110536f0:	1023883a 	mov	r17,r2
110536f4:	10442700 	call	11044270 <__udivsi3>
110536f8:	9d7fffcc 	andi	r21,r19,65535
110536fc:	880a943a 	slli	r5,r17,16
11053700:	e008d43a 	srli	r4,fp,16
11053704:	a885383a 	mul	r2,r21,r2
11053708:	84a8983a 	sll	r20,r16,r18
1105370c:	2148b03a 	or	r4,r4,r5
11053710:	2080042e 	bgeu	r4,r2,11053724 <__umoddi3+0x47c>
11053714:	24c9883a 	add	r4,r4,r19
11053718:	24c00236 	bltu	r4,r19,11053724 <__umoddi3+0x47c>
1105371c:	2080012e 	bgeu	r4,r2,11053724 <__umoddi3+0x47c>
11053720:	24c9883a 	add	r4,r4,r19
11053724:	20a3c83a 	sub	r17,r4,r2
11053728:	b00b883a 	mov	r5,r22
1105372c:	8809883a 	mov	r4,r17
11053730:	10442d40 	call	110442d4 <__umodsi3>
11053734:	102f883a 	mov	r23,r2
11053738:	8809883a 	mov	r4,r17
1105373c:	b00b883a 	mov	r5,r22
11053740:	10442700 	call	11044270 <__udivsi3>
11053744:	b82e943a 	slli	r23,r23,16
11053748:	a885383a 	mul	r2,r21,r2
1105374c:	e13fffcc 	andi	r4,fp,65535
11053750:	25c8b03a 	or	r4,r4,r23
11053754:	2080042e 	bgeu	r4,r2,11053768 <__umoddi3+0x4c0>
11053758:	24c9883a 	add	r4,r4,r19
1105375c:	24c00236 	bltu	r4,r19,11053768 <__umoddi3+0x4c0>
11053760:	2080012e 	bgeu	r4,r2,11053768 <__umoddi3+0x4c0>
11053764:	24c9883a 	add	r4,r4,r19
11053768:	20a3c83a 	sub	r17,r4,r2
1105376c:	003f4806 	br	11053490 <__umoddi3+0x1e8>
11053770:	2c8fc83a 	sub	r7,r5,r18
11053774:	1545c83a 	sub	r2,r2,r21
11053778:	29cb803a 	cmpltu	r5,r5,r7
1105377c:	1145c83a 	sub	r2,r2,r5
11053780:	4089c83a 	sub	r4,r8,r2
11053784:	003fc706 	br	110536a4 <__umoddi3+0x3fc>
11053788:	01000604 	movi	r4,24
1105378c:	003f1806 	br	110533f0 <__umoddi3+0x148>
11053790:	00800604 	movi	r2,24
11053794:	003f3206 	br	11053460 <__umoddi3+0x1b8>
11053798:	01000604 	movi	r4,24
1105379c:	003ed906 	br	11053304 <__umoddi3+0x5c>
110537a0:	413fa52e 	bgeu	r8,r4,11053638 <__umoddi3+0x390>
110537a4:	297fff84 	addi	r5,r5,-2
110537a8:	4551883a 	add	r8,r8,r21
110537ac:	003fa306 	br	1105363c <__umoddi3+0x394>
110537b0:	15ff8b2e 	bgeu	r2,r23,110535e0 <__umoddi3+0x338>
110537b4:	31bfff84 	addi	r6,r6,-2
110537b8:	1545883a 	add	r2,r2,r21
110537bc:	003f8906 	br	110535e4 <__umoddi3+0x33c>
110537c0:	24c9883a 	add	r4,r4,r19
110537c4:	003eee06 	br	11053380 <__umoddi3+0xd8>
110537c8:	8005883a 	mov	r2,r16
110537cc:	003f1706 	br	1105342c <__umoddi3+0x184>
110537d0:	817fe736 	bltu	r16,r5,11053770 <__umoddi3+0x4c8>
110537d4:	280f883a 	mov	r7,r5
110537d8:	0009883a 	mov	r4,zero
110537dc:	003fb106 	br	110536a4 <__umoddi3+0x3fc>

110537e0 <__divdf3>:
110537e0:	defff204 	addi	sp,sp,-56
110537e4:	dd400915 	stw	r21,36(sp)
110537e8:	282ad53a 	srli	r21,r5,20
110537ec:	dd000815 	stw	r20,32(sp)
110537f0:	2828d7fa 	srli	r20,r5,31
110537f4:	dc000415 	stw	r16,16(sp)
110537f8:	04000434 	movhi	r16,16
110537fc:	df000c15 	stw	fp,48(sp)
11053800:	843fffc4 	addi	r16,r16,-1
11053804:	dfc00d15 	stw	ra,52(sp)
11053808:	ddc00b15 	stw	r23,44(sp)
1105380c:	dd800a15 	stw	r22,40(sp)
11053810:	dcc00715 	stw	r19,28(sp)
11053814:	dc800615 	stw	r18,24(sp)
11053818:	dc400515 	stw	r17,20(sp)
1105381c:	ad41ffcc 	andi	r21,r21,2047
11053820:	2c20703a 	and	r16,r5,r16
11053824:	a7003fcc 	andi	fp,r20,255
11053828:	a8006126 	beq	r21,zero,110539b0 <__divdf3+0x1d0>
1105382c:	0081ffc4 	movi	r2,2047
11053830:	2025883a 	mov	r18,r4
11053834:	a8803726 	beq	r21,r2,11053914 <__divdf3+0x134>
11053838:	80800434 	orhi	r2,r16,16
1105383c:	100490fa 	slli	r2,r2,3
11053840:	2020d77a 	srli	r16,r4,29
11053844:	202490fa 	slli	r18,r4,3
11053848:	ad7f0044 	addi	r21,r21,-1023
1105384c:	80a0b03a 	or	r16,r16,r2
11053850:	0027883a 	mov	r19,zero
11053854:	0013883a 	mov	r9,zero
11053858:	3804d53a 	srli	r2,r7,20
1105385c:	382cd7fa 	srli	r22,r7,31
11053860:	04400434 	movhi	r17,16
11053864:	8c7fffc4 	addi	r17,r17,-1
11053868:	1081ffcc 	andi	r2,r2,2047
1105386c:	3011883a 	mov	r8,r6
11053870:	3c62703a 	and	r17,r7,r17
11053874:	b5c03fcc 	andi	r23,r22,255
11053878:	10006c26 	beq	r2,zero,11053a2c <__divdf3+0x24c>
1105387c:	00c1ffc4 	movi	r3,2047
11053880:	10c06426 	beq	r2,r3,11053a14 <__divdf3+0x234>
11053884:	88c00434 	orhi	r3,r17,16
11053888:	180690fa 	slli	r3,r3,3
1105388c:	3022d77a 	srli	r17,r6,29
11053890:	301090fa 	slli	r8,r6,3
11053894:	10bf0044 	addi	r2,r2,-1023
11053898:	88e2b03a 	or	r17,r17,r3
1105389c:	000f883a 	mov	r7,zero
110538a0:	a58cf03a 	xor	r6,r20,r22
110538a4:	3cc8b03a 	or	r4,r7,r19
110538a8:	a8abc83a 	sub	r21,r21,r2
110538ac:	008003c4 	movi	r2,15
110538b0:	3007883a 	mov	r3,r6
110538b4:	34c03fcc 	andi	r19,r6,255
110538b8:	11009036 	bltu	r2,r4,11053afc <__divdf3+0x31c>
110538bc:	200890ba 	slli	r4,r4,2
110538c0:	00844174 	movhi	r2,4357
110538c4:	108e3504 	addi	r2,r2,14548
110538c8:	2089883a 	add	r4,r4,r2
110538cc:	20800017 	ldw	r2,0(r4)
110538d0:	1000683a 	jmp	r2
110538d4:	11053afc 	xorhi	r4,r2,5355
110538d8:	1105394c 	andi	r4,r2,5349
110538dc:	11053aec 	andhi	r4,r2,5355
110538e0:	11053940 	call	11105394 <__alt_data_end+0x85394>
110538e4:	11053aec 	andhi	r4,r2,5355
110538e8:	11053ac0 	call	111053ac <__alt_data_end+0x853ac>
110538ec:	11053aec 	andhi	r4,r2,5355
110538f0:	11053940 	call	11105394 <__alt_data_end+0x85394>
110538f4:	1105394c 	andi	r4,r2,5349
110538f8:	1105394c 	andi	r4,r2,5349
110538fc:	11053ac0 	call	111053ac <__alt_data_end+0x853ac>
11053900:	11053940 	call	11105394 <__alt_data_end+0x85394>
11053904:	11053930 	cmpltui	r4,r2,5348
11053908:	11053930 	cmpltui	r4,r2,5348
1105390c:	11053930 	cmpltui	r4,r2,5348
11053910:	11053de0 	cmpeqi	r4,r2,5367
11053914:	2404b03a 	or	r2,r4,r16
11053918:	1000661e 	bne	r2,zero,11053ab4 <__divdf3+0x2d4>
1105391c:	04c00204 	movi	r19,8
11053920:	0021883a 	mov	r16,zero
11053924:	0025883a 	mov	r18,zero
11053928:	02400084 	movi	r9,2
1105392c:	003fca06 	br	11053858 <__divdf3+0x78>
11053930:	8023883a 	mov	r17,r16
11053934:	9011883a 	mov	r8,r18
11053938:	e02f883a 	mov	r23,fp
1105393c:	480f883a 	mov	r7,r9
11053940:	00800084 	movi	r2,2
11053944:	3881311e 	bne	r7,r2,11053e0c <__divdf3+0x62c>
11053948:	b827883a 	mov	r19,r23
1105394c:	98c0004c 	andi	r3,r19,1
11053950:	0081ffc4 	movi	r2,2047
11053954:	000b883a 	mov	r5,zero
11053958:	0025883a 	mov	r18,zero
1105395c:	1004953a 	slli	r2,r2,20
11053960:	18c03fcc 	andi	r3,r3,255
11053964:	04400434 	movhi	r17,16
11053968:	8c7fffc4 	addi	r17,r17,-1
1105396c:	180697fa 	slli	r3,r3,31
11053970:	2c4a703a 	and	r5,r5,r17
11053974:	288ab03a 	or	r5,r5,r2
11053978:	28c6b03a 	or	r3,r5,r3
1105397c:	9005883a 	mov	r2,r18
11053980:	dfc00d17 	ldw	ra,52(sp)
11053984:	df000c17 	ldw	fp,48(sp)
11053988:	ddc00b17 	ldw	r23,44(sp)
1105398c:	dd800a17 	ldw	r22,40(sp)
11053990:	dd400917 	ldw	r21,36(sp)
11053994:	dd000817 	ldw	r20,32(sp)
11053998:	dcc00717 	ldw	r19,28(sp)
1105399c:	dc800617 	ldw	r18,24(sp)
110539a0:	dc400517 	ldw	r17,20(sp)
110539a4:	dc000417 	ldw	r16,16(sp)
110539a8:	dec00e04 	addi	sp,sp,56
110539ac:	f800283a 	ret
110539b0:	2404b03a 	or	r2,r4,r16
110539b4:	2027883a 	mov	r19,r4
110539b8:	10003926 	beq	r2,zero,11053aa0 <__divdf3+0x2c0>
110539bc:	80012e26 	beq	r16,zero,11053e78 <__divdf3+0x698>
110539c0:	8009883a 	mov	r4,r16
110539c4:	d9800315 	stw	r6,12(sp)
110539c8:	d9c00215 	stw	r7,8(sp)
110539cc:	1045eac0 	call	11045eac <__clzsi2>
110539d0:	d9800317 	ldw	r6,12(sp)
110539d4:	d9c00217 	ldw	r7,8(sp)
110539d8:	113ffd44 	addi	r4,r2,-11
110539dc:	00c00704 	movi	r3,28
110539e0:	19012116 	blt	r3,r4,11053e68 <__divdf3+0x688>
110539e4:	00c00744 	movi	r3,29
110539e8:	147ffe04 	addi	r17,r2,-8
110539ec:	1907c83a 	sub	r3,r3,r4
110539f0:	8460983a 	sll	r16,r16,r17
110539f4:	98c6d83a 	srl	r3,r19,r3
110539f8:	9c64983a 	sll	r18,r19,r17
110539fc:	1c20b03a 	or	r16,r3,r16
11053a00:	1080fcc4 	addi	r2,r2,1011
11053a04:	00abc83a 	sub	r21,zero,r2
11053a08:	0027883a 	mov	r19,zero
11053a0c:	0013883a 	mov	r9,zero
11053a10:	003f9106 	br	11053858 <__divdf3+0x78>
11053a14:	3446b03a 	or	r3,r6,r17
11053a18:	18001f1e 	bne	r3,zero,11053a98 <__divdf3+0x2b8>
11053a1c:	0023883a 	mov	r17,zero
11053a20:	0011883a 	mov	r8,zero
11053a24:	01c00084 	movi	r7,2
11053a28:	003f9d06 	br	110538a0 <__divdf3+0xc0>
11053a2c:	3446b03a 	or	r3,r6,r17
11053a30:	18001526 	beq	r3,zero,11053a88 <__divdf3+0x2a8>
11053a34:	88011b26 	beq	r17,zero,11053ea4 <__divdf3+0x6c4>
11053a38:	8809883a 	mov	r4,r17
11053a3c:	d9800315 	stw	r6,12(sp)
11053a40:	da400115 	stw	r9,4(sp)
11053a44:	1045eac0 	call	11045eac <__clzsi2>
11053a48:	d9800317 	ldw	r6,12(sp)
11053a4c:	da400117 	ldw	r9,4(sp)
11053a50:	113ffd44 	addi	r4,r2,-11
11053a54:	00c00704 	movi	r3,28
11053a58:	19010e16 	blt	r3,r4,11053e94 <__divdf3+0x6b4>
11053a5c:	00c00744 	movi	r3,29
11053a60:	123ffe04 	addi	r8,r2,-8
11053a64:	1907c83a 	sub	r3,r3,r4
11053a68:	8a22983a 	sll	r17,r17,r8
11053a6c:	30c6d83a 	srl	r3,r6,r3
11053a70:	3210983a 	sll	r8,r6,r8
11053a74:	1c62b03a 	or	r17,r3,r17
11053a78:	1080fcc4 	addi	r2,r2,1011
11053a7c:	0085c83a 	sub	r2,zero,r2
11053a80:	000f883a 	mov	r7,zero
11053a84:	003f8606 	br	110538a0 <__divdf3+0xc0>
11053a88:	0023883a 	mov	r17,zero
11053a8c:	0011883a 	mov	r8,zero
11053a90:	01c00044 	movi	r7,1
11053a94:	003f8206 	br	110538a0 <__divdf3+0xc0>
11053a98:	01c000c4 	movi	r7,3
11053a9c:	003f8006 	br	110538a0 <__divdf3+0xc0>
11053aa0:	04c00104 	movi	r19,4
11053aa4:	0021883a 	mov	r16,zero
11053aa8:	0025883a 	mov	r18,zero
11053aac:	02400044 	movi	r9,1
11053ab0:	003f6906 	br	11053858 <__divdf3+0x78>
11053ab4:	04c00304 	movi	r19,12
11053ab8:	024000c4 	movi	r9,3
11053abc:	003f6606 	br	11053858 <__divdf3+0x78>
11053ac0:	01400434 	movhi	r5,16
11053ac4:	0007883a 	mov	r3,zero
11053ac8:	297fffc4 	addi	r5,r5,-1
11053acc:	04bfffc4 	movi	r18,-1
11053ad0:	0081ffc4 	movi	r2,2047
11053ad4:	003fa106 	br	1105395c <__divdf3+0x17c>
11053ad8:	00c00044 	movi	r3,1
11053adc:	1887c83a 	sub	r3,r3,r2
11053ae0:	01000e04 	movi	r4,56
11053ae4:	20c1210e 	bge	r4,r3,11053f6c <__divdf3+0x78c>
11053ae8:	98c0004c 	andi	r3,r19,1
11053aec:	0005883a 	mov	r2,zero
11053af0:	000b883a 	mov	r5,zero
11053af4:	0025883a 	mov	r18,zero
11053af8:	003f9806 	br	1105395c <__divdf3+0x17c>
11053afc:	8c00fd36 	bltu	r17,r16,11053ef4 <__divdf3+0x714>
11053b00:	8440fb26 	beq	r16,r17,11053ef0 <__divdf3+0x710>
11053b04:	8007883a 	mov	r3,r16
11053b08:	ad7fffc4 	addi	r21,r21,-1
11053b0c:	0021883a 	mov	r16,zero
11053b10:	4004d63a 	srli	r2,r8,24
11053b14:	8822923a 	slli	r17,r17,8
11053b18:	1809883a 	mov	r4,r3
11053b1c:	402c923a 	slli	r22,r8,8
11053b20:	88b8b03a 	or	fp,r17,r2
11053b24:	e028d43a 	srli	r20,fp,16
11053b28:	d8c00015 	stw	r3,0(sp)
11053b2c:	e5ffffcc 	andi	r23,fp,65535
11053b30:	a00b883a 	mov	r5,r20
11053b34:	10442700 	call	11044270 <__udivsi3>
11053b38:	d8c00017 	ldw	r3,0(sp)
11053b3c:	a00b883a 	mov	r5,r20
11053b40:	d8800315 	stw	r2,12(sp)
11053b44:	1809883a 	mov	r4,r3
11053b48:	10442d40 	call	110442d4 <__umodsi3>
11053b4c:	d9800317 	ldw	r6,12(sp)
11053b50:	1006943a 	slli	r3,r2,16
11053b54:	9004d43a 	srli	r2,r18,16
11053b58:	b9a3383a 	mul	r17,r23,r6
11053b5c:	10c4b03a 	or	r2,r2,r3
11053b60:	1440062e 	bgeu	r2,r17,11053b7c <__divdf3+0x39c>
11053b64:	1705883a 	add	r2,r2,fp
11053b68:	30ffffc4 	addi	r3,r6,-1
11053b6c:	1700ee36 	bltu	r2,fp,11053f28 <__divdf3+0x748>
11053b70:	1440ed2e 	bgeu	r2,r17,11053f28 <__divdf3+0x748>
11053b74:	31bfff84 	addi	r6,r6,-2
11053b78:	1705883a 	add	r2,r2,fp
11053b7c:	1463c83a 	sub	r17,r2,r17
11053b80:	a00b883a 	mov	r5,r20
11053b84:	8809883a 	mov	r4,r17
11053b88:	d9800315 	stw	r6,12(sp)
11053b8c:	10442700 	call	11044270 <__udivsi3>
11053b90:	a00b883a 	mov	r5,r20
11053b94:	8809883a 	mov	r4,r17
11053b98:	d8800215 	stw	r2,8(sp)
11053b9c:	10442d40 	call	110442d4 <__umodsi3>
11053ba0:	d9c00217 	ldw	r7,8(sp)
11053ba4:	1004943a 	slli	r2,r2,16
11053ba8:	94bfffcc 	andi	r18,r18,65535
11053bac:	b9d1383a 	mul	r8,r23,r7
11053bb0:	90a4b03a 	or	r18,r18,r2
11053bb4:	d9800317 	ldw	r6,12(sp)
11053bb8:	9200062e 	bgeu	r18,r8,11053bd4 <__divdf3+0x3f4>
11053bbc:	9725883a 	add	r18,r18,fp
11053bc0:	38bfffc4 	addi	r2,r7,-1
11053bc4:	9700d636 	bltu	r18,fp,11053f20 <__divdf3+0x740>
11053bc8:	9200d52e 	bgeu	r18,r8,11053f20 <__divdf3+0x740>
11053bcc:	39ffff84 	addi	r7,r7,-2
11053bd0:	9725883a 	add	r18,r18,fp
11053bd4:	3004943a 	slli	r2,r6,16
11053bd8:	b012d43a 	srli	r9,r22,16
11053bdc:	b1bfffcc 	andi	r6,r22,65535
11053be0:	11e2b03a 	or	r17,r2,r7
11053be4:	8806d43a 	srli	r3,r17,16
11053be8:	893fffcc 	andi	r4,r17,65535
11053bec:	218b383a 	mul	r5,r4,r6
11053bf0:	30c5383a 	mul	r2,r6,r3
11053bf4:	2249383a 	mul	r4,r4,r9
11053bf8:	280ed43a 	srli	r7,r5,16
11053bfc:	9225c83a 	sub	r18,r18,r8
11053c00:	2089883a 	add	r4,r4,r2
11053c04:	3909883a 	add	r4,r7,r4
11053c08:	1a47383a 	mul	r3,r3,r9
11053c0c:	2080022e 	bgeu	r4,r2,11053c18 <__divdf3+0x438>
11053c10:	00800074 	movhi	r2,1
11053c14:	1887883a 	add	r3,r3,r2
11053c18:	2004d43a 	srli	r2,r4,16
11053c1c:	2008943a 	slli	r4,r4,16
11053c20:	297fffcc 	andi	r5,r5,65535
11053c24:	10c7883a 	add	r3,r2,r3
11053c28:	2149883a 	add	r4,r4,r5
11053c2c:	90c0a536 	bltu	r18,r3,11053ec4 <__divdf3+0x6e4>
11053c30:	90c0bf26 	beq	r18,r3,11053f30 <__divdf3+0x750>
11053c34:	90c7c83a 	sub	r3,r18,r3
11053c38:	810fc83a 	sub	r7,r16,r4
11053c3c:	81e5803a 	cmpltu	r18,r16,r7
11053c40:	1ca5c83a 	sub	r18,r3,r18
11053c44:	e480c126 	beq	fp,r18,11053f4c <__divdf3+0x76c>
11053c48:	a00b883a 	mov	r5,r20
11053c4c:	9009883a 	mov	r4,r18
11053c50:	d9800315 	stw	r6,12(sp)
11053c54:	d9c00215 	stw	r7,8(sp)
11053c58:	da400115 	stw	r9,4(sp)
11053c5c:	10442700 	call	11044270 <__udivsi3>
11053c60:	a00b883a 	mov	r5,r20
11053c64:	9009883a 	mov	r4,r18
11053c68:	d8800015 	stw	r2,0(sp)
11053c6c:	10442d40 	call	110442d4 <__umodsi3>
11053c70:	d9c00217 	ldw	r7,8(sp)
11053c74:	da000017 	ldw	r8,0(sp)
11053c78:	1006943a 	slli	r3,r2,16
11053c7c:	3804d43a 	srli	r2,r7,16
11053c80:	ba21383a 	mul	r16,r23,r8
11053c84:	d9800317 	ldw	r6,12(sp)
11053c88:	10c4b03a 	or	r2,r2,r3
11053c8c:	da400117 	ldw	r9,4(sp)
11053c90:	1400062e 	bgeu	r2,r16,11053cac <__divdf3+0x4cc>
11053c94:	1705883a 	add	r2,r2,fp
11053c98:	40ffffc4 	addi	r3,r8,-1
11053c9c:	1700ad36 	bltu	r2,fp,11053f54 <__divdf3+0x774>
11053ca0:	1400ac2e 	bgeu	r2,r16,11053f54 <__divdf3+0x774>
11053ca4:	423fff84 	addi	r8,r8,-2
11053ca8:	1705883a 	add	r2,r2,fp
11053cac:	1421c83a 	sub	r16,r2,r16
11053cb0:	a00b883a 	mov	r5,r20
11053cb4:	8009883a 	mov	r4,r16
11053cb8:	d9800315 	stw	r6,12(sp)
11053cbc:	d9c00215 	stw	r7,8(sp)
11053cc0:	da000015 	stw	r8,0(sp)
11053cc4:	da400115 	stw	r9,4(sp)
11053cc8:	10442700 	call	11044270 <__udivsi3>
11053ccc:	8009883a 	mov	r4,r16
11053cd0:	a00b883a 	mov	r5,r20
11053cd4:	1025883a 	mov	r18,r2
11053cd8:	10442d40 	call	110442d4 <__umodsi3>
11053cdc:	d9c00217 	ldw	r7,8(sp)
11053ce0:	1004943a 	slli	r2,r2,16
11053ce4:	bcaf383a 	mul	r23,r23,r18
11053ce8:	393fffcc 	andi	r4,r7,65535
11053cec:	2088b03a 	or	r4,r4,r2
11053cf0:	d9800317 	ldw	r6,12(sp)
11053cf4:	da000017 	ldw	r8,0(sp)
11053cf8:	da400117 	ldw	r9,4(sp)
11053cfc:	25c0062e 	bgeu	r4,r23,11053d18 <__divdf3+0x538>
11053d00:	2709883a 	add	r4,r4,fp
11053d04:	90bfffc4 	addi	r2,r18,-1
11053d08:	27009436 	bltu	r4,fp,11053f5c <__divdf3+0x77c>
11053d0c:	25c0932e 	bgeu	r4,r23,11053f5c <__divdf3+0x77c>
11053d10:	94bfff84 	addi	r18,r18,-2
11053d14:	2709883a 	add	r4,r4,fp
11053d18:	4004943a 	slli	r2,r8,16
11053d1c:	25efc83a 	sub	r23,r4,r23
11053d20:	1490b03a 	or	r8,r2,r18
11053d24:	4008d43a 	srli	r4,r8,16
11053d28:	40ffffcc 	andi	r3,r8,65535
11053d2c:	30c5383a 	mul	r2,r6,r3
11053d30:	1a47383a 	mul	r3,r3,r9
11053d34:	310d383a 	mul	r6,r6,r4
11053d38:	100ad43a 	srli	r5,r2,16
11053d3c:	4913383a 	mul	r9,r9,r4
11053d40:	1987883a 	add	r3,r3,r6
11053d44:	28c7883a 	add	r3,r5,r3
11053d48:	1980022e 	bgeu	r3,r6,11053d54 <__divdf3+0x574>
11053d4c:	01000074 	movhi	r4,1
11053d50:	4913883a 	add	r9,r9,r4
11053d54:	1808d43a 	srli	r4,r3,16
11053d58:	1806943a 	slli	r3,r3,16
11053d5c:	10bfffcc 	andi	r2,r2,65535
11053d60:	2253883a 	add	r9,r4,r9
11053d64:	1887883a 	add	r3,r3,r2
11053d68:	ba403836 	bltu	r23,r9,11053e4c <__divdf3+0x66c>
11053d6c:	ba403626 	beq	r23,r9,11053e48 <__divdf3+0x668>
11053d70:	42000054 	ori	r8,r8,1
11053d74:	a880ffc4 	addi	r2,r21,1023
11053d78:	00bf570e 	bge	zero,r2,11053ad8 <__divdf3+0x2f8>
11053d7c:	40c001cc 	andi	r3,r8,7
11053d80:	18000726 	beq	r3,zero,11053da0 <__divdf3+0x5c0>
11053d84:	40c003cc 	andi	r3,r8,15
11053d88:	01000104 	movi	r4,4
11053d8c:	19000426 	beq	r3,r4,11053da0 <__divdf3+0x5c0>
11053d90:	4107883a 	add	r3,r8,r4
11053d94:	1a11803a 	cmpltu	r8,r3,r8
11053d98:	8a23883a 	add	r17,r17,r8
11053d9c:	1811883a 	mov	r8,r3
11053da0:	88c0402c 	andhi	r3,r17,256
11053da4:	18000426 	beq	r3,zero,11053db8 <__divdf3+0x5d8>
11053da8:	00ffc034 	movhi	r3,65280
11053dac:	18ffffc4 	addi	r3,r3,-1
11053db0:	a8810004 	addi	r2,r21,1024
11053db4:	88e2703a 	and	r17,r17,r3
11053db8:	00c1ff84 	movi	r3,2046
11053dbc:	18bee316 	blt	r3,r2,1105394c <__divdf3+0x16c>
11053dc0:	8824977a 	slli	r18,r17,29
11053dc4:	4010d0fa 	srli	r8,r8,3
11053dc8:	8822927a 	slli	r17,r17,9
11053dcc:	1081ffcc 	andi	r2,r2,2047
11053dd0:	9224b03a 	or	r18,r18,r8
11053dd4:	880ad33a 	srli	r5,r17,12
11053dd8:	98c0004c 	andi	r3,r19,1
11053ddc:	003edf06 	br	1105395c <__divdf3+0x17c>
11053de0:	8080022c 	andhi	r2,r16,8
11053de4:	10001226 	beq	r2,zero,11053e30 <__divdf3+0x650>
11053de8:	8880022c 	andhi	r2,r17,8
11053dec:	1000101e 	bne	r2,zero,11053e30 <__divdf3+0x650>
11053df0:	00800434 	movhi	r2,16
11053df4:	89400234 	orhi	r5,r17,8
11053df8:	10bfffc4 	addi	r2,r2,-1
11053dfc:	b007883a 	mov	r3,r22
11053e00:	288a703a 	and	r5,r5,r2
11053e04:	4025883a 	mov	r18,r8
11053e08:	003f3106 	br	11053ad0 <__divdf3+0x2f0>
11053e0c:	008000c4 	movi	r2,3
11053e10:	3880a626 	beq	r7,r2,110540ac <__divdf3+0x8cc>
11053e14:	00800044 	movi	r2,1
11053e18:	3880521e 	bne	r7,r2,11053f64 <__divdf3+0x784>
11053e1c:	b807883a 	mov	r3,r23
11053e20:	0005883a 	mov	r2,zero
11053e24:	000b883a 	mov	r5,zero
11053e28:	0025883a 	mov	r18,zero
11053e2c:	003ecb06 	br	1105395c <__divdf3+0x17c>
11053e30:	00800434 	movhi	r2,16
11053e34:	81400234 	orhi	r5,r16,8
11053e38:	10bfffc4 	addi	r2,r2,-1
11053e3c:	a007883a 	mov	r3,r20
11053e40:	288a703a 	and	r5,r5,r2
11053e44:	003f2206 	br	11053ad0 <__divdf3+0x2f0>
11053e48:	183fca26 	beq	r3,zero,11053d74 <__divdf3+0x594>
11053e4c:	e5ef883a 	add	r23,fp,r23
11053e50:	40bfffc4 	addi	r2,r8,-1
11053e54:	bf00392e 	bgeu	r23,fp,11053f3c <__divdf3+0x75c>
11053e58:	1011883a 	mov	r8,r2
11053e5c:	ba7fc41e 	bne	r23,r9,11053d70 <__divdf3+0x590>
11053e60:	b0ffc31e 	bne	r22,r3,11053d70 <__divdf3+0x590>
11053e64:	003fc306 	br	11053d74 <__divdf3+0x594>
11053e68:	143ff604 	addi	r16,r2,-40
11053e6c:	9c20983a 	sll	r16,r19,r16
11053e70:	0025883a 	mov	r18,zero
11053e74:	003ee206 	br	11053a00 <__divdf3+0x220>
11053e78:	d9800315 	stw	r6,12(sp)
11053e7c:	d9c00215 	stw	r7,8(sp)
11053e80:	1045eac0 	call	11045eac <__clzsi2>
11053e84:	10800804 	addi	r2,r2,32
11053e88:	d9c00217 	ldw	r7,8(sp)
11053e8c:	d9800317 	ldw	r6,12(sp)
11053e90:	003ed106 	br	110539d8 <__divdf3+0x1f8>
11053e94:	147ff604 	addi	r17,r2,-40
11053e98:	3462983a 	sll	r17,r6,r17
11053e9c:	0011883a 	mov	r8,zero
11053ea0:	003ef506 	br	11053a78 <__divdf3+0x298>
11053ea4:	3009883a 	mov	r4,r6
11053ea8:	d9800315 	stw	r6,12(sp)
11053eac:	da400115 	stw	r9,4(sp)
11053eb0:	1045eac0 	call	11045eac <__clzsi2>
11053eb4:	10800804 	addi	r2,r2,32
11053eb8:	da400117 	ldw	r9,4(sp)
11053ebc:	d9800317 	ldw	r6,12(sp)
11053ec0:	003ee306 	br	11053a50 <__divdf3+0x270>
11053ec4:	85a1883a 	add	r16,r16,r22
11053ec8:	8585803a 	cmpltu	r2,r16,r22
11053ecc:	1705883a 	add	r2,r2,fp
11053ed0:	14a5883a 	add	r18,r2,r18
11053ed4:	88bfffc4 	addi	r2,r17,-1
11053ed8:	e4800c2e 	bgeu	fp,r18,11053f0c <__divdf3+0x72c>
11053edc:	90c03e36 	bltu	r18,r3,11053fd8 <__divdf3+0x7f8>
11053ee0:	1c806926 	beq	r3,r18,11054088 <__divdf3+0x8a8>
11053ee4:	90c7c83a 	sub	r3,r18,r3
11053ee8:	1023883a 	mov	r17,r2
11053eec:	003f5206 	br	11053c38 <__divdf3+0x458>
11053ef0:	923f0436 	bltu	r18,r8,11053b04 <__divdf3+0x324>
11053ef4:	800897fa 	slli	r4,r16,31
11053ef8:	9004d07a 	srli	r2,r18,1
11053efc:	8006d07a 	srli	r3,r16,1
11053f00:	902097fa 	slli	r16,r18,31
11053f04:	20a4b03a 	or	r18,r4,r2
11053f08:	003f0106 	br	11053b10 <__divdf3+0x330>
11053f0c:	e4bff51e 	bne	fp,r18,11053ee4 <__divdf3+0x704>
11053f10:	85bff22e 	bgeu	r16,r22,11053edc <__divdf3+0x6fc>
11053f14:	e0c7c83a 	sub	r3,fp,r3
11053f18:	1023883a 	mov	r17,r2
11053f1c:	003f4606 	br	11053c38 <__divdf3+0x458>
11053f20:	100f883a 	mov	r7,r2
11053f24:	003f2b06 	br	11053bd4 <__divdf3+0x3f4>
11053f28:	180d883a 	mov	r6,r3
11053f2c:	003f1306 	br	11053b7c <__divdf3+0x39c>
11053f30:	813fe436 	bltu	r16,r4,11053ec4 <__divdf3+0x6e4>
11053f34:	0007883a 	mov	r3,zero
11053f38:	003f3f06 	br	11053c38 <__divdf3+0x458>
11053f3c:	ba402c36 	bltu	r23,r9,11053ff0 <__divdf3+0x810>
11053f40:	4dc05426 	beq	r9,r23,11054094 <__divdf3+0x8b4>
11053f44:	1011883a 	mov	r8,r2
11053f48:	003f8906 	br	11053d70 <__divdf3+0x590>
11053f4c:	023fffc4 	movi	r8,-1
11053f50:	003f8806 	br	11053d74 <__divdf3+0x594>
11053f54:	1811883a 	mov	r8,r3
11053f58:	003f5406 	br	11053cac <__divdf3+0x4cc>
11053f5c:	1025883a 	mov	r18,r2
11053f60:	003f6d06 	br	11053d18 <__divdf3+0x538>
11053f64:	b827883a 	mov	r19,r23
11053f68:	003f8206 	br	11053d74 <__divdf3+0x594>
11053f6c:	010007c4 	movi	r4,31
11053f70:	20c02616 	blt	r4,r3,1105400c <__divdf3+0x82c>
11053f74:	00800804 	movi	r2,32
11053f78:	10c5c83a 	sub	r2,r2,r3
11053f7c:	888a983a 	sll	r5,r17,r2
11053f80:	40c8d83a 	srl	r4,r8,r3
11053f84:	4084983a 	sll	r2,r8,r2
11053f88:	88e2d83a 	srl	r17,r17,r3
11053f8c:	2906b03a 	or	r3,r5,r4
11053f90:	1004c03a 	cmpne	r2,r2,zero
11053f94:	1886b03a 	or	r3,r3,r2
11053f98:	188001cc 	andi	r2,r3,7
11053f9c:	10000726 	beq	r2,zero,11053fbc <__divdf3+0x7dc>
11053fa0:	188003cc 	andi	r2,r3,15
11053fa4:	01000104 	movi	r4,4
11053fa8:	11000426 	beq	r2,r4,11053fbc <__divdf3+0x7dc>
11053fac:	1805883a 	mov	r2,r3
11053fb0:	10c00104 	addi	r3,r2,4
11053fb4:	1885803a 	cmpltu	r2,r3,r2
11053fb8:	88a3883a 	add	r17,r17,r2
11053fbc:	8880202c 	andhi	r2,r17,128
11053fc0:	10002726 	beq	r2,zero,11054060 <__divdf3+0x880>
11053fc4:	98c0004c 	andi	r3,r19,1
11053fc8:	00800044 	movi	r2,1
11053fcc:	000b883a 	mov	r5,zero
11053fd0:	0025883a 	mov	r18,zero
11053fd4:	003e6106 	br	1105395c <__divdf3+0x17c>
11053fd8:	85a1883a 	add	r16,r16,r22
11053fdc:	8585803a 	cmpltu	r2,r16,r22
11053fe0:	1705883a 	add	r2,r2,fp
11053fe4:	14a5883a 	add	r18,r2,r18
11053fe8:	8c7fff84 	addi	r17,r17,-2
11053fec:	003f1106 	br	11053c34 <__divdf3+0x454>
11053ff0:	b589883a 	add	r4,r22,r22
11053ff4:	25ad803a 	cmpltu	r22,r4,r22
11053ff8:	b739883a 	add	fp,r22,fp
11053ffc:	40bfff84 	addi	r2,r8,-2
11054000:	bf2f883a 	add	r23,r23,fp
11054004:	202d883a 	mov	r22,r4
11054008:	003f9306 	br	11053e58 <__divdf3+0x678>
1105400c:	013ff844 	movi	r4,-31
11054010:	2085c83a 	sub	r2,r4,r2
11054014:	8888d83a 	srl	r4,r17,r2
11054018:	00800804 	movi	r2,32
1105401c:	18802126 	beq	r3,r2,110540a4 <__divdf3+0x8c4>
11054020:	00801004 	movi	r2,64
11054024:	10c5c83a 	sub	r2,r2,r3
11054028:	8884983a 	sll	r2,r17,r2
1105402c:	1204b03a 	or	r2,r2,r8
11054030:	1004c03a 	cmpne	r2,r2,zero
11054034:	2084b03a 	or	r2,r4,r2
11054038:	144001cc 	andi	r17,r2,7
1105403c:	88000d1e 	bne	r17,zero,11054074 <__divdf3+0x894>
11054040:	000b883a 	mov	r5,zero
11054044:	1024d0fa 	srli	r18,r2,3
11054048:	98c0004c 	andi	r3,r19,1
1105404c:	0005883a 	mov	r2,zero
11054050:	9464b03a 	or	r18,r18,r17
11054054:	003e4106 	br	1105395c <__divdf3+0x17c>
11054058:	1007883a 	mov	r3,r2
1105405c:	0023883a 	mov	r17,zero
11054060:	880a927a 	slli	r5,r17,9
11054064:	1805883a 	mov	r2,r3
11054068:	8822977a 	slli	r17,r17,29
1105406c:	280ad33a 	srli	r5,r5,12
11054070:	003ff406 	br	11054044 <__divdf3+0x864>
11054074:	10c003cc 	andi	r3,r2,15
11054078:	01000104 	movi	r4,4
1105407c:	193ff626 	beq	r3,r4,11054058 <__divdf3+0x878>
11054080:	0023883a 	mov	r17,zero
11054084:	003fca06 	br	11053fb0 <__divdf3+0x7d0>
11054088:	813fd336 	bltu	r16,r4,11053fd8 <__divdf3+0x7f8>
1105408c:	1023883a 	mov	r17,r2
11054090:	003fa806 	br	11053f34 <__divdf3+0x754>
11054094:	b0ffd636 	bltu	r22,r3,11053ff0 <__divdf3+0x810>
11054098:	1011883a 	mov	r8,r2
1105409c:	b0ff341e 	bne	r22,r3,11053d70 <__divdf3+0x590>
110540a0:	003f3406 	br	11053d74 <__divdf3+0x594>
110540a4:	0005883a 	mov	r2,zero
110540a8:	003fe006 	br	1105402c <__divdf3+0x84c>
110540ac:	00800434 	movhi	r2,16
110540b0:	89400234 	orhi	r5,r17,8
110540b4:	10bfffc4 	addi	r2,r2,-1
110540b8:	b807883a 	mov	r3,r23
110540bc:	288a703a 	and	r5,r5,r2
110540c0:	4025883a 	mov	r18,r8
110540c4:	003e8206 	br	11053ad0 <__divdf3+0x2f0>

110540c8 <__ledf2>:
110540c8:	2804d53a 	srli	r2,r5,20
110540cc:	3810d53a 	srli	r8,r7,20
110540d0:	00c00434 	movhi	r3,16
110540d4:	18ffffc4 	addi	r3,r3,-1
110540d8:	1081ffcc 	andi	r2,r2,2047
110540dc:	0241ffc4 	movi	r9,2047
110540e0:	28d4703a 	and	r10,r5,r3
110540e4:	4201ffcc 	andi	r8,r8,2047
110540e8:	38c6703a 	and	r3,r7,r3
110540ec:	280ad7fa 	srli	r5,r5,31
110540f0:	380ed7fa 	srli	r7,r7,31
110540f4:	12401f26 	beq	r2,r9,11054174 <__ledf2+0xac>
110540f8:	0241ffc4 	movi	r9,2047
110540fc:	42401426 	beq	r8,r9,11054150 <__ledf2+0x88>
11054100:	1000091e 	bne	r2,zero,11054128 <__ledf2+0x60>
11054104:	2296b03a 	or	r11,r4,r10
11054108:	5813003a 	cmpeq	r9,r11,zero
1105410c:	29403fcc 	andi	r5,r5,255
11054110:	40000a1e 	bne	r8,zero,1105413c <__ledf2+0x74>
11054114:	30d8b03a 	or	r12,r6,r3
11054118:	6000081e 	bne	r12,zero,1105413c <__ledf2+0x74>
1105411c:	0005883a 	mov	r2,zero
11054120:	5800111e 	bne	r11,zero,11054168 <__ledf2+0xa0>
11054124:	f800283a 	ret
11054128:	29403fcc 	andi	r5,r5,255
1105412c:	40000c1e 	bne	r8,zero,11054160 <__ledf2+0x98>
11054130:	30d2b03a 	or	r9,r6,r3
11054134:	48000c26 	beq	r9,zero,11054168 <__ledf2+0xa0>
11054138:	0013883a 	mov	r9,zero
1105413c:	39c03fcc 	andi	r7,r7,255
11054140:	48000826 	beq	r9,zero,11054164 <__ledf2+0x9c>
11054144:	38001126 	beq	r7,zero,1105418c <__ledf2+0xc4>
11054148:	00800044 	movi	r2,1
1105414c:	f800283a 	ret
11054150:	30d2b03a 	or	r9,r6,r3
11054154:	483fea26 	beq	r9,zero,11054100 <__ledf2+0x38>
11054158:	00800084 	movi	r2,2
1105415c:	f800283a 	ret
11054160:	39c03fcc 	andi	r7,r7,255
11054164:	39400726 	beq	r7,r5,11054184 <__ledf2+0xbc>
11054168:	2800081e 	bne	r5,zero,1105418c <__ledf2+0xc4>
1105416c:	00800044 	movi	r2,1
11054170:	f800283a 	ret
11054174:	2292b03a 	or	r9,r4,r10
11054178:	483fdf26 	beq	r9,zero,110540f8 <__ledf2+0x30>
1105417c:	00800084 	movi	r2,2
11054180:	f800283a 	ret
11054184:	4080030e 	bge	r8,r2,11054194 <__ledf2+0xcc>
11054188:	383fef26 	beq	r7,zero,11054148 <__ledf2+0x80>
1105418c:	00bfffc4 	movi	r2,-1
11054190:	f800283a 	ret
11054194:	123feb16 	blt	r2,r8,11054144 <__ledf2+0x7c>
11054198:	1abff336 	bltu	r3,r10,11054168 <__ledf2+0xa0>
1105419c:	50c00326 	beq	r10,r3,110541ac <__ledf2+0xe4>
110541a0:	50c0042e 	bgeu	r10,r3,110541b4 <__ledf2+0xec>
110541a4:	283fe81e 	bne	r5,zero,11054148 <__ledf2+0x80>
110541a8:	003ff806 	br	1105418c <__ledf2+0xc4>
110541ac:	313fee36 	bltu	r6,r4,11054168 <__ledf2+0xa0>
110541b0:	21bffc36 	bltu	r4,r6,110541a4 <__ledf2+0xdc>
110541b4:	0005883a 	mov	r2,zero
110541b8:	f800283a 	ret

110541bc <__floatunsidf>:
110541bc:	defffe04 	addi	sp,sp,-8
110541c0:	dc000015 	stw	r16,0(sp)
110541c4:	dfc00115 	stw	ra,4(sp)
110541c8:	2021883a 	mov	r16,r4
110541cc:	20002226 	beq	r4,zero,11054258 <__floatunsidf+0x9c>
110541d0:	1045eac0 	call	11045eac <__clzsi2>
110541d4:	01010784 	movi	r4,1054
110541d8:	2089c83a 	sub	r4,r4,r2
110541dc:	01810cc4 	movi	r6,1075
110541e0:	310dc83a 	sub	r6,r6,r4
110541e4:	00c007c4 	movi	r3,31
110541e8:	1980120e 	bge	r3,r6,11054234 <__floatunsidf+0x78>
110541ec:	00c104c4 	movi	r3,1043
110541f0:	1907c83a 	sub	r3,r3,r4
110541f4:	80ca983a 	sll	r5,r16,r3
110541f8:	00800434 	movhi	r2,16
110541fc:	10bfffc4 	addi	r2,r2,-1
11054200:	2101ffcc 	andi	r4,r4,2047
11054204:	0021883a 	mov	r16,zero
11054208:	288a703a 	and	r5,r5,r2
1105420c:	2008953a 	slli	r4,r4,20
11054210:	00c00434 	movhi	r3,16
11054214:	18ffffc4 	addi	r3,r3,-1
11054218:	28c6703a 	and	r3,r5,r3
1105421c:	8005883a 	mov	r2,r16
11054220:	1906b03a 	or	r3,r3,r4
11054224:	dfc00117 	ldw	ra,4(sp)
11054228:	dc000017 	ldw	r16,0(sp)
1105422c:	dec00204 	addi	sp,sp,8
11054230:	f800283a 	ret
11054234:	00c002c4 	movi	r3,11
11054238:	188bc83a 	sub	r5,r3,r2
1105423c:	814ad83a 	srl	r5,r16,r5
11054240:	00c00434 	movhi	r3,16
11054244:	18ffffc4 	addi	r3,r3,-1
11054248:	81a0983a 	sll	r16,r16,r6
1105424c:	2101ffcc 	andi	r4,r4,2047
11054250:	28ca703a 	and	r5,r5,r3
11054254:	003fed06 	br	1105420c <__floatunsidf+0x50>
11054258:	0009883a 	mov	r4,zero
1105425c:	000b883a 	mov	r5,zero
11054260:	003fea06 	br	1105420c <__floatunsidf+0x50>

11054264 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
11054264:	defffe04 	addi	sp,sp,-8
11054268:	dfc00115 	stw	ra,4(sp)
1105426c:	df000015 	stw	fp,0(sp)
11054270:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
11054274:	d0a00b17 	ldw	r2,-32724(gp)
11054278:	10000326 	beq	r2,zero,11054288 <alt_get_errno+0x24>
1105427c:	d0a00b17 	ldw	r2,-32724(gp)
11054280:	103ee83a 	callr	r2
11054284:	00000106 	br	1105428c <alt_get_errno+0x28>
11054288:	d0a6d204 	addi	r2,gp,-25784
}
1105428c:	e037883a 	mov	sp,fp
11054290:	dfc00117 	ldw	ra,4(sp)
11054294:	df000017 	ldw	fp,0(sp)
11054298:	dec00204 	addi	sp,sp,8
1105429c:	f800283a 	ret

110542a0 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
110542a0:	defffb04 	addi	sp,sp,-20
110542a4:	dfc00415 	stw	ra,16(sp)
110542a8:	df000315 	stw	fp,12(sp)
110542ac:	df000304 	addi	fp,sp,12
110542b0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
110542b4:	e0bfff17 	ldw	r2,-4(fp)
110542b8:	10000616 	blt	r2,zero,110542d4 <close+0x34>
110542bc:	e0bfff17 	ldw	r2,-4(fp)
110542c0:	10c00324 	muli	r3,r2,12
110542c4:	00844174 	movhi	r2,4357
110542c8:	109ede04 	addi	r2,r2,31608
110542cc:	1885883a 	add	r2,r3,r2
110542d0:	00000106 	br	110542d8 <close+0x38>
110542d4:	0005883a 	mov	r2,zero
110542d8:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
110542dc:	e0bffd17 	ldw	r2,-12(fp)
110542e0:	10001926 	beq	r2,zero,11054348 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
110542e4:	e0bffd17 	ldw	r2,-12(fp)
110542e8:	10800017 	ldw	r2,0(r2)
110542ec:	10800417 	ldw	r2,16(r2)
110542f0:	10000626 	beq	r2,zero,1105430c <close+0x6c>
110542f4:	e0bffd17 	ldw	r2,-12(fp)
110542f8:	10800017 	ldw	r2,0(r2)
110542fc:	10800417 	ldw	r2,16(r2)
11054300:	e13ffd17 	ldw	r4,-12(fp)
11054304:	103ee83a 	callr	r2
11054308:	00000106 	br	11054310 <close+0x70>
1105430c:	0005883a 	mov	r2,zero
11054310:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
11054314:	e13fff17 	ldw	r4,-4(fp)
11054318:	10549600 	call	11054960 <alt_release_fd>
    if (rval < 0)
1105431c:	e0bffe17 	ldw	r2,-8(fp)
11054320:	1000070e 	bge	r2,zero,11054340 <close+0xa0>
    {
      ALT_ERRNO = -rval;
11054324:	10542640 	call	11054264 <alt_get_errno>
11054328:	1007883a 	mov	r3,r2
1105432c:	e0bffe17 	ldw	r2,-8(fp)
11054330:	0085c83a 	sub	r2,zero,r2
11054334:	18800015 	stw	r2,0(r3)
      return -1;
11054338:	00bfffc4 	movi	r2,-1
1105433c:	00000706 	br	1105435c <close+0xbc>
    }
    return 0;
11054340:	0005883a 	mov	r2,zero
11054344:	00000506 	br	1105435c <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
11054348:	10542640 	call	11054264 <alt_get_errno>
1105434c:	1007883a 	mov	r3,r2
11054350:	00801444 	movi	r2,81
11054354:	18800015 	stw	r2,0(r3)
    return -1;
11054358:	00bfffc4 	movi	r2,-1
  }
}
1105435c:	e037883a 	mov	sp,fp
11054360:	dfc00117 	ldw	ra,4(sp)
11054364:	df000017 	ldw	fp,0(sp)
11054368:	dec00204 	addi	sp,sp,8
1105436c:	f800283a 	ret

11054370 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
11054370:	defffc04 	addi	sp,sp,-16
11054374:	df000315 	stw	fp,12(sp)
11054378:	df000304 	addi	fp,sp,12
1105437c:	e13ffd15 	stw	r4,-12(fp)
11054380:	e17ffe15 	stw	r5,-8(fp)
11054384:	e1bfff15 	stw	r6,-4(fp)
  return len;
11054388:	e0bfff17 	ldw	r2,-4(fp)
}
1105438c:	e037883a 	mov	sp,fp
11054390:	df000017 	ldw	fp,0(sp)
11054394:	dec00104 	addi	sp,sp,4
11054398:	f800283a 	ret

1105439c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1105439c:	defffe04 	addi	sp,sp,-8
110543a0:	dfc00115 	stw	ra,4(sp)
110543a4:	df000015 	stw	fp,0(sp)
110543a8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
110543ac:	d0a00b17 	ldw	r2,-32724(gp)
110543b0:	10000326 	beq	r2,zero,110543c0 <alt_get_errno+0x24>
110543b4:	d0a00b17 	ldw	r2,-32724(gp)
110543b8:	103ee83a 	callr	r2
110543bc:	00000106 	br	110543c4 <alt_get_errno+0x28>
110543c0:	d0a6d204 	addi	r2,gp,-25784
}
110543c4:	e037883a 	mov	sp,fp
110543c8:	dfc00117 	ldw	ra,4(sp)
110543cc:	df000017 	ldw	fp,0(sp)
110543d0:	dec00204 	addi	sp,sp,8
110543d4:	f800283a 	ret

110543d8 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
110543d8:	defffb04 	addi	sp,sp,-20
110543dc:	dfc00415 	stw	ra,16(sp)
110543e0:	df000315 	stw	fp,12(sp)
110543e4:	df000304 	addi	fp,sp,12
110543e8:	e13ffe15 	stw	r4,-8(fp)
110543ec:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
110543f0:	e0bffe17 	ldw	r2,-8(fp)
110543f4:	10000616 	blt	r2,zero,11054410 <fstat+0x38>
110543f8:	e0bffe17 	ldw	r2,-8(fp)
110543fc:	10c00324 	muli	r3,r2,12
11054400:	00844174 	movhi	r2,4357
11054404:	109ede04 	addi	r2,r2,31608
11054408:	1885883a 	add	r2,r3,r2
1105440c:	00000106 	br	11054414 <fstat+0x3c>
11054410:	0005883a 	mov	r2,zero
11054414:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
11054418:	e0bffd17 	ldw	r2,-12(fp)
1105441c:	10001026 	beq	r2,zero,11054460 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
11054420:	e0bffd17 	ldw	r2,-12(fp)
11054424:	10800017 	ldw	r2,0(r2)
11054428:	10800817 	ldw	r2,32(r2)
1105442c:	10000726 	beq	r2,zero,1105444c <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
11054430:	e0bffd17 	ldw	r2,-12(fp)
11054434:	10800017 	ldw	r2,0(r2)
11054438:	10800817 	ldw	r2,32(r2)
1105443c:	e17fff17 	ldw	r5,-4(fp)
11054440:	e13ffd17 	ldw	r4,-12(fp)
11054444:	103ee83a 	callr	r2
11054448:	00000a06 	br	11054474 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
1105444c:	e0bfff17 	ldw	r2,-4(fp)
11054450:	00c80004 	movi	r3,8192
11054454:	10c00115 	stw	r3,4(r2)
      return 0;
11054458:	0005883a 	mov	r2,zero
1105445c:	00000506 	br	11054474 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
11054460:	105439c0 	call	1105439c <alt_get_errno>
11054464:	1007883a 	mov	r3,r2
11054468:	00801444 	movi	r2,81
1105446c:	18800015 	stw	r2,0(r3)
    return -1;
11054470:	00bfffc4 	movi	r2,-1
  }
}
11054474:	e037883a 	mov	sp,fp
11054478:	dfc00117 	ldw	ra,4(sp)
1105447c:	df000017 	ldw	fp,0(sp)
11054480:	dec00204 	addi	sp,sp,8
11054484:	f800283a 	ret

11054488 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
11054488:	defffe04 	addi	sp,sp,-8
1105448c:	dfc00115 	stw	ra,4(sp)
11054490:	df000015 	stw	fp,0(sp)
11054494:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
11054498:	d0a00b17 	ldw	r2,-32724(gp)
1105449c:	10000326 	beq	r2,zero,110544ac <alt_get_errno+0x24>
110544a0:	d0a00b17 	ldw	r2,-32724(gp)
110544a4:	103ee83a 	callr	r2
110544a8:	00000106 	br	110544b0 <alt_get_errno+0x28>
110544ac:	d0a6d204 	addi	r2,gp,-25784
}
110544b0:	e037883a 	mov	sp,fp
110544b4:	dfc00117 	ldw	ra,4(sp)
110544b8:	df000017 	ldw	fp,0(sp)
110544bc:	dec00204 	addi	sp,sp,8
110544c0:	f800283a 	ret

110544c4 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
110544c4:	deffed04 	addi	sp,sp,-76
110544c8:	dfc01215 	stw	ra,72(sp)
110544cc:	df001115 	stw	fp,68(sp)
110544d0:	df001104 	addi	fp,sp,68
110544d4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
110544d8:	e0bfff17 	ldw	r2,-4(fp)
110544dc:	10000616 	blt	r2,zero,110544f8 <isatty+0x34>
110544e0:	e0bfff17 	ldw	r2,-4(fp)
110544e4:	10c00324 	muli	r3,r2,12
110544e8:	00844174 	movhi	r2,4357
110544ec:	109ede04 	addi	r2,r2,31608
110544f0:	1885883a 	add	r2,r3,r2
110544f4:	00000106 	br	110544fc <isatty+0x38>
110544f8:	0005883a 	mov	r2,zero
110544fc:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
11054500:	e0bfef17 	ldw	r2,-68(fp)
11054504:	10000e26 	beq	r2,zero,11054540 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
11054508:	e0bfef17 	ldw	r2,-68(fp)
1105450c:	10800017 	ldw	r2,0(r2)
11054510:	10800817 	ldw	r2,32(r2)
11054514:	1000021e 	bne	r2,zero,11054520 <isatty+0x5c>
    {
      return 1;
11054518:	00800044 	movi	r2,1
1105451c:	00000d06 	br	11054554 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
11054520:	e0bff004 	addi	r2,fp,-64
11054524:	100b883a 	mov	r5,r2
11054528:	e13fff17 	ldw	r4,-4(fp)
1105452c:	10543d80 	call	110543d8 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
11054530:	e0bff117 	ldw	r2,-60(fp)
11054534:	10880020 	cmpeqi	r2,r2,8192
11054538:	10803fcc 	andi	r2,r2,255
1105453c:	00000506 	br	11054554 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
11054540:	10544880 	call	11054488 <alt_get_errno>
11054544:	1007883a 	mov	r3,r2
11054548:	00801444 	movi	r2,81
1105454c:	18800015 	stw	r2,0(r3)
    return 0;
11054550:	0005883a 	mov	r2,zero
  }
}
11054554:	e037883a 	mov	sp,fp
11054558:	dfc00117 	ldw	ra,4(sp)
1105455c:	df000017 	ldw	fp,0(sp)
11054560:	dec00204 	addi	sp,sp,8
11054564:	f800283a 	ret

11054568 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
11054568:	defffc04 	addi	sp,sp,-16
1105456c:	df000315 	stw	fp,12(sp)
11054570:	df000304 	addi	fp,sp,12
11054574:	e13ffd15 	stw	r4,-12(fp)
11054578:	e17ffe15 	stw	r5,-8(fp)
1105457c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
11054580:	e0fffe17 	ldw	r3,-8(fp)
11054584:	e0bffd17 	ldw	r2,-12(fp)
11054588:	18800c26 	beq	r3,r2,110545bc <alt_load_section+0x54>
  {
    while( to != end )
1105458c:	00000806 	br	110545b0 <alt_load_section+0x48>
    {
      *to++ = *from++;
11054590:	e0bffe17 	ldw	r2,-8(fp)
11054594:	10c00104 	addi	r3,r2,4
11054598:	e0fffe15 	stw	r3,-8(fp)
1105459c:	e0fffd17 	ldw	r3,-12(fp)
110545a0:	19000104 	addi	r4,r3,4
110545a4:	e13ffd15 	stw	r4,-12(fp)
110545a8:	18c00017 	ldw	r3,0(r3)
110545ac:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
110545b0:	e0fffe17 	ldw	r3,-8(fp)
110545b4:	e0bfff17 	ldw	r2,-4(fp)
110545b8:	18bff51e 	bne	r3,r2,11054590 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
110545bc:	0001883a 	nop
110545c0:	e037883a 	mov	sp,fp
110545c4:	df000017 	ldw	fp,0(sp)
110545c8:	dec00104 	addi	sp,sp,4
110545cc:	f800283a 	ret

110545d0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
110545d0:	defffe04 	addi	sp,sp,-8
110545d4:	dfc00115 	stw	ra,4(sp)
110545d8:	df000015 	stw	fp,0(sp)
110545dc:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
110545e0:	018441b4 	movhi	r6,4358
110545e4:	31a36604 	addi	r6,r6,-29288
110545e8:	01444174 	movhi	r5,4357
110545ec:	295cab04 	addi	r5,r5,29356
110545f0:	010441b4 	movhi	r4,4358
110545f4:	21236604 	addi	r4,r4,-29288
110545f8:	10545680 	call	11054568 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
110545fc:	01844134 	movhi	r6,4356
11054600:	31809104 	addi	r6,r6,580
11054604:	01444134 	movhi	r5,4356
11054608:	29400804 	addi	r5,r5,32
1105460c:	01044134 	movhi	r4,4356
11054610:	21000804 	addi	r4,r4,32
11054614:	10545680 	call	11054568 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
11054618:	01844174 	movhi	r6,4357
1105461c:	319cab04 	addi	r6,r6,29356
11054620:	01444174 	movhi	r5,4357
11054624:	295adb04 	addi	r5,r5,27500
11054628:	01044174 	movhi	r4,4357
1105462c:	211adb04 	addi	r4,r4,27500
11054630:	10545680 	call	11054568 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
11054634:	1055a580 	call	11055a58 <alt_dcache_flush_all>
  alt_icache_flush_all();
11054638:	1055c400 	call	11055c40 <alt_icache_flush_all>
}
1105463c:	0001883a 	nop
11054640:	e037883a 	mov	sp,fp
11054644:	dfc00117 	ldw	ra,4(sp)
11054648:	df000017 	ldw	fp,0(sp)
1105464c:	dec00204 	addi	sp,sp,8
11054650:	f800283a 	ret

11054654 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
11054654:	defffe04 	addi	sp,sp,-8
11054658:	dfc00115 	stw	ra,4(sp)
1105465c:	df000015 	stw	fp,0(sp)
11054660:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
11054664:	d0a00b17 	ldw	r2,-32724(gp)
11054668:	10000326 	beq	r2,zero,11054678 <alt_get_errno+0x24>
1105466c:	d0a00b17 	ldw	r2,-32724(gp)
11054670:	103ee83a 	callr	r2
11054674:	00000106 	br	1105467c <alt_get_errno+0x28>
11054678:	d0a6d204 	addi	r2,gp,-25784
}
1105467c:	e037883a 	mov	sp,fp
11054680:	dfc00117 	ldw	ra,4(sp)
11054684:	df000017 	ldw	fp,0(sp)
11054688:	dec00204 	addi	sp,sp,8
1105468c:	f800283a 	ret

11054690 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
11054690:	defff904 	addi	sp,sp,-28
11054694:	dfc00615 	stw	ra,24(sp)
11054698:	df000515 	stw	fp,20(sp)
1105469c:	df000504 	addi	fp,sp,20
110546a0:	e13ffd15 	stw	r4,-12(fp)
110546a4:	e17ffe15 	stw	r5,-8(fp)
110546a8:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
110546ac:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
110546b0:	e0bffd17 	ldw	r2,-12(fp)
110546b4:	10000616 	blt	r2,zero,110546d0 <lseek+0x40>
110546b8:	e0bffd17 	ldw	r2,-12(fp)
110546bc:	10c00324 	muli	r3,r2,12
110546c0:	00844174 	movhi	r2,4357
110546c4:	109ede04 	addi	r2,r2,31608
110546c8:	1885883a 	add	r2,r3,r2
110546cc:	00000106 	br	110546d4 <lseek+0x44>
110546d0:	0005883a 	mov	r2,zero
110546d4:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
110546d8:	e0bffc17 	ldw	r2,-16(fp)
110546dc:	10001026 	beq	r2,zero,11054720 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
110546e0:	e0bffc17 	ldw	r2,-16(fp)
110546e4:	10800017 	ldw	r2,0(r2)
110546e8:	10800717 	ldw	r2,28(r2)
110546ec:	10000926 	beq	r2,zero,11054714 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
110546f0:	e0bffc17 	ldw	r2,-16(fp)
110546f4:	10800017 	ldw	r2,0(r2)
110546f8:	10800717 	ldw	r2,28(r2)
110546fc:	e1bfff17 	ldw	r6,-4(fp)
11054700:	e17ffe17 	ldw	r5,-8(fp)
11054704:	e13ffc17 	ldw	r4,-16(fp)
11054708:	103ee83a 	callr	r2
1105470c:	e0bffb15 	stw	r2,-20(fp)
11054710:	00000506 	br	11054728 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
11054714:	00bfde84 	movi	r2,-134
11054718:	e0bffb15 	stw	r2,-20(fp)
1105471c:	00000206 	br	11054728 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
11054720:	00bfebc4 	movi	r2,-81
11054724:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
11054728:	e0bffb17 	ldw	r2,-20(fp)
1105472c:	1000070e 	bge	r2,zero,1105474c <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
11054730:	10546540 	call	11054654 <alt_get_errno>
11054734:	1007883a 	mov	r3,r2
11054738:	e0bffb17 	ldw	r2,-20(fp)
1105473c:	0085c83a 	sub	r2,zero,r2
11054740:	18800015 	stw	r2,0(r3)
    rc = -1;
11054744:	00bfffc4 	movi	r2,-1
11054748:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
1105474c:	e0bffb17 	ldw	r2,-20(fp)
}
11054750:	e037883a 	mov	sp,fp
11054754:	dfc00117 	ldw	ra,4(sp)
11054758:	df000017 	ldw	fp,0(sp)
1105475c:	dec00204 	addi	sp,sp,8
11054760:	f800283a 	ret

11054764 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
11054764:	defffd04 	addi	sp,sp,-12
11054768:	dfc00215 	stw	ra,8(sp)
1105476c:	df000115 	stw	fp,4(sp)
11054770:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
11054774:	0009883a 	mov	r4,zero
11054778:	1054c0c0 	call	11054c0c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
1105477c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
11054780:	1054c440 	call	11054c44 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
11054784:	01844174 	movhi	r6,4357
11054788:	319ca304 	addi	r6,r6,29324
1105478c:	01444174 	movhi	r5,4357
11054790:	295ca304 	addi	r5,r5,29324
11054794:	01044174 	movhi	r4,4357
11054798:	211ca304 	addi	r4,r4,29324
1105479c:	1055fd80 	call	11055fd8 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
110547a0:	1055b800 	call	11055b80 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
110547a4:	01044174 	movhi	r4,4357
110547a8:	2116f804 	addi	r4,r4,23520
110547ac:	10567d80 	call	110567d8 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
110547b0:	d0a6d317 	ldw	r2,-25780(gp)
110547b4:	d0e6d417 	ldw	r3,-25776(gp)
110547b8:	d126d517 	ldw	r4,-25772(gp)
110547bc:	200d883a 	mov	r6,r4
110547c0:	180b883a 	mov	r5,r3
110547c4:	1009883a 	mov	r4,r2
110547c8:	1041e5c0 	call	11041e5c <main>
110547cc:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
110547d0:	01000044 	movi	r4,1
110547d4:	10542a00 	call	110542a0 <close>
  exit (result);
110547d8:	e13fff17 	ldw	r4,-4(fp)
110547dc:	10567ec0 	call	110567ec <exit>

110547e0 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
110547e0:	defffe04 	addi	sp,sp,-8
110547e4:	df000115 	stw	fp,4(sp)
110547e8:	df000104 	addi	fp,sp,4
110547ec:	e13fff15 	stw	r4,-4(fp)
}
110547f0:	0001883a 	nop
110547f4:	e037883a 	mov	sp,fp
110547f8:	df000017 	ldw	fp,0(sp)
110547fc:	dec00104 	addi	sp,sp,4
11054800:	f800283a 	ret

11054804 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
11054804:	defffe04 	addi	sp,sp,-8
11054808:	df000115 	stw	fp,4(sp)
1105480c:	df000104 	addi	fp,sp,4
11054810:	e13fff15 	stw	r4,-4(fp)
}
11054814:	0001883a 	nop
11054818:	e037883a 	mov	sp,fp
1105481c:	df000017 	ldw	fp,0(sp)
11054820:	dec00104 	addi	sp,sp,4
11054824:	f800283a 	ret

11054828 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
11054828:	defffe04 	addi	sp,sp,-8
1105482c:	dfc00115 	stw	ra,4(sp)
11054830:	df000015 	stw	fp,0(sp)
11054834:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
11054838:	d0a00b17 	ldw	r2,-32724(gp)
1105483c:	10000326 	beq	r2,zero,1105484c <alt_get_errno+0x24>
11054840:	d0a00b17 	ldw	r2,-32724(gp)
11054844:	103ee83a 	callr	r2
11054848:	00000106 	br	11054850 <alt_get_errno+0x28>
1105484c:	d0a6d204 	addi	r2,gp,-25784
}
11054850:	e037883a 	mov	sp,fp
11054854:	dfc00117 	ldw	ra,4(sp)
11054858:	df000017 	ldw	fp,0(sp)
1105485c:	dec00204 	addi	sp,sp,8
11054860:	f800283a 	ret

11054864 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
11054864:	defff904 	addi	sp,sp,-28
11054868:	dfc00615 	stw	ra,24(sp)
1105486c:	df000515 	stw	fp,20(sp)
11054870:	df000504 	addi	fp,sp,20
11054874:	e13ffd15 	stw	r4,-12(fp)
11054878:	e17ffe15 	stw	r5,-8(fp)
1105487c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
11054880:	e0bffd17 	ldw	r2,-12(fp)
11054884:	10000616 	blt	r2,zero,110548a0 <read+0x3c>
11054888:	e0bffd17 	ldw	r2,-12(fp)
1105488c:	10c00324 	muli	r3,r2,12
11054890:	00844174 	movhi	r2,4357
11054894:	109ede04 	addi	r2,r2,31608
11054898:	1885883a 	add	r2,r3,r2
1105489c:	00000106 	br	110548a4 <read+0x40>
110548a0:	0005883a 	mov	r2,zero
110548a4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
110548a8:	e0bffb17 	ldw	r2,-20(fp)
110548ac:	10002226 	beq	r2,zero,11054938 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
110548b0:	e0bffb17 	ldw	r2,-20(fp)
110548b4:	10800217 	ldw	r2,8(r2)
110548b8:	108000cc 	andi	r2,r2,3
110548bc:	10800060 	cmpeqi	r2,r2,1
110548c0:	1000181e 	bne	r2,zero,11054924 <read+0xc0>
        (fd->dev->read))
110548c4:	e0bffb17 	ldw	r2,-20(fp)
110548c8:	10800017 	ldw	r2,0(r2)
110548cc:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
110548d0:	10001426 	beq	r2,zero,11054924 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
110548d4:	e0bffb17 	ldw	r2,-20(fp)
110548d8:	10800017 	ldw	r2,0(r2)
110548dc:	10800517 	ldw	r2,20(r2)
110548e0:	e0ffff17 	ldw	r3,-4(fp)
110548e4:	180d883a 	mov	r6,r3
110548e8:	e17ffe17 	ldw	r5,-8(fp)
110548ec:	e13ffb17 	ldw	r4,-20(fp)
110548f0:	103ee83a 	callr	r2
110548f4:	e0bffc15 	stw	r2,-16(fp)
110548f8:	e0bffc17 	ldw	r2,-16(fp)
110548fc:	1000070e 	bge	r2,zero,1105491c <read+0xb8>
        {
          ALT_ERRNO = -rval;
11054900:	10548280 	call	11054828 <alt_get_errno>
11054904:	1007883a 	mov	r3,r2
11054908:	e0bffc17 	ldw	r2,-16(fp)
1105490c:	0085c83a 	sub	r2,zero,r2
11054910:	18800015 	stw	r2,0(r3)
          return -1;
11054914:	00bfffc4 	movi	r2,-1
11054918:	00000c06 	br	1105494c <read+0xe8>
        }
        return rval;
1105491c:	e0bffc17 	ldw	r2,-16(fp)
11054920:	00000a06 	br	1105494c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
11054924:	10548280 	call	11054828 <alt_get_errno>
11054928:	1007883a 	mov	r3,r2
1105492c:	00800344 	movi	r2,13
11054930:	18800015 	stw	r2,0(r3)
11054934:	00000406 	br	11054948 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
11054938:	10548280 	call	11054828 <alt_get_errno>
1105493c:	1007883a 	mov	r3,r2
11054940:	00801444 	movi	r2,81
11054944:	18800015 	stw	r2,0(r3)
  }
  return -1;
11054948:	00bfffc4 	movi	r2,-1
}
1105494c:	e037883a 	mov	sp,fp
11054950:	dfc00117 	ldw	ra,4(sp)
11054954:	df000017 	ldw	fp,0(sp)
11054958:	dec00204 	addi	sp,sp,8
1105495c:	f800283a 	ret

11054960 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
11054960:	defffe04 	addi	sp,sp,-8
11054964:	df000115 	stw	fp,4(sp)
11054968:	df000104 	addi	fp,sp,4
1105496c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
11054970:	e0bfff17 	ldw	r2,-4(fp)
11054974:	108000d0 	cmplti	r2,r2,3
11054978:	10000d1e 	bne	r2,zero,110549b0 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
1105497c:	00844174 	movhi	r2,4357
11054980:	109ede04 	addi	r2,r2,31608
11054984:	e0ffff17 	ldw	r3,-4(fp)
11054988:	18c00324 	muli	r3,r3,12
1105498c:	10c5883a 	add	r2,r2,r3
11054990:	10800204 	addi	r2,r2,8
11054994:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
11054998:	00844174 	movhi	r2,4357
1105499c:	109ede04 	addi	r2,r2,31608
110549a0:	e0ffff17 	ldw	r3,-4(fp)
110549a4:	18c00324 	muli	r3,r3,12
110549a8:	10c5883a 	add	r2,r2,r3
110549ac:	10000015 	stw	zero,0(r2)
  }
}
110549b0:	0001883a 	nop
110549b4:	e037883a 	mov	sp,fp
110549b8:	df000017 	ldw	fp,0(sp)
110549bc:	dec00104 	addi	sp,sp,4
110549c0:	f800283a 	ret

110549c4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
110549c4:	defff904 	addi	sp,sp,-28
110549c8:	df000615 	stw	fp,24(sp)
110549cc:	df000604 	addi	fp,sp,24
110549d0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
110549d4:	0005303a 	rdctl	r2,status
110549d8:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
110549dc:	e0fffe17 	ldw	r3,-8(fp)
110549e0:	00bfff84 	movi	r2,-2
110549e4:	1884703a 	and	r2,r3,r2
110549e8:	1001703a 	wrctl	status,r2
  
  return context;
110549ec:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
110549f0:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
110549f4:	d0a00c17 	ldw	r2,-32720(gp)
110549f8:	10c000c4 	addi	r3,r2,3
110549fc:	00bfff04 	movi	r2,-4
11054a00:	1884703a 	and	r2,r3,r2
11054a04:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
11054a08:	d0e00c17 	ldw	r3,-32720(gp)
11054a0c:	e0bfff17 	ldw	r2,-4(fp)
11054a10:	1887883a 	add	r3,r3,r2
11054a14:	00844234 	movhi	r2,4360
11054a18:	10800004 	addi	r2,r2,0
11054a1c:	10c0062e 	bgeu	r2,r3,11054a38 <sbrk+0x74>
11054a20:	e0bffb17 	ldw	r2,-20(fp)
11054a24:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
11054a28:	e0bffa17 	ldw	r2,-24(fp)
11054a2c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
11054a30:	00bfffc4 	movi	r2,-1
11054a34:	00000b06 	br	11054a64 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
11054a38:	d0a00c17 	ldw	r2,-32720(gp)
11054a3c:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
11054a40:	d0e00c17 	ldw	r3,-32720(gp)
11054a44:	e0bfff17 	ldw	r2,-4(fp)
11054a48:	1885883a 	add	r2,r3,r2
11054a4c:	d0a00c15 	stw	r2,-32720(gp)
11054a50:	e0bffb17 	ldw	r2,-20(fp)
11054a54:	e0bffc15 	stw	r2,-16(fp)
11054a58:	e0bffc17 	ldw	r2,-16(fp)
11054a5c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
11054a60:	e0bffd17 	ldw	r2,-12(fp)
} 
11054a64:	e037883a 	mov	sp,fp
11054a68:	df000017 	ldw	fp,0(sp)
11054a6c:	dec00104 	addi	sp,sp,4
11054a70:	f800283a 	ret

11054a74 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
11054a74:	defffd04 	addi	sp,sp,-12
11054a78:	dfc00215 	stw	ra,8(sp)
11054a7c:	df000115 	stw	fp,4(sp)
11054a80:	df000104 	addi	fp,sp,4
11054a84:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
11054a88:	e13fff17 	ldw	r4,-4(fp)
11054a8c:	10559300 	call	11055930 <alt_busy_sleep>
}
11054a90:	e037883a 	mov	sp,fp
11054a94:	dfc00117 	ldw	ra,4(sp)
11054a98:	df000017 	ldw	fp,0(sp)
11054a9c:	dec00204 	addi	sp,sp,8
11054aa0:	f800283a 	ret

11054aa4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
11054aa4:	defffe04 	addi	sp,sp,-8
11054aa8:	dfc00115 	stw	ra,4(sp)
11054aac:	df000015 	stw	fp,0(sp)
11054ab0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
11054ab4:	d0a00b17 	ldw	r2,-32724(gp)
11054ab8:	10000326 	beq	r2,zero,11054ac8 <alt_get_errno+0x24>
11054abc:	d0a00b17 	ldw	r2,-32724(gp)
11054ac0:	103ee83a 	callr	r2
11054ac4:	00000106 	br	11054acc <alt_get_errno+0x28>
11054ac8:	d0a6d204 	addi	r2,gp,-25784
}
11054acc:	e037883a 	mov	sp,fp
11054ad0:	dfc00117 	ldw	ra,4(sp)
11054ad4:	df000017 	ldw	fp,0(sp)
11054ad8:	dec00204 	addi	sp,sp,8
11054adc:	f800283a 	ret

11054ae0 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
11054ae0:	defff904 	addi	sp,sp,-28
11054ae4:	dfc00615 	stw	ra,24(sp)
11054ae8:	df000515 	stw	fp,20(sp)
11054aec:	df000504 	addi	fp,sp,20
11054af0:	e13ffd15 	stw	r4,-12(fp)
11054af4:	e17ffe15 	stw	r5,-8(fp)
11054af8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
11054afc:	e0bffd17 	ldw	r2,-12(fp)
11054b00:	10000616 	blt	r2,zero,11054b1c <write+0x3c>
11054b04:	e0bffd17 	ldw	r2,-12(fp)
11054b08:	10c00324 	muli	r3,r2,12
11054b0c:	00844174 	movhi	r2,4357
11054b10:	109ede04 	addi	r2,r2,31608
11054b14:	1885883a 	add	r2,r3,r2
11054b18:	00000106 	br	11054b20 <write+0x40>
11054b1c:	0005883a 	mov	r2,zero
11054b20:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
11054b24:	e0bffb17 	ldw	r2,-20(fp)
11054b28:	10002126 	beq	r2,zero,11054bb0 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
11054b2c:	e0bffb17 	ldw	r2,-20(fp)
11054b30:	10800217 	ldw	r2,8(r2)
11054b34:	108000cc 	andi	r2,r2,3
11054b38:	10001826 	beq	r2,zero,11054b9c <write+0xbc>
11054b3c:	e0bffb17 	ldw	r2,-20(fp)
11054b40:	10800017 	ldw	r2,0(r2)
11054b44:	10800617 	ldw	r2,24(r2)
11054b48:	10001426 	beq	r2,zero,11054b9c <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
11054b4c:	e0bffb17 	ldw	r2,-20(fp)
11054b50:	10800017 	ldw	r2,0(r2)
11054b54:	10800617 	ldw	r2,24(r2)
11054b58:	e0ffff17 	ldw	r3,-4(fp)
11054b5c:	180d883a 	mov	r6,r3
11054b60:	e17ffe17 	ldw	r5,-8(fp)
11054b64:	e13ffb17 	ldw	r4,-20(fp)
11054b68:	103ee83a 	callr	r2
11054b6c:	e0bffc15 	stw	r2,-16(fp)
11054b70:	e0bffc17 	ldw	r2,-16(fp)
11054b74:	1000070e 	bge	r2,zero,11054b94 <write+0xb4>
      {
        ALT_ERRNO = -rval;
11054b78:	1054aa40 	call	11054aa4 <alt_get_errno>
11054b7c:	1007883a 	mov	r3,r2
11054b80:	e0bffc17 	ldw	r2,-16(fp)
11054b84:	0085c83a 	sub	r2,zero,r2
11054b88:	18800015 	stw	r2,0(r3)
        return -1;
11054b8c:	00bfffc4 	movi	r2,-1
11054b90:	00000c06 	br	11054bc4 <write+0xe4>
      }
      return rval;
11054b94:	e0bffc17 	ldw	r2,-16(fp)
11054b98:	00000a06 	br	11054bc4 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
11054b9c:	1054aa40 	call	11054aa4 <alt_get_errno>
11054ba0:	1007883a 	mov	r3,r2
11054ba4:	00800344 	movi	r2,13
11054ba8:	18800015 	stw	r2,0(r3)
11054bac:	00000406 	br	11054bc0 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
11054bb0:	1054aa40 	call	11054aa4 <alt_get_errno>
11054bb4:	1007883a 	mov	r3,r2
11054bb8:	00801444 	movi	r2,81
11054bbc:	18800015 	stw	r2,0(r3)
  }
  return -1;
11054bc0:	00bfffc4 	movi	r2,-1
}
11054bc4:	e037883a 	mov	sp,fp
11054bc8:	dfc00117 	ldw	ra,4(sp)
11054bcc:	df000017 	ldw	fp,0(sp)
11054bd0:	dec00204 	addi	sp,sp,8
11054bd4:	f800283a 	ret

11054bd8 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
11054bd8:	defffd04 	addi	sp,sp,-12
11054bdc:	dfc00215 	stw	ra,8(sp)
11054be0:	df000115 	stw	fp,4(sp)
11054be4:	df000104 	addi	fp,sp,4
11054be8:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
11054bec:	d1600804 	addi	r5,gp,-32736
11054bf0:	e13fff17 	ldw	r4,-4(fp)
11054bf4:	1055adc0 	call	11055adc <alt_dev_llist_insert>
}
11054bf8:	e037883a 	mov	sp,fp
11054bfc:	dfc00117 	ldw	ra,4(sp)
11054c00:	df000017 	ldw	fp,0(sp)
11054c04:	dec00204 	addi	sp,sp,8
11054c08:	f800283a 	ret

11054c0c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
11054c0c:	defffd04 	addi	sp,sp,-12
11054c10:	dfc00215 	stw	ra,8(sp)
11054c14:	df000115 	stw	fp,4(sp)
11054c18:	df000104 	addi	fp,sp,4
11054c1c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
11054c20:	105644c0 	call	1105644c <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
11054c24:	00800044 	movi	r2,1
11054c28:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
11054c2c:	0001883a 	nop
11054c30:	e037883a 	mov	sp,fp
11054c34:	dfc00117 	ldw	ra,4(sp)
11054c38:	df000017 	ldw	fp,0(sp)
11054c3c:	dec00204 	addi	sp,sp,8
11054c40:	f800283a 	ret

11054c44 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
11054c44:	defffe04 	addi	sp,sp,-8
11054c48:	dfc00115 	stw	ra,4(sp)
11054c4c:	df000015 	stw	fp,0(sp)
11054c50:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
11054c54:	01c0fa04 	movi	r7,1000
11054c58:	018000c4 	movi	r6,3
11054c5c:	000b883a 	mov	r5,zero
11054c60:	01044234 	movhi	r4,4360
11054c64:	21080004 	addi	r4,r4,8192
11054c68:	10557880 	call	11055788 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
11054c6c:	000d883a 	mov	r6,zero
11054c70:	000b883a 	mov	r5,zero
11054c74:	01044174 	movhi	r4,4357
11054c78:	211f4804 	addi	r4,r4,32032
11054c7c:	1054e0c0 	call	11054e0c <altera_avalon_jtag_uart_init>
11054c80:	01044174 	movhi	r4,4357
11054c84:	211f3e04 	addi	r4,r4,31992
11054c88:	1054bd80 	call	11054bd8 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
11054c8c:	0001883a 	nop
}
11054c90:	0001883a 	nop
11054c94:	e037883a 	mov	sp,fp
11054c98:	dfc00117 	ldw	ra,4(sp)
11054c9c:	df000017 	ldw	fp,0(sp)
11054ca0:	dec00204 	addi	sp,sp,8
11054ca4:	f800283a 	ret

11054ca8 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
11054ca8:	defffa04 	addi	sp,sp,-24
11054cac:	dfc00515 	stw	ra,20(sp)
11054cb0:	df000415 	stw	fp,16(sp)
11054cb4:	df000404 	addi	fp,sp,16
11054cb8:	e13ffd15 	stw	r4,-12(fp)
11054cbc:	e17ffe15 	stw	r5,-8(fp)
11054cc0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
11054cc4:	e0bffd17 	ldw	r2,-12(fp)
11054cc8:	10800017 	ldw	r2,0(r2)
11054ccc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
11054cd0:	e0bffc17 	ldw	r2,-16(fp)
11054cd4:	10c00a04 	addi	r3,r2,40
11054cd8:	e0bffd17 	ldw	r2,-12(fp)
11054cdc:	10800217 	ldw	r2,8(r2)
11054ce0:	100f883a 	mov	r7,r2
11054ce4:	e1bfff17 	ldw	r6,-4(fp)
11054ce8:	e17ffe17 	ldw	r5,-8(fp)
11054cec:	1809883a 	mov	r4,r3
11054cf0:	10552d00 	call	110552d0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
11054cf4:	e037883a 	mov	sp,fp
11054cf8:	dfc00117 	ldw	ra,4(sp)
11054cfc:	df000017 	ldw	fp,0(sp)
11054d00:	dec00204 	addi	sp,sp,8
11054d04:	f800283a 	ret

11054d08 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
11054d08:	defffa04 	addi	sp,sp,-24
11054d0c:	dfc00515 	stw	ra,20(sp)
11054d10:	df000415 	stw	fp,16(sp)
11054d14:	df000404 	addi	fp,sp,16
11054d18:	e13ffd15 	stw	r4,-12(fp)
11054d1c:	e17ffe15 	stw	r5,-8(fp)
11054d20:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
11054d24:	e0bffd17 	ldw	r2,-12(fp)
11054d28:	10800017 	ldw	r2,0(r2)
11054d2c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
11054d30:	e0bffc17 	ldw	r2,-16(fp)
11054d34:	10c00a04 	addi	r3,r2,40
11054d38:	e0bffd17 	ldw	r2,-12(fp)
11054d3c:	10800217 	ldw	r2,8(r2)
11054d40:	100f883a 	mov	r7,r2
11054d44:	e1bfff17 	ldw	r6,-4(fp)
11054d48:	e17ffe17 	ldw	r5,-8(fp)
11054d4c:	1809883a 	mov	r4,r3
11054d50:	10554ec0 	call	110554ec <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
11054d54:	e037883a 	mov	sp,fp
11054d58:	dfc00117 	ldw	ra,4(sp)
11054d5c:	df000017 	ldw	fp,0(sp)
11054d60:	dec00204 	addi	sp,sp,8
11054d64:	f800283a 	ret

11054d68 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
11054d68:	defffc04 	addi	sp,sp,-16
11054d6c:	dfc00315 	stw	ra,12(sp)
11054d70:	df000215 	stw	fp,8(sp)
11054d74:	df000204 	addi	fp,sp,8
11054d78:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
11054d7c:	e0bfff17 	ldw	r2,-4(fp)
11054d80:	10800017 	ldw	r2,0(r2)
11054d84:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
11054d88:	e0bffe17 	ldw	r2,-8(fp)
11054d8c:	10c00a04 	addi	r3,r2,40
11054d90:	e0bfff17 	ldw	r2,-4(fp)
11054d94:	10800217 	ldw	r2,8(r2)
11054d98:	100b883a 	mov	r5,r2
11054d9c:	1809883a 	mov	r4,r3
11054da0:	10551780 	call	11055178 <altera_avalon_jtag_uart_close>
}
11054da4:	e037883a 	mov	sp,fp
11054da8:	dfc00117 	ldw	ra,4(sp)
11054dac:	df000017 	ldw	fp,0(sp)
11054db0:	dec00204 	addi	sp,sp,8
11054db4:	f800283a 	ret

11054db8 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
11054db8:	defffa04 	addi	sp,sp,-24
11054dbc:	dfc00515 	stw	ra,20(sp)
11054dc0:	df000415 	stw	fp,16(sp)
11054dc4:	df000404 	addi	fp,sp,16
11054dc8:	e13ffd15 	stw	r4,-12(fp)
11054dcc:	e17ffe15 	stw	r5,-8(fp)
11054dd0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
11054dd4:	e0bffd17 	ldw	r2,-12(fp)
11054dd8:	10800017 	ldw	r2,0(r2)
11054ddc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
11054de0:	e0bffc17 	ldw	r2,-16(fp)
11054de4:	10800a04 	addi	r2,r2,40
11054de8:	e1bfff17 	ldw	r6,-4(fp)
11054dec:	e17ffe17 	ldw	r5,-8(fp)
11054df0:	1009883a 	mov	r4,r2
11054df4:	10551e00 	call	110551e0 <altera_avalon_jtag_uart_ioctl>
}
11054df8:	e037883a 	mov	sp,fp
11054dfc:	dfc00117 	ldw	ra,4(sp)
11054e00:	df000017 	ldw	fp,0(sp)
11054e04:	dec00204 	addi	sp,sp,8
11054e08:	f800283a 	ret

11054e0c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
11054e0c:	defffa04 	addi	sp,sp,-24
11054e10:	dfc00515 	stw	ra,20(sp)
11054e14:	df000415 	stw	fp,16(sp)
11054e18:	df000404 	addi	fp,sp,16
11054e1c:	e13ffd15 	stw	r4,-12(fp)
11054e20:	e17ffe15 	stw	r5,-8(fp)
11054e24:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
11054e28:	e0bffd17 	ldw	r2,-12(fp)
11054e2c:	00c00044 	movi	r3,1
11054e30:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
11054e34:	e0bffd17 	ldw	r2,-12(fp)
11054e38:	10800017 	ldw	r2,0(r2)
11054e3c:	10800104 	addi	r2,r2,4
11054e40:	1007883a 	mov	r3,r2
11054e44:	e0bffd17 	ldw	r2,-12(fp)
11054e48:	10800817 	ldw	r2,32(r2)
11054e4c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
11054e50:	e0bffe17 	ldw	r2,-8(fp)
11054e54:	e0ffff17 	ldw	r3,-4(fp)
11054e58:	d8000015 	stw	zero,0(sp)
11054e5c:	e1fffd17 	ldw	r7,-12(fp)
11054e60:	01844174 	movhi	r6,4357
11054e64:	3193b304 	addi	r6,r6,20172
11054e68:	180b883a 	mov	r5,r3
11054e6c:	1009883a 	mov	r4,r2
11054e70:	1055c740 	call	11055c74 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
11054e74:	e0bffd17 	ldw	r2,-12(fp)
11054e78:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
11054e7c:	e0bffd17 	ldw	r2,-12(fp)
11054e80:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
11054e84:	d0e6d717 	ldw	r3,-25764(gp)
11054e88:	e1fffd17 	ldw	r7,-12(fp)
11054e8c:	01844174 	movhi	r6,4357
11054e90:	31943604 	addi	r6,r6,20696
11054e94:	180b883a 	mov	r5,r3
11054e98:	1009883a 	mov	r4,r2
11054e9c:	10558040 	call	11055804 <alt_alarm_start>
11054ea0:	1000040e 	bge	r2,zero,11054eb4 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
11054ea4:	e0fffd17 	ldw	r3,-12(fp)
11054ea8:	00a00034 	movhi	r2,32768
11054eac:	10bfffc4 	addi	r2,r2,-1
11054eb0:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
11054eb4:	0001883a 	nop
11054eb8:	e037883a 	mov	sp,fp
11054ebc:	dfc00117 	ldw	ra,4(sp)
11054ec0:	df000017 	ldw	fp,0(sp)
11054ec4:	dec00204 	addi	sp,sp,8
11054ec8:	f800283a 	ret

11054ecc <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
11054ecc:	defff804 	addi	sp,sp,-32
11054ed0:	df000715 	stw	fp,28(sp)
11054ed4:	df000704 	addi	fp,sp,28
11054ed8:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
11054edc:	e0bfff17 	ldw	r2,-4(fp)
11054ee0:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
11054ee4:	e0bffb17 	ldw	r2,-20(fp)
11054ee8:	10800017 	ldw	r2,0(r2)
11054eec:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
11054ef0:	e0bffc17 	ldw	r2,-16(fp)
11054ef4:	10800104 	addi	r2,r2,4
11054ef8:	10800037 	ldwio	r2,0(r2)
11054efc:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
11054f00:	e0bffd17 	ldw	r2,-12(fp)
11054f04:	1080c00c 	andi	r2,r2,768
11054f08:	10006d26 	beq	r2,zero,110550c0 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
11054f0c:	e0bffd17 	ldw	r2,-12(fp)
11054f10:	1080400c 	andi	r2,r2,256
11054f14:	10003526 	beq	r2,zero,11054fec <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
11054f18:	00800074 	movhi	r2,1
11054f1c:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
11054f20:	e0bffb17 	ldw	r2,-20(fp)
11054f24:	10800a17 	ldw	r2,40(r2)
11054f28:	10800044 	addi	r2,r2,1
11054f2c:	1081ffcc 	andi	r2,r2,2047
11054f30:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
11054f34:	e0bffb17 	ldw	r2,-20(fp)
11054f38:	10c00b17 	ldw	r3,44(r2)
11054f3c:	e0bffe17 	ldw	r2,-8(fp)
11054f40:	18801526 	beq	r3,r2,11054f98 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
11054f44:	e0bffc17 	ldw	r2,-16(fp)
11054f48:	10800037 	ldwio	r2,0(r2)
11054f4c:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
11054f50:	e0bff917 	ldw	r2,-28(fp)
11054f54:	10a0000c 	andi	r2,r2,32768
11054f58:	10001126 	beq	r2,zero,11054fa0 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
11054f5c:	e0bffb17 	ldw	r2,-20(fp)
11054f60:	10800a17 	ldw	r2,40(r2)
11054f64:	e0fff917 	ldw	r3,-28(fp)
11054f68:	1809883a 	mov	r4,r3
11054f6c:	e0fffb17 	ldw	r3,-20(fp)
11054f70:	1885883a 	add	r2,r3,r2
11054f74:	10800e04 	addi	r2,r2,56
11054f78:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
11054f7c:	e0bffb17 	ldw	r2,-20(fp)
11054f80:	10800a17 	ldw	r2,40(r2)
11054f84:	10800044 	addi	r2,r2,1
11054f88:	10c1ffcc 	andi	r3,r2,2047
11054f8c:	e0bffb17 	ldw	r2,-20(fp)
11054f90:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
11054f94:	003fe206 	br	11054f20 <altera_avalon_jtag_uart_irq+0x54>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
11054f98:	0001883a 	nop
11054f9c:	00000106 	br	11054fa4 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
11054fa0:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
11054fa4:	e0bff917 	ldw	r2,-28(fp)
11054fa8:	10bfffec 	andhi	r2,r2,65535
11054fac:	10000f26 	beq	r2,zero,11054fec <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
11054fb0:	e0bffb17 	ldw	r2,-20(fp)
11054fb4:	10c00817 	ldw	r3,32(r2)
11054fb8:	00bfff84 	movi	r2,-2
11054fbc:	1886703a 	and	r3,r3,r2
11054fc0:	e0bffb17 	ldw	r2,-20(fp)
11054fc4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
11054fc8:	e0bffc17 	ldw	r2,-16(fp)
11054fcc:	10800104 	addi	r2,r2,4
11054fd0:	1007883a 	mov	r3,r2
11054fd4:	e0bffb17 	ldw	r2,-20(fp)
11054fd8:	10800817 	ldw	r2,32(r2)
11054fdc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
11054fe0:	e0bffc17 	ldw	r2,-16(fp)
11054fe4:	10800104 	addi	r2,r2,4
11054fe8:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
11054fec:	e0bffd17 	ldw	r2,-12(fp)
11054ff0:	1080800c 	andi	r2,r2,512
11054ff4:	103fbe26 	beq	r2,zero,11054ef0 <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
11054ff8:	e0bffd17 	ldw	r2,-12(fp)
11054ffc:	1004d43a 	srli	r2,r2,16
11055000:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
11055004:	00001406 	br	11055058 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
11055008:	e0bffc17 	ldw	r2,-16(fp)
1105500c:	e0fffb17 	ldw	r3,-20(fp)
11055010:	18c00d17 	ldw	r3,52(r3)
11055014:	e13ffb17 	ldw	r4,-20(fp)
11055018:	20c7883a 	add	r3,r4,r3
1105501c:	18c20e04 	addi	r3,r3,2104
11055020:	18c00003 	ldbu	r3,0(r3)
11055024:	18c03fcc 	andi	r3,r3,255
11055028:	18c0201c 	xori	r3,r3,128
1105502c:	18ffe004 	addi	r3,r3,-128
11055030:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
11055034:	e0bffb17 	ldw	r2,-20(fp)
11055038:	10800d17 	ldw	r2,52(r2)
1105503c:	10800044 	addi	r2,r2,1
11055040:	10c1ffcc 	andi	r3,r2,2047
11055044:	e0bffb17 	ldw	r2,-20(fp)
11055048:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
1105504c:	e0bffa17 	ldw	r2,-24(fp)
11055050:	10bfffc4 	addi	r2,r2,-1
11055054:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
11055058:	e0bffa17 	ldw	r2,-24(fp)
1105505c:	10000526 	beq	r2,zero,11055074 <altera_avalon_jtag_uart_irq+0x1a8>
11055060:	e0bffb17 	ldw	r2,-20(fp)
11055064:	10c00d17 	ldw	r3,52(r2)
11055068:	e0bffb17 	ldw	r2,-20(fp)
1105506c:	10800c17 	ldw	r2,48(r2)
11055070:	18bfe51e 	bne	r3,r2,11055008 <altera_avalon_jtag_uart_irq+0x13c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
11055074:	e0bffa17 	ldw	r2,-24(fp)
11055078:	103f9d26 	beq	r2,zero,11054ef0 <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1105507c:	e0bffb17 	ldw	r2,-20(fp)
11055080:	10c00817 	ldw	r3,32(r2)
11055084:	00bfff44 	movi	r2,-3
11055088:	1886703a 	and	r3,r3,r2
1105508c:	e0bffb17 	ldw	r2,-20(fp)
11055090:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
11055094:	e0bffb17 	ldw	r2,-20(fp)
11055098:	10800017 	ldw	r2,0(r2)
1105509c:	10800104 	addi	r2,r2,4
110550a0:	1007883a 	mov	r3,r2
110550a4:	e0bffb17 	ldw	r2,-20(fp)
110550a8:	10800817 	ldw	r2,32(r2)
110550ac:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
110550b0:	e0bffc17 	ldw	r2,-16(fp)
110550b4:	10800104 	addi	r2,r2,4
110550b8:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
110550bc:	003f8c06 	br	11054ef0 <altera_avalon_jtag_uart_irq+0x24>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
110550c0:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
110550c4:	0001883a 	nop
110550c8:	e037883a 	mov	sp,fp
110550cc:	df000017 	ldw	fp,0(sp)
110550d0:	dec00104 	addi	sp,sp,4
110550d4:	f800283a 	ret

110550d8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
110550d8:	defff804 	addi	sp,sp,-32
110550dc:	df000715 	stw	fp,28(sp)
110550e0:	df000704 	addi	fp,sp,28
110550e4:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
110550e8:	e0bffb17 	ldw	r2,-20(fp)
110550ec:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
110550f0:	e0bff917 	ldw	r2,-28(fp)
110550f4:	10800017 	ldw	r2,0(r2)
110550f8:	10800104 	addi	r2,r2,4
110550fc:	10800037 	ldwio	r2,0(r2)
11055100:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
11055104:	e0bffa17 	ldw	r2,-24(fp)
11055108:	1081000c 	andi	r2,r2,1024
1105510c:	10000b26 	beq	r2,zero,1105513c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
11055110:	e0bff917 	ldw	r2,-28(fp)
11055114:	10800017 	ldw	r2,0(r2)
11055118:	10800104 	addi	r2,r2,4
1105511c:	1007883a 	mov	r3,r2
11055120:	e0bff917 	ldw	r2,-28(fp)
11055124:	10800817 	ldw	r2,32(r2)
11055128:	10810014 	ori	r2,r2,1024
1105512c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
11055130:	e0bff917 	ldw	r2,-28(fp)
11055134:	10000915 	stw	zero,36(r2)
11055138:	00000a06 	br	11055164 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
1105513c:	e0bff917 	ldw	r2,-28(fp)
11055140:	10c00917 	ldw	r3,36(r2)
11055144:	00a00034 	movhi	r2,32768
11055148:	10bfff04 	addi	r2,r2,-4
1105514c:	10c00536 	bltu	r2,r3,11055164 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
11055150:	e0bff917 	ldw	r2,-28(fp)
11055154:	10800917 	ldw	r2,36(r2)
11055158:	10c00044 	addi	r3,r2,1
1105515c:	e0bff917 	ldw	r2,-28(fp)
11055160:	10c00915 	stw	r3,36(r2)
11055164:	d0a6d717 	ldw	r2,-25764(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
11055168:	e037883a 	mov	sp,fp
1105516c:	df000017 	ldw	fp,0(sp)
11055170:	dec00104 	addi	sp,sp,4
11055174:	f800283a 	ret

11055178 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
11055178:	defffd04 	addi	sp,sp,-12
1105517c:	df000215 	stw	fp,8(sp)
11055180:	df000204 	addi	fp,sp,8
11055184:	e13ffe15 	stw	r4,-8(fp)
11055188:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1105518c:	00000506 	br	110551a4 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
11055190:	e0bfff17 	ldw	r2,-4(fp)
11055194:	1090000c 	andi	r2,r2,16384
11055198:	10000226 	beq	r2,zero,110551a4 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
1105519c:	00bffd44 	movi	r2,-11
110551a0:	00000b06 	br	110551d0 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
110551a4:	e0bffe17 	ldw	r2,-8(fp)
110551a8:	10c00d17 	ldw	r3,52(r2)
110551ac:	e0bffe17 	ldw	r2,-8(fp)
110551b0:	10800c17 	ldw	r2,48(r2)
110551b4:	18800526 	beq	r3,r2,110551cc <altera_avalon_jtag_uart_close+0x54>
110551b8:	e0bffe17 	ldw	r2,-8(fp)
110551bc:	10c00917 	ldw	r3,36(r2)
110551c0:	e0bffe17 	ldw	r2,-8(fp)
110551c4:	10800117 	ldw	r2,4(r2)
110551c8:	18bff136 	bltu	r3,r2,11055190 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
110551cc:	0005883a 	mov	r2,zero
}
110551d0:	e037883a 	mov	sp,fp
110551d4:	df000017 	ldw	fp,0(sp)
110551d8:	dec00104 	addi	sp,sp,4
110551dc:	f800283a 	ret

110551e0 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
110551e0:	defffa04 	addi	sp,sp,-24
110551e4:	df000515 	stw	fp,20(sp)
110551e8:	df000504 	addi	fp,sp,20
110551ec:	e13ffd15 	stw	r4,-12(fp)
110551f0:	e17ffe15 	stw	r5,-8(fp)
110551f4:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
110551f8:	00bff9c4 	movi	r2,-25
110551fc:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
11055200:	e0bffe17 	ldw	r2,-8(fp)
11055204:	10da8060 	cmpeqi	r3,r2,27137
11055208:	1800031e 	bne	r3,zero,11055218 <altera_avalon_jtag_uart_ioctl+0x38>
1105520c:	109a80a0 	cmpeqi	r2,r2,27138
11055210:	1000181e 	bne	r2,zero,11055274 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
11055214:	00002906 	br	110552bc <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
11055218:	e0bffd17 	ldw	r2,-12(fp)
1105521c:	10c00117 	ldw	r3,4(r2)
11055220:	00a00034 	movhi	r2,32768
11055224:	10bfffc4 	addi	r2,r2,-1
11055228:	18802126 	beq	r3,r2,110552b0 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
1105522c:	e0bfff17 	ldw	r2,-4(fp)
11055230:	10800017 	ldw	r2,0(r2)
11055234:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
11055238:	e0bffc17 	ldw	r2,-16(fp)
1105523c:	10800090 	cmplti	r2,r2,2
11055240:	1000061e 	bne	r2,zero,1105525c <altera_avalon_jtag_uart_ioctl+0x7c>
11055244:	e0fffc17 	ldw	r3,-16(fp)
11055248:	00a00034 	movhi	r2,32768
1105524c:	10bfffc4 	addi	r2,r2,-1
11055250:	18800226 	beq	r3,r2,1105525c <altera_avalon_jtag_uart_ioctl+0x7c>
11055254:	e0bffc17 	ldw	r2,-16(fp)
11055258:	00000206 	br	11055264 <altera_avalon_jtag_uart_ioctl+0x84>
1105525c:	00a00034 	movhi	r2,32768
11055260:	10bfff84 	addi	r2,r2,-2
11055264:	e0fffd17 	ldw	r3,-12(fp)
11055268:	18800115 	stw	r2,4(r3)
      rc = 0;
1105526c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
11055270:	00000f06 	br	110552b0 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
11055274:	e0bffd17 	ldw	r2,-12(fp)
11055278:	10c00117 	ldw	r3,4(r2)
1105527c:	00a00034 	movhi	r2,32768
11055280:	10bfffc4 	addi	r2,r2,-1
11055284:	18800c26 	beq	r3,r2,110552b8 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
11055288:	e0bffd17 	ldw	r2,-12(fp)
1105528c:	10c00917 	ldw	r3,36(r2)
11055290:	e0bffd17 	ldw	r2,-12(fp)
11055294:	10800117 	ldw	r2,4(r2)
11055298:	1885803a 	cmpltu	r2,r3,r2
1105529c:	10c03fcc 	andi	r3,r2,255
110552a0:	e0bfff17 	ldw	r2,-4(fp)
110552a4:	10c00015 	stw	r3,0(r2)
      rc = 0;
110552a8:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
110552ac:	00000206 	br	110552b8 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
110552b0:	0001883a 	nop
110552b4:	00000106 	br	110552bc <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
110552b8:	0001883a 	nop

  default:
    break;
  }

  return rc;
110552bc:	e0bffb17 	ldw	r2,-20(fp)
}
110552c0:	e037883a 	mov	sp,fp
110552c4:	df000017 	ldw	fp,0(sp)
110552c8:	dec00104 	addi	sp,sp,4
110552cc:	f800283a 	ret

110552d0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
110552d0:	defff304 	addi	sp,sp,-52
110552d4:	dfc00c15 	stw	ra,48(sp)
110552d8:	df000b15 	stw	fp,44(sp)
110552dc:	df000b04 	addi	fp,sp,44
110552e0:	e13ffc15 	stw	r4,-16(fp)
110552e4:	e17ffd15 	stw	r5,-12(fp)
110552e8:	e1bffe15 	stw	r6,-8(fp)
110552ec:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
110552f0:	e0bffd17 	ldw	r2,-12(fp)
110552f4:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
110552f8:	00004706 	br	11055418 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
110552fc:	e0bffc17 	ldw	r2,-16(fp)
11055300:	10800a17 	ldw	r2,40(r2)
11055304:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
11055308:	e0bffc17 	ldw	r2,-16(fp)
1105530c:	10800b17 	ldw	r2,44(r2)
11055310:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
11055314:	e0fff717 	ldw	r3,-36(fp)
11055318:	e0bff817 	ldw	r2,-32(fp)
1105531c:	18800536 	bltu	r3,r2,11055334 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
11055320:	e0fff717 	ldw	r3,-36(fp)
11055324:	e0bff817 	ldw	r2,-32(fp)
11055328:	1885c83a 	sub	r2,r3,r2
1105532c:	e0bff615 	stw	r2,-40(fp)
11055330:	00000406 	br	11055344 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
11055334:	00c20004 	movi	r3,2048
11055338:	e0bff817 	ldw	r2,-32(fp)
1105533c:	1885c83a 	sub	r2,r3,r2
11055340:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
11055344:	e0bff617 	ldw	r2,-40(fp)
11055348:	10001e26 	beq	r2,zero,110553c4 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
1105534c:	e0fffe17 	ldw	r3,-8(fp)
11055350:	e0bff617 	ldw	r2,-40(fp)
11055354:	1880022e 	bgeu	r3,r2,11055360 <altera_avalon_jtag_uart_read+0x90>
        n = space;
11055358:	e0bffe17 	ldw	r2,-8(fp)
1105535c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
11055360:	e0bffc17 	ldw	r2,-16(fp)
11055364:	10c00e04 	addi	r3,r2,56
11055368:	e0bff817 	ldw	r2,-32(fp)
1105536c:	1885883a 	add	r2,r3,r2
11055370:	e1bff617 	ldw	r6,-40(fp)
11055374:	100b883a 	mov	r5,r2
11055378:	e13ff517 	ldw	r4,-44(fp)
1105537c:	104dd9c0 	call	1104dd9c <memcpy>
      ptr   += n;
11055380:	e0fff517 	ldw	r3,-44(fp)
11055384:	e0bff617 	ldw	r2,-40(fp)
11055388:	1885883a 	add	r2,r3,r2
1105538c:	e0bff515 	stw	r2,-44(fp)
      space -= n;
11055390:	e0fffe17 	ldw	r3,-8(fp)
11055394:	e0bff617 	ldw	r2,-40(fp)
11055398:	1885c83a 	sub	r2,r3,r2
1105539c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
110553a0:	e0fff817 	ldw	r3,-32(fp)
110553a4:	e0bff617 	ldw	r2,-40(fp)
110553a8:	1885883a 	add	r2,r3,r2
110553ac:	10c1ffcc 	andi	r3,r2,2047
110553b0:	e0bffc17 	ldw	r2,-16(fp)
110553b4:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
110553b8:	e0bffe17 	ldw	r2,-8(fp)
110553bc:	00bfcf16 	blt	zero,r2,110552fc <altera_avalon_jtag_uart_read+0x2c>
110553c0:	00000106 	br	110553c8 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
110553c4:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
110553c8:	e0fff517 	ldw	r3,-44(fp)
110553cc:	e0bffd17 	ldw	r2,-12(fp)
110553d0:	1880141e 	bne	r3,r2,11055424 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
110553d4:	e0bfff17 	ldw	r2,-4(fp)
110553d8:	1090000c 	andi	r2,r2,16384
110553dc:	1000131e 	bne	r2,zero,1105542c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
110553e0:	0001883a 	nop
110553e4:	e0bffc17 	ldw	r2,-16(fp)
110553e8:	10c00a17 	ldw	r3,40(r2)
110553ec:	e0bff717 	ldw	r2,-36(fp)
110553f0:	1880051e 	bne	r3,r2,11055408 <altera_avalon_jtag_uart_read+0x138>
110553f4:	e0bffc17 	ldw	r2,-16(fp)
110553f8:	10c00917 	ldw	r3,36(r2)
110553fc:	e0bffc17 	ldw	r2,-16(fp)
11055400:	10800117 	ldw	r2,4(r2)
11055404:	18bff736 	bltu	r3,r2,110553e4 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
11055408:	e0bffc17 	ldw	r2,-16(fp)
1105540c:	10c00a17 	ldw	r3,40(r2)
11055410:	e0bff717 	ldw	r2,-36(fp)
11055414:	18800726 	beq	r3,r2,11055434 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
11055418:	e0bffe17 	ldw	r2,-8(fp)
1105541c:	00bfb716 	blt	zero,r2,110552fc <altera_avalon_jtag_uart_read+0x2c>
11055420:	00000506 	br	11055438 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
11055424:	0001883a 	nop
11055428:	00000306 	br	11055438 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
1105542c:	0001883a 	nop
11055430:	00000106 	br	11055438 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
11055434:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
11055438:	e0fff517 	ldw	r3,-44(fp)
1105543c:	e0bffd17 	ldw	r2,-12(fp)
11055440:	18801826 	beq	r3,r2,110554a4 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
11055444:	0005303a 	rdctl	r2,status
11055448:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1105544c:	e0fffb17 	ldw	r3,-20(fp)
11055450:	00bfff84 	movi	r2,-2
11055454:	1884703a 	and	r2,r3,r2
11055458:	1001703a 	wrctl	status,r2
  
  return context;
1105545c:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
11055460:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
11055464:	e0bffc17 	ldw	r2,-16(fp)
11055468:	10800817 	ldw	r2,32(r2)
1105546c:	10c00054 	ori	r3,r2,1
11055470:	e0bffc17 	ldw	r2,-16(fp)
11055474:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
11055478:	e0bffc17 	ldw	r2,-16(fp)
1105547c:	10800017 	ldw	r2,0(r2)
11055480:	10800104 	addi	r2,r2,4
11055484:	1007883a 	mov	r3,r2
11055488:	e0bffc17 	ldw	r2,-16(fp)
1105548c:	10800817 	ldw	r2,32(r2)
11055490:	18800035 	stwio	r2,0(r3)
11055494:	e0bffa17 	ldw	r2,-24(fp)
11055498:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1105549c:	e0bff917 	ldw	r2,-28(fp)
110554a0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
110554a4:	e0fff517 	ldw	r3,-44(fp)
110554a8:	e0bffd17 	ldw	r2,-12(fp)
110554ac:	18800426 	beq	r3,r2,110554c0 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
110554b0:	e0fff517 	ldw	r3,-44(fp)
110554b4:	e0bffd17 	ldw	r2,-12(fp)
110554b8:	1885c83a 	sub	r2,r3,r2
110554bc:	00000606 	br	110554d8 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
110554c0:	e0bfff17 	ldw	r2,-4(fp)
110554c4:	1090000c 	andi	r2,r2,16384
110554c8:	10000226 	beq	r2,zero,110554d4 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
110554cc:	00bffd44 	movi	r2,-11
110554d0:	00000106 	br	110554d8 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
110554d4:	00bffec4 	movi	r2,-5
}
110554d8:	e037883a 	mov	sp,fp
110554dc:	dfc00117 	ldw	ra,4(sp)
110554e0:	df000017 	ldw	fp,0(sp)
110554e4:	dec00204 	addi	sp,sp,8
110554e8:	f800283a 	ret

110554ec <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
110554ec:	defff304 	addi	sp,sp,-52
110554f0:	dfc00c15 	stw	ra,48(sp)
110554f4:	df000b15 	stw	fp,44(sp)
110554f8:	df000b04 	addi	fp,sp,44
110554fc:	e13ffc15 	stw	r4,-16(fp)
11055500:	e17ffd15 	stw	r5,-12(fp)
11055504:	e1bffe15 	stw	r6,-8(fp)
11055508:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
1105550c:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
11055510:	e0bffd17 	ldw	r2,-12(fp)
11055514:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
11055518:	00003706 	br	110555f8 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
1105551c:	e0bffc17 	ldw	r2,-16(fp)
11055520:	10800c17 	ldw	r2,48(r2)
11055524:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
11055528:	e0bffc17 	ldw	r2,-16(fp)
1105552c:	10800d17 	ldw	r2,52(r2)
11055530:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
11055534:	e0fff917 	ldw	r3,-28(fp)
11055538:	e0bff517 	ldw	r2,-44(fp)
1105553c:	1880062e 	bgeu	r3,r2,11055558 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
11055540:	e0fff517 	ldw	r3,-44(fp)
11055544:	e0bff917 	ldw	r2,-28(fp)
11055548:	1885c83a 	sub	r2,r3,r2
1105554c:	10bfffc4 	addi	r2,r2,-1
11055550:	e0bff615 	stw	r2,-40(fp)
11055554:	00000b06 	br	11055584 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
11055558:	e0bff517 	ldw	r2,-44(fp)
1105555c:	10000526 	beq	r2,zero,11055574 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
11055560:	00c20004 	movi	r3,2048
11055564:	e0bff917 	ldw	r2,-28(fp)
11055568:	1885c83a 	sub	r2,r3,r2
1105556c:	e0bff615 	stw	r2,-40(fp)
11055570:	00000406 	br	11055584 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
11055574:	00c1ffc4 	movi	r3,2047
11055578:	e0bff917 	ldw	r2,-28(fp)
1105557c:	1885c83a 	sub	r2,r3,r2
11055580:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
11055584:	e0bff617 	ldw	r2,-40(fp)
11055588:	10001e26 	beq	r2,zero,11055604 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
1105558c:	e0fffe17 	ldw	r3,-8(fp)
11055590:	e0bff617 	ldw	r2,-40(fp)
11055594:	1880022e 	bgeu	r3,r2,110555a0 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
11055598:	e0bffe17 	ldw	r2,-8(fp)
1105559c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
110555a0:	e0bffc17 	ldw	r2,-16(fp)
110555a4:	10c20e04 	addi	r3,r2,2104
110555a8:	e0bff917 	ldw	r2,-28(fp)
110555ac:	1885883a 	add	r2,r3,r2
110555b0:	e1bff617 	ldw	r6,-40(fp)
110555b4:	e17ffd17 	ldw	r5,-12(fp)
110555b8:	1009883a 	mov	r4,r2
110555bc:	104dd9c0 	call	1104dd9c <memcpy>
      ptr   += n;
110555c0:	e0fffd17 	ldw	r3,-12(fp)
110555c4:	e0bff617 	ldw	r2,-40(fp)
110555c8:	1885883a 	add	r2,r3,r2
110555cc:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
110555d0:	e0fffe17 	ldw	r3,-8(fp)
110555d4:	e0bff617 	ldw	r2,-40(fp)
110555d8:	1885c83a 	sub	r2,r3,r2
110555dc:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
110555e0:	e0fff917 	ldw	r3,-28(fp)
110555e4:	e0bff617 	ldw	r2,-40(fp)
110555e8:	1885883a 	add	r2,r3,r2
110555ec:	10c1ffcc 	andi	r3,r2,2047
110555f0:	e0bffc17 	ldw	r2,-16(fp)
110555f4:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
110555f8:	e0bffe17 	ldw	r2,-8(fp)
110555fc:	00bfc716 	blt	zero,r2,1105551c <altera_avalon_jtag_uart_write+0x30>
11055600:	00000106 	br	11055608 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
11055604:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
11055608:	0005303a 	rdctl	r2,status
1105560c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
11055610:	e0fffb17 	ldw	r3,-20(fp)
11055614:	00bfff84 	movi	r2,-2
11055618:	1884703a 	and	r2,r3,r2
1105561c:	1001703a 	wrctl	status,r2
  
  return context;
11055620:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
11055624:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
11055628:	e0bffc17 	ldw	r2,-16(fp)
1105562c:	10800817 	ldw	r2,32(r2)
11055630:	10c00094 	ori	r3,r2,2
11055634:	e0bffc17 	ldw	r2,-16(fp)
11055638:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1105563c:	e0bffc17 	ldw	r2,-16(fp)
11055640:	10800017 	ldw	r2,0(r2)
11055644:	10800104 	addi	r2,r2,4
11055648:	1007883a 	mov	r3,r2
1105564c:	e0bffc17 	ldw	r2,-16(fp)
11055650:	10800817 	ldw	r2,32(r2)
11055654:	18800035 	stwio	r2,0(r3)
11055658:	e0bffa17 	ldw	r2,-24(fp)
1105565c:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
11055660:	e0bff817 	ldw	r2,-32(fp)
11055664:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
11055668:	e0bffe17 	ldw	r2,-8(fp)
1105566c:	0080100e 	bge	zero,r2,110556b0 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
11055670:	e0bfff17 	ldw	r2,-4(fp)
11055674:	1090000c 	andi	r2,r2,16384
11055678:	1000101e 	bne	r2,zero,110556bc <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
1105567c:	0001883a 	nop
11055680:	e0bffc17 	ldw	r2,-16(fp)
11055684:	10c00d17 	ldw	r3,52(r2)
11055688:	e0bff517 	ldw	r2,-44(fp)
1105568c:	1880051e 	bne	r3,r2,110556a4 <altera_avalon_jtag_uart_write+0x1b8>
11055690:	e0bffc17 	ldw	r2,-16(fp)
11055694:	10c00917 	ldw	r3,36(r2)
11055698:	e0bffc17 	ldw	r2,-16(fp)
1105569c:	10800117 	ldw	r2,4(r2)
110556a0:	18bff736 	bltu	r3,r2,11055680 <altera_avalon_jtag_uart_write+0x194>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
110556a4:	e0bffc17 	ldw	r2,-16(fp)
110556a8:	10800917 	ldw	r2,36(r2)
110556ac:	1000051e 	bne	r2,zero,110556c4 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
110556b0:	e0bffe17 	ldw	r2,-8(fp)
110556b4:	00bfd016 	blt	zero,r2,110555f8 <altera_avalon_jtag_uart_write+0x10c>
110556b8:	00000306 	br	110556c8 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
110556bc:	0001883a 	nop
110556c0:	00000106 	br	110556c8 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
110556c4:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
110556c8:	e0fffd17 	ldw	r3,-12(fp)
110556cc:	e0bff717 	ldw	r2,-36(fp)
110556d0:	18800426 	beq	r3,r2,110556e4 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
110556d4:	e0fffd17 	ldw	r3,-12(fp)
110556d8:	e0bff717 	ldw	r2,-36(fp)
110556dc:	1885c83a 	sub	r2,r3,r2
110556e0:	00000606 	br	110556fc <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
110556e4:	e0bfff17 	ldw	r2,-4(fp)
110556e8:	1090000c 	andi	r2,r2,16384
110556ec:	10000226 	beq	r2,zero,110556f8 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
110556f0:	00bffd44 	movi	r2,-11
110556f4:	00000106 	br	110556fc <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
110556f8:	00bffec4 	movi	r2,-5
}
110556fc:	e037883a 	mov	sp,fp
11055700:	dfc00117 	ldw	ra,4(sp)
11055704:	df000017 	ldw	fp,0(sp)
11055708:	dec00204 	addi	sp,sp,8
1105570c:	f800283a 	ret

11055710 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
11055710:	defffa04 	addi	sp,sp,-24
11055714:	dfc00515 	stw	ra,20(sp)
11055718:	df000415 	stw	fp,16(sp)
1105571c:	df000404 	addi	fp,sp,16
11055720:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
11055724:	0007883a 	mov	r3,zero
11055728:	e0bfff17 	ldw	r2,-4(fp)
1105572c:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
11055730:	e0bfff17 	ldw	r2,-4(fp)
11055734:	10800104 	addi	r2,r2,4
11055738:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1105573c:	0005303a 	rdctl	r2,status
11055740:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
11055744:	e0fffd17 	ldw	r3,-12(fp)
11055748:	00bfff84 	movi	r2,-2
1105574c:	1884703a 	and	r2,r3,r2
11055750:	1001703a 	wrctl	status,r2
  
  return context;
11055754:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
11055758:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
1105575c:	10563440 	call	11056344 <alt_tick>
11055760:	e0bffc17 	ldw	r2,-16(fp)
11055764:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
11055768:	e0bffe17 	ldw	r2,-8(fp)
1105576c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
11055770:	0001883a 	nop
11055774:	e037883a 	mov	sp,fp
11055778:	dfc00117 	ldw	ra,4(sp)
1105577c:	df000017 	ldw	fp,0(sp)
11055780:	dec00204 	addi	sp,sp,8
11055784:	f800283a 	ret

11055788 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
11055788:	defff804 	addi	sp,sp,-32
1105578c:	dfc00715 	stw	ra,28(sp)
11055790:	df000615 	stw	fp,24(sp)
11055794:	df000604 	addi	fp,sp,24
11055798:	e13ffc15 	stw	r4,-16(fp)
1105579c:	e17ffd15 	stw	r5,-12(fp)
110557a0:	e1bffe15 	stw	r6,-8(fp)
110557a4:	e1ffff15 	stw	r7,-4(fp)
110557a8:	e0bfff17 	ldw	r2,-4(fp)
110557ac:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
110557b0:	d0a6d717 	ldw	r2,-25764(gp)
110557b4:	1000021e 	bne	r2,zero,110557c0 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
110557b8:	e0bffb17 	ldw	r2,-20(fp)
110557bc:	d0a6d715 	stw	r2,-25764(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
110557c0:	e0bffc17 	ldw	r2,-16(fp)
110557c4:	10800104 	addi	r2,r2,4
110557c8:	00c001c4 	movi	r3,7
110557cc:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
110557d0:	d8000015 	stw	zero,0(sp)
110557d4:	e1fffc17 	ldw	r7,-16(fp)
110557d8:	01844174 	movhi	r6,4357
110557dc:	3195c404 	addi	r6,r6,22288
110557e0:	e17ffe17 	ldw	r5,-8(fp)
110557e4:	e13ffd17 	ldw	r4,-12(fp)
110557e8:	1055c740 	call	11055c74 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
110557ec:	0001883a 	nop
110557f0:	e037883a 	mov	sp,fp
110557f4:	dfc00117 	ldw	ra,4(sp)
110557f8:	df000017 	ldw	fp,0(sp)
110557fc:	dec00204 	addi	sp,sp,8
11055800:	f800283a 	ret

11055804 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
11055804:	defff504 	addi	sp,sp,-44
11055808:	df000a15 	stw	fp,40(sp)
1105580c:	df000a04 	addi	fp,sp,40
11055810:	e13ffc15 	stw	r4,-16(fp)
11055814:	e17ffd15 	stw	r5,-12(fp)
11055818:	e1bffe15 	stw	r6,-8(fp)
1105581c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
11055820:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
11055824:	d0a6d717 	ldw	r2,-25764(gp)
  
  if (alt_ticks_per_second ())
11055828:	10003c26 	beq	r2,zero,1105591c <alt_alarm_start+0x118>
  {
    if (alarm)
1105582c:	e0bffc17 	ldw	r2,-16(fp)
11055830:	10003826 	beq	r2,zero,11055914 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
11055834:	e0bffc17 	ldw	r2,-16(fp)
11055838:	e0fffe17 	ldw	r3,-8(fp)
1105583c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
11055840:	e0bffc17 	ldw	r2,-16(fp)
11055844:	e0ffff17 	ldw	r3,-4(fp)
11055848:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1105584c:	0005303a 	rdctl	r2,status
11055850:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
11055854:	e0fff917 	ldw	r3,-28(fp)
11055858:	00bfff84 	movi	r2,-2
1105585c:	1884703a 	and	r2,r3,r2
11055860:	1001703a 	wrctl	status,r2
  
  return context;
11055864:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
11055868:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
1105586c:	d0a6d817 	ldw	r2,-25760(gp)
      
      current_nticks = alt_nticks();
11055870:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
11055874:	e0fffd17 	ldw	r3,-12(fp)
11055878:	e0bff617 	ldw	r2,-40(fp)
1105587c:	1885883a 	add	r2,r3,r2
11055880:	10c00044 	addi	r3,r2,1
11055884:	e0bffc17 	ldw	r2,-16(fp)
11055888:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
1105588c:	e0bffc17 	ldw	r2,-16(fp)
11055890:	10c00217 	ldw	r3,8(r2)
11055894:	e0bff617 	ldw	r2,-40(fp)
11055898:	1880042e 	bgeu	r3,r2,110558ac <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
1105589c:	e0bffc17 	ldw	r2,-16(fp)
110558a0:	00c00044 	movi	r3,1
110558a4:	10c00405 	stb	r3,16(r2)
110558a8:	00000206 	br	110558b4 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
110558ac:	e0bffc17 	ldw	r2,-16(fp)
110558b0:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
110558b4:	e0bffc17 	ldw	r2,-16(fp)
110558b8:	d0e00e04 	addi	r3,gp,-32712
110558bc:	e0fffa15 	stw	r3,-24(fp)
110558c0:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
110558c4:	e0bffb17 	ldw	r2,-20(fp)
110558c8:	e0fffa17 	ldw	r3,-24(fp)
110558cc:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
110558d0:	e0bffa17 	ldw	r2,-24(fp)
110558d4:	10c00017 	ldw	r3,0(r2)
110558d8:	e0bffb17 	ldw	r2,-20(fp)
110558dc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
110558e0:	e0bffa17 	ldw	r2,-24(fp)
110558e4:	10800017 	ldw	r2,0(r2)
110558e8:	e0fffb17 	ldw	r3,-20(fp)
110558ec:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
110558f0:	e0bffa17 	ldw	r2,-24(fp)
110558f4:	e0fffb17 	ldw	r3,-20(fp)
110558f8:	10c00015 	stw	r3,0(r2)
110558fc:	e0bff817 	ldw	r2,-32(fp)
11055900:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
11055904:	e0bff717 	ldw	r2,-36(fp)
11055908:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
1105590c:	0005883a 	mov	r2,zero
11055910:	00000306 	br	11055920 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
11055914:	00bffa84 	movi	r2,-22
11055918:	00000106 	br	11055920 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
1105591c:	00bfde84 	movi	r2,-134
  }
}
11055920:	e037883a 	mov	sp,fp
11055924:	df000017 	ldw	fp,0(sp)
11055928:	dec00104 	addi	sp,sp,4
1105592c:	f800283a 	ret

11055930 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
11055930:	defffb04 	addi	sp,sp,-20
11055934:	df000415 	stw	fp,16(sp)
11055938:	df000404 	addi	fp,sp,16
1105593c:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
11055940:	008000c4 	movi	r2,3
11055944:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
11055948:	e0fffd17 	ldw	r3,-12(fp)
1105594c:	008003f4 	movhi	r2,15
11055950:	10909004 	addi	r2,r2,16960
11055954:	1887383a 	mul	r3,r3,r2
11055958:	00817db4 	movhi	r2,1526
1105595c:	10b84004 	addi	r2,r2,-7936
11055960:	10c7203a 	divu	r3,r2,r3
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
11055964:	00a00034 	movhi	r2,32768
11055968:	10bfffc4 	addi	r2,r2,-1
1105596c:	10c5203a 	divu	r2,r2,r3
11055970:	e0ffff17 	ldw	r3,-4(fp)
11055974:	1885203a 	divu	r2,r3,r2
11055978:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
1105597c:	e0bffe17 	ldw	r2,-8(fp)
11055980:	10002526 	beq	r2,zero,11055a18 <alt_busy_sleep+0xe8>
  {
    for(i=0;i<big_loops;i++)
11055984:	e03ffc15 	stw	zero,-16(fp)
11055988:	00001406 	br	110559dc <alt_busy_sleep+0xac>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
1105598c:	00a00034 	movhi	r2,32768
11055990:	10bfffc4 	addi	r2,r2,-1
11055994:	10bfffc4 	addi	r2,r2,-1
11055998:	103ffe1e 	bne	r2,zero,11055994 <alt_busy_sleep+0x64>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
1105599c:	e0fffd17 	ldw	r3,-12(fp)
110559a0:	008003f4 	movhi	r2,15
110559a4:	10909004 	addi	r2,r2,16960
110559a8:	1887383a 	mul	r3,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
110559ac:	00817db4 	movhi	r2,1526
110559b0:	10b84004 	addi	r2,r2,-7936
110559b4:	10c7203a 	divu	r3,r2,r3
110559b8:	00a00034 	movhi	r2,32768
110559bc:	10bfffc4 	addi	r2,r2,-1
110559c0:	10c5203a 	divu	r2,r2,r3
110559c4:	e0ffff17 	ldw	r3,-4(fp)
110559c8:	1885c83a 	sub	r2,r3,r2
110559cc:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
110559d0:	e0bffc17 	ldw	r2,-16(fp)
110559d4:	10800044 	addi	r2,r2,1
110559d8:	e0bffc15 	stw	r2,-16(fp)
110559dc:	e0fffc17 	ldw	r3,-16(fp)
110559e0:	e0bffe17 	ldw	r2,-8(fp)
110559e4:	18bfe916 	blt	r3,r2,1105598c <alt_busy_sleep+0x5c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
110559e8:	e0fffd17 	ldw	r3,-12(fp)
110559ec:	008003f4 	movhi	r2,15
110559f0:	10909004 	addi	r2,r2,16960
110559f4:	1887383a 	mul	r3,r3,r2
110559f8:	00817db4 	movhi	r2,1526
110559fc:	10b84004 	addi	r2,r2,-7936
11055a00:	10c7203a 	divu	r3,r2,r3
11055a04:	e0bfff17 	ldw	r2,-4(fp)
11055a08:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
11055a0c:	10bfffc4 	addi	r2,r2,-1
11055a10:	103ffe1e 	bne	r2,zero,11055a0c <alt_busy_sleep+0xdc>
11055a14:	00000b06 	br	11055a44 <alt_busy_sleep+0x114>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
11055a18:	e0fffd17 	ldw	r3,-12(fp)
11055a1c:	008003f4 	movhi	r2,15
11055a20:	10909004 	addi	r2,r2,16960
11055a24:	1887383a 	mul	r3,r3,r2
11055a28:	00817db4 	movhi	r2,1526
11055a2c:	10b84004 	addi	r2,r2,-7936
11055a30:	10c7203a 	divu	r3,r2,r3
11055a34:	e0bfff17 	ldw	r2,-4(fp)
11055a38:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
11055a3c:	10bfffc4 	addi	r2,r2,-1
11055a40:	00bffe16 	blt	zero,r2,11055a3c <alt_busy_sleep+0x10c>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
11055a44:	0005883a 	mov	r2,zero
}
11055a48:	e037883a 	mov	sp,fp
11055a4c:	df000017 	ldw	fp,0(sp)
11055a50:	dec00104 	addi	sp,sp,4
11055a54:	f800283a 	ret

11055a58 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
11055a58:	defffe04 	addi	sp,sp,-8
11055a5c:	df000115 	stw	fp,4(sp)
11055a60:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
11055a64:	e03fff15 	stw	zero,-4(fp)
11055a68:	00000506 	br	11055a80 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
11055a6c:	e0bfff17 	ldw	r2,-4(fp)
11055a70:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
11055a74:	e0bfff17 	ldw	r2,-4(fp)
11055a78:	10800804 	addi	r2,r2,32
11055a7c:	e0bfff15 	stw	r2,-4(fp)
11055a80:	e0bfff17 	ldw	r2,-4(fp)
11055a84:	10820030 	cmpltui	r2,r2,2048
11055a88:	103ff81e 	bne	r2,zero,11055a6c <alt_dcache_flush_all+0x14>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
11055a8c:	0001883a 	nop
11055a90:	e037883a 	mov	sp,fp
11055a94:	df000017 	ldw	fp,0(sp)
11055a98:	dec00104 	addi	sp,sp,4
11055a9c:	f800283a 	ret

11055aa0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
11055aa0:	defffe04 	addi	sp,sp,-8
11055aa4:	dfc00115 	stw	ra,4(sp)
11055aa8:	df000015 	stw	fp,0(sp)
11055aac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
11055ab0:	d0a00b17 	ldw	r2,-32724(gp)
11055ab4:	10000326 	beq	r2,zero,11055ac4 <alt_get_errno+0x24>
11055ab8:	d0a00b17 	ldw	r2,-32724(gp)
11055abc:	103ee83a 	callr	r2
11055ac0:	00000106 	br	11055ac8 <alt_get_errno+0x28>
11055ac4:	d0a6d204 	addi	r2,gp,-25784
}
11055ac8:	e037883a 	mov	sp,fp
11055acc:	dfc00117 	ldw	ra,4(sp)
11055ad0:	df000017 	ldw	fp,0(sp)
11055ad4:	dec00204 	addi	sp,sp,8
11055ad8:	f800283a 	ret

11055adc <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
11055adc:	defffa04 	addi	sp,sp,-24
11055ae0:	dfc00515 	stw	ra,20(sp)
11055ae4:	df000415 	stw	fp,16(sp)
11055ae8:	df000404 	addi	fp,sp,16
11055aec:	e13ffe15 	stw	r4,-8(fp)
11055af0:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
11055af4:	e0bffe17 	ldw	r2,-8(fp)
11055af8:	10000326 	beq	r2,zero,11055b08 <alt_dev_llist_insert+0x2c>
11055afc:	e0bffe17 	ldw	r2,-8(fp)
11055b00:	10800217 	ldw	r2,8(r2)
11055b04:	1000061e 	bne	r2,zero,11055b20 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
11055b08:	1055aa00 	call	11055aa0 <alt_get_errno>
11055b0c:	1007883a 	mov	r3,r2
11055b10:	00800584 	movi	r2,22
11055b14:	18800015 	stw	r2,0(r3)
    return -EINVAL;
11055b18:	00bffa84 	movi	r2,-22
11055b1c:	00001306 	br	11055b6c <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
11055b20:	e0bffe17 	ldw	r2,-8(fp)
11055b24:	e0ffff17 	ldw	r3,-4(fp)
11055b28:	e0fffc15 	stw	r3,-16(fp)
11055b2c:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
11055b30:	e0bffd17 	ldw	r2,-12(fp)
11055b34:	e0fffc17 	ldw	r3,-16(fp)
11055b38:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
11055b3c:	e0bffc17 	ldw	r2,-16(fp)
11055b40:	10c00017 	ldw	r3,0(r2)
11055b44:	e0bffd17 	ldw	r2,-12(fp)
11055b48:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
11055b4c:	e0bffc17 	ldw	r2,-16(fp)
11055b50:	10800017 	ldw	r2,0(r2)
11055b54:	e0fffd17 	ldw	r3,-12(fp)
11055b58:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
11055b5c:	e0bffc17 	ldw	r2,-16(fp)
11055b60:	e0fffd17 	ldw	r3,-12(fp)
11055b64:	10c00015 	stw	r3,0(r2)

  return 0;  
11055b68:	0005883a 	mov	r2,zero
}
11055b6c:	e037883a 	mov	sp,fp
11055b70:	dfc00117 	ldw	ra,4(sp)
11055b74:	df000017 	ldw	fp,0(sp)
11055b78:	dec00204 	addi	sp,sp,8
11055b7c:	f800283a 	ret

11055b80 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
11055b80:	defffd04 	addi	sp,sp,-12
11055b84:	dfc00215 	stw	ra,8(sp)
11055b88:	df000115 	stw	fp,4(sp)
11055b8c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
11055b90:	00844174 	movhi	r2,4357
11055b94:	109ada04 	addi	r2,r2,27496
11055b98:	e0bfff15 	stw	r2,-4(fp)
11055b9c:	00000606 	br	11055bb8 <_do_ctors+0x38>
        (*ctor) (); 
11055ba0:	e0bfff17 	ldw	r2,-4(fp)
11055ba4:	10800017 	ldw	r2,0(r2)
11055ba8:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
11055bac:	e0bfff17 	ldw	r2,-4(fp)
11055bb0:	10bfff04 	addi	r2,r2,-4
11055bb4:	e0bfff15 	stw	r2,-4(fp)
11055bb8:	e0ffff17 	ldw	r3,-4(fp)
11055bbc:	00844174 	movhi	r2,4357
11055bc0:	109adb04 	addi	r2,r2,27500
11055bc4:	18bff62e 	bgeu	r3,r2,11055ba0 <_do_ctors+0x20>
        (*ctor) (); 
}
11055bc8:	0001883a 	nop
11055bcc:	e037883a 	mov	sp,fp
11055bd0:	dfc00117 	ldw	ra,4(sp)
11055bd4:	df000017 	ldw	fp,0(sp)
11055bd8:	dec00204 	addi	sp,sp,8
11055bdc:	f800283a 	ret

11055be0 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
11055be0:	defffd04 	addi	sp,sp,-12
11055be4:	dfc00215 	stw	ra,8(sp)
11055be8:	df000115 	stw	fp,4(sp)
11055bec:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
11055bf0:	00844174 	movhi	r2,4357
11055bf4:	109ada04 	addi	r2,r2,27496
11055bf8:	e0bfff15 	stw	r2,-4(fp)
11055bfc:	00000606 	br	11055c18 <_do_dtors+0x38>
        (*dtor) (); 
11055c00:	e0bfff17 	ldw	r2,-4(fp)
11055c04:	10800017 	ldw	r2,0(r2)
11055c08:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
11055c0c:	e0bfff17 	ldw	r2,-4(fp)
11055c10:	10bfff04 	addi	r2,r2,-4
11055c14:	e0bfff15 	stw	r2,-4(fp)
11055c18:	e0ffff17 	ldw	r3,-4(fp)
11055c1c:	00844174 	movhi	r2,4357
11055c20:	109adb04 	addi	r2,r2,27500
11055c24:	18bff62e 	bgeu	r3,r2,11055c00 <_do_dtors+0x20>
        (*dtor) (); 
}
11055c28:	0001883a 	nop
11055c2c:	e037883a 	mov	sp,fp
11055c30:	dfc00117 	ldw	ra,4(sp)
11055c34:	df000017 	ldw	fp,0(sp)
11055c38:	dec00204 	addi	sp,sp,8
11055c3c:	f800283a 	ret

11055c40 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
11055c40:	defffe04 	addi	sp,sp,-8
11055c44:	dfc00115 	stw	ra,4(sp)
11055c48:	df000015 	stw	fp,0(sp)
11055c4c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
11055c50:	01440004 	movi	r5,4096
11055c54:	0009883a 	mov	r4,zero
11055c58:	10566ac0 	call	110566ac <alt_icache_flush>
#endif
}
11055c5c:	0001883a 	nop
11055c60:	e037883a 	mov	sp,fp
11055c64:	dfc00117 	ldw	ra,4(sp)
11055c68:	df000017 	ldw	fp,0(sp)
11055c6c:	dec00204 	addi	sp,sp,8
11055c70:	f800283a 	ret

11055c74 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
11055c74:	defff904 	addi	sp,sp,-28
11055c78:	dfc00615 	stw	ra,24(sp)
11055c7c:	df000515 	stw	fp,20(sp)
11055c80:	df000504 	addi	fp,sp,20
11055c84:	e13ffc15 	stw	r4,-16(fp)
11055c88:	e17ffd15 	stw	r5,-12(fp)
11055c8c:	e1bffe15 	stw	r6,-8(fp)
11055c90:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
11055c94:	e0800217 	ldw	r2,8(fp)
11055c98:	d8800015 	stw	r2,0(sp)
11055c9c:	e1ffff17 	ldw	r7,-4(fp)
11055ca0:	e1bffe17 	ldw	r6,-8(fp)
11055ca4:	e17ffd17 	ldw	r5,-12(fp)
11055ca8:	e13ffc17 	ldw	r4,-16(fp)
11055cac:	1055e240 	call	11055e24 <alt_iic_isr_register>
}  
11055cb0:	e037883a 	mov	sp,fp
11055cb4:	dfc00117 	ldw	ra,4(sp)
11055cb8:	df000017 	ldw	fp,0(sp)
11055cbc:	dec00204 	addi	sp,sp,8
11055cc0:	f800283a 	ret

11055cc4 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
11055cc4:	defff904 	addi	sp,sp,-28
11055cc8:	df000615 	stw	fp,24(sp)
11055ccc:	df000604 	addi	fp,sp,24
11055cd0:	e13ffe15 	stw	r4,-8(fp)
11055cd4:	e17fff15 	stw	r5,-4(fp)
11055cd8:	e0bfff17 	ldw	r2,-4(fp)
11055cdc:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
11055ce0:	0005303a 	rdctl	r2,status
11055ce4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
11055ce8:	e0fffb17 	ldw	r3,-20(fp)
11055cec:	00bfff84 	movi	r2,-2
11055cf0:	1884703a 	and	r2,r3,r2
11055cf4:	1001703a 	wrctl	status,r2
  
  return context;
11055cf8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
11055cfc:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
11055d00:	00c00044 	movi	r3,1
11055d04:	e0bffa17 	ldw	r2,-24(fp)
11055d08:	1884983a 	sll	r2,r3,r2
11055d0c:	1007883a 	mov	r3,r2
11055d10:	d0a6d617 	ldw	r2,-25768(gp)
11055d14:	1884b03a 	or	r2,r3,r2
11055d18:	d0a6d615 	stw	r2,-25768(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
11055d1c:	d0a6d617 	ldw	r2,-25768(gp)
11055d20:	100170fa 	wrctl	ienable,r2
11055d24:	e0bffc17 	ldw	r2,-16(fp)
11055d28:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
11055d2c:	e0bffd17 	ldw	r2,-12(fp)
11055d30:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
11055d34:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
11055d38:	0001883a 	nop
}
11055d3c:	e037883a 	mov	sp,fp
11055d40:	df000017 	ldw	fp,0(sp)
11055d44:	dec00104 	addi	sp,sp,4
11055d48:	f800283a 	ret

11055d4c <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
11055d4c:	defff904 	addi	sp,sp,-28
11055d50:	df000615 	stw	fp,24(sp)
11055d54:	df000604 	addi	fp,sp,24
11055d58:	e13ffe15 	stw	r4,-8(fp)
11055d5c:	e17fff15 	stw	r5,-4(fp)
11055d60:	e0bfff17 	ldw	r2,-4(fp)
11055d64:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
11055d68:	0005303a 	rdctl	r2,status
11055d6c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
11055d70:	e0fffb17 	ldw	r3,-20(fp)
11055d74:	00bfff84 	movi	r2,-2
11055d78:	1884703a 	and	r2,r3,r2
11055d7c:	1001703a 	wrctl	status,r2
  
  return context;
11055d80:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
11055d84:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
11055d88:	00c00044 	movi	r3,1
11055d8c:	e0bffa17 	ldw	r2,-24(fp)
11055d90:	1884983a 	sll	r2,r3,r2
11055d94:	0084303a 	nor	r2,zero,r2
11055d98:	1007883a 	mov	r3,r2
11055d9c:	d0a6d617 	ldw	r2,-25768(gp)
11055da0:	1884703a 	and	r2,r3,r2
11055da4:	d0a6d615 	stw	r2,-25768(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
11055da8:	d0a6d617 	ldw	r2,-25768(gp)
11055dac:	100170fa 	wrctl	ienable,r2
11055db0:	e0bffc17 	ldw	r2,-16(fp)
11055db4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
11055db8:	e0bffd17 	ldw	r2,-12(fp)
11055dbc:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
11055dc0:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
11055dc4:	0001883a 	nop
}
11055dc8:	e037883a 	mov	sp,fp
11055dcc:	df000017 	ldw	fp,0(sp)
11055dd0:	dec00104 	addi	sp,sp,4
11055dd4:	f800283a 	ret

11055dd8 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
11055dd8:	defffc04 	addi	sp,sp,-16
11055ddc:	df000315 	stw	fp,12(sp)
11055de0:	df000304 	addi	fp,sp,12
11055de4:	e13ffe15 	stw	r4,-8(fp)
11055de8:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
11055dec:	000530fa 	rdctl	r2,ienable
11055df0:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
11055df4:	00c00044 	movi	r3,1
11055df8:	e0bfff17 	ldw	r2,-4(fp)
11055dfc:	1884983a 	sll	r2,r3,r2
11055e00:	1007883a 	mov	r3,r2
11055e04:	e0bffd17 	ldw	r2,-12(fp)
11055e08:	1884703a 	and	r2,r3,r2
11055e0c:	1004c03a 	cmpne	r2,r2,zero
11055e10:	10803fcc 	andi	r2,r2,255
}
11055e14:	e037883a 	mov	sp,fp
11055e18:	df000017 	ldw	fp,0(sp)
11055e1c:	dec00104 	addi	sp,sp,4
11055e20:	f800283a 	ret

11055e24 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
11055e24:	defff504 	addi	sp,sp,-44
11055e28:	dfc00a15 	stw	ra,40(sp)
11055e2c:	df000915 	stw	fp,36(sp)
11055e30:	df000904 	addi	fp,sp,36
11055e34:	e13ffc15 	stw	r4,-16(fp)
11055e38:	e17ffd15 	stw	r5,-12(fp)
11055e3c:	e1bffe15 	stw	r6,-8(fp)
11055e40:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
11055e44:	00bffa84 	movi	r2,-22
11055e48:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
11055e4c:	e0bffd17 	ldw	r2,-12(fp)
11055e50:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
11055e54:	e0bff817 	ldw	r2,-32(fp)
11055e58:	10800808 	cmpgei	r2,r2,32
11055e5c:	1000271e 	bne	r2,zero,11055efc <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
11055e60:	0005303a 	rdctl	r2,status
11055e64:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
11055e68:	e0fffb17 	ldw	r3,-20(fp)
11055e6c:	00bfff84 	movi	r2,-2
11055e70:	1884703a 	and	r2,r3,r2
11055e74:	1001703a 	wrctl	status,r2
  
  return context;
11055e78:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
11055e7c:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
11055e80:	008441b4 	movhi	r2,4358
11055e84:	10aa4404 	addi	r2,r2,-22256
11055e88:	e0fff817 	ldw	r3,-32(fp)
11055e8c:	180690fa 	slli	r3,r3,3
11055e90:	10c5883a 	add	r2,r2,r3
11055e94:	e0fffe17 	ldw	r3,-8(fp)
11055e98:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
11055e9c:	008441b4 	movhi	r2,4358
11055ea0:	10aa4404 	addi	r2,r2,-22256
11055ea4:	e0fff817 	ldw	r3,-32(fp)
11055ea8:	180690fa 	slli	r3,r3,3
11055eac:	10c5883a 	add	r2,r2,r3
11055eb0:	10800104 	addi	r2,r2,4
11055eb4:	e0ffff17 	ldw	r3,-4(fp)
11055eb8:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
11055ebc:	e0bffe17 	ldw	r2,-8(fp)
11055ec0:	10000526 	beq	r2,zero,11055ed8 <alt_iic_isr_register+0xb4>
11055ec4:	e0bff817 	ldw	r2,-32(fp)
11055ec8:	100b883a 	mov	r5,r2
11055ecc:	e13ffc17 	ldw	r4,-16(fp)
11055ed0:	1055cc40 	call	11055cc4 <alt_ic_irq_enable>
11055ed4:	00000406 	br	11055ee8 <alt_iic_isr_register+0xc4>
11055ed8:	e0bff817 	ldw	r2,-32(fp)
11055edc:	100b883a 	mov	r5,r2
11055ee0:	e13ffc17 	ldw	r4,-16(fp)
11055ee4:	1055d4c0 	call	11055d4c <alt_ic_irq_disable>
11055ee8:	e0bff715 	stw	r2,-36(fp)
11055eec:	e0bffa17 	ldw	r2,-24(fp)
11055ef0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
11055ef4:	e0bff917 	ldw	r2,-28(fp)
11055ef8:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
11055efc:	e0bff717 	ldw	r2,-36(fp)
}
11055f00:	e037883a 	mov	sp,fp
11055f04:	dfc00117 	ldw	ra,4(sp)
11055f08:	df000017 	ldw	fp,0(sp)
11055f0c:	dec00204 	addi	sp,sp,8
11055f10:	f800283a 	ret

11055f14 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
11055f14:	defff904 	addi	sp,sp,-28
11055f18:	dfc00615 	stw	ra,24(sp)
11055f1c:	df000515 	stw	fp,20(sp)
11055f20:	df000504 	addi	fp,sp,20
11055f24:	e13ffc15 	stw	r4,-16(fp)
11055f28:	e17ffd15 	stw	r5,-12(fp)
11055f2c:	e1bffe15 	stw	r6,-8(fp)
11055f30:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
11055f34:	e1bfff17 	ldw	r6,-4(fp)
11055f38:	e17ffe17 	ldw	r5,-8(fp)
11055f3c:	e13ffd17 	ldw	r4,-12(fp)
11055f40:	10561540 	call	11056154 <open>
11055f44:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
11055f48:	e0bffb17 	ldw	r2,-20(fp)
11055f4c:	10001c16 	blt	r2,zero,11055fc0 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
11055f50:	00844174 	movhi	r2,4357
11055f54:	109ede04 	addi	r2,r2,31608
11055f58:	e0fffb17 	ldw	r3,-20(fp)
11055f5c:	18c00324 	muli	r3,r3,12
11055f60:	10c5883a 	add	r2,r2,r3
11055f64:	10c00017 	ldw	r3,0(r2)
11055f68:	e0bffc17 	ldw	r2,-16(fp)
11055f6c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
11055f70:	00844174 	movhi	r2,4357
11055f74:	109ede04 	addi	r2,r2,31608
11055f78:	e0fffb17 	ldw	r3,-20(fp)
11055f7c:	18c00324 	muli	r3,r3,12
11055f80:	10c5883a 	add	r2,r2,r3
11055f84:	10800104 	addi	r2,r2,4
11055f88:	10c00017 	ldw	r3,0(r2)
11055f8c:	e0bffc17 	ldw	r2,-16(fp)
11055f90:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
11055f94:	00844174 	movhi	r2,4357
11055f98:	109ede04 	addi	r2,r2,31608
11055f9c:	e0fffb17 	ldw	r3,-20(fp)
11055fa0:	18c00324 	muli	r3,r3,12
11055fa4:	10c5883a 	add	r2,r2,r3
11055fa8:	10800204 	addi	r2,r2,8
11055fac:	10c00017 	ldw	r3,0(r2)
11055fb0:	e0bffc17 	ldw	r2,-16(fp)
11055fb4:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
11055fb8:	e13ffb17 	ldw	r4,-20(fp)
11055fbc:	10549600 	call	11054960 <alt_release_fd>
  }
} 
11055fc0:	0001883a 	nop
11055fc4:	e037883a 	mov	sp,fp
11055fc8:	dfc00117 	ldw	ra,4(sp)
11055fcc:	df000017 	ldw	fp,0(sp)
11055fd0:	dec00204 	addi	sp,sp,8
11055fd4:	f800283a 	ret

11055fd8 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
11055fd8:	defffb04 	addi	sp,sp,-20
11055fdc:	dfc00415 	stw	ra,16(sp)
11055fe0:	df000315 	stw	fp,12(sp)
11055fe4:	df000304 	addi	fp,sp,12
11055fe8:	e13ffd15 	stw	r4,-12(fp)
11055fec:	e17ffe15 	stw	r5,-8(fp)
11055ff0:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
11055ff4:	01c07fc4 	movi	r7,511
11055ff8:	01800044 	movi	r6,1
11055ffc:	e17ffd17 	ldw	r5,-12(fp)
11056000:	01044174 	movhi	r4,4357
11056004:	211ee104 	addi	r4,r4,31620
11056008:	1055f140 	call	11055f14 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
1105600c:	01c07fc4 	movi	r7,511
11056010:	000d883a 	mov	r6,zero
11056014:	e17ffe17 	ldw	r5,-8(fp)
11056018:	01044174 	movhi	r4,4357
1105601c:	211ede04 	addi	r4,r4,31608
11056020:	1055f140 	call	11055f14 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
11056024:	01c07fc4 	movi	r7,511
11056028:	01800044 	movi	r6,1
1105602c:	e17fff17 	ldw	r5,-4(fp)
11056030:	01044174 	movhi	r4,4357
11056034:	211ee404 	addi	r4,r4,31632
11056038:	1055f140 	call	11055f14 <alt_open_fd>
}  
1105603c:	0001883a 	nop
11056040:	e037883a 	mov	sp,fp
11056044:	dfc00117 	ldw	ra,4(sp)
11056048:	df000017 	ldw	fp,0(sp)
1105604c:	dec00204 	addi	sp,sp,8
11056050:	f800283a 	ret

11056054 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
11056054:	defffe04 	addi	sp,sp,-8
11056058:	dfc00115 	stw	ra,4(sp)
1105605c:	df000015 	stw	fp,0(sp)
11056060:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
11056064:	d0a00b17 	ldw	r2,-32724(gp)
11056068:	10000326 	beq	r2,zero,11056078 <alt_get_errno+0x24>
1105606c:	d0a00b17 	ldw	r2,-32724(gp)
11056070:	103ee83a 	callr	r2
11056074:	00000106 	br	1105607c <alt_get_errno+0x28>
11056078:	d0a6d204 	addi	r2,gp,-25784
}
1105607c:	e037883a 	mov	sp,fp
11056080:	dfc00117 	ldw	ra,4(sp)
11056084:	df000017 	ldw	fp,0(sp)
11056088:	dec00204 	addi	sp,sp,8
1105608c:	f800283a 	ret

11056090 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
11056090:	defffd04 	addi	sp,sp,-12
11056094:	df000215 	stw	fp,8(sp)
11056098:	df000204 	addi	fp,sp,8
1105609c:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
110560a0:	e0bfff17 	ldw	r2,-4(fp)
110560a4:	10800217 	ldw	r2,8(r2)
110560a8:	10d00034 	orhi	r3,r2,16384
110560ac:	e0bfff17 	ldw	r2,-4(fp)
110560b0:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
110560b4:	e03ffe15 	stw	zero,-8(fp)
110560b8:	00001d06 	br	11056130 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
110560bc:	00844174 	movhi	r2,4357
110560c0:	109ede04 	addi	r2,r2,31608
110560c4:	e0fffe17 	ldw	r3,-8(fp)
110560c8:	18c00324 	muli	r3,r3,12
110560cc:	10c5883a 	add	r2,r2,r3
110560d0:	10c00017 	ldw	r3,0(r2)
110560d4:	e0bfff17 	ldw	r2,-4(fp)
110560d8:	10800017 	ldw	r2,0(r2)
110560dc:	1880111e 	bne	r3,r2,11056124 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
110560e0:	00844174 	movhi	r2,4357
110560e4:	109ede04 	addi	r2,r2,31608
110560e8:	e0fffe17 	ldw	r3,-8(fp)
110560ec:	18c00324 	muli	r3,r3,12
110560f0:	10c5883a 	add	r2,r2,r3
110560f4:	10800204 	addi	r2,r2,8
110560f8:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
110560fc:	1000090e 	bge	r2,zero,11056124 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
11056100:	e0bffe17 	ldw	r2,-8(fp)
11056104:	10c00324 	muli	r3,r2,12
11056108:	00844174 	movhi	r2,4357
1105610c:	109ede04 	addi	r2,r2,31608
11056110:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
11056114:	e0bfff17 	ldw	r2,-4(fp)
11056118:	18800226 	beq	r3,r2,11056124 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
1105611c:	00bffcc4 	movi	r2,-13
11056120:	00000806 	br	11056144 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
11056124:	e0bffe17 	ldw	r2,-8(fp)
11056128:	10800044 	addi	r2,r2,1
1105612c:	e0bffe15 	stw	r2,-8(fp)
11056130:	d0a00a17 	ldw	r2,-32728(gp)
11056134:	1007883a 	mov	r3,r2
11056138:	e0bffe17 	ldw	r2,-8(fp)
1105613c:	18bfdf2e 	bgeu	r3,r2,110560bc <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
11056140:	0005883a 	mov	r2,zero
}
11056144:	e037883a 	mov	sp,fp
11056148:	df000017 	ldw	fp,0(sp)
1105614c:	dec00104 	addi	sp,sp,4
11056150:	f800283a 	ret

11056154 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
11056154:	defff604 	addi	sp,sp,-40
11056158:	dfc00915 	stw	ra,36(sp)
1105615c:	df000815 	stw	fp,32(sp)
11056160:	df000804 	addi	fp,sp,32
11056164:	e13ffd15 	stw	r4,-12(fp)
11056168:	e17ffe15 	stw	r5,-8(fp)
1105616c:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
11056170:	00bfffc4 	movi	r2,-1
11056174:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
11056178:	00bffb44 	movi	r2,-19
1105617c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
11056180:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
11056184:	d1600804 	addi	r5,gp,-32736
11056188:	e13ffd17 	ldw	r4,-12(fp)
1105618c:	10564700 	call	11056470 <alt_find_dev>
11056190:	e0bff815 	stw	r2,-32(fp)
11056194:	e0bff817 	ldw	r2,-32(fp)
11056198:	1000051e 	bne	r2,zero,110561b0 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
1105619c:	e13ffd17 	ldw	r4,-12(fp)
110561a0:	10565000 	call	11056500 <alt_find_file>
110561a4:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
110561a8:	00800044 	movi	r2,1
110561ac:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
110561b0:	e0bff817 	ldw	r2,-32(fp)
110561b4:	10002926 	beq	r2,zero,1105625c <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
110561b8:	e13ff817 	ldw	r4,-32(fp)
110561bc:	10566080 	call	11056608 <alt_get_fd>
110561c0:	e0bff915 	stw	r2,-28(fp)
110561c4:	e0bff917 	ldw	r2,-28(fp)
110561c8:	1000030e 	bge	r2,zero,110561d8 <open+0x84>
    {
      status = index;
110561cc:	e0bff917 	ldw	r2,-28(fp)
110561d0:	e0bffa15 	stw	r2,-24(fp)
110561d4:	00002306 	br	11056264 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
110561d8:	e0bff917 	ldw	r2,-28(fp)
110561dc:	10c00324 	muli	r3,r2,12
110561e0:	00844174 	movhi	r2,4357
110561e4:	109ede04 	addi	r2,r2,31608
110561e8:	1885883a 	add	r2,r3,r2
110561ec:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
110561f0:	e0fffe17 	ldw	r3,-8(fp)
110561f4:	00900034 	movhi	r2,16384
110561f8:	10bfffc4 	addi	r2,r2,-1
110561fc:	1886703a 	and	r3,r3,r2
11056200:	e0bffc17 	ldw	r2,-16(fp)
11056204:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
11056208:	e0bffb17 	ldw	r2,-20(fp)
1105620c:	1000051e 	bne	r2,zero,11056224 <open+0xd0>
11056210:	e13ffc17 	ldw	r4,-16(fp)
11056214:	10560900 	call	11056090 <alt_file_locked>
11056218:	e0bffa15 	stw	r2,-24(fp)
1105621c:	e0bffa17 	ldw	r2,-24(fp)
11056220:	10001016 	blt	r2,zero,11056264 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
11056224:	e0bff817 	ldw	r2,-32(fp)
11056228:	10800317 	ldw	r2,12(r2)
1105622c:	10000826 	beq	r2,zero,11056250 <open+0xfc>
11056230:	e0bff817 	ldw	r2,-32(fp)
11056234:	10800317 	ldw	r2,12(r2)
11056238:	e1ffff17 	ldw	r7,-4(fp)
1105623c:	e1bffe17 	ldw	r6,-8(fp)
11056240:	e17ffd17 	ldw	r5,-12(fp)
11056244:	e13ffc17 	ldw	r4,-16(fp)
11056248:	103ee83a 	callr	r2
1105624c:	00000106 	br	11056254 <open+0x100>
11056250:	0005883a 	mov	r2,zero
11056254:	e0bffa15 	stw	r2,-24(fp)
11056258:	00000206 	br	11056264 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
1105625c:	00bffb44 	movi	r2,-19
11056260:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
11056264:	e0bffa17 	ldw	r2,-24(fp)
11056268:	1000090e 	bge	r2,zero,11056290 <open+0x13c>
  {
    alt_release_fd (index);  
1105626c:	e13ff917 	ldw	r4,-28(fp)
11056270:	10549600 	call	11054960 <alt_release_fd>
    ALT_ERRNO = -status;
11056274:	10560540 	call	11056054 <alt_get_errno>
11056278:	1007883a 	mov	r3,r2
1105627c:	e0bffa17 	ldw	r2,-24(fp)
11056280:	0085c83a 	sub	r2,zero,r2
11056284:	18800015 	stw	r2,0(r3)
    return -1;
11056288:	00bfffc4 	movi	r2,-1
1105628c:	00000106 	br	11056294 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
11056290:	e0bff917 	ldw	r2,-28(fp)
}
11056294:	e037883a 	mov	sp,fp
11056298:	dfc00117 	ldw	ra,4(sp)
1105629c:	df000017 	ldw	fp,0(sp)
110562a0:	dec00204 	addi	sp,sp,8
110562a4:	f800283a 	ret

110562a8 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
110562a8:	defffa04 	addi	sp,sp,-24
110562ac:	df000515 	stw	fp,20(sp)
110562b0:	df000504 	addi	fp,sp,20
110562b4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
110562b8:	0005303a 	rdctl	r2,status
110562bc:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
110562c0:	e0fffc17 	ldw	r3,-16(fp)
110562c4:	00bfff84 	movi	r2,-2
110562c8:	1884703a 	and	r2,r3,r2
110562cc:	1001703a 	wrctl	status,r2
  
  return context;
110562d0:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
110562d4:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
110562d8:	e0bfff17 	ldw	r2,-4(fp)
110562dc:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
110562e0:	e0bffd17 	ldw	r2,-12(fp)
110562e4:	10800017 	ldw	r2,0(r2)
110562e8:	e0fffd17 	ldw	r3,-12(fp)
110562ec:	18c00117 	ldw	r3,4(r3)
110562f0:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
110562f4:	e0bffd17 	ldw	r2,-12(fp)
110562f8:	10800117 	ldw	r2,4(r2)
110562fc:	e0fffd17 	ldw	r3,-12(fp)
11056300:	18c00017 	ldw	r3,0(r3)
11056304:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
11056308:	e0bffd17 	ldw	r2,-12(fp)
1105630c:	e0fffd17 	ldw	r3,-12(fp)
11056310:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
11056314:	e0bffd17 	ldw	r2,-12(fp)
11056318:	e0fffd17 	ldw	r3,-12(fp)
1105631c:	10c00015 	stw	r3,0(r2)
11056320:	e0bffb17 	ldw	r2,-20(fp)
11056324:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
11056328:	e0bffe17 	ldw	r2,-8(fp)
1105632c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
11056330:	0001883a 	nop
11056334:	e037883a 	mov	sp,fp
11056338:	df000017 	ldw	fp,0(sp)
1105633c:	dec00104 	addi	sp,sp,4
11056340:	f800283a 	ret

11056344 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
11056344:	defffb04 	addi	sp,sp,-20
11056348:	dfc00415 	stw	ra,16(sp)
1105634c:	df000315 	stw	fp,12(sp)
11056350:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
11056354:	d0a00e17 	ldw	r2,-32712(gp)
11056358:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
1105635c:	d0a6d817 	ldw	r2,-25760(gp)
11056360:	10800044 	addi	r2,r2,1
11056364:	d0a6d815 	stw	r2,-25760(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
11056368:	00002e06 	br	11056424 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
1105636c:	e0bffd17 	ldw	r2,-12(fp)
11056370:	10800017 	ldw	r2,0(r2)
11056374:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
11056378:	e0bffd17 	ldw	r2,-12(fp)
1105637c:	10800403 	ldbu	r2,16(r2)
11056380:	10803fcc 	andi	r2,r2,255
11056384:	10000426 	beq	r2,zero,11056398 <alt_tick+0x54>
11056388:	d0a6d817 	ldw	r2,-25760(gp)
1105638c:	1000021e 	bne	r2,zero,11056398 <alt_tick+0x54>
    {
      alarm->rollover = 0;
11056390:	e0bffd17 	ldw	r2,-12(fp)
11056394:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
11056398:	e0bffd17 	ldw	r2,-12(fp)
1105639c:	10800217 	ldw	r2,8(r2)
110563a0:	d0e6d817 	ldw	r3,-25760(gp)
110563a4:	18801d36 	bltu	r3,r2,1105641c <alt_tick+0xd8>
110563a8:	e0bffd17 	ldw	r2,-12(fp)
110563ac:	10800403 	ldbu	r2,16(r2)
110563b0:	10803fcc 	andi	r2,r2,255
110563b4:	1000191e 	bne	r2,zero,1105641c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
110563b8:	e0bffd17 	ldw	r2,-12(fp)
110563bc:	10800317 	ldw	r2,12(r2)
110563c0:	e0fffd17 	ldw	r3,-12(fp)
110563c4:	18c00517 	ldw	r3,20(r3)
110563c8:	1809883a 	mov	r4,r3
110563cc:	103ee83a 	callr	r2
110563d0:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
110563d4:	e0bfff17 	ldw	r2,-4(fp)
110563d8:	1000031e 	bne	r2,zero,110563e8 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
110563dc:	e13ffd17 	ldw	r4,-12(fp)
110563e0:	10562a80 	call	110562a8 <alt_alarm_stop>
110563e4:	00000d06 	br	1105641c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
110563e8:	e0bffd17 	ldw	r2,-12(fp)
110563ec:	10c00217 	ldw	r3,8(r2)
110563f0:	e0bfff17 	ldw	r2,-4(fp)
110563f4:	1887883a 	add	r3,r3,r2
110563f8:	e0bffd17 	ldw	r2,-12(fp)
110563fc:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
11056400:	e0bffd17 	ldw	r2,-12(fp)
11056404:	10c00217 	ldw	r3,8(r2)
11056408:	d0a6d817 	ldw	r2,-25760(gp)
1105640c:	1880032e 	bgeu	r3,r2,1105641c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
11056410:	e0bffd17 	ldw	r2,-12(fp)
11056414:	00c00044 	movi	r3,1
11056418:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
1105641c:	e0bffe17 	ldw	r2,-8(fp)
11056420:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
11056424:	e0fffd17 	ldw	r3,-12(fp)
11056428:	d0a00e04 	addi	r2,gp,-32712
1105642c:	18bfcf1e 	bne	r3,r2,1105636c <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
11056430:	0001883a 	nop
}
11056434:	0001883a 	nop
11056438:	e037883a 	mov	sp,fp
1105643c:	dfc00117 	ldw	ra,4(sp)
11056440:	df000017 	ldw	fp,0(sp)
11056444:	dec00204 	addi	sp,sp,8
11056448:	f800283a 	ret

1105644c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
1105644c:	deffff04 	addi	sp,sp,-4
11056450:	df000015 	stw	fp,0(sp)
11056454:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
11056458:	000170fa 	wrctl	ienable,zero
}
1105645c:	0001883a 	nop
11056460:	e037883a 	mov	sp,fp
11056464:	df000017 	ldw	fp,0(sp)
11056468:	dec00104 	addi	sp,sp,4
1105646c:	f800283a 	ret

11056470 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
11056470:	defffa04 	addi	sp,sp,-24
11056474:	dfc00515 	stw	ra,20(sp)
11056478:	df000415 	stw	fp,16(sp)
1105647c:	df000404 	addi	fp,sp,16
11056480:	e13ffe15 	stw	r4,-8(fp)
11056484:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
11056488:	e0bfff17 	ldw	r2,-4(fp)
1105648c:	10800017 	ldw	r2,0(r2)
11056490:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
11056494:	e13ffe17 	ldw	r4,-8(fp)
11056498:	10461140 	call	11046114 <strlen>
1105649c:	10800044 	addi	r2,r2,1
110564a0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
110564a4:	00000d06 	br	110564dc <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
110564a8:	e0bffc17 	ldw	r2,-16(fp)
110564ac:	10800217 	ldw	r2,8(r2)
110564b0:	e0fffd17 	ldw	r3,-12(fp)
110564b4:	180d883a 	mov	r6,r3
110564b8:	e17ffe17 	ldw	r5,-8(fp)
110564bc:	1009883a 	mov	r4,r2
110564c0:	10568240 	call	11056824 <memcmp>
110564c4:	1000021e 	bne	r2,zero,110564d0 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
110564c8:	e0bffc17 	ldw	r2,-16(fp)
110564cc:	00000706 	br	110564ec <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
110564d0:	e0bffc17 	ldw	r2,-16(fp)
110564d4:	10800017 	ldw	r2,0(r2)
110564d8:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
110564dc:	e0fffc17 	ldw	r3,-16(fp)
110564e0:	e0bfff17 	ldw	r2,-4(fp)
110564e4:	18bff01e 	bne	r3,r2,110564a8 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
110564e8:	0005883a 	mov	r2,zero
}
110564ec:	e037883a 	mov	sp,fp
110564f0:	dfc00117 	ldw	ra,4(sp)
110564f4:	df000017 	ldw	fp,0(sp)
110564f8:	dec00204 	addi	sp,sp,8
110564fc:	f800283a 	ret

11056500 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
11056500:	defffb04 	addi	sp,sp,-20
11056504:	dfc00415 	stw	ra,16(sp)
11056508:	df000315 	stw	fp,12(sp)
1105650c:	df000304 	addi	fp,sp,12
11056510:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
11056514:	d0a00617 	ldw	r2,-32744(gp)
11056518:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1105651c:	00003106 	br	110565e4 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
11056520:	e0bffd17 	ldw	r2,-12(fp)
11056524:	10800217 	ldw	r2,8(r2)
11056528:	1009883a 	mov	r4,r2
1105652c:	10461140 	call	11046114 <strlen>
11056530:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
11056534:	e0bffd17 	ldw	r2,-12(fp)
11056538:	10c00217 	ldw	r3,8(r2)
1105653c:	e0bffe17 	ldw	r2,-8(fp)
11056540:	10bfffc4 	addi	r2,r2,-1
11056544:	1885883a 	add	r2,r3,r2
11056548:	10800003 	ldbu	r2,0(r2)
1105654c:	10803fcc 	andi	r2,r2,255
11056550:	1080201c 	xori	r2,r2,128
11056554:	10bfe004 	addi	r2,r2,-128
11056558:	10800bd8 	cmpnei	r2,r2,47
1105655c:	1000031e 	bne	r2,zero,1105656c <alt_find_file+0x6c>
    {
      len -= 1;
11056560:	e0bffe17 	ldw	r2,-8(fp)
11056564:	10bfffc4 	addi	r2,r2,-1
11056568:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1105656c:	e0bffe17 	ldw	r2,-8(fp)
11056570:	e0ffff17 	ldw	r3,-4(fp)
11056574:	1885883a 	add	r2,r3,r2
11056578:	10800003 	ldbu	r2,0(r2)
1105657c:	10803fcc 	andi	r2,r2,255
11056580:	1080201c 	xori	r2,r2,128
11056584:	10bfe004 	addi	r2,r2,-128
11056588:	10800be0 	cmpeqi	r2,r2,47
1105658c:	1000081e 	bne	r2,zero,110565b0 <alt_find_file+0xb0>
11056590:	e0bffe17 	ldw	r2,-8(fp)
11056594:	e0ffff17 	ldw	r3,-4(fp)
11056598:	1885883a 	add	r2,r3,r2
1105659c:	10800003 	ldbu	r2,0(r2)
110565a0:	10803fcc 	andi	r2,r2,255
110565a4:	1080201c 	xori	r2,r2,128
110565a8:	10bfe004 	addi	r2,r2,-128
110565ac:	10000a1e 	bne	r2,zero,110565d8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
110565b0:	e0bffd17 	ldw	r2,-12(fp)
110565b4:	10800217 	ldw	r2,8(r2)
110565b8:	e0fffe17 	ldw	r3,-8(fp)
110565bc:	180d883a 	mov	r6,r3
110565c0:	e17fff17 	ldw	r5,-4(fp)
110565c4:	1009883a 	mov	r4,r2
110565c8:	10568240 	call	11056824 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
110565cc:	1000021e 	bne	r2,zero,110565d8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
110565d0:	e0bffd17 	ldw	r2,-12(fp)
110565d4:	00000706 	br	110565f4 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
110565d8:	e0bffd17 	ldw	r2,-12(fp)
110565dc:	10800017 	ldw	r2,0(r2)
110565e0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
110565e4:	e0fffd17 	ldw	r3,-12(fp)
110565e8:	d0a00604 	addi	r2,gp,-32744
110565ec:	18bfcc1e 	bne	r3,r2,11056520 <alt_find_file+0x20>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
110565f0:	0005883a 	mov	r2,zero
}
110565f4:	e037883a 	mov	sp,fp
110565f8:	dfc00117 	ldw	ra,4(sp)
110565fc:	df000017 	ldw	fp,0(sp)
11056600:	dec00204 	addi	sp,sp,8
11056604:	f800283a 	ret

11056608 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
11056608:	defffc04 	addi	sp,sp,-16
1105660c:	df000315 	stw	fp,12(sp)
11056610:	df000304 	addi	fp,sp,12
11056614:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
11056618:	00bffa04 	movi	r2,-24
1105661c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
11056620:	e03ffd15 	stw	zero,-12(fp)
11056624:	00001906 	br	1105668c <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
11056628:	00844174 	movhi	r2,4357
1105662c:	109ede04 	addi	r2,r2,31608
11056630:	e0fffd17 	ldw	r3,-12(fp)
11056634:	18c00324 	muli	r3,r3,12
11056638:	10c5883a 	add	r2,r2,r3
1105663c:	10800017 	ldw	r2,0(r2)
11056640:	10000f1e 	bne	r2,zero,11056680 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
11056644:	00844174 	movhi	r2,4357
11056648:	109ede04 	addi	r2,r2,31608
1105664c:	e0fffd17 	ldw	r3,-12(fp)
11056650:	18c00324 	muli	r3,r3,12
11056654:	10c5883a 	add	r2,r2,r3
11056658:	e0ffff17 	ldw	r3,-4(fp)
1105665c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
11056660:	d0e00a17 	ldw	r3,-32728(gp)
11056664:	e0bffd17 	ldw	r2,-12(fp)
11056668:	1880020e 	bge	r3,r2,11056674 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
1105666c:	e0bffd17 	ldw	r2,-12(fp)
11056670:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
11056674:	e0bffd17 	ldw	r2,-12(fp)
11056678:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
1105667c:	00000606 	br	11056698 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
11056680:	e0bffd17 	ldw	r2,-12(fp)
11056684:	10800044 	addi	r2,r2,1
11056688:	e0bffd15 	stw	r2,-12(fp)
1105668c:	e0bffd17 	ldw	r2,-12(fp)
11056690:	10800810 	cmplti	r2,r2,32
11056694:	103fe41e 	bne	r2,zero,11056628 <alt_get_fd+0x20>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
11056698:	e0bffe17 	ldw	r2,-8(fp)
}
1105669c:	e037883a 	mov	sp,fp
110566a0:	df000017 	ldw	fp,0(sp)
110566a4:	dec00104 	addi	sp,sp,4
110566a8:	f800283a 	ret

110566ac <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
110566ac:	defffb04 	addi	sp,sp,-20
110566b0:	df000415 	stw	fp,16(sp)
110566b4:	df000404 	addi	fp,sp,16
110566b8:	e13ffe15 	stw	r4,-8(fp)
110566bc:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
110566c0:	e0bfff17 	ldw	r2,-4(fp)
110566c4:	10840070 	cmpltui	r2,r2,4097
110566c8:	1000021e 	bne	r2,zero,110566d4 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
110566cc:	00840004 	movi	r2,4096
110566d0:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
110566d4:	e0fffe17 	ldw	r3,-8(fp)
110566d8:	e0bfff17 	ldw	r2,-4(fp)
110566dc:	1885883a 	add	r2,r3,r2
110566e0:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
110566e4:	e0bffe17 	ldw	r2,-8(fp)
110566e8:	e0bffc15 	stw	r2,-16(fp)
110566ec:	00000506 	br	11056704 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
110566f0:	e0bffc17 	ldw	r2,-16(fp)
110566f4:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
110566f8:	e0bffc17 	ldw	r2,-16(fp)
110566fc:	10800804 	addi	r2,r2,32
11056700:	e0bffc15 	stw	r2,-16(fp)
11056704:	e0fffc17 	ldw	r3,-16(fp)
11056708:	e0bffd17 	ldw	r2,-12(fp)
1105670c:	18bff836 	bltu	r3,r2,110566f0 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
11056710:	e0bffe17 	ldw	r2,-8(fp)
11056714:	108007cc 	andi	r2,r2,31
11056718:	10000226 	beq	r2,zero,11056724 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
1105671c:	e0bffc17 	ldw	r2,-16(fp)
11056720:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
11056724:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
11056728:	0001883a 	nop
1105672c:	e037883a 	mov	sp,fp
11056730:	df000017 	ldw	fp,0(sp)
11056734:	dec00104 	addi	sp,sp,4
11056738:	f800283a 	ret

1105673c <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
1105673c:	defffe04 	addi	sp,sp,-8
11056740:	df000115 	stw	fp,4(sp)
11056744:	df000104 	addi	fp,sp,4
11056748:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
1105674c:	e0bfff17 	ldw	r2,-4(fp)
11056750:	10bffe84 	addi	r2,r2,-6
11056754:	10c00428 	cmpgeui	r3,r2,16
11056758:	18001a1e 	bne	r3,zero,110567c4 <alt_exception_cause_generated_bad_addr+0x88>
1105675c:	100690ba 	slli	r3,r2,2
11056760:	00844174 	movhi	r2,4357
11056764:	1099dd04 	addi	r2,r2,26484
11056768:	1885883a 	add	r2,r3,r2
1105676c:	10800017 	ldw	r2,0(r2)
11056770:	1000683a 	jmp	r2
11056774:	110567b4 	orhi	r4,r2,5534
11056778:	110567b4 	orhi	r4,r2,5534
1105677c:	110567c4 	addi	r4,r2,5535
11056780:	110567c4 	addi	r4,r2,5535
11056784:	110567c4 	addi	r4,r2,5535
11056788:	110567b4 	orhi	r4,r2,5534
1105678c:	110567bc 	xorhi	r4,r2,5534
11056790:	110567c4 	addi	r4,r2,5535
11056794:	110567b4 	orhi	r4,r2,5534
11056798:	110567b4 	orhi	r4,r2,5534
1105679c:	110567c4 	addi	r4,r2,5535
110567a0:	110567b4 	orhi	r4,r2,5534
110567a4:	110567bc 	xorhi	r4,r2,5534
110567a8:	110567c4 	addi	r4,r2,5535
110567ac:	110567c4 	addi	r4,r2,5535
110567b0:	110567b4 	orhi	r4,r2,5534
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
110567b4:	00800044 	movi	r2,1
110567b8:	00000306 	br	110567c8 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
110567bc:	0005883a 	mov	r2,zero
110567c0:	00000106 	br	110567c8 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
110567c4:	0005883a 	mov	r2,zero
  }
}
110567c8:	e037883a 	mov	sp,fp
110567cc:	df000017 	ldw	fp,0(sp)
110567d0:	dec00104 	addi	sp,sp,4
110567d4:	f800283a 	ret

110567d8 <atexit>:
110567d8:	200b883a 	mov	r5,r4
110567dc:	000f883a 	mov	r7,zero
110567e0:	000d883a 	mov	r6,zero
110567e4:	0009883a 	mov	r4,zero
110567e8:	10568a01 	jmpi	110568a0 <__register_exitproc>

110567ec <exit>:
110567ec:	defffe04 	addi	sp,sp,-8
110567f0:	000b883a 	mov	r5,zero
110567f4:	dc000015 	stw	r16,0(sp)
110567f8:	dfc00115 	stw	ra,4(sp)
110567fc:	2021883a 	mov	r16,r4
11056800:	10569b80 	call	110569b8 <__call_exitprocs>
11056804:	008441b4 	movhi	r2,4358
11056808:	10a35604 	addi	r2,r2,-29352
1105680c:	11000017 	ldw	r4,0(r2)
11056810:	20800f17 	ldw	r2,60(r4)
11056814:	10000126 	beq	r2,zero,1105681c <exit+0x30>
11056818:	103ee83a 	callr	r2
1105681c:	8009883a 	mov	r4,r16
11056820:	1056b380 	call	11056b38 <_exit>

11056824 <memcmp>:
11056824:	01c000c4 	movi	r7,3
11056828:	3980192e 	bgeu	r7,r6,11056890 <memcmp+0x6c>
1105682c:	2144b03a 	or	r2,r4,r5
11056830:	11c4703a 	and	r2,r2,r7
11056834:	10000f26 	beq	r2,zero,11056874 <memcmp+0x50>
11056838:	20800003 	ldbu	r2,0(r4)
1105683c:	28c00003 	ldbu	r3,0(r5)
11056840:	10c0151e 	bne	r2,r3,11056898 <memcmp+0x74>
11056844:	31bfff84 	addi	r6,r6,-2
11056848:	01ffffc4 	movi	r7,-1
1105684c:	00000406 	br	11056860 <memcmp+0x3c>
11056850:	20800003 	ldbu	r2,0(r4)
11056854:	28c00003 	ldbu	r3,0(r5)
11056858:	31bfffc4 	addi	r6,r6,-1
1105685c:	10c00e1e 	bne	r2,r3,11056898 <memcmp+0x74>
11056860:	21000044 	addi	r4,r4,1
11056864:	29400044 	addi	r5,r5,1
11056868:	31fff91e 	bne	r6,r7,11056850 <memcmp+0x2c>
1105686c:	0005883a 	mov	r2,zero
11056870:	f800283a 	ret
11056874:	20c00017 	ldw	r3,0(r4)
11056878:	28800017 	ldw	r2,0(r5)
1105687c:	18bfee1e 	bne	r3,r2,11056838 <memcmp+0x14>
11056880:	31bfff04 	addi	r6,r6,-4
11056884:	21000104 	addi	r4,r4,4
11056888:	29400104 	addi	r5,r5,4
1105688c:	39bff936 	bltu	r7,r6,11056874 <memcmp+0x50>
11056890:	303fe91e 	bne	r6,zero,11056838 <memcmp+0x14>
11056894:	003ff506 	br	1105686c <memcmp+0x48>
11056898:	10c5c83a 	sub	r2,r2,r3
1105689c:	f800283a 	ret

110568a0 <__register_exitproc>:
110568a0:	defffa04 	addi	sp,sp,-24
110568a4:	dc000315 	stw	r16,12(sp)
110568a8:	040441b4 	movhi	r16,4358
110568ac:	84235604 	addi	r16,r16,-29352
110568b0:	80c00017 	ldw	r3,0(r16)
110568b4:	dc400415 	stw	r17,16(sp)
110568b8:	dfc00515 	stw	ra,20(sp)
110568bc:	18805217 	ldw	r2,328(r3)
110568c0:	2023883a 	mov	r17,r4
110568c4:	10003726 	beq	r2,zero,110569a4 <__register_exitproc+0x104>
110568c8:	10c00117 	ldw	r3,4(r2)
110568cc:	010007c4 	movi	r4,31
110568d0:	20c00e16 	blt	r4,r3,1105690c <__register_exitproc+0x6c>
110568d4:	1a000044 	addi	r8,r3,1
110568d8:	8800221e 	bne	r17,zero,11056964 <__register_exitproc+0xc4>
110568dc:	18c00084 	addi	r3,r3,2
110568e0:	18c7883a 	add	r3,r3,r3
110568e4:	18c7883a 	add	r3,r3,r3
110568e8:	12000115 	stw	r8,4(r2)
110568ec:	10c7883a 	add	r3,r2,r3
110568f0:	19400015 	stw	r5,0(r3)
110568f4:	0005883a 	mov	r2,zero
110568f8:	dfc00517 	ldw	ra,20(sp)
110568fc:	dc400417 	ldw	r17,16(sp)
11056900:	dc000317 	ldw	r16,12(sp)
11056904:	dec00604 	addi	sp,sp,24
11056908:	f800283a 	ret
1105690c:	00800034 	movhi	r2,0
11056910:	10800004 	addi	r2,r2,0
11056914:	10002626 	beq	r2,zero,110569b0 <__register_exitproc+0x110>
11056918:	01006404 	movi	r4,400
1105691c:	d9400015 	stw	r5,0(sp)
11056920:	d9800115 	stw	r6,4(sp)
11056924:	d9c00215 	stw	r7,8(sp)
11056928:	00000000 	call	10000000 <__alt_mem_ddr3+0x10000000>
1105692c:	d9400017 	ldw	r5,0(sp)
11056930:	d9800117 	ldw	r6,4(sp)
11056934:	d9c00217 	ldw	r7,8(sp)
11056938:	10001d26 	beq	r2,zero,110569b0 <__register_exitproc+0x110>
1105693c:	81000017 	ldw	r4,0(r16)
11056940:	10000115 	stw	zero,4(r2)
11056944:	02000044 	movi	r8,1
11056948:	22405217 	ldw	r9,328(r4)
1105694c:	0007883a 	mov	r3,zero
11056950:	12400015 	stw	r9,0(r2)
11056954:	20805215 	stw	r2,328(r4)
11056958:	10006215 	stw	zero,392(r2)
1105695c:	10006315 	stw	zero,396(r2)
11056960:	883fde26 	beq	r17,zero,110568dc <__register_exitproc+0x3c>
11056964:	18c9883a 	add	r4,r3,r3
11056968:	2109883a 	add	r4,r4,r4
1105696c:	1109883a 	add	r4,r2,r4
11056970:	21802215 	stw	r6,136(r4)
11056974:	01800044 	movi	r6,1
11056978:	12406217 	ldw	r9,392(r2)
1105697c:	30cc983a 	sll	r6,r6,r3
11056980:	4992b03a 	or	r9,r9,r6
11056984:	12406215 	stw	r9,392(r2)
11056988:	21c04215 	stw	r7,264(r4)
1105698c:	01000084 	movi	r4,2
11056990:	893fd21e 	bne	r17,r4,110568dc <__register_exitproc+0x3c>
11056994:	11006317 	ldw	r4,396(r2)
11056998:	218cb03a 	or	r6,r4,r6
1105699c:	11806315 	stw	r6,396(r2)
110569a0:	003fce06 	br	110568dc <__register_exitproc+0x3c>
110569a4:	18805304 	addi	r2,r3,332
110569a8:	18805215 	stw	r2,328(r3)
110569ac:	003fc606 	br	110568c8 <__register_exitproc+0x28>
110569b0:	00bfffc4 	movi	r2,-1
110569b4:	003fd006 	br	110568f8 <__register_exitproc+0x58>

110569b8 <__call_exitprocs>:
110569b8:	defff504 	addi	sp,sp,-44
110569bc:	df000915 	stw	fp,36(sp)
110569c0:	dd400615 	stw	r21,24(sp)
110569c4:	dc800315 	stw	r18,12(sp)
110569c8:	dfc00a15 	stw	ra,40(sp)
110569cc:	ddc00815 	stw	r23,32(sp)
110569d0:	dd800715 	stw	r22,28(sp)
110569d4:	dd000515 	stw	r20,20(sp)
110569d8:	dcc00415 	stw	r19,16(sp)
110569dc:	dc400215 	stw	r17,8(sp)
110569e0:	dc000115 	stw	r16,4(sp)
110569e4:	d9000015 	stw	r4,0(sp)
110569e8:	2839883a 	mov	fp,r5
110569ec:	04800044 	movi	r18,1
110569f0:	057fffc4 	movi	r21,-1
110569f4:	008441b4 	movhi	r2,4358
110569f8:	10a35604 	addi	r2,r2,-29352
110569fc:	12000017 	ldw	r8,0(r2)
11056a00:	45005217 	ldw	r20,328(r8)
11056a04:	44c05204 	addi	r19,r8,328
11056a08:	a0001c26 	beq	r20,zero,11056a7c <__call_exitprocs+0xc4>
11056a0c:	a0800117 	ldw	r2,4(r20)
11056a10:	15ffffc4 	addi	r23,r2,-1
11056a14:	b8000d16 	blt	r23,zero,11056a4c <__call_exitprocs+0x94>
11056a18:	14000044 	addi	r16,r2,1
11056a1c:	8421883a 	add	r16,r16,r16
11056a20:	8421883a 	add	r16,r16,r16
11056a24:	84402004 	addi	r17,r16,128
11056a28:	a463883a 	add	r17,r20,r17
11056a2c:	a421883a 	add	r16,r20,r16
11056a30:	e0001e26 	beq	fp,zero,11056aac <__call_exitprocs+0xf4>
11056a34:	80804017 	ldw	r2,256(r16)
11056a38:	e0801c26 	beq	fp,r2,11056aac <__call_exitprocs+0xf4>
11056a3c:	bdffffc4 	addi	r23,r23,-1
11056a40:	843fff04 	addi	r16,r16,-4
11056a44:	8c7fff04 	addi	r17,r17,-4
11056a48:	bd7ff91e 	bne	r23,r21,11056a30 <__call_exitprocs+0x78>
11056a4c:	00800034 	movhi	r2,0
11056a50:	10800004 	addi	r2,r2,0
11056a54:	10000926 	beq	r2,zero,11056a7c <__call_exitprocs+0xc4>
11056a58:	a0800117 	ldw	r2,4(r20)
11056a5c:	1000301e 	bne	r2,zero,11056b20 <__call_exitprocs+0x168>
11056a60:	a0800017 	ldw	r2,0(r20)
11056a64:	10003226 	beq	r2,zero,11056b30 <__call_exitprocs+0x178>
11056a68:	a009883a 	mov	r4,r20
11056a6c:	98800015 	stw	r2,0(r19)
11056a70:	00000000 	call	10000000 <__alt_mem_ddr3+0x10000000>
11056a74:	9d000017 	ldw	r20,0(r19)
11056a78:	a03fe41e 	bne	r20,zero,11056a0c <__call_exitprocs+0x54>
11056a7c:	dfc00a17 	ldw	ra,40(sp)
11056a80:	df000917 	ldw	fp,36(sp)
11056a84:	ddc00817 	ldw	r23,32(sp)
11056a88:	dd800717 	ldw	r22,28(sp)
11056a8c:	dd400617 	ldw	r21,24(sp)
11056a90:	dd000517 	ldw	r20,20(sp)
11056a94:	dcc00417 	ldw	r19,16(sp)
11056a98:	dc800317 	ldw	r18,12(sp)
11056a9c:	dc400217 	ldw	r17,8(sp)
11056aa0:	dc000117 	ldw	r16,4(sp)
11056aa4:	dec00b04 	addi	sp,sp,44
11056aa8:	f800283a 	ret
11056aac:	a0800117 	ldw	r2,4(r20)
11056ab0:	80c00017 	ldw	r3,0(r16)
11056ab4:	10bfffc4 	addi	r2,r2,-1
11056ab8:	15c01426 	beq	r2,r23,11056b0c <__call_exitprocs+0x154>
11056abc:	80000015 	stw	zero,0(r16)
11056ac0:	183fde26 	beq	r3,zero,11056a3c <__call_exitprocs+0x84>
11056ac4:	95c8983a 	sll	r4,r18,r23
11056ac8:	a0806217 	ldw	r2,392(r20)
11056acc:	a5800117 	ldw	r22,4(r20)
11056ad0:	2084703a 	and	r2,r4,r2
11056ad4:	10000b26 	beq	r2,zero,11056b04 <__call_exitprocs+0x14c>
11056ad8:	a0806317 	ldw	r2,396(r20)
11056adc:	2088703a 	and	r4,r4,r2
11056ae0:	20000c1e 	bne	r4,zero,11056b14 <__call_exitprocs+0x15c>
11056ae4:	89400017 	ldw	r5,0(r17)
11056ae8:	d9000017 	ldw	r4,0(sp)
11056aec:	183ee83a 	callr	r3
11056af0:	a0800117 	ldw	r2,4(r20)
11056af4:	15bfbf1e 	bne	r2,r22,110569f4 <__call_exitprocs+0x3c>
11056af8:	98800017 	ldw	r2,0(r19)
11056afc:	153fcf26 	beq	r2,r20,11056a3c <__call_exitprocs+0x84>
11056b00:	003fbc06 	br	110569f4 <__call_exitprocs+0x3c>
11056b04:	183ee83a 	callr	r3
11056b08:	003ff906 	br	11056af0 <__call_exitprocs+0x138>
11056b0c:	a5c00115 	stw	r23,4(r20)
11056b10:	003feb06 	br	11056ac0 <__call_exitprocs+0x108>
11056b14:	89000017 	ldw	r4,0(r17)
11056b18:	183ee83a 	callr	r3
11056b1c:	003ff406 	br	11056af0 <__call_exitprocs+0x138>
11056b20:	a0800017 	ldw	r2,0(r20)
11056b24:	a027883a 	mov	r19,r20
11056b28:	1029883a 	mov	r20,r2
11056b2c:	003fb606 	br	11056a08 <__call_exitprocs+0x50>
11056b30:	0005883a 	mov	r2,zero
11056b34:	003ffb06 	br	11056b24 <__call_exitprocs+0x16c>

11056b38 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
11056b38:	defffd04 	addi	sp,sp,-12
11056b3c:	df000215 	stw	fp,8(sp)
11056b40:	df000204 	addi	fp,sp,8
11056b44:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
11056b48:	0001883a 	nop
11056b4c:	e0bfff17 	ldw	r2,-4(fp)
11056b50:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
11056b54:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
11056b58:	10000226 	beq	r2,zero,11056b64 <_exit+0x2c>
    ALT_SIM_FAIL();
11056b5c:	002af070 	cmpltui	zero,zero,43969
11056b60:	00000106 	br	11056b68 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
11056b64:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
11056b68:	003fff06 	br	11056b68 <_exit+0x30>
